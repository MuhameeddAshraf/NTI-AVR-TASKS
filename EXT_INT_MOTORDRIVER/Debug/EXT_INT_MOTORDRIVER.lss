
EXT_INT_MOTORDRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000053ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012e  00800060  000053ce  00005462  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  0080018e  0080018e  00005590  2**0
                  ALLOC
  3 .stab         00003018  00000000  00000000  00005590  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001a8f  00000000  00000000  000085a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000240  00000000  00000000  0000a037  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000299  00000000  00000000  0000a277  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000034eb  00000000  00000000  0000a510  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001878  00000000  00000000  0000d9fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000017e9  00000000  00000000  0000f273  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000260  00000000  00000000  00010a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000393  00000000  00000000  00010cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000265a  00000000  00000000  0001104f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  000136a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 93 24 	jmp	0x4926	; 0x4926 <__vector_1>
       8:	0c 94 c0 24 	jmp	0x4980	; 0x4980 <__vector_2>
       c:	0c 94 ed 24 	jmp	0x49da	; 0x49da <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ec       	ldi	r30, 0xCE	; 206
      68:	f3 e5       	ldi	r31, 0x53	; 83
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 38       	cpi	r26, 0x8E	; 142
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae e8       	ldi	r26, 0x8E	; 142
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 39       	cpi	r26, 0x97	; 151
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 88 15 	call	0x2b10	; 0x2b10 <main>
      8a:	0c 94 e5 29 	jmp	0x53ca	; 0x53ca <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 89 11 	call	0x2312	; 0x2312 <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 01 10 	call	0x2002	; 0x2002 <__subsf3>
     1bc:	0e 94 47 12 	call	0x248e	; 0x248e <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 47 12 	call	0x248e	; 0x248e <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__floatundisf>:
     1e8:	a2 e0       	ldi	r26, 0x02	; 2
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 a5 29 	jmp	0x534a	; 0x534a <__prologue_saves__>
     1f4:	12 2f       	mov	r17, r18
     1f6:	b3 2e       	mov	r11, r19
     1f8:	a4 2e       	mov	r10, r20
     1fa:	95 2e       	mov	r9, r21
     1fc:	86 2e       	mov	r8, r22
     1fe:	37 2e       	mov	r3, r23
     200:	28 2e       	mov	r2, r24
     202:	9a 83       	std	Y+2, r25	; 0x02
     204:	c2 2e       	mov	r12, r18
     206:	d3 2e       	mov	r13, r19
     208:	e4 2e       	mov	r14, r20
     20a:	f5 2e       	mov	r15, r21
     20c:	a7 01       	movw	r20, r14
     20e:	96 01       	movw	r18, r12
     210:	60 e0       	ldi	r22, 0x00	; 0
     212:	70 e0       	ldi	r23, 0x00	; 0
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	21 17       	cp	r18, r17
     21a:	a1 f4       	brne	.+40     	; 0x244 <__floatundisf+0x5c>
     21c:	3b 15       	cp	r19, r11
     21e:	91 f4       	brne	.+36     	; 0x244 <__floatundisf+0x5c>
     220:	4a 15       	cp	r20, r10
     222:	81 f4       	brne	.+32     	; 0x244 <__floatundisf+0x5c>
     224:	59 15       	cp	r21, r9
     226:	71 f4       	brne	.+28     	; 0x244 <__floatundisf+0x5c>
     228:	68 15       	cp	r22, r8
     22a:	61 f4       	brne	.+24     	; 0x244 <__floatundisf+0x5c>
     22c:	73 15       	cp	r23, r3
     22e:	51 f4       	brne	.+20     	; 0x244 <__floatundisf+0x5c>
     230:	82 15       	cp	r24, r2
     232:	41 f4       	brne	.+16     	; 0x244 <__floatundisf+0x5c>
     234:	aa 81       	ldd	r26, Y+2	; 0x02
     236:	9a 17       	cp	r25, r26
     238:	29 f4       	brne	.+10     	; 0x244 <__floatundisf+0x5c>
     23a:	c7 01       	movw	r24, r14
     23c:	b6 01       	movw	r22, r12
     23e:	0e 94 9b 12 	call	0x2536	; 0x2536 <__floatunsisf>
     242:	aa c0       	rjmp	.+340    	; 0x398 <__floatundisf+0x1b0>
     244:	21 2f       	mov	r18, r17
     246:	3b 2d       	mov	r19, r11
     248:	4a 2d       	mov	r20, r10
     24a:	59 2d       	mov	r21, r9
     24c:	68 2d       	mov	r22, r8
     24e:	73 2d       	mov	r23, r3
     250:	82 2d       	mov	r24, r2
     252:	9a 81       	ldd	r25, Y+2	; 0x02
     254:	00 e2       	ldi	r16, 0x20	; 32
     256:	0e 94 14 13 	call	0x2628	; 0x2628 <__lshrdi3>
     25a:	c9 01       	movw	r24, r18
     25c:	da 01       	movw	r26, r20
     25e:	80 30       	cpi	r24, 0x00	; 0
     260:	e0 e0       	ldi	r30, 0x00	; 0
     262:	9e 07       	cpc	r25, r30
     264:	e1 e0       	ldi	r30, 0x01	; 1
     266:	ae 07       	cpc	r26, r30
     268:	e0 e0       	ldi	r30, 0x00	; 0
     26a:	be 07       	cpc	r27, r30
     26c:	80 f4       	brcc	.+32     	; 0x28e <__floatundisf+0xa6>
     26e:	8f 3f       	cpi	r24, 0xFF	; 255
     270:	91 05       	cpc	r25, r1
     272:	a1 05       	cpc	r26, r1
     274:	b1 05       	cpc	r27, r1
     276:	31 f0       	breq	.+12     	; 0x284 <__floatundisf+0x9c>
     278:	28 f0       	brcs	.+10     	; 0x284 <__floatundisf+0x9c>
     27a:	28 e0       	ldi	r18, 0x08	; 8
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	40 e0       	ldi	r20, 0x00	; 0
     280:	50 e0       	ldi	r21, 0x00	; 0
     282:	16 c0       	rjmp	.+44     	; 0x2b0 <__floatundisf+0xc8>
     284:	20 e0       	ldi	r18, 0x00	; 0
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	40 e0       	ldi	r20, 0x00	; 0
     28a:	50 e0       	ldi	r21, 0x00	; 0
     28c:	11 c0       	rjmp	.+34     	; 0x2b0 <__floatundisf+0xc8>
     28e:	80 30       	cpi	r24, 0x00	; 0
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	9f 07       	cpc	r25, r31
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	af 07       	cpc	r26, r31
     298:	f1 e0       	ldi	r31, 0x01	; 1
     29a:	bf 07       	cpc	r27, r31
     29c:	28 f0       	brcs	.+10     	; 0x2a8 <__floatundisf+0xc0>
     29e:	28 e1       	ldi	r18, 0x18	; 24
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	40 e0       	ldi	r20, 0x00	; 0
     2a4:	50 e0       	ldi	r21, 0x00	; 0
     2a6:	04 c0       	rjmp	.+8      	; 0x2b0 <__floatundisf+0xc8>
     2a8:	20 e1       	ldi	r18, 0x10	; 16
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	02 2e       	mov	r0, r18
     2b2:	04 c0       	rjmp	.+8      	; 0x2bc <__floatundisf+0xd4>
     2b4:	b6 95       	lsr	r27
     2b6:	a7 95       	ror	r26
     2b8:	97 95       	ror	r25
     2ba:	87 95       	ror	r24
     2bc:	0a 94       	dec	r0
     2be:	d2 f7       	brpl	.-12     	; 0x2b4 <__floatundisf+0xcc>
     2c0:	fc 01       	movw	r30, r24
     2c2:	e5 59       	subi	r30, 0x95	; 149
     2c4:	ff 4f       	sbci	r31, 0xFF	; 255
     2c6:	80 81       	ld	r24, Z
     2c8:	29 01       	movw	r4, r18
     2ca:	3a 01       	movw	r6, r20
     2cc:	48 0e       	add	r4, r24
     2ce:	51 1c       	adc	r5, r1
     2d0:	61 1c       	adc	r6, r1
     2d2:	71 1c       	adc	r7, r1
     2d4:	49 82       	std	Y+1, r4	; 0x01
     2d6:	21 2f       	mov	r18, r17
     2d8:	3b 2d       	mov	r19, r11
     2da:	4a 2d       	mov	r20, r10
     2dc:	59 2d       	mov	r21, r9
     2de:	68 2d       	mov	r22, r8
     2e0:	73 2d       	mov	r23, r3
     2e2:	82 2d       	mov	r24, r2
     2e4:	9a 81       	ldd	r25, Y+2	; 0x02
     2e6:	04 2d       	mov	r16, r4
     2e8:	0e 94 14 13 	call	0x2628	; 0x2628 <__lshrdi3>
     2ec:	c9 01       	movw	r24, r18
     2ee:	da 01       	movw	r26, r20
     2f0:	4c 01       	movw	r8, r24
     2f2:	5d 01       	movw	r10, r26
     2f4:	80 e2       	ldi	r24, 0x20	; 32
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	84 19       	sub	r24, r4
     2fa:	95 09       	sbc	r25, r5
     2fc:	04 c0       	rjmp	.+8      	; 0x306 <__floatundisf+0x11e>
     2fe:	cc 0c       	add	r12, r12
     300:	dd 1c       	adc	r13, r13
     302:	ee 1c       	adc	r14, r14
     304:	ff 1c       	adc	r15, r15
     306:	8a 95       	dec	r24
     308:	d2 f7       	brpl	.-12     	; 0x2fe <__floatundisf+0x116>
     30a:	c1 14       	cp	r12, r1
     30c:	d1 04       	cpc	r13, r1
     30e:	e1 04       	cpc	r14, r1
     310:	f1 04       	cpc	r15, r1
     312:	41 f0       	breq	.+16     	; 0x324 <__floatundisf+0x13c>
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	a0 e0       	ldi	r26, 0x00	; 0
     31a:	b0 e0       	ldi	r27, 0x00	; 0
     31c:	88 2a       	or	r8, r24
     31e:	99 2a       	or	r9, r25
     320:	aa 2a       	or	r10, r26
     322:	bb 2a       	or	r11, r27
     324:	90 e2       	ldi	r25, 0x20	; 32
     326:	49 16       	cp	r4, r25
     328:	51 04       	cpc	r5, r1
     32a:	61 04       	cpc	r6, r1
     32c:	71 04       	cpc	r7, r1
     32e:	59 f4       	brne	.+22     	; 0x346 <__floatundisf+0x15e>
     330:	0f 2e       	mov	r0, r31
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	ef 2e       	mov	r14, r31
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	ff 2e       	mov	r15, r31
     33a:	f0 e8       	ldi	r31, 0x80	; 128
     33c:	0f 2f       	mov	r16, r31
     33e:	ff e4       	ldi	r31, 0x4F	; 79
     340:	1f 2f       	mov	r17, r31
     342:	f0 2d       	mov	r31, r0
     344:	21 c0       	rjmp	.+66     	; 0x388 <__floatundisf+0x1a0>
     346:	af e1       	ldi	r26, 0x1F	; 31
     348:	4a 16       	cp	r4, r26
     34a:	51 04       	cpc	r5, r1
     34c:	61 04       	cpc	r6, r1
     34e:	71 04       	cpc	r7, r1
     350:	59 f4       	brne	.+22     	; 0x368 <__floatundisf+0x180>
     352:	0f 2e       	mov	r0, r31
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	ef 2e       	mov	r14, r31
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	ff 2e       	mov	r15, r31
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	0f 2f       	mov	r16, r31
     360:	ff e4       	ldi	r31, 0x4F	; 79
     362:	1f 2f       	mov	r17, r31
     364:	f0 2d       	mov	r31, r0
     366:	10 c0       	rjmp	.+32     	; 0x388 <__floatundisf+0x1a0>
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	09 80       	ldd	r0, Y+1	; 0x01
     372:	04 c0       	rjmp	.+8      	; 0x37c <__floatundisf+0x194>
     374:	66 0f       	add	r22, r22
     376:	77 1f       	adc	r23, r23
     378:	88 1f       	adc	r24, r24
     37a:	99 1f       	adc	r25, r25
     37c:	0a 94       	dec	r0
     37e:	d2 f7       	brpl	.-12     	; 0x374 <__floatundisf+0x18c>
     380:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__floatsisf>
     384:	7b 01       	movw	r14, r22
     386:	8c 01       	movw	r16, r24
     388:	c5 01       	movw	r24, r10
     38a:	b4 01       	movw	r22, r8
     38c:	0e 94 9b 12 	call	0x2536	; 0x2536 <__floatunsisf>
     390:	a8 01       	movw	r20, r16
     392:	97 01       	movw	r18, r14
     394:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
     398:	22 96       	adiw	r28, 0x02	; 2
     39a:	e2 e1       	ldi	r30, 0x12	; 18
     39c:	0c 94 c1 29 	jmp	0x5382	; 0x5382 <__epilogue_restores__>

000003a0 <__udivdi3>:
     3a0:	ae e5       	ldi	r26, 0x5E	; 94
     3a2:	b0 e0       	ldi	r27, 0x00	; 0
     3a4:	e6 ed       	ldi	r30, 0xD6	; 214
     3a6:	f1 e0       	ldi	r31, 0x01	; 1
     3a8:	0c 94 a5 29 	jmp	0x534a	; 0x534a <__prologue_saves__>
     3ac:	a8 e0       	ldi	r26, 0x08	; 8
     3ae:	4e 01       	movw	r8, r28
     3b0:	08 94       	sec
     3b2:	81 1c       	adc	r8, r1
     3b4:	91 1c       	adc	r9, r1
     3b6:	f4 01       	movw	r30, r8
     3b8:	6a 2e       	mov	r6, r26
     3ba:	11 92       	st	Z+, r1
     3bc:	6a 94       	dec	r6
     3be:	e9 f7       	brne	.-6      	; 0x3ba <__udivdi3+0x1a>
     3c0:	29 83       	std	Y+1, r18	; 0x01
     3c2:	3a 83       	std	Y+2, r19	; 0x02
     3c4:	4b 83       	std	Y+3, r20	; 0x03
     3c6:	5c 83       	std	Y+4, r21	; 0x04
     3c8:	6d 83       	std	Y+5, r22	; 0x05
     3ca:	7e 83       	std	Y+6, r23	; 0x06
     3cc:	8f 83       	std	Y+7, r24	; 0x07
     3ce:	98 87       	std	Y+8, r25	; 0x08
     3d0:	ce 01       	movw	r24, r28
     3d2:	09 96       	adiw	r24, 0x09	; 9
     3d4:	fc 01       	movw	r30, r24
     3d6:	11 92       	st	Z+, r1
     3d8:	aa 95       	dec	r26
     3da:	e9 f7       	brne	.-6      	; 0x3d6 <__udivdi3+0x36>
     3dc:	a9 86       	std	Y+9, r10	; 0x09
     3de:	ba 86       	std	Y+10, r11	; 0x0a
     3e0:	cb 86       	std	Y+11, r12	; 0x0b
     3e2:	dc 86       	std	Y+12, r13	; 0x0c
     3e4:	ed 86       	std	Y+13, r14	; 0x0d
     3e6:	fe 86       	std	Y+14, r15	; 0x0e
     3e8:	0f 87       	std	Y+15, r16	; 0x0f
     3ea:	18 8b       	std	Y+16, r17	; 0x10
     3ec:	29 84       	ldd	r2, Y+9	; 0x09
     3ee:	3a 84       	ldd	r3, Y+10	; 0x0a
     3f0:	4b 84       	ldd	r4, Y+11	; 0x0b
     3f2:	5c 84       	ldd	r5, Y+12	; 0x0c
     3f4:	ed 84       	ldd	r14, Y+13	; 0x0d
     3f6:	fe 84       	ldd	r15, Y+14	; 0x0e
     3f8:	0f 85       	ldd	r16, Y+15	; 0x0f
     3fa:	18 89       	ldd	r17, Y+16	; 0x10
     3fc:	69 80       	ldd	r6, Y+1	; 0x01
     3fe:	7a 80       	ldd	r7, Y+2	; 0x02
     400:	8b 80       	ldd	r8, Y+3	; 0x03
     402:	9c 80       	ldd	r9, Y+4	; 0x04
     404:	6d a6       	std	Y+45, r6	; 0x2d
     406:	7e a6       	std	Y+46, r7	; 0x2e
     408:	8f a6       	std	Y+47, r8	; 0x2f
     40a:	98 aa       	std	Y+48, r9	; 0x30
     40c:	6d 80       	ldd	r6, Y+5	; 0x05
     40e:	7e 80       	ldd	r7, Y+6	; 0x06
     410:	8f 80       	ldd	r8, Y+7	; 0x07
     412:	98 84       	ldd	r9, Y+8	; 0x08
     414:	e1 14       	cp	r14, r1
     416:	f1 04       	cpc	r15, r1
     418:	01 05       	cpc	r16, r1
     41a:	11 05       	cpc	r17, r1
     41c:	09 f0       	breq	.+2      	; 0x420 <__udivdi3+0x80>
     41e:	b3 c3       	rjmp	.+1894   	; 0xb86 <__stack+0x327>
     420:	62 14       	cp	r6, r2
     422:	73 04       	cpc	r7, r3
     424:	84 04       	cpc	r8, r4
     426:	95 04       	cpc	r9, r5
     428:	08 f0       	brcs	.+2      	; 0x42c <__udivdi3+0x8c>
     42a:	3d c1       	rjmp	.+634    	; 0x6a6 <__udivdi3+0x306>
     42c:	00 e0       	ldi	r16, 0x00	; 0
     42e:	20 16       	cp	r2, r16
     430:	00 e0       	ldi	r16, 0x00	; 0
     432:	30 06       	cpc	r3, r16
     434:	01 e0       	ldi	r16, 0x01	; 1
     436:	40 06       	cpc	r4, r16
     438:	00 e0       	ldi	r16, 0x00	; 0
     43a:	50 06       	cpc	r5, r16
     43c:	88 f4       	brcc	.+34     	; 0x460 <__udivdi3+0xc0>
     43e:	1f ef       	ldi	r17, 0xFF	; 255
     440:	21 16       	cp	r2, r17
     442:	31 04       	cpc	r3, r1
     444:	41 04       	cpc	r4, r1
     446:	51 04       	cpc	r5, r1
     448:	39 f0       	breq	.+14     	; 0x458 <__udivdi3+0xb8>
     44a:	30 f0       	brcs	.+12     	; 0x458 <__udivdi3+0xb8>
     44c:	48 e0       	ldi	r20, 0x08	; 8
     44e:	e4 2e       	mov	r14, r20
     450:	f1 2c       	mov	r15, r1
     452:	01 2d       	mov	r16, r1
     454:	11 2d       	mov	r17, r1
     456:	18 c0       	rjmp	.+48     	; 0x488 <__udivdi3+0xe8>
     458:	ee 24       	eor	r14, r14
     45a:	ff 24       	eor	r15, r15
     45c:	87 01       	movw	r16, r14
     45e:	14 c0       	rjmp	.+40     	; 0x488 <__udivdi3+0xe8>
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	22 16       	cp	r2, r18
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	32 06       	cpc	r3, r18
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	42 06       	cpc	r4, r18
     46c:	21 e0       	ldi	r18, 0x01	; 1
     46e:	52 06       	cpc	r5, r18
     470:	30 f0       	brcs	.+12     	; 0x47e <__udivdi3+0xde>
     472:	38 e1       	ldi	r19, 0x18	; 24
     474:	e3 2e       	mov	r14, r19
     476:	f1 2c       	mov	r15, r1
     478:	01 2d       	mov	r16, r1
     47a:	11 2d       	mov	r17, r1
     47c:	05 c0       	rjmp	.+10     	; 0x488 <__udivdi3+0xe8>
     47e:	20 e1       	ldi	r18, 0x10	; 16
     480:	e2 2e       	mov	r14, r18
     482:	f1 2c       	mov	r15, r1
     484:	01 2d       	mov	r16, r1
     486:	11 2d       	mov	r17, r1
     488:	d2 01       	movw	r26, r4
     48a:	c1 01       	movw	r24, r2
     48c:	0e 2c       	mov	r0, r14
     48e:	04 c0       	rjmp	.+8      	; 0x498 <__udivdi3+0xf8>
     490:	b6 95       	lsr	r27
     492:	a7 95       	ror	r26
     494:	97 95       	ror	r25
     496:	87 95       	ror	r24
     498:	0a 94       	dec	r0
     49a:	d2 f7       	brpl	.-12     	; 0x490 <__udivdi3+0xf0>
     49c:	85 59       	subi	r24, 0x95	; 149
     49e:	9f 4f       	sbci	r25, 0xFF	; 255
     4a0:	dc 01       	movw	r26, r24
     4a2:	2c 91       	ld	r18, X
     4a4:	80 e2       	ldi	r24, 0x20	; 32
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	a0 e0       	ldi	r26, 0x00	; 0
     4aa:	b0 e0       	ldi	r27, 0x00	; 0
     4ac:	8e 19       	sub	r24, r14
     4ae:	9f 09       	sbc	r25, r15
     4b0:	a0 0b       	sbc	r26, r16
     4b2:	b1 0b       	sbc	r27, r17
     4b4:	7c 01       	movw	r14, r24
     4b6:	8d 01       	movw	r16, r26
     4b8:	e2 1a       	sub	r14, r18
     4ba:	f1 08       	sbc	r15, r1
     4bc:	01 09       	sbc	r16, r1
     4be:	11 09       	sbc	r17, r1
     4c0:	e1 14       	cp	r14, r1
     4c2:	f1 04       	cpc	r15, r1
     4c4:	01 05       	cpc	r16, r1
     4c6:	11 05       	cpc	r17, r1
     4c8:	a1 f1       	breq	.+104    	; 0x532 <__udivdi3+0x192>
     4ca:	0e 2c       	mov	r0, r14
     4cc:	04 c0       	rjmp	.+8      	; 0x4d6 <__udivdi3+0x136>
     4ce:	22 0c       	add	r2, r2
     4d0:	33 1c       	adc	r3, r3
     4d2:	44 1c       	adc	r4, r4
     4d4:	55 1c       	adc	r5, r5
     4d6:	0a 94       	dec	r0
     4d8:	d2 f7       	brpl	.-12     	; 0x4ce <__udivdi3+0x12e>
     4da:	a4 01       	movw	r20, r8
     4dc:	93 01       	movw	r18, r6
     4de:	0e 2c       	mov	r0, r14
     4e0:	04 c0       	rjmp	.+8      	; 0x4ea <__udivdi3+0x14a>
     4e2:	22 0f       	add	r18, r18
     4e4:	33 1f       	adc	r19, r19
     4e6:	44 1f       	adc	r20, r20
     4e8:	55 1f       	adc	r21, r21
     4ea:	0a 94       	dec	r0
     4ec:	d2 f7       	brpl	.-12     	; 0x4e2 <__udivdi3+0x142>
     4ee:	80 e2       	ldi	r24, 0x20	; 32
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	8e 19       	sub	r24, r14
     4f4:	9f 09       	sbc	r25, r15
     4f6:	6d a4       	ldd	r6, Y+45	; 0x2d
     4f8:	7e a4       	ldd	r7, Y+46	; 0x2e
     4fa:	8f a4       	ldd	r8, Y+47	; 0x2f
     4fc:	98 a8       	ldd	r9, Y+48	; 0x30
     4fe:	04 c0       	rjmp	.+8      	; 0x508 <__udivdi3+0x168>
     500:	96 94       	lsr	r9
     502:	87 94       	ror	r8
     504:	77 94       	ror	r7
     506:	67 94       	ror	r6
     508:	8a 95       	dec	r24
     50a:	d2 f7       	brpl	.-12     	; 0x500 <__udivdi3+0x160>
     50c:	62 2a       	or	r6, r18
     50e:	73 2a       	or	r7, r19
     510:	84 2a       	or	r8, r20
     512:	95 2a       	or	r9, r21
     514:	ad a4       	ldd	r10, Y+45	; 0x2d
     516:	be a4       	ldd	r11, Y+46	; 0x2e
     518:	cf a4       	ldd	r12, Y+47	; 0x2f
     51a:	d8 a8       	ldd	r13, Y+48	; 0x30
     51c:	04 c0       	rjmp	.+8      	; 0x526 <__udivdi3+0x186>
     51e:	aa 0c       	add	r10, r10
     520:	bb 1c       	adc	r11, r11
     522:	cc 1c       	adc	r12, r12
     524:	dd 1c       	adc	r13, r13
     526:	ea 94       	dec	r14
     528:	d2 f7       	brpl	.-12     	; 0x51e <__udivdi3+0x17e>
     52a:	ad a6       	std	Y+45, r10	; 0x2d
     52c:	be a6       	std	Y+46, r11	; 0x2e
     52e:	cf a6       	std	Y+47, r12	; 0x2f
     530:	d8 aa       	std	Y+48, r13	; 0x30
     532:	62 01       	movw	r12, r4
     534:	ee 24       	eor	r14, r14
     536:	ff 24       	eor	r15, r15
     538:	cd aa       	std	Y+53, r12	; 0x35
     53a:	de aa       	std	Y+54, r13	; 0x36
     53c:	ef aa       	std	Y+55, r14	; 0x37
     53e:	f8 ae       	std	Y+56, r15	; 0x38
     540:	92 01       	movw	r18, r4
     542:	81 01       	movw	r16, r2
     544:	20 70       	andi	r18, 0x00	; 0
     546:	30 70       	andi	r19, 0x00	; 0
     548:	09 af       	std	Y+57, r16	; 0x39
     54a:	1a af       	std	Y+58, r17	; 0x3a
     54c:	2b af       	std	Y+59, r18	; 0x3b
     54e:	3c af       	std	Y+60, r19	; 0x3c
     550:	c4 01       	movw	r24, r8
     552:	b3 01       	movw	r22, r6
     554:	a7 01       	movw	r20, r14
     556:	96 01       	movw	r18, r12
     558:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     55c:	7b 01       	movw	r14, r22
     55e:	8c 01       	movw	r16, r24
     560:	c4 01       	movw	r24, r8
     562:	b3 01       	movw	r22, r6
     564:	2d a9       	ldd	r18, Y+53	; 0x35
     566:	3e a9       	ldd	r19, Y+54	; 0x36
     568:	4f a9       	ldd	r20, Y+55	; 0x37
     56a:	58 ad       	ldd	r21, Y+56	; 0x38
     56c:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     570:	c9 01       	movw	r24, r18
     572:	da 01       	movw	r26, r20
     574:	3c 01       	movw	r6, r24
     576:	4d 01       	movw	r8, r26
     578:	c4 01       	movw	r24, r8
     57a:	b3 01       	movw	r22, r6
     57c:	29 ad       	ldd	r18, Y+57	; 0x39
     57e:	3a ad       	ldd	r19, Y+58	; 0x3a
     580:	4b ad       	ldd	r20, Y+59	; 0x3b
     582:	5c ad       	ldd	r21, Y+60	; 0x3c
     584:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     588:	9b 01       	movw	r18, r22
     58a:	ac 01       	movw	r20, r24
     58c:	87 01       	movw	r16, r14
     58e:	ff 24       	eor	r15, r15
     590:	ee 24       	eor	r14, r14
     592:	ad a4       	ldd	r10, Y+45	; 0x2d
     594:	be a4       	ldd	r11, Y+46	; 0x2e
     596:	cf a4       	ldd	r12, Y+47	; 0x2f
     598:	d8 a8       	ldd	r13, Y+48	; 0x30
     59a:	c6 01       	movw	r24, r12
     59c:	aa 27       	eor	r26, r26
     59e:	bb 27       	eor	r27, r27
     5a0:	57 01       	movw	r10, r14
     5a2:	68 01       	movw	r12, r16
     5a4:	a8 2a       	or	r10, r24
     5a6:	b9 2a       	or	r11, r25
     5a8:	ca 2a       	or	r12, r26
     5aa:	db 2a       	or	r13, r27
     5ac:	a2 16       	cp	r10, r18
     5ae:	b3 06       	cpc	r11, r19
     5b0:	c4 06       	cpc	r12, r20
     5b2:	d5 06       	cpc	r13, r21
     5b4:	e0 f4       	brcc	.+56     	; 0x5ee <__udivdi3+0x24e>
     5b6:	08 94       	sec
     5b8:	61 08       	sbc	r6, r1
     5ba:	71 08       	sbc	r7, r1
     5bc:	81 08       	sbc	r8, r1
     5be:	91 08       	sbc	r9, r1
     5c0:	a2 0c       	add	r10, r2
     5c2:	b3 1c       	adc	r11, r3
     5c4:	c4 1c       	adc	r12, r4
     5c6:	d5 1c       	adc	r13, r5
     5c8:	a2 14       	cp	r10, r2
     5ca:	b3 04       	cpc	r11, r3
     5cc:	c4 04       	cpc	r12, r4
     5ce:	d5 04       	cpc	r13, r5
     5d0:	70 f0       	brcs	.+28     	; 0x5ee <__udivdi3+0x24e>
     5d2:	a2 16       	cp	r10, r18
     5d4:	b3 06       	cpc	r11, r19
     5d6:	c4 06       	cpc	r12, r20
     5d8:	d5 06       	cpc	r13, r21
     5da:	48 f4       	brcc	.+18     	; 0x5ee <__udivdi3+0x24e>
     5dc:	08 94       	sec
     5de:	61 08       	sbc	r6, r1
     5e0:	71 08       	sbc	r7, r1
     5e2:	81 08       	sbc	r8, r1
     5e4:	91 08       	sbc	r9, r1
     5e6:	a2 0c       	add	r10, r2
     5e8:	b3 1c       	adc	r11, r3
     5ea:	c4 1c       	adc	r12, r4
     5ec:	d5 1c       	adc	r13, r5
     5ee:	a2 1a       	sub	r10, r18
     5f0:	b3 0a       	sbc	r11, r19
     5f2:	c4 0a       	sbc	r12, r20
     5f4:	d5 0a       	sbc	r13, r21
     5f6:	c6 01       	movw	r24, r12
     5f8:	b5 01       	movw	r22, r10
     5fa:	2d a9       	ldd	r18, Y+53	; 0x35
     5fc:	3e a9       	ldd	r19, Y+54	; 0x36
     5fe:	4f a9       	ldd	r20, Y+55	; 0x37
     600:	58 ad       	ldd	r21, Y+56	; 0x38
     602:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     606:	7b 01       	movw	r14, r22
     608:	8c 01       	movw	r16, r24
     60a:	c6 01       	movw	r24, r12
     60c:	b5 01       	movw	r22, r10
     60e:	2d a9       	ldd	r18, Y+53	; 0x35
     610:	3e a9       	ldd	r19, Y+54	; 0x36
     612:	4f a9       	ldd	r20, Y+55	; 0x37
     614:	58 ad       	ldd	r21, Y+56	; 0x38
     616:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     61a:	c9 01       	movw	r24, r18
     61c:	da 01       	movw	r26, r20
     61e:	5c 01       	movw	r10, r24
     620:	6d 01       	movw	r12, r26
     622:	c6 01       	movw	r24, r12
     624:	b5 01       	movw	r22, r10
     626:	29 ad       	ldd	r18, Y+57	; 0x39
     628:	3a ad       	ldd	r19, Y+58	; 0x3a
     62a:	4b ad       	ldd	r20, Y+59	; 0x3b
     62c:	5c ad       	ldd	r21, Y+60	; 0x3c
     62e:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     632:	9b 01       	movw	r18, r22
     634:	ac 01       	movw	r20, r24
     636:	87 01       	movw	r16, r14
     638:	ff 24       	eor	r15, r15
     63a:	ee 24       	eor	r14, r14
     63c:	8d a5       	ldd	r24, Y+45	; 0x2d
     63e:	9e a5       	ldd	r25, Y+46	; 0x2e
     640:	af a5       	ldd	r26, Y+47	; 0x2f
     642:	b8 a9       	ldd	r27, Y+48	; 0x30
     644:	a0 70       	andi	r26, 0x00	; 0
     646:	b0 70       	andi	r27, 0x00	; 0
     648:	e8 2a       	or	r14, r24
     64a:	f9 2a       	or	r15, r25
     64c:	0a 2b       	or	r16, r26
     64e:	1b 2b       	or	r17, r27
     650:	e2 16       	cp	r14, r18
     652:	f3 06       	cpc	r15, r19
     654:	04 07       	cpc	r16, r20
     656:	15 07       	cpc	r17, r21
     658:	c0 f4       	brcc	.+48     	; 0x68a <__udivdi3+0x2ea>
     65a:	08 94       	sec
     65c:	a1 08       	sbc	r10, r1
     65e:	b1 08       	sbc	r11, r1
     660:	c1 08       	sbc	r12, r1
     662:	d1 08       	sbc	r13, r1
     664:	e2 0c       	add	r14, r2
     666:	f3 1c       	adc	r15, r3
     668:	04 1d       	adc	r16, r4
     66a:	15 1d       	adc	r17, r5
     66c:	e2 14       	cp	r14, r2
     66e:	f3 04       	cpc	r15, r3
     670:	04 05       	cpc	r16, r4
     672:	15 05       	cpc	r17, r5
     674:	50 f0       	brcs	.+20     	; 0x68a <__udivdi3+0x2ea>
     676:	e2 16       	cp	r14, r18
     678:	f3 06       	cpc	r15, r19
     67a:	04 07       	cpc	r16, r20
     67c:	15 07       	cpc	r17, r21
     67e:	28 f4       	brcc	.+10     	; 0x68a <__udivdi3+0x2ea>
     680:	08 94       	sec
     682:	a1 08       	sbc	r10, r1
     684:	b1 08       	sbc	r11, r1
     686:	c1 08       	sbc	r12, r1
     688:	d1 08       	sbc	r13, r1
     68a:	d3 01       	movw	r26, r6
     68c:	99 27       	eor	r25, r25
     68e:	88 27       	eor	r24, r24
     690:	86 01       	movw	r16, r12
     692:	75 01       	movw	r14, r10
     694:	e8 2a       	or	r14, r24
     696:	f9 2a       	or	r15, r25
     698:	0a 2b       	or	r16, r26
     69a:	1b 2b       	or	r17, r27
     69c:	e9 aa       	std	Y+49, r14	; 0x31
     69e:	fa aa       	std	Y+50, r15	; 0x32
     6a0:	0b ab       	std	Y+51, r16	; 0x33
     6a2:	1c ab       	std	Y+52, r17	; 0x34
     6a4:	cf c4       	rjmp	.+2462   	; 0x1044 <__stack+0x7e5>
     6a6:	21 14       	cp	r2, r1
     6a8:	31 04       	cpc	r3, r1
     6aa:	41 04       	cpc	r4, r1
     6ac:	51 04       	cpc	r5, r1
     6ae:	71 f4       	brne	.+28     	; 0x6cc <__udivdi3+0x32c>
     6b0:	61 e0       	ldi	r22, 0x01	; 1
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	40 e0       	ldi	r20, 0x00	; 0
     6be:	50 e0       	ldi	r21, 0x00	; 0
     6c0:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     6c4:	c9 01       	movw	r24, r18
     6c6:	da 01       	movw	r26, r20
     6c8:	1c 01       	movw	r2, r24
     6ca:	2d 01       	movw	r4, r26
     6cc:	00 e0       	ldi	r16, 0x00	; 0
     6ce:	20 16       	cp	r2, r16
     6d0:	00 e0       	ldi	r16, 0x00	; 0
     6d2:	30 06       	cpc	r3, r16
     6d4:	01 e0       	ldi	r16, 0x01	; 1
     6d6:	40 06       	cpc	r4, r16
     6d8:	00 e0       	ldi	r16, 0x00	; 0
     6da:	50 06       	cpc	r5, r16
     6dc:	88 f4       	brcc	.+34     	; 0x700 <__udivdi3+0x360>
     6de:	1f ef       	ldi	r17, 0xFF	; 255
     6e0:	21 16       	cp	r2, r17
     6e2:	31 04       	cpc	r3, r1
     6e4:	41 04       	cpc	r4, r1
     6e6:	51 04       	cpc	r5, r1
     6e8:	31 f0       	breq	.+12     	; 0x6f6 <__udivdi3+0x356>
     6ea:	28 f0       	brcs	.+10     	; 0x6f6 <__udivdi3+0x356>
     6ec:	48 e0       	ldi	r20, 0x08	; 8
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	60 e0       	ldi	r22, 0x00	; 0
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	17 c0       	rjmp	.+46     	; 0x724 <__udivdi3+0x384>
     6f6:	40 e0       	ldi	r20, 0x00	; 0
     6f8:	50 e0       	ldi	r21, 0x00	; 0
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	70 e0       	ldi	r23, 0x00	; 0
     6fe:	12 c0       	rjmp	.+36     	; 0x724 <__udivdi3+0x384>
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	22 16       	cp	r2, r18
     704:	20 e0       	ldi	r18, 0x00	; 0
     706:	32 06       	cpc	r3, r18
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	42 06       	cpc	r4, r18
     70c:	21 e0       	ldi	r18, 0x01	; 1
     70e:	52 06       	cpc	r5, r18
     710:	28 f0       	brcs	.+10     	; 0x71c <__udivdi3+0x37c>
     712:	48 e1       	ldi	r20, 0x18	; 24
     714:	50 e0       	ldi	r21, 0x00	; 0
     716:	60 e0       	ldi	r22, 0x00	; 0
     718:	70 e0       	ldi	r23, 0x00	; 0
     71a:	04 c0       	rjmp	.+8      	; 0x724 <__udivdi3+0x384>
     71c:	40 e1       	ldi	r20, 0x10	; 16
     71e:	50 e0       	ldi	r21, 0x00	; 0
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	d2 01       	movw	r26, r4
     726:	c1 01       	movw	r24, r2
     728:	04 2e       	mov	r0, r20
     72a:	04 c0       	rjmp	.+8      	; 0x734 <__udivdi3+0x394>
     72c:	b6 95       	lsr	r27
     72e:	a7 95       	ror	r26
     730:	97 95       	ror	r25
     732:	87 95       	ror	r24
     734:	0a 94       	dec	r0
     736:	d2 f7       	brpl	.-12     	; 0x72c <__udivdi3+0x38c>
     738:	85 59       	subi	r24, 0x95	; 149
     73a:	9f 4f       	sbci	r25, 0xFF	; 255
     73c:	dc 01       	movw	r26, r24
     73e:	2c 91       	ld	r18, X
     740:	e0 e2       	ldi	r30, 0x20	; 32
     742:	ee 2e       	mov	r14, r30
     744:	f1 2c       	mov	r15, r1
     746:	01 2d       	mov	r16, r1
     748:	11 2d       	mov	r17, r1
     74a:	d8 01       	movw	r26, r16
     74c:	c7 01       	movw	r24, r14
     74e:	84 1b       	sub	r24, r20
     750:	95 0b       	sbc	r25, r21
     752:	a6 0b       	sbc	r26, r22
     754:	b7 0b       	sbc	r27, r23
     756:	82 1b       	sub	r24, r18
     758:	91 09       	sbc	r25, r1
     75a:	a1 09       	sbc	r26, r1
     75c:	b1 09       	sbc	r27, r1
     75e:	00 97       	sbiw	r24, 0x00	; 0
     760:	a1 05       	cpc	r26, r1
     762:	b1 05       	cpc	r27, r1
     764:	61 f4       	brne	.+24     	; 0x77e <__udivdi3+0x3de>
     766:	64 01       	movw	r12, r8
     768:	53 01       	movw	r10, r6
     76a:	a2 18       	sub	r10, r2
     76c:	b3 08       	sbc	r11, r3
     76e:	c4 08       	sbc	r12, r4
     770:	d5 08       	sbc	r13, r5
     772:	31 e0       	ldi	r19, 0x01	; 1
     774:	63 2e       	mov	r6, r19
     776:	71 2c       	mov	r7, r1
     778:	81 2c       	mov	r8, r1
     77a:	91 2c       	mov	r9, r1
     77c:	1e c1       	rjmp	.+572    	; 0x9ba <__stack+0x15b>
     77e:	6f 96       	adiw	r28, 0x1f	; 31
     780:	8f af       	std	Y+63, r24	; 0x3f
     782:	6f 97       	sbiw	r28, 0x1f	; 31
     784:	08 2e       	mov	r0, r24
     786:	04 c0       	rjmp	.+8      	; 0x790 <__udivdi3+0x3f0>
     788:	22 0c       	add	r2, r2
     78a:	33 1c       	adc	r3, r3
     78c:	44 1c       	adc	r4, r4
     78e:	55 1c       	adc	r5, r5
     790:	0a 94       	dec	r0
     792:	d2 f7       	brpl	.-12     	; 0x788 <__udivdi3+0x3e8>
     794:	ee 2d       	mov	r30, r14
     796:	e8 1b       	sub	r30, r24
     798:	64 01       	movw	r12, r8
     79a:	53 01       	movw	r10, r6
     79c:	0e 2e       	mov	r0, r30
     79e:	04 c0       	rjmp	.+8      	; 0x7a8 <__udivdi3+0x408>
     7a0:	d6 94       	lsr	r13
     7a2:	c7 94       	ror	r12
     7a4:	b7 94       	ror	r11
     7a6:	a7 94       	ror	r10
     7a8:	0a 94       	dec	r0
     7aa:	d2 f7       	brpl	.-12     	; 0x7a0 <__udivdi3+0x400>
     7ac:	a4 01       	movw	r20, r8
     7ae:	93 01       	movw	r18, r6
     7b0:	6f 96       	adiw	r28, 0x1f	; 31
     7b2:	0f ac       	ldd	r0, Y+63	; 0x3f
     7b4:	6f 97       	sbiw	r28, 0x1f	; 31
     7b6:	04 c0       	rjmp	.+8      	; 0x7c0 <__udivdi3+0x420>
     7b8:	22 0f       	add	r18, r18
     7ba:	33 1f       	adc	r19, r19
     7bc:	44 1f       	adc	r20, r20
     7be:	55 1f       	adc	r21, r21
     7c0:	0a 94       	dec	r0
     7c2:	d2 f7       	brpl	.-12     	; 0x7b8 <__udivdi3+0x418>
     7c4:	6d a4       	ldd	r6, Y+45	; 0x2d
     7c6:	7e a4       	ldd	r7, Y+46	; 0x2e
     7c8:	8f a4       	ldd	r8, Y+47	; 0x2f
     7ca:	98 a8       	ldd	r9, Y+48	; 0x30
     7cc:	0e 2e       	mov	r0, r30
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <__udivdi3+0x438>
     7d0:	96 94       	lsr	r9
     7d2:	87 94       	ror	r8
     7d4:	77 94       	ror	r7
     7d6:	67 94       	ror	r6
     7d8:	0a 94       	dec	r0
     7da:	d2 f7       	brpl	.-12     	; 0x7d0 <__udivdi3+0x430>
     7dc:	84 01       	movw	r16, r8
     7de:	73 01       	movw	r14, r6
     7e0:	e2 2a       	or	r14, r18
     7e2:	f3 2a       	or	r15, r19
     7e4:	04 2b       	or	r16, r20
     7e6:	15 2b       	or	r17, r21
     7e8:	e9 a6       	std	Y+41, r14	; 0x29
     7ea:	fa a6       	std	Y+42, r15	; 0x2a
     7ec:	0b a7       	std	Y+43, r16	; 0x2b
     7ee:	1c a7       	std	Y+44, r17	; 0x2c
     7f0:	32 01       	movw	r6, r4
     7f2:	88 24       	eor	r8, r8
     7f4:	99 24       	eor	r9, r9
     7f6:	92 01       	movw	r18, r4
     7f8:	81 01       	movw	r16, r2
     7fa:	20 70       	andi	r18, 0x00	; 0
     7fc:	30 70       	andi	r19, 0x00	; 0
     7fe:	21 96       	adiw	r28, 0x01	; 1
     800:	0c af       	std	Y+60, r16	; 0x3c
     802:	1d af       	std	Y+61, r17	; 0x3d
     804:	2e af       	std	Y+62, r18	; 0x3e
     806:	3f af       	std	Y+63, r19	; 0x3f
     808:	21 97       	sbiw	r28, 0x01	; 1
     80a:	c6 01       	movw	r24, r12
     80c:	b5 01       	movw	r22, r10
     80e:	a4 01       	movw	r20, r8
     810:	93 01       	movw	r18, r6
     812:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     816:	7b 01       	movw	r14, r22
     818:	8c 01       	movw	r16, r24
     81a:	c6 01       	movw	r24, r12
     81c:	b5 01       	movw	r22, r10
     81e:	a4 01       	movw	r20, r8
     820:	93 01       	movw	r18, r6
     822:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     826:	c9 01       	movw	r24, r18
     828:	da 01       	movw	r26, r20
     82a:	25 96       	adiw	r28, 0x05	; 5
     82c:	8c af       	std	Y+60, r24	; 0x3c
     82e:	9d af       	std	Y+61, r25	; 0x3d
     830:	ae af       	std	Y+62, r26	; 0x3e
     832:	bf af       	std	Y+63, r27	; 0x3f
     834:	25 97       	sbiw	r28, 0x05	; 5
     836:	bc 01       	movw	r22, r24
     838:	cd 01       	movw	r24, r26
     83a:	21 96       	adiw	r28, 0x01	; 1
     83c:	2c ad       	ldd	r18, Y+60	; 0x3c
     83e:	3d ad       	ldd	r19, Y+61	; 0x3d
     840:	4e ad       	ldd	r20, Y+62	; 0x3e
     842:	5f ad       	ldd	r21, Y+63	; 0x3f
     844:	21 97       	sbiw	r28, 0x01	; 1
     846:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     84a:	9b 01       	movw	r18, r22
     84c:	ac 01       	movw	r20, r24
     84e:	87 01       	movw	r16, r14
     850:	ff 24       	eor	r15, r15
     852:	ee 24       	eor	r14, r14
     854:	a9 a4       	ldd	r10, Y+41	; 0x29
     856:	ba a4       	ldd	r11, Y+42	; 0x2a
     858:	cb a4       	ldd	r12, Y+43	; 0x2b
     85a:	dc a4       	ldd	r13, Y+44	; 0x2c
     85c:	c6 01       	movw	r24, r12
     85e:	aa 27       	eor	r26, r26
     860:	bb 27       	eor	r27, r27
     862:	5c 01       	movw	r10, r24
     864:	6d 01       	movw	r12, r26
     866:	ae 28       	or	r10, r14
     868:	bf 28       	or	r11, r15
     86a:	c0 2a       	or	r12, r16
     86c:	d1 2a       	or	r13, r17
     86e:	a2 16       	cp	r10, r18
     870:	b3 06       	cpc	r11, r19
     872:	c4 06       	cpc	r12, r20
     874:	d5 06       	cpc	r13, r21
     876:	60 f5       	brcc	.+88     	; 0x8d0 <__stack+0x71>
     878:	25 96       	adiw	r28, 0x05	; 5
     87a:	6c ad       	ldd	r22, Y+60	; 0x3c
     87c:	7d ad       	ldd	r23, Y+61	; 0x3d
     87e:	8e ad       	ldd	r24, Y+62	; 0x3e
     880:	9f ad       	ldd	r25, Y+63	; 0x3f
     882:	25 97       	sbiw	r28, 0x05	; 5
     884:	61 50       	subi	r22, 0x01	; 1
     886:	70 40       	sbci	r23, 0x00	; 0
     888:	80 40       	sbci	r24, 0x00	; 0
     88a:	90 40       	sbci	r25, 0x00	; 0
     88c:	25 96       	adiw	r28, 0x05	; 5
     88e:	6c af       	std	Y+60, r22	; 0x3c
     890:	7d af       	std	Y+61, r23	; 0x3d
     892:	8e af       	std	Y+62, r24	; 0x3e
     894:	9f af       	std	Y+63, r25	; 0x3f
     896:	25 97       	sbiw	r28, 0x05	; 5
     898:	a2 0c       	add	r10, r2
     89a:	b3 1c       	adc	r11, r3
     89c:	c4 1c       	adc	r12, r4
     89e:	d5 1c       	adc	r13, r5
     8a0:	a2 14       	cp	r10, r2
     8a2:	b3 04       	cpc	r11, r3
     8a4:	c4 04       	cpc	r12, r4
     8a6:	d5 04       	cpc	r13, r5
     8a8:	98 f0       	brcs	.+38     	; 0x8d0 <__stack+0x71>
     8aa:	a2 16       	cp	r10, r18
     8ac:	b3 06       	cpc	r11, r19
     8ae:	c4 06       	cpc	r12, r20
     8b0:	d5 06       	cpc	r13, r21
     8b2:	70 f4       	brcc	.+28     	; 0x8d0 <__stack+0x71>
     8b4:	61 50       	subi	r22, 0x01	; 1
     8b6:	70 40       	sbci	r23, 0x00	; 0
     8b8:	80 40       	sbci	r24, 0x00	; 0
     8ba:	90 40       	sbci	r25, 0x00	; 0
     8bc:	25 96       	adiw	r28, 0x05	; 5
     8be:	6c af       	std	Y+60, r22	; 0x3c
     8c0:	7d af       	std	Y+61, r23	; 0x3d
     8c2:	8e af       	std	Y+62, r24	; 0x3e
     8c4:	9f af       	std	Y+63, r25	; 0x3f
     8c6:	25 97       	sbiw	r28, 0x05	; 5
     8c8:	a2 0c       	add	r10, r2
     8ca:	b3 1c       	adc	r11, r3
     8cc:	c4 1c       	adc	r12, r4
     8ce:	d5 1c       	adc	r13, r5
     8d0:	a2 1a       	sub	r10, r18
     8d2:	b3 0a       	sbc	r11, r19
     8d4:	c4 0a       	sbc	r12, r20
     8d6:	d5 0a       	sbc	r13, r21
     8d8:	c6 01       	movw	r24, r12
     8da:	b5 01       	movw	r22, r10
     8dc:	a4 01       	movw	r20, r8
     8de:	93 01       	movw	r18, r6
     8e0:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	c6 01       	movw	r24, r12
     8ea:	b5 01       	movw	r22, r10
     8ec:	a4 01       	movw	r20, r8
     8ee:	93 01       	movw	r18, r6
     8f0:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     8f4:	c9 01       	movw	r24, r18
     8f6:	da 01       	movw	r26, r20
     8f8:	3c 01       	movw	r6, r24
     8fa:	4d 01       	movw	r8, r26
     8fc:	c4 01       	movw	r24, r8
     8fe:	b3 01       	movw	r22, r6
     900:	21 96       	adiw	r28, 0x01	; 1
     902:	2c ad       	ldd	r18, Y+60	; 0x3c
     904:	3d ad       	ldd	r19, Y+61	; 0x3d
     906:	4e ad       	ldd	r20, Y+62	; 0x3e
     908:	5f ad       	ldd	r21, Y+63	; 0x3f
     90a:	21 97       	sbiw	r28, 0x01	; 1
     90c:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     910:	9b 01       	movw	r18, r22
     912:	ac 01       	movw	r20, r24
     914:	87 01       	movw	r16, r14
     916:	ff 24       	eor	r15, r15
     918:	ee 24       	eor	r14, r14
     91a:	89 a5       	ldd	r24, Y+41	; 0x29
     91c:	9a a5       	ldd	r25, Y+42	; 0x2a
     91e:	ab a5       	ldd	r26, Y+43	; 0x2b
     920:	bc a5       	ldd	r27, Y+44	; 0x2c
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	57 01       	movw	r10, r14
     928:	68 01       	movw	r12, r16
     92a:	a8 2a       	or	r10, r24
     92c:	b9 2a       	or	r11, r25
     92e:	ca 2a       	or	r12, r26
     930:	db 2a       	or	r13, r27
     932:	a2 16       	cp	r10, r18
     934:	b3 06       	cpc	r11, r19
     936:	c4 06       	cpc	r12, r20
     938:	d5 06       	cpc	r13, r21
     93a:	e0 f4       	brcc	.+56     	; 0x974 <__stack+0x115>
     93c:	08 94       	sec
     93e:	61 08       	sbc	r6, r1
     940:	71 08       	sbc	r7, r1
     942:	81 08       	sbc	r8, r1
     944:	91 08       	sbc	r9, r1
     946:	a2 0c       	add	r10, r2
     948:	b3 1c       	adc	r11, r3
     94a:	c4 1c       	adc	r12, r4
     94c:	d5 1c       	adc	r13, r5
     94e:	a2 14       	cp	r10, r2
     950:	b3 04       	cpc	r11, r3
     952:	c4 04       	cpc	r12, r4
     954:	d5 04       	cpc	r13, r5
     956:	70 f0       	brcs	.+28     	; 0x974 <__stack+0x115>
     958:	a2 16       	cp	r10, r18
     95a:	b3 06       	cpc	r11, r19
     95c:	c4 06       	cpc	r12, r20
     95e:	d5 06       	cpc	r13, r21
     960:	48 f4       	brcc	.+18     	; 0x974 <__stack+0x115>
     962:	08 94       	sec
     964:	61 08       	sbc	r6, r1
     966:	71 08       	sbc	r7, r1
     968:	81 08       	sbc	r8, r1
     96a:	91 08       	sbc	r9, r1
     96c:	a2 0c       	add	r10, r2
     96e:	b3 1c       	adc	r11, r3
     970:	c4 1c       	adc	r12, r4
     972:	d5 1c       	adc	r13, r5
     974:	8d a5       	ldd	r24, Y+45	; 0x2d
     976:	9e a5       	ldd	r25, Y+46	; 0x2e
     978:	af a5       	ldd	r26, Y+47	; 0x2f
     97a:	b8 a9       	ldd	r27, Y+48	; 0x30
     97c:	6f 96       	adiw	r28, 0x1f	; 31
     97e:	0f ac       	ldd	r0, Y+63	; 0x3f
     980:	6f 97       	sbiw	r28, 0x1f	; 31
     982:	04 c0       	rjmp	.+8      	; 0x98c <__stack+0x12d>
     984:	88 0f       	add	r24, r24
     986:	99 1f       	adc	r25, r25
     988:	aa 1f       	adc	r26, r26
     98a:	bb 1f       	adc	r27, r27
     98c:	0a 94       	dec	r0
     98e:	d2 f7       	brpl	.-12     	; 0x984 <__stack+0x125>
     990:	8d a7       	std	Y+45, r24	; 0x2d
     992:	9e a7       	std	Y+46, r25	; 0x2e
     994:	af a7       	std	Y+47, r26	; 0x2f
     996:	b8 ab       	std	Y+48, r27	; 0x30
     998:	a2 1a       	sub	r10, r18
     99a:	b3 0a       	sbc	r11, r19
     99c:	c4 0a       	sbc	r12, r20
     99e:	d5 0a       	sbc	r13, r21
     9a0:	25 96       	adiw	r28, 0x05	; 5
     9a2:	ec ac       	ldd	r14, Y+60	; 0x3c
     9a4:	fd ac       	ldd	r15, Y+61	; 0x3d
     9a6:	0e ad       	ldd	r16, Y+62	; 0x3e
     9a8:	1f ad       	ldd	r17, Y+63	; 0x3f
     9aa:	25 97       	sbiw	r28, 0x05	; 5
     9ac:	d7 01       	movw	r26, r14
     9ae:	99 27       	eor	r25, r25
     9b0:	88 27       	eor	r24, r24
     9b2:	68 2a       	or	r6, r24
     9b4:	79 2a       	or	r7, r25
     9b6:	8a 2a       	or	r8, r26
     9b8:	9b 2a       	or	r9, r27
     9ba:	82 01       	movw	r16, r4
     9bc:	22 27       	eor	r18, r18
     9be:	33 27       	eor	r19, r19
     9c0:	29 96       	adiw	r28, 0x09	; 9
     9c2:	0c af       	std	Y+60, r16	; 0x3c
     9c4:	1d af       	std	Y+61, r17	; 0x3d
     9c6:	2e af       	std	Y+62, r18	; 0x3e
     9c8:	3f af       	std	Y+63, r19	; 0x3f
     9ca:	29 97       	sbiw	r28, 0x09	; 9
     9cc:	a2 01       	movw	r20, r4
     9ce:	91 01       	movw	r18, r2
     9d0:	40 70       	andi	r20, 0x00	; 0
     9d2:	50 70       	andi	r21, 0x00	; 0
     9d4:	2d 96       	adiw	r28, 0x0d	; 13
     9d6:	2c af       	std	Y+60, r18	; 0x3c
     9d8:	3d af       	std	Y+61, r19	; 0x3d
     9da:	4e af       	std	Y+62, r20	; 0x3e
     9dc:	5f af       	std	Y+63, r21	; 0x3f
     9de:	2d 97       	sbiw	r28, 0x0d	; 13
     9e0:	c6 01       	movw	r24, r12
     9e2:	b5 01       	movw	r22, r10
     9e4:	29 96       	adiw	r28, 0x09	; 9
     9e6:	2c ad       	ldd	r18, Y+60	; 0x3c
     9e8:	3d ad       	ldd	r19, Y+61	; 0x3d
     9ea:	4e ad       	ldd	r20, Y+62	; 0x3e
     9ec:	5f ad       	ldd	r21, Y+63	; 0x3f
     9ee:	29 97       	sbiw	r28, 0x09	; 9
     9f0:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     9f4:	7b 01       	movw	r14, r22
     9f6:	8c 01       	movw	r16, r24
     9f8:	c6 01       	movw	r24, r12
     9fa:	b5 01       	movw	r22, r10
     9fc:	29 96       	adiw	r28, 0x09	; 9
     9fe:	2c ad       	ldd	r18, Y+60	; 0x3c
     a00:	3d ad       	ldd	r19, Y+61	; 0x3d
     a02:	4e ad       	ldd	r20, Y+62	; 0x3e
     a04:	5f ad       	ldd	r21, Y+63	; 0x3f
     a06:	29 97       	sbiw	r28, 0x09	; 9
     a08:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     a0c:	c9 01       	movw	r24, r18
     a0e:	da 01       	movw	r26, r20
     a10:	61 96       	adiw	r28, 0x11	; 17
     a12:	8c af       	std	Y+60, r24	; 0x3c
     a14:	9d af       	std	Y+61, r25	; 0x3d
     a16:	ae af       	std	Y+62, r26	; 0x3e
     a18:	bf af       	std	Y+63, r27	; 0x3f
     a1a:	61 97       	sbiw	r28, 0x11	; 17
     a1c:	bc 01       	movw	r22, r24
     a1e:	cd 01       	movw	r24, r26
     a20:	2d 96       	adiw	r28, 0x0d	; 13
     a22:	2c ad       	ldd	r18, Y+60	; 0x3c
     a24:	3d ad       	ldd	r19, Y+61	; 0x3d
     a26:	4e ad       	ldd	r20, Y+62	; 0x3e
     a28:	5f ad       	ldd	r21, Y+63	; 0x3f
     a2a:	2d 97       	sbiw	r28, 0x0d	; 13
     a2c:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     a30:	9b 01       	movw	r18, r22
     a32:	ac 01       	movw	r20, r24
     a34:	87 01       	movw	r16, r14
     a36:	ff 24       	eor	r15, r15
     a38:	ee 24       	eor	r14, r14
     a3a:	ad a4       	ldd	r10, Y+45	; 0x2d
     a3c:	be a4       	ldd	r11, Y+46	; 0x2e
     a3e:	cf a4       	ldd	r12, Y+47	; 0x2f
     a40:	d8 a8       	ldd	r13, Y+48	; 0x30
     a42:	c6 01       	movw	r24, r12
     a44:	aa 27       	eor	r26, r26
     a46:	bb 27       	eor	r27, r27
     a48:	57 01       	movw	r10, r14
     a4a:	68 01       	movw	r12, r16
     a4c:	a8 2a       	or	r10, r24
     a4e:	b9 2a       	or	r11, r25
     a50:	ca 2a       	or	r12, r26
     a52:	db 2a       	or	r13, r27
     a54:	a2 16       	cp	r10, r18
     a56:	b3 06       	cpc	r11, r19
     a58:	c4 06       	cpc	r12, r20
     a5a:	d5 06       	cpc	r13, r21
     a5c:	60 f5       	brcc	.+88     	; 0xab6 <__stack+0x257>
     a5e:	61 96       	adiw	r28, 0x11	; 17
     a60:	6c ad       	ldd	r22, Y+60	; 0x3c
     a62:	7d ad       	ldd	r23, Y+61	; 0x3d
     a64:	8e ad       	ldd	r24, Y+62	; 0x3e
     a66:	9f ad       	ldd	r25, Y+63	; 0x3f
     a68:	61 97       	sbiw	r28, 0x11	; 17
     a6a:	61 50       	subi	r22, 0x01	; 1
     a6c:	70 40       	sbci	r23, 0x00	; 0
     a6e:	80 40       	sbci	r24, 0x00	; 0
     a70:	90 40       	sbci	r25, 0x00	; 0
     a72:	61 96       	adiw	r28, 0x11	; 17
     a74:	6c af       	std	Y+60, r22	; 0x3c
     a76:	7d af       	std	Y+61, r23	; 0x3d
     a78:	8e af       	std	Y+62, r24	; 0x3e
     a7a:	9f af       	std	Y+63, r25	; 0x3f
     a7c:	61 97       	sbiw	r28, 0x11	; 17
     a7e:	a2 0c       	add	r10, r2
     a80:	b3 1c       	adc	r11, r3
     a82:	c4 1c       	adc	r12, r4
     a84:	d5 1c       	adc	r13, r5
     a86:	a2 14       	cp	r10, r2
     a88:	b3 04       	cpc	r11, r3
     a8a:	c4 04       	cpc	r12, r4
     a8c:	d5 04       	cpc	r13, r5
     a8e:	98 f0       	brcs	.+38     	; 0xab6 <__stack+0x257>
     a90:	a2 16       	cp	r10, r18
     a92:	b3 06       	cpc	r11, r19
     a94:	c4 06       	cpc	r12, r20
     a96:	d5 06       	cpc	r13, r21
     a98:	70 f4       	brcc	.+28     	; 0xab6 <__stack+0x257>
     a9a:	61 50       	subi	r22, 0x01	; 1
     a9c:	70 40       	sbci	r23, 0x00	; 0
     a9e:	80 40       	sbci	r24, 0x00	; 0
     aa0:	90 40       	sbci	r25, 0x00	; 0
     aa2:	61 96       	adiw	r28, 0x11	; 17
     aa4:	6c af       	std	Y+60, r22	; 0x3c
     aa6:	7d af       	std	Y+61, r23	; 0x3d
     aa8:	8e af       	std	Y+62, r24	; 0x3e
     aaa:	9f af       	std	Y+63, r25	; 0x3f
     aac:	61 97       	sbiw	r28, 0x11	; 17
     aae:	a2 0c       	add	r10, r2
     ab0:	b3 1c       	adc	r11, r3
     ab2:	c4 1c       	adc	r12, r4
     ab4:	d5 1c       	adc	r13, r5
     ab6:	a2 1a       	sub	r10, r18
     ab8:	b3 0a       	sbc	r11, r19
     aba:	c4 0a       	sbc	r12, r20
     abc:	d5 0a       	sbc	r13, r21
     abe:	c6 01       	movw	r24, r12
     ac0:	b5 01       	movw	r22, r10
     ac2:	29 96       	adiw	r28, 0x09	; 9
     ac4:	2c ad       	ldd	r18, Y+60	; 0x3c
     ac6:	3d ad       	ldd	r19, Y+61	; 0x3d
     ac8:	4e ad       	ldd	r20, Y+62	; 0x3e
     aca:	5f ad       	ldd	r21, Y+63	; 0x3f
     acc:	29 97       	sbiw	r28, 0x09	; 9
     ace:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     ad2:	7b 01       	movw	r14, r22
     ad4:	8c 01       	movw	r16, r24
     ad6:	c6 01       	movw	r24, r12
     ad8:	b5 01       	movw	r22, r10
     ada:	29 96       	adiw	r28, 0x09	; 9
     adc:	2c ad       	ldd	r18, Y+60	; 0x3c
     ade:	3d ad       	ldd	r19, Y+61	; 0x3d
     ae0:	4e ad       	ldd	r20, Y+62	; 0x3e
     ae2:	5f ad       	ldd	r21, Y+63	; 0x3f
     ae4:	29 97       	sbiw	r28, 0x09	; 9
     ae6:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     aea:	c9 01       	movw	r24, r18
     aec:	da 01       	movw	r26, r20
     aee:	5c 01       	movw	r10, r24
     af0:	6d 01       	movw	r12, r26
     af2:	c6 01       	movw	r24, r12
     af4:	b5 01       	movw	r22, r10
     af6:	2d 96       	adiw	r28, 0x0d	; 13
     af8:	2c ad       	ldd	r18, Y+60	; 0x3c
     afa:	3d ad       	ldd	r19, Y+61	; 0x3d
     afc:	4e ad       	ldd	r20, Y+62	; 0x3e
     afe:	5f ad       	ldd	r21, Y+63	; 0x3f
     b00:	2d 97       	sbiw	r28, 0x0d	; 13
     b02:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     b06:	9b 01       	movw	r18, r22
     b08:	ac 01       	movw	r20, r24
     b0a:	87 01       	movw	r16, r14
     b0c:	ff 24       	eor	r15, r15
     b0e:	ee 24       	eor	r14, r14
     b10:	8d a5       	ldd	r24, Y+45	; 0x2d
     b12:	9e a5       	ldd	r25, Y+46	; 0x2e
     b14:	af a5       	ldd	r26, Y+47	; 0x2f
     b16:	b8 a9       	ldd	r27, Y+48	; 0x30
     b18:	a0 70       	andi	r26, 0x00	; 0
     b1a:	b0 70       	andi	r27, 0x00	; 0
     b1c:	e8 2a       	or	r14, r24
     b1e:	f9 2a       	or	r15, r25
     b20:	0a 2b       	or	r16, r26
     b22:	1b 2b       	or	r17, r27
     b24:	e2 16       	cp	r14, r18
     b26:	f3 06       	cpc	r15, r19
     b28:	04 07       	cpc	r16, r20
     b2a:	15 07       	cpc	r17, r21
     b2c:	c0 f4       	brcc	.+48     	; 0xb5e <__stack+0x2ff>
     b2e:	08 94       	sec
     b30:	a1 08       	sbc	r10, r1
     b32:	b1 08       	sbc	r11, r1
     b34:	c1 08       	sbc	r12, r1
     b36:	d1 08       	sbc	r13, r1
     b38:	e2 0c       	add	r14, r2
     b3a:	f3 1c       	adc	r15, r3
     b3c:	04 1d       	adc	r16, r4
     b3e:	15 1d       	adc	r17, r5
     b40:	e2 14       	cp	r14, r2
     b42:	f3 04       	cpc	r15, r3
     b44:	04 05       	cpc	r16, r4
     b46:	15 05       	cpc	r17, r5
     b48:	50 f0       	brcs	.+20     	; 0xb5e <__stack+0x2ff>
     b4a:	e2 16       	cp	r14, r18
     b4c:	f3 06       	cpc	r15, r19
     b4e:	04 07       	cpc	r16, r20
     b50:	15 07       	cpc	r17, r21
     b52:	28 f4       	brcc	.+10     	; 0xb5e <__stack+0x2ff>
     b54:	08 94       	sec
     b56:	a1 08       	sbc	r10, r1
     b58:	b1 08       	sbc	r11, r1
     b5a:	c1 08       	sbc	r12, r1
     b5c:	d1 08       	sbc	r13, r1
     b5e:	61 96       	adiw	r28, 0x11	; 17
     b60:	ec ac       	ldd	r14, Y+60	; 0x3c
     b62:	fd ac       	ldd	r15, Y+61	; 0x3d
     b64:	0e ad       	ldd	r16, Y+62	; 0x3e
     b66:	1f ad       	ldd	r17, Y+63	; 0x3f
     b68:	61 97       	sbiw	r28, 0x11	; 17
     b6a:	d7 01       	movw	r26, r14
     b6c:	99 27       	eor	r25, r25
     b6e:	88 27       	eor	r24, r24
     b70:	96 01       	movw	r18, r12
     b72:	85 01       	movw	r16, r10
     b74:	08 2b       	or	r16, r24
     b76:	19 2b       	or	r17, r25
     b78:	2a 2b       	or	r18, r26
     b7a:	3b 2b       	or	r19, r27
     b7c:	09 ab       	std	Y+49, r16	; 0x31
     b7e:	1a ab       	std	Y+50, r17	; 0x32
     b80:	2b ab       	std	Y+51, r18	; 0x33
     b82:	3c ab       	std	Y+52, r19	; 0x34
     b84:	62 c2       	rjmp	.+1220   	; 0x104a <__stack+0x7eb>
     b86:	6e 14       	cp	r6, r14
     b88:	7f 04       	cpc	r7, r15
     b8a:	80 06       	cpc	r8, r16
     b8c:	91 06       	cpc	r9, r17
     b8e:	08 f4       	brcc	.+2      	; 0xb92 <__stack+0x333>
     b90:	51 c2       	rjmp	.+1186   	; 0x1034 <__stack+0x7d5>
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	e2 16       	cp	r14, r18
     b96:	20 e0       	ldi	r18, 0x00	; 0
     b98:	f2 06       	cpc	r15, r18
     b9a:	21 e0       	ldi	r18, 0x01	; 1
     b9c:	02 07       	cpc	r16, r18
     b9e:	20 e0       	ldi	r18, 0x00	; 0
     ba0:	12 07       	cpc	r17, r18
     ba2:	88 f4       	brcc	.+34     	; 0xbc6 <__stack+0x367>
     ba4:	3f ef       	ldi	r19, 0xFF	; 255
     ba6:	e3 16       	cp	r14, r19
     ba8:	f1 04       	cpc	r15, r1
     baa:	01 05       	cpc	r16, r1
     bac:	11 05       	cpc	r17, r1
     bae:	31 f0       	breq	.+12     	; 0xbbc <__stack+0x35d>
     bb0:	28 f0       	brcs	.+10     	; 0xbbc <__stack+0x35d>
     bb2:	48 e0       	ldi	r20, 0x08	; 8
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	60 e0       	ldi	r22, 0x00	; 0
     bb8:	70 e0       	ldi	r23, 0x00	; 0
     bba:	17 c0       	rjmp	.+46     	; 0xbea <__stack+0x38b>
     bbc:	40 e0       	ldi	r20, 0x00	; 0
     bbe:	50 e0       	ldi	r21, 0x00	; 0
     bc0:	60 e0       	ldi	r22, 0x00	; 0
     bc2:	70 e0       	ldi	r23, 0x00	; 0
     bc4:	12 c0       	rjmp	.+36     	; 0xbea <__stack+0x38b>
     bc6:	40 e0       	ldi	r20, 0x00	; 0
     bc8:	e4 16       	cp	r14, r20
     bca:	40 e0       	ldi	r20, 0x00	; 0
     bcc:	f4 06       	cpc	r15, r20
     bce:	40 e0       	ldi	r20, 0x00	; 0
     bd0:	04 07       	cpc	r16, r20
     bd2:	41 e0       	ldi	r20, 0x01	; 1
     bd4:	14 07       	cpc	r17, r20
     bd6:	28 f0       	brcs	.+10     	; 0xbe2 <__stack+0x383>
     bd8:	48 e1       	ldi	r20, 0x18	; 24
     bda:	50 e0       	ldi	r21, 0x00	; 0
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	04 c0       	rjmp	.+8      	; 0xbea <__stack+0x38b>
     be2:	40 e1       	ldi	r20, 0x10	; 16
     be4:	50 e0       	ldi	r21, 0x00	; 0
     be6:	60 e0       	ldi	r22, 0x00	; 0
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	d8 01       	movw	r26, r16
     bec:	c7 01       	movw	r24, r14
     bee:	04 2e       	mov	r0, r20
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__stack+0x39b>
     bf2:	b6 95       	lsr	r27
     bf4:	a7 95       	ror	r26
     bf6:	97 95       	ror	r25
     bf8:	87 95       	ror	r24
     bfa:	0a 94       	dec	r0
     bfc:	d2 f7       	brpl	.-12     	; 0xbf2 <__stack+0x393>
     bfe:	85 59       	subi	r24, 0x95	; 149
     c00:	9f 4f       	sbci	r25, 0xFF	; 255
     c02:	dc 01       	movw	r26, r24
     c04:	2c 91       	ld	r18, X
     c06:	30 e2       	ldi	r19, 0x20	; 32
     c08:	a3 2e       	mov	r10, r19
     c0a:	b1 2c       	mov	r11, r1
     c0c:	c1 2c       	mov	r12, r1
     c0e:	d1 2c       	mov	r13, r1
     c10:	d6 01       	movw	r26, r12
     c12:	c5 01       	movw	r24, r10
     c14:	84 1b       	sub	r24, r20
     c16:	95 0b       	sbc	r25, r21
     c18:	a6 0b       	sbc	r26, r22
     c1a:	b7 0b       	sbc	r27, r23
     c1c:	82 1b       	sub	r24, r18
     c1e:	91 09       	sbc	r25, r1
     c20:	a1 09       	sbc	r26, r1
     c22:	b1 09       	sbc	r27, r1
     c24:	00 97       	sbiw	r24, 0x00	; 0
     c26:	a1 05       	cpc	r26, r1
     c28:	b1 05       	cpc	r27, r1
     c2a:	89 f4       	brne	.+34     	; 0xc4e <__stack+0x3ef>
     c2c:	e6 14       	cp	r14, r6
     c2e:	f7 04       	cpc	r15, r7
     c30:	08 05       	cpc	r16, r8
     c32:	19 05       	cpc	r17, r9
     c34:	08 f4       	brcc	.+2      	; 0xc38 <__stack+0x3d9>
     c36:	f2 c1       	rjmp	.+996    	; 0x101c <__stack+0x7bd>
     c38:	6d a4       	ldd	r6, Y+45	; 0x2d
     c3a:	7e a4       	ldd	r7, Y+46	; 0x2e
     c3c:	8f a4       	ldd	r8, Y+47	; 0x2f
     c3e:	98 a8       	ldd	r9, Y+48	; 0x30
     c40:	62 14       	cp	r6, r2
     c42:	73 04       	cpc	r7, r3
     c44:	84 04       	cpc	r8, r4
     c46:	95 04       	cpc	r9, r5
     c48:	08 f0       	brcs	.+2      	; 0xc4c <__stack+0x3ed>
     c4a:	e8 c1       	rjmp	.+976    	; 0x101c <__stack+0x7bd>
     c4c:	f3 c1       	rjmp	.+998    	; 0x1034 <__stack+0x7d5>
     c4e:	6e 96       	adiw	r28, 0x1e	; 30
     c50:	8f af       	std	Y+63, r24	; 0x3f
     c52:	6e 97       	sbiw	r28, 0x1e	; 30
     c54:	08 2e       	mov	r0, r24
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <__stack+0x401>
     c58:	ee 0c       	add	r14, r14
     c5a:	ff 1c       	adc	r15, r15
     c5c:	00 1f       	adc	r16, r16
     c5e:	11 1f       	adc	r17, r17
     c60:	0a 94       	dec	r0
     c62:	d2 f7       	brpl	.-12     	; 0xc58 <__stack+0x3f9>
     c64:	6a 2d       	mov	r22, r10
     c66:	68 1b       	sub	r22, r24
     c68:	d2 01       	movw	r26, r4
     c6a:	c1 01       	movw	r24, r2
     c6c:	06 2e       	mov	r0, r22
     c6e:	04 c0       	rjmp	.+8      	; 0xc78 <__stack+0x419>
     c70:	b6 95       	lsr	r27
     c72:	a7 95       	ror	r26
     c74:	97 95       	ror	r25
     c76:	87 95       	ror	r24
     c78:	0a 94       	dec	r0
     c7a:	d2 f7       	brpl	.-12     	; 0xc70 <__stack+0x411>
     c7c:	5c 01       	movw	r10, r24
     c7e:	6d 01       	movw	r12, r26
     c80:	ae 28       	or	r10, r14
     c82:	bf 28       	or	r11, r15
     c84:	c0 2a       	or	r12, r16
     c86:	d1 2a       	or	r13, r17
     c88:	ad a2       	std	Y+37, r10	; 0x25
     c8a:	be a2       	std	Y+38, r11	; 0x26
     c8c:	cf a2       	std	Y+39, r12	; 0x27
     c8e:	d8 a6       	std	Y+40, r13	; 0x28
     c90:	72 01       	movw	r14, r4
     c92:	61 01       	movw	r12, r2
     c94:	6e 96       	adiw	r28, 0x1e	; 30
     c96:	0f ac       	ldd	r0, Y+63	; 0x3f
     c98:	6e 97       	sbiw	r28, 0x1e	; 30
     c9a:	04 c0       	rjmp	.+8      	; 0xca4 <__stack+0x445>
     c9c:	cc 0c       	add	r12, r12
     c9e:	dd 1c       	adc	r13, r13
     ca0:	ee 1c       	adc	r14, r14
     ca2:	ff 1c       	adc	r15, r15
     ca4:	0a 94       	dec	r0
     ca6:	d2 f7       	brpl	.-12     	; 0xc9c <__stack+0x43d>
     ca8:	c9 a2       	std	Y+33, r12	; 0x21
     caa:	da a2       	std	Y+34, r13	; 0x22
     cac:	eb a2       	std	Y+35, r14	; 0x23
     cae:	fc a2       	std	Y+36, r15	; 0x24
     cb0:	64 01       	movw	r12, r8
     cb2:	53 01       	movw	r10, r6
     cb4:	06 2e       	mov	r0, r22
     cb6:	04 c0       	rjmp	.+8      	; 0xcc0 <__stack+0x461>
     cb8:	d6 94       	lsr	r13
     cba:	c7 94       	ror	r12
     cbc:	b7 94       	ror	r11
     cbe:	a7 94       	ror	r10
     cc0:	0a 94       	dec	r0
     cc2:	d2 f7       	brpl	.-12     	; 0xcb8 <__stack+0x459>
     cc4:	d4 01       	movw	r26, r8
     cc6:	c3 01       	movw	r24, r6
     cc8:	6e 96       	adiw	r28, 0x1e	; 30
     cca:	0f ac       	ldd	r0, Y+63	; 0x3f
     ccc:	6e 97       	sbiw	r28, 0x1e	; 30
     cce:	04 c0       	rjmp	.+8      	; 0xcd8 <__stack+0x479>
     cd0:	88 0f       	add	r24, r24
     cd2:	99 1f       	adc	r25, r25
     cd4:	aa 1f       	adc	r26, r26
     cd6:	bb 1f       	adc	r27, r27
     cd8:	0a 94       	dec	r0
     cda:	d2 f7       	brpl	.-12     	; 0xcd0 <__stack+0x471>
     cdc:	ed a4       	ldd	r14, Y+45	; 0x2d
     cde:	fe a4       	ldd	r15, Y+46	; 0x2e
     ce0:	0f a5       	ldd	r16, Y+47	; 0x2f
     ce2:	18 a9       	ldd	r17, Y+48	; 0x30
     ce4:	04 c0       	rjmp	.+8      	; 0xcee <__stack+0x48f>
     ce6:	16 95       	lsr	r17
     ce8:	07 95       	ror	r16
     cea:	f7 94       	ror	r15
     cec:	e7 94       	ror	r14
     cee:	6a 95       	dec	r22
     cf0:	d2 f7       	brpl	.-12     	; 0xce6 <__stack+0x487>
     cf2:	37 01       	movw	r6, r14
     cf4:	48 01       	movw	r8, r16
     cf6:	68 2a       	or	r6, r24
     cf8:	79 2a       	or	r7, r25
     cfa:	8a 2a       	or	r8, r26
     cfc:	9b 2a       	or	r9, r27
     cfe:	6d 8e       	std	Y+29, r6	; 0x1d
     d00:	7e 8e       	std	Y+30, r7	; 0x1e
     d02:	8f 8e       	std	Y+31, r8	; 0x1f
     d04:	98 a2       	std	Y+32, r9	; 0x20
     d06:	ed a0       	ldd	r14, Y+37	; 0x25
     d08:	fe a0       	ldd	r15, Y+38	; 0x26
     d0a:	0f a1       	ldd	r16, Y+39	; 0x27
     d0c:	18 a5       	ldd	r17, Y+40	; 0x28
     d0e:	38 01       	movw	r6, r16
     d10:	88 24       	eor	r8, r8
     d12:	99 24       	eor	r9, r9
     d14:	98 01       	movw	r18, r16
     d16:	87 01       	movw	r16, r14
     d18:	20 70       	andi	r18, 0x00	; 0
     d1a:	30 70       	andi	r19, 0x00	; 0
     d1c:	65 96       	adiw	r28, 0x15	; 21
     d1e:	0c af       	std	Y+60, r16	; 0x3c
     d20:	1d af       	std	Y+61, r17	; 0x3d
     d22:	2e af       	std	Y+62, r18	; 0x3e
     d24:	3f af       	std	Y+63, r19	; 0x3f
     d26:	65 97       	sbiw	r28, 0x15	; 21
     d28:	c6 01       	movw	r24, r12
     d2a:	b5 01       	movw	r22, r10
     d2c:	a4 01       	movw	r20, r8
     d2e:	93 01       	movw	r18, r6
     d30:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     d34:	7b 01       	movw	r14, r22
     d36:	8c 01       	movw	r16, r24
     d38:	c6 01       	movw	r24, r12
     d3a:	b5 01       	movw	r22, r10
     d3c:	a4 01       	movw	r20, r8
     d3e:	93 01       	movw	r18, r6
     d40:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     d44:	c9 01       	movw	r24, r18
     d46:	da 01       	movw	r26, r20
     d48:	1c 01       	movw	r2, r24
     d4a:	2d 01       	movw	r4, r26
     d4c:	c2 01       	movw	r24, r4
     d4e:	b1 01       	movw	r22, r2
     d50:	65 96       	adiw	r28, 0x15	; 21
     d52:	2c ad       	ldd	r18, Y+60	; 0x3c
     d54:	3d ad       	ldd	r19, Y+61	; 0x3d
     d56:	4e ad       	ldd	r20, Y+62	; 0x3e
     d58:	5f ad       	ldd	r21, Y+63	; 0x3f
     d5a:	65 97       	sbiw	r28, 0x15	; 21
     d5c:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     d60:	9b 01       	movw	r18, r22
     d62:	ac 01       	movw	r20, r24
     d64:	87 01       	movw	r16, r14
     d66:	ff 24       	eor	r15, r15
     d68:	ee 24       	eor	r14, r14
     d6a:	ad 8c       	ldd	r10, Y+29	; 0x1d
     d6c:	be 8c       	ldd	r11, Y+30	; 0x1e
     d6e:	cf 8c       	ldd	r12, Y+31	; 0x1f
     d70:	d8 a0       	ldd	r13, Y+32	; 0x20
     d72:	c6 01       	movw	r24, r12
     d74:	aa 27       	eor	r26, r26
     d76:	bb 27       	eor	r27, r27
     d78:	57 01       	movw	r10, r14
     d7a:	68 01       	movw	r12, r16
     d7c:	a8 2a       	or	r10, r24
     d7e:	b9 2a       	or	r11, r25
     d80:	ca 2a       	or	r12, r26
     d82:	db 2a       	or	r13, r27
     d84:	a2 16       	cp	r10, r18
     d86:	b3 06       	cpc	r11, r19
     d88:	c4 06       	cpc	r12, r20
     d8a:	d5 06       	cpc	r13, r21
     d8c:	00 f5       	brcc	.+64     	; 0xdce <__stack+0x56f>
     d8e:	08 94       	sec
     d90:	21 08       	sbc	r2, r1
     d92:	31 08       	sbc	r3, r1
     d94:	41 08       	sbc	r4, r1
     d96:	51 08       	sbc	r5, r1
     d98:	ed a0       	ldd	r14, Y+37	; 0x25
     d9a:	fe a0       	ldd	r15, Y+38	; 0x26
     d9c:	0f a1       	ldd	r16, Y+39	; 0x27
     d9e:	18 a5       	ldd	r17, Y+40	; 0x28
     da0:	ae 0c       	add	r10, r14
     da2:	bf 1c       	adc	r11, r15
     da4:	c0 1e       	adc	r12, r16
     da6:	d1 1e       	adc	r13, r17
     da8:	ae 14       	cp	r10, r14
     daa:	bf 04       	cpc	r11, r15
     dac:	c0 06       	cpc	r12, r16
     dae:	d1 06       	cpc	r13, r17
     db0:	70 f0       	brcs	.+28     	; 0xdce <__stack+0x56f>
     db2:	a2 16       	cp	r10, r18
     db4:	b3 06       	cpc	r11, r19
     db6:	c4 06       	cpc	r12, r20
     db8:	d5 06       	cpc	r13, r21
     dba:	48 f4       	brcc	.+18     	; 0xdce <__stack+0x56f>
     dbc:	08 94       	sec
     dbe:	21 08       	sbc	r2, r1
     dc0:	31 08       	sbc	r3, r1
     dc2:	41 08       	sbc	r4, r1
     dc4:	51 08       	sbc	r5, r1
     dc6:	ae 0c       	add	r10, r14
     dc8:	bf 1c       	adc	r11, r15
     dca:	c0 1e       	adc	r12, r16
     dcc:	d1 1e       	adc	r13, r17
     dce:	a2 1a       	sub	r10, r18
     dd0:	b3 0a       	sbc	r11, r19
     dd2:	c4 0a       	sbc	r12, r20
     dd4:	d5 0a       	sbc	r13, r21
     dd6:	c6 01       	movw	r24, r12
     dd8:	b5 01       	movw	r22, r10
     dda:	a4 01       	movw	r20, r8
     ddc:	93 01       	movw	r18, r6
     dde:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     de2:	7b 01       	movw	r14, r22
     de4:	8c 01       	movw	r16, r24
     de6:	c6 01       	movw	r24, r12
     de8:	b5 01       	movw	r22, r10
     dea:	a4 01       	movw	r20, r8
     dec:	93 01       	movw	r18, r6
     dee:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
     df2:	c9 01       	movw	r24, r18
     df4:	da 01       	movw	r26, r20
     df6:	3c 01       	movw	r6, r24
     df8:	4d 01       	movw	r8, r26
     dfa:	c4 01       	movw	r24, r8
     dfc:	b3 01       	movw	r22, r6
     dfe:	65 96       	adiw	r28, 0x15	; 21
     e00:	2c ad       	ldd	r18, Y+60	; 0x3c
     e02:	3d ad       	ldd	r19, Y+61	; 0x3d
     e04:	4e ad       	ldd	r20, Y+62	; 0x3e
     e06:	5f ad       	ldd	r21, Y+63	; 0x3f
     e08:	65 97       	sbiw	r28, 0x15	; 21
     e0a:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     e0e:	9b 01       	movw	r18, r22
     e10:	ac 01       	movw	r20, r24
     e12:	87 01       	movw	r16, r14
     e14:	ff 24       	eor	r15, r15
     e16:	ee 24       	eor	r14, r14
     e18:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e1a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e1c:	af 8d       	ldd	r26, Y+31	; 0x1f
     e1e:	b8 a1       	ldd	r27, Y+32	; 0x20
     e20:	a0 70       	andi	r26, 0x00	; 0
     e22:	b0 70       	andi	r27, 0x00	; 0
     e24:	57 01       	movw	r10, r14
     e26:	68 01       	movw	r12, r16
     e28:	a8 2a       	or	r10, r24
     e2a:	b9 2a       	or	r11, r25
     e2c:	ca 2a       	or	r12, r26
     e2e:	db 2a       	or	r13, r27
     e30:	a2 16       	cp	r10, r18
     e32:	b3 06       	cpc	r11, r19
     e34:	c4 06       	cpc	r12, r20
     e36:	d5 06       	cpc	r13, r21
     e38:	00 f5       	brcc	.+64     	; 0xe7a <__stack+0x61b>
     e3a:	08 94       	sec
     e3c:	61 08       	sbc	r6, r1
     e3e:	71 08       	sbc	r7, r1
     e40:	81 08       	sbc	r8, r1
     e42:	91 08       	sbc	r9, r1
     e44:	6d a1       	ldd	r22, Y+37	; 0x25
     e46:	7e a1       	ldd	r23, Y+38	; 0x26
     e48:	8f a1       	ldd	r24, Y+39	; 0x27
     e4a:	98 a5       	ldd	r25, Y+40	; 0x28
     e4c:	a6 0e       	add	r10, r22
     e4e:	b7 1e       	adc	r11, r23
     e50:	c8 1e       	adc	r12, r24
     e52:	d9 1e       	adc	r13, r25
     e54:	a6 16       	cp	r10, r22
     e56:	b7 06       	cpc	r11, r23
     e58:	c8 06       	cpc	r12, r24
     e5a:	d9 06       	cpc	r13, r25
     e5c:	70 f0       	brcs	.+28     	; 0xe7a <__stack+0x61b>
     e5e:	a2 16       	cp	r10, r18
     e60:	b3 06       	cpc	r11, r19
     e62:	c4 06       	cpc	r12, r20
     e64:	d5 06       	cpc	r13, r21
     e66:	48 f4       	brcc	.+18     	; 0xe7a <__stack+0x61b>
     e68:	08 94       	sec
     e6a:	61 08       	sbc	r6, r1
     e6c:	71 08       	sbc	r7, r1
     e6e:	81 08       	sbc	r8, r1
     e70:	91 08       	sbc	r9, r1
     e72:	a6 0e       	add	r10, r22
     e74:	b7 1e       	adc	r11, r23
     e76:	c8 1e       	adc	r12, r24
     e78:	d9 1e       	adc	r13, r25
     e7a:	d6 01       	movw	r26, r12
     e7c:	c5 01       	movw	r24, r10
     e7e:	82 1b       	sub	r24, r18
     e80:	93 0b       	sbc	r25, r19
     e82:	a4 0b       	sbc	r26, r20
     e84:	b5 0b       	sbc	r27, r21
     e86:	89 8f       	std	Y+25, r24	; 0x19
     e88:	9a 8f       	std	Y+26, r25	; 0x1a
     e8a:	ab 8f       	std	Y+27, r26	; 0x1b
     e8c:	bc 8f       	std	Y+28, r27	; 0x1c
     e8e:	d1 01       	movw	r26, r2
     e90:	99 27       	eor	r25, r25
     e92:	88 27       	eor	r24, r24
     e94:	64 01       	movw	r12, r8
     e96:	53 01       	movw	r10, r6
     e98:	a8 2a       	or	r10, r24
     e9a:	b9 2a       	or	r11, r25
     e9c:	ca 2a       	or	r12, r26
     e9e:	db 2a       	or	r13, r27
     ea0:	a9 aa       	std	Y+49, r10	; 0x31
     ea2:	ba aa       	std	Y+50, r11	; 0x32
     ea4:	cb aa       	std	Y+51, r12	; 0x33
     ea6:	dc aa       	std	Y+52, r13	; 0x34
     ea8:	86 01       	movw	r16, r12
     eaa:	75 01       	movw	r14, r10
     eac:	2f ef       	ldi	r18, 0xFF	; 255
     eae:	3f ef       	ldi	r19, 0xFF	; 255
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	e2 22       	and	r14, r18
     eb6:	f3 22       	and	r15, r19
     eb8:	04 23       	and	r16, r20
     eba:	15 23       	and	r17, r21
     ebc:	a6 01       	movw	r20, r12
     ebe:	66 27       	eor	r22, r22
     ec0:	77 27       	eor	r23, r23
     ec2:	6d 96       	adiw	r28, 0x1d	; 29
     ec4:	4c af       	std	Y+60, r20	; 0x3c
     ec6:	5d af       	std	Y+61, r21	; 0x3d
     ec8:	6e af       	std	Y+62, r22	; 0x3e
     eca:	7f af       	std	Y+63, r23	; 0x3f
     ecc:	6d 97       	sbiw	r28, 0x1d	; 29
     ece:	a9 a0       	ldd	r10, Y+33	; 0x21
     ed0:	ba a0       	ldd	r11, Y+34	; 0x22
     ed2:	cb a0       	ldd	r12, Y+35	; 0x23
     ed4:	dc a0       	ldd	r13, Y+36	; 0x24
     ed6:	6f ef       	ldi	r22, 0xFF	; 255
     ed8:	7f ef       	ldi	r23, 0xFF	; 255
     eda:	80 e0       	ldi	r24, 0x00	; 0
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a6 22       	and	r10, r22
     ee0:	b7 22       	and	r11, r23
     ee2:	c8 22       	and	r12, r24
     ee4:	d9 22       	and	r13, r25
     ee6:	89 a1       	ldd	r24, Y+33	; 0x21
     ee8:	9a a1       	ldd	r25, Y+34	; 0x22
     eea:	ab a1       	ldd	r26, Y+35	; 0x23
     eec:	bc a1       	ldd	r27, Y+36	; 0x24
     eee:	1d 01       	movw	r2, r26
     ef0:	44 24       	eor	r4, r4
     ef2:	55 24       	eor	r5, r5
     ef4:	c8 01       	movw	r24, r16
     ef6:	b7 01       	movw	r22, r14
     ef8:	a6 01       	movw	r20, r12
     efa:	95 01       	movw	r18, r10
     efc:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     f00:	69 96       	adiw	r28, 0x19	; 25
     f02:	6c af       	std	Y+60, r22	; 0x3c
     f04:	7d af       	std	Y+61, r23	; 0x3d
     f06:	8e af       	std	Y+62, r24	; 0x3e
     f08:	9f af       	std	Y+63, r25	; 0x3f
     f0a:	69 97       	sbiw	r28, 0x19	; 25
     f0c:	c8 01       	movw	r24, r16
     f0e:	b7 01       	movw	r22, r14
     f10:	a2 01       	movw	r20, r4
     f12:	91 01       	movw	r18, r2
     f14:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     f18:	3b 01       	movw	r6, r22
     f1a:	4c 01       	movw	r8, r24
     f1c:	6d 96       	adiw	r28, 0x1d	; 29
     f1e:	6c ad       	ldd	r22, Y+60	; 0x3c
     f20:	7d ad       	ldd	r23, Y+61	; 0x3d
     f22:	8e ad       	ldd	r24, Y+62	; 0x3e
     f24:	9f ad       	ldd	r25, Y+63	; 0x3f
     f26:	6d 97       	sbiw	r28, 0x1d	; 29
     f28:	a6 01       	movw	r20, r12
     f2a:	95 01       	movw	r18, r10
     f2c:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     f30:	7b 01       	movw	r14, r22
     f32:	8c 01       	movw	r16, r24
     f34:	6d 96       	adiw	r28, 0x1d	; 29
     f36:	6c ad       	ldd	r22, Y+60	; 0x3c
     f38:	7d ad       	ldd	r23, Y+61	; 0x3d
     f3a:	8e ad       	ldd	r24, Y+62	; 0x3e
     f3c:	9f ad       	ldd	r25, Y+63	; 0x3f
     f3e:	6d 97       	sbiw	r28, 0x1d	; 29
     f40:	a2 01       	movw	r20, r4
     f42:	91 01       	movw	r18, r2
     f44:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
     f48:	5b 01       	movw	r10, r22
     f4a:	6c 01       	movw	r12, r24
     f4c:	a8 01       	movw	r20, r16
     f4e:	97 01       	movw	r18, r14
     f50:	26 0d       	add	r18, r6
     f52:	37 1d       	adc	r19, r7
     f54:	48 1d       	adc	r20, r8
     f56:	59 1d       	adc	r21, r9
     f58:	69 96       	adiw	r28, 0x19	; 25
     f5a:	6c ac       	ldd	r6, Y+60	; 0x3c
     f5c:	7d ac       	ldd	r7, Y+61	; 0x3d
     f5e:	8e ac       	ldd	r8, Y+62	; 0x3e
     f60:	9f ac       	ldd	r9, Y+63	; 0x3f
     f62:	69 97       	sbiw	r28, 0x19	; 25
     f64:	c4 01       	movw	r24, r8
     f66:	aa 27       	eor	r26, r26
     f68:	bb 27       	eor	r27, r27
     f6a:	28 0f       	add	r18, r24
     f6c:	39 1f       	adc	r19, r25
     f6e:	4a 1f       	adc	r20, r26
     f70:	5b 1f       	adc	r21, r27
     f72:	2e 15       	cp	r18, r14
     f74:	3f 05       	cpc	r19, r15
     f76:	40 07       	cpc	r20, r16
     f78:	51 07       	cpc	r21, r17
     f7a:	48 f4       	brcc	.+18     	; 0xf8e <__stack+0x72f>
     f7c:	e1 2c       	mov	r14, r1
     f7e:	f1 2c       	mov	r15, r1
     f80:	61 e0       	ldi	r22, 0x01	; 1
     f82:	06 2f       	mov	r16, r22
     f84:	11 2d       	mov	r17, r1
     f86:	ae 0c       	add	r10, r14
     f88:	bf 1c       	adc	r11, r15
     f8a:	c0 1e       	adc	r12, r16
     f8c:	d1 1e       	adc	r13, r17
     f8e:	ca 01       	movw	r24, r20
     f90:	aa 27       	eor	r26, r26
     f92:	bb 27       	eor	r27, r27
     f94:	bc 01       	movw	r22, r24
     f96:	cd 01       	movw	r24, r26
     f98:	6a 0d       	add	r22, r10
     f9a:	7b 1d       	adc	r23, r11
     f9c:	8c 1d       	adc	r24, r12
     f9e:	9d 1d       	adc	r25, r13
     fa0:	69 8c       	ldd	r6, Y+25	; 0x19
     fa2:	7a 8c       	ldd	r7, Y+26	; 0x1a
     fa4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     fa6:	9c 8c       	ldd	r9, Y+28	; 0x1c
     fa8:	66 16       	cp	r6, r22
     faa:	77 06       	cpc	r7, r23
     fac:	88 06       	cpc	r8, r24
     fae:	99 06       	cpc	r9, r25
     fb0:	40 f1       	brcs	.+80     	; 0x1002 <__stack+0x7a3>
     fb2:	66 15       	cp	r22, r6
     fb4:	77 05       	cpc	r23, r7
     fb6:	88 05       	cpc	r24, r8
     fb8:	99 05       	cpc	r25, r9
     fba:	09 f0       	breq	.+2      	; 0xfbe <__stack+0x75f>
     fbc:	43 c0       	rjmp	.+134    	; 0x1044 <__stack+0x7e5>
     fbe:	d9 01       	movw	r26, r18
     fc0:	99 27       	eor	r25, r25
     fc2:	88 27       	eor	r24, r24
     fc4:	69 96       	adiw	r28, 0x19	; 25
     fc6:	2c ad       	ldd	r18, Y+60	; 0x3c
     fc8:	3d ad       	ldd	r19, Y+61	; 0x3d
     fca:	4e ad       	ldd	r20, Y+62	; 0x3e
     fcc:	5f ad       	ldd	r21, Y+63	; 0x3f
     fce:	69 97       	sbiw	r28, 0x19	; 25
     fd0:	40 70       	andi	r20, 0x00	; 0
     fd2:	50 70       	andi	r21, 0x00	; 0
     fd4:	82 0f       	add	r24, r18
     fd6:	93 1f       	adc	r25, r19
     fd8:	a4 1f       	adc	r26, r20
     fda:	b5 1f       	adc	r27, r21
     fdc:	2d a5       	ldd	r18, Y+45	; 0x2d
     fde:	3e a5       	ldd	r19, Y+46	; 0x2e
     fe0:	4f a5       	ldd	r20, Y+47	; 0x2f
     fe2:	58 a9       	ldd	r21, Y+48	; 0x30
     fe4:	6e 96       	adiw	r28, 0x1e	; 30
     fe6:	0f ac       	ldd	r0, Y+63	; 0x3f
     fe8:	6e 97       	sbiw	r28, 0x1e	; 30
     fea:	04 c0       	rjmp	.+8      	; 0xff4 <__stack+0x795>
     fec:	22 0f       	add	r18, r18
     fee:	33 1f       	adc	r19, r19
     ff0:	44 1f       	adc	r20, r20
     ff2:	55 1f       	adc	r21, r21
     ff4:	0a 94       	dec	r0
     ff6:	d2 f7       	brpl	.-12     	; 0xfec <__stack+0x78d>
     ff8:	28 17       	cp	r18, r24
     ffa:	39 07       	cpc	r19, r25
     ffc:	4a 07       	cpc	r20, r26
     ffe:	5b 07       	cpc	r21, r27
    1000:	08 f5       	brcc	.+66     	; 0x1044 <__stack+0x7e5>
    1002:	09 a9       	ldd	r16, Y+49	; 0x31
    1004:	1a a9       	ldd	r17, Y+50	; 0x32
    1006:	2b a9       	ldd	r18, Y+51	; 0x33
    1008:	3c a9       	ldd	r19, Y+52	; 0x34
    100a:	01 50       	subi	r16, 0x01	; 1
    100c:	10 40       	sbci	r17, 0x00	; 0
    100e:	20 40       	sbci	r18, 0x00	; 0
    1010:	30 40       	sbci	r19, 0x00	; 0
    1012:	09 ab       	std	Y+49, r16	; 0x31
    1014:	1a ab       	std	Y+50, r17	; 0x32
    1016:	2b ab       	std	Y+51, r18	; 0x33
    1018:	3c ab       	std	Y+52, r19	; 0x34
    101a:	14 c0       	rjmp	.+40     	; 0x1044 <__stack+0x7e5>
    101c:	66 24       	eor	r6, r6
    101e:	77 24       	eor	r7, r7
    1020:	43 01       	movw	r8, r6
    1022:	21 e0       	ldi	r18, 0x01	; 1
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	40 e0       	ldi	r20, 0x00	; 0
    1028:	50 e0       	ldi	r21, 0x00	; 0
    102a:	29 ab       	std	Y+49, r18	; 0x31
    102c:	3a ab       	std	Y+50, r19	; 0x32
    102e:	4b ab       	std	Y+51, r20	; 0x33
    1030:	5c ab       	std	Y+52, r21	; 0x34
    1032:	0b c0       	rjmp	.+22     	; 0x104a <__stack+0x7eb>
    1034:	66 24       	eor	r6, r6
    1036:	77 24       	eor	r7, r7
    1038:	43 01       	movw	r8, r6
    103a:	19 aa       	std	Y+49, r1	; 0x31
    103c:	1a aa       	std	Y+50, r1	; 0x32
    103e:	1b aa       	std	Y+51, r1	; 0x33
    1040:	1c aa       	std	Y+52, r1	; 0x34
    1042:	03 c0       	rjmp	.+6      	; 0x104a <__stack+0x7eb>
    1044:	66 24       	eor	r6, r6
    1046:	77 24       	eor	r7, r7
    1048:	43 01       	movw	r8, r6
    104a:	fe 01       	movw	r30, r28
    104c:	71 96       	adiw	r30, 0x11	; 17
    104e:	88 e0       	ldi	r24, 0x08	; 8
    1050:	df 01       	movw	r26, r30
    1052:	1d 92       	st	X+, r1
    1054:	8a 95       	dec	r24
    1056:	e9 f7       	brne	.-6      	; 0x1052 <__stack+0x7f3>
    1058:	a9 a8       	ldd	r10, Y+49	; 0x31
    105a:	ba a8       	ldd	r11, Y+50	; 0x32
    105c:	cb a8       	ldd	r12, Y+51	; 0x33
    105e:	dc a8       	ldd	r13, Y+52	; 0x34
    1060:	a9 8a       	std	Y+17, r10	; 0x11
    1062:	ba 8a       	std	Y+18, r11	; 0x12
    1064:	cb 8a       	std	Y+19, r12	; 0x13
    1066:	dc 8a       	std	Y+20, r13	; 0x14
    1068:	6d 8a       	std	Y+21, r6	; 0x15
    106a:	7e 8a       	std	Y+22, r7	; 0x16
    106c:	8f 8a       	std	Y+23, r8	; 0x17
    106e:	98 8e       	std	Y+24, r9	; 0x18
    1070:	29 a9       	ldd	r18, Y+49	; 0x31
    1072:	3a 89       	ldd	r19, Y+18	; 0x12
    1074:	4b 89       	ldd	r20, Y+19	; 0x13
    1076:	5c 89       	ldd	r21, Y+20	; 0x14
    1078:	66 2d       	mov	r22, r6
    107a:	7e 89       	ldd	r23, Y+22	; 0x16
    107c:	8f 89       	ldd	r24, Y+23	; 0x17
    107e:	98 8d       	ldd	r25, Y+24	; 0x18
    1080:	c2 5a       	subi	r28, 0xA2	; 162
    1082:	df 4f       	sbci	r29, 0xFF	; 255
    1084:	e2 e1       	ldi	r30, 0x12	; 18
    1086:	0c 94 c1 29 	jmp	0x5382	; 0x5382 <__epilogue_restores__>

0000108a <__umoddi3>:
    108a:	ab e5       	ldi	r26, 0x5B	; 91
    108c:	b0 e0       	ldi	r27, 0x00	; 0
    108e:	eb e4       	ldi	r30, 0x4B	; 75
    1090:	f8 e0       	ldi	r31, 0x08	; 8
    1092:	0c 94 a5 29 	jmp	0x534a	; 0x534a <__prologue_saves__>
    1096:	a8 e0       	ldi	r26, 0x08	; 8
    1098:	4e 01       	movw	r8, r28
    109a:	08 94       	sec
    109c:	81 1c       	adc	r8, r1
    109e:	91 1c       	adc	r9, r1
    10a0:	f4 01       	movw	r30, r8
    10a2:	6a 2e       	mov	r6, r26
    10a4:	11 92       	st	Z+, r1
    10a6:	6a 94       	dec	r6
    10a8:	e9 f7       	brne	.-6      	; 0x10a4 <__umoddi3+0x1a>
    10aa:	29 83       	std	Y+1, r18	; 0x01
    10ac:	3a 83       	std	Y+2, r19	; 0x02
    10ae:	4b 83       	std	Y+3, r20	; 0x03
    10b0:	5c 83       	std	Y+4, r21	; 0x04
    10b2:	6d 83       	std	Y+5, r22	; 0x05
    10b4:	7e 83       	std	Y+6, r23	; 0x06
    10b6:	8f 83       	std	Y+7, r24	; 0x07
    10b8:	98 87       	std	Y+8, r25	; 0x08
    10ba:	ce 01       	movw	r24, r28
    10bc:	09 96       	adiw	r24, 0x09	; 9
    10be:	fc 01       	movw	r30, r24
    10c0:	11 92       	st	Z+, r1
    10c2:	aa 95       	dec	r26
    10c4:	e9 f7       	brne	.-6      	; 0x10c0 <__umoddi3+0x36>
    10c6:	a9 86       	std	Y+9, r10	; 0x09
    10c8:	ba 86       	std	Y+10, r11	; 0x0a
    10ca:	cb 86       	std	Y+11, r12	; 0x0b
    10cc:	dc 86       	std	Y+12, r13	; 0x0c
    10ce:	ed 86       	std	Y+13, r14	; 0x0d
    10d0:	fe 86       	std	Y+14, r15	; 0x0e
    10d2:	0f 87       	std	Y+15, r16	; 0x0f
    10d4:	18 8b       	std	Y+16, r17	; 0x10
    10d6:	29 84       	ldd	r2, Y+9	; 0x09
    10d8:	3a 84       	ldd	r3, Y+10	; 0x0a
    10da:	4b 84       	ldd	r4, Y+11	; 0x0b
    10dc:	5c 84       	ldd	r5, Y+12	; 0x0c
    10de:	ad 84       	ldd	r10, Y+13	; 0x0d
    10e0:	be 84       	ldd	r11, Y+14	; 0x0e
    10e2:	cf 84       	ldd	r12, Y+15	; 0x0f
    10e4:	d8 88       	ldd	r13, Y+16	; 0x10
    10e6:	29 81       	ldd	r18, Y+1	; 0x01
    10e8:	3a 81       	ldd	r19, Y+2	; 0x02
    10ea:	4b 81       	ldd	r20, Y+3	; 0x03
    10ec:	5c 81       	ldd	r21, Y+4	; 0x04
    10ee:	69 96       	adiw	r28, 0x19	; 25
    10f0:	2f af       	std	Y+63, r18	; 0x3f
    10f2:	69 97       	sbiw	r28, 0x19	; 25
    10f4:	6a 96       	adiw	r28, 0x1a	; 26
    10f6:	3f af       	std	Y+63, r19	; 0x3f
    10f8:	6a 97       	sbiw	r28, 0x1a	; 26
    10fa:	6b 96       	adiw	r28, 0x1b	; 27
    10fc:	4f af       	std	Y+63, r20	; 0x3f
    10fe:	6b 97       	sbiw	r28, 0x1b	; 27
    1100:	6c 96       	adiw	r28, 0x1c	; 28
    1102:	5f af       	std	Y+63, r21	; 0x3f
    1104:	6c 97       	sbiw	r28, 0x1c	; 28
    1106:	6c 96       	adiw	r28, 0x1c	; 28
    1108:	6c ac       	ldd	r6, Y+60	; 0x3c
    110a:	7d ac       	ldd	r7, Y+61	; 0x3d
    110c:	8e ac       	ldd	r8, Y+62	; 0x3e
    110e:	9f ac       	ldd	r9, Y+63	; 0x3f
    1110:	6c 97       	sbiw	r28, 0x1c	; 28
    1112:	69 aa       	std	Y+49, r6	; 0x31
    1114:	7a aa       	std	Y+50, r7	; 0x32
    1116:	8b aa       	std	Y+51, r8	; 0x33
    1118:	9c aa       	std	Y+52, r9	; 0x34
    111a:	6d 81       	ldd	r22, Y+5	; 0x05
    111c:	7e 81       	ldd	r23, Y+6	; 0x06
    111e:	8f 81       	ldd	r24, Y+7	; 0x07
    1120:	98 85       	ldd	r25, Y+8	; 0x08
    1122:	3b 01       	movw	r6, r22
    1124:	4c 01       	movw	r8, r24
    1126:	6d aa       	std	Y+53, r6	; 0x35
    1128:	7e aa       	std	Y+54, r7	; 0x36
    112a:	8f aa       	std	Y+55, r8	; 0x37
    112c:	98 ae       	std	Y+56, r9	; 0x38
    112e:	a1 14       	cp	r10, r1
    1130:	b1 04       	cpc	r11, r1
    1132:	c1 04       	cpc	r12, r1
    1134:	d1 04       	cpc	r13, r1
    1136:	09 f0       	breq	.+2      	; 0x113a <__umoddi3+0xb0>
    1138:	04 c3       	rjmp	.+1544   	; 0x1742 <__umoddi3+0x6b8>
    113a:	62 14       	cp	r6, r2
    113c:	73 04       	cpc	r7, r3
    113e:	84 04       	cpc	r8, r4
    1140:	95 04       	cpc	r9, r5
    1142:	08 f0       	brcs	.+2      	; 0x1146 <__umoddi3+0xbc>
    1144:	00 c1       	rjmp	.+512    	; 0x1346 <__umoddi3+0x2bc>
    1146:	00 e0       	ldi	r16, 0x00	; 0
    1148:	20 16       	cp	r2, r16
    114a:	00 e0       	ldi	r16, 0x00	; 0
    114c:	30 06       	cpc	r3, r16
    114e:	01 e0       	ldi	r16, 0x01	; 1
    1150:	40 06       	cpc	r4, r16
    1152:	00 e0       	ldi	r16, 0x00	; 0
    1154:	50 06       	cpc	r5, r16
    1156:	88 f4       	brcc	.+34     	; 0x117a <__umoddi3+0xf0>
    1158:	1f ef       	ldi	r17, 0xFF	; 255
    115a:	21 16       	cp	r2, r17
    115c:	31 04       	cpc	r3, r1
    115e:	41 04       	cpc	r4, r1
    1160:	51 04       	cpc	r5, r1
    1162:	39 f0       	breq	.+14     	; 0x1172 <__umoddi3+0xe8>
    1164:	30 f0       	brcs	.+12     	; 0x1172 <__umoddi3+0xe8>
    1166:	88 e0       	ldi	r24, 0x08	; 8
    1168:	e8 2e       	mov	r14, r24
    116a:	f1 2c       	mov	r15, r1
    116c:	01 2d       	mov	r16, r1
    116e:	11 2d       	mov	r17, r1
    1170:	18 c0       	rjmp	.+48     	; 0x11a2 <__umoddi3+0x118>
    1172:	ee 24       	eor	r14, r14
    1174:	ff 24       	eor	r15, r15
    1176:	87 01       	movw	r16, r14
    1178:	14 c0       	rjmp	.+40     	; 0x11a2 <__umoddi3+0x118>
    117a:	40 e0       	ldi	r20, 0x00	; 0
    117c:	24 16       	cp	r2, r20
    117e:	40 e0       	ldi	r20, 0x00	; 0
    1180:	34 06       	cpc	r3, r20
    1182:	40 e0       	ldi	r20, 0x00	; 0
    1184:	44 06       	cpc	r4, r20
    1186:	41 e0       	ldi	r20, 0x01	; 1
    1188:	54 06       	cpc	r5, r20
    118a:	30 f0       	brcs	.+12     	; 0x1198 <__umoddi3+0x10e>
    118c:	b8 e1       	ldi	r27, 0x18	; 24
    118e:	eb 2e       	mov	r14, r27
    1190:	f1 2c       	mov	r15, r1
    1192:	01 2d       	mov	r16, r1
    1194:	11 2d       	mov	r17, r1
    1196:	05 c0       	rjmp	.+10     	; 0x11a2 <__umoddi3+0x118>
    1198:	a0 e1       	ldi	r26, 0x10	; 16
    119a:	ea 2e       	mov	r14, r26
    119c:	f1 2c       	mov	r15, r1
    119e:	01 2d       	mov	r16, r1
    11a0:	11 2d       	mov	r17, r1
    11a2:	d2 01       	movw	r26, r4
    11a4:	c1 01       	movw	r24, r2
    11a6:	0e 2c       	mov	r0, r14
    11a8:	04 c0       	rjmp	.+8      	; 0x11b2 <__umoddi3+0x128>
    11aa:	b6 95       	lsr	r27
    11ac:	a7 95       	ror	r26
    11ae:	97 95       	ror	r25
    11b0:	87 95       	ror	r24
    11b2:	0a 94       	dec	r0
    11b4:	d2 f7       	brpl	.-12     	; 0x11aa <__umoddi3+0x120>
    11b6:	85 59       	subi	r24, 0x95	; 149
    11b8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ba:	dc 01       	movw	r26, r24
    11bc:	2c 91       	ld	r18, X
    11be:	80 e2       	ldi	r24, 0x20	; 32
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	a0 e0       	ldi	r26, 0x00	; 0
    11c4:	b0 e0       	ldi	r27, 0x00	; 0
    11c6:	8e 19       	sub	r24, r14
    11c8:	9f 09       	sbc	r25, r15
    11ca:	a0 0b       	sbc	r26, r16
    11cc:	b1 0b       	sbc	r27, r17
    11ce:	5c 01       	movw	r10, r24
    11d0:	6d 01       	movw	r12, r26
    11d2:	a2 1a       	sub	r10, r18
    11d4:	b1 08       	sbc	r11, r1
    11d6:	c1 08       	sbc	r12, r1
    11d8:	d1 08       	sbc	r13, r1
    11da:	a9 ae       	std	Y+57, r10	; 0x39
    11dc:	ba ae       	std	Y+58, r11	; 0x3a
    11de:	cb ae       	std	Y+59, r12	; 0x3b
    11e0:	dc ae       	std	Y+60, r13	; 0x3c
    11e2:	a1 14       	cp	r10, r1
    11e4:	b1 04       	cpc	r11, r1
    11e6:	c1 04       	cpc	r12, r1
    11e8:	d1 04       	cpc	r13, r1
    11ea:	09 f4       	brne	.+2      	; 0x11ee <__umoddi3+0x164>
    11ec:	3f c0       	rjmp	.+126    	; 0x126c <__umoddi3+0x1e2>
    11ee:	69 ad       	ldd	r22, Y+57	; 0x39
    11f0:	06 2e       	mov	r0, r22
    11f2:	04 c0       	rjmp	.+8      	; 0x11fc <__umoddi3+0x172>
    11f4:	22 0c       	add	r2, r2
    11f6:	33 1c       	adc	r3, r3
    11f8:	44 1c       	adc	r4, r4
    11fa:	55 1c       	adc	r5, r5
    11fc:	0a 94       	dec	r0
    11fe:	d2 f7       	brpl	.-12     	; 0x11f4 <__umoddi3+0x16a>
    1200:	a4 01       	movw	r20, r8
    1202:	93 01       	movw	r18, r6
    1204:	06 2e       	mov	r0, r22
    1206:	04 c0       	rjmp	.+8      	; 0x1210 <__umoddi3+0x186>
    1208:	22 0f       	add	r18, r18
    120a:	33 1f       	adc	r19, r19
    120c:	44 1f       	adc	r20, r20
    120e:	55 1f       	adc	r21, r21
    1210:	0a 94       	dec	r0
    1212:	d2 f7       	brpl	.-12     	; 0x1208 <__umoddi3+0x17e>
    1214:	80 e2       	ldi	r24, 0x20	; 32
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	8a 19       	sub	r24, r10
    121a:	9b 09       	sbc	r25, r11
    121c:	6c 96       	adiw	r28, 0x1c	; 28
    121e:	cc ac       	ldd	r12, Y+60	; 0x3c
    1220:	dd ac       	ldd	r13, Y+61	; 0x3d
    1222:	ee ac       	ldd	r14, Y+62	; 0x3e
    1224:	ff ac       	ldd	r15, Y+63	; 0x3f
    1226:	6c 97       	sbiw	r28, 0x1c	; 28
    1228:	04 c0       	rjmp	.+8      	; 0x1232 <__umoddi3+0x1a8>
    122a:	f6 94       	lsr	r15
    122c:	e7 94       	ror	r14
    122e:	d7 94       	ror	r13
    1230:	c7 94       	ror	r12
    1232:	8a 95       	dec	r24
    1234:	d2 f7       	brpl	.-12     	; 0x122a <__umoddi3+0x1a0>
    1236:	87 01       	movw	r16, r14
    1238:	76 01       	movw	r14, r12
    123a:	e2 2a       	or	r14, r18
    123c:	f3 2a       	or	r15, r19
    123e:	04 2b       	or	r16, r20
    1240:	15 2b       	or	r17, r21
    1242:	ed aa       	std	Y+53, r14	; 0x35
    1244:	fe aa       	std	Y+54, r15	; 0x36
    1246:	0f ab       	std	Y+55, r16	; 0x37
    1248:	18 af       	std	Y+56, r17	; 0x38
    124a:	6c 96       	adiw	r28, 0x1c	; 28
    124c:	8c ad       	ldd	r24, Y+60	; 0x3c
    124e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1250:	ae ad       	ldd	r26, Y+62	; 0x3e
    1252:	bf ad       	ldd	r27, Y+63	; 0x3f
    1254:	6c 97       	sbiw	r28, 0x1c	; 28
    1256:	04 c0       	rjmp	.+8      	; 0x1260 <__umoddi3+0x1d6>
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	aa 1f       	adc	r26, r26
    125e:	bb 1f       	adc	r27, r27
    1260:	6a 95       	dec	r22
    1262:	d2 f7       	brpl	.-12     	; 0x1258 <__umoddi3+0x1ce>
    1264:	89 ab       	std	Y+49, r24	; 0x31
    1266:	9a ab       	std	Y+50, r25	; 0x32
    1268:	ab ab       	std	Y+51, r26	; 0x33
    126a:	bc ab       	std	Y+52, r27	; 0x34
    126c:	32 01       	movw	r6, r4
    126e:	88 24       	eor	r8, r8
    1270:	99 24       	eor	r9, r9
    1272:	b2 01       	movw	r22, r4
    1274:	a1 01       	movw	r20, r2
    1276:	60 70       	andi	r22, 0x00	; 0
    1278:	70 70       	andi	r23, 0x00	; 0
    127a:	21 96       	adiw	r28, 0x01	; 1
    127c:	4c af       	std	Y+60, r20	; 0x3c
    127e:	5d af       	std	Y+61, r21	; 0x3d
    1280:	6e af       	std	Y+62, r22	; 0x3e
    1282:	7f af       	std	Y+63, r23	; 0x3f
    1284:	21 97       	sbiw	r28, 0x01	; 1
    1286:	6d a9       	ldd	r22, Y+53	; 0x35
    1288:	7e a9       	ldd	r23, Y+54	; 0x36
    128a:	8f a9       	ldd	r24, Y+55	; 0x37
    128c:	98 ad       	ldd	r25, Y+56	; 0x38
    128e:	a4 01       	movw	r20, r8
    1290:	93 01       	movw	r18, r6
    1292:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1296:	7b 01       	movw	r14, r22
    1298:	8c 01       	movw	r16, r24
    129a:	6d a9       	ldd	r22, Y+53	; 0x35
    129c:	7e a9       	ldd	r23, Y+54	; 0x36
    129e:	8f a9       	ldd	r24, Y+55	; 0x37
    12a0:	98 ad       	ldd	r25, Y+56	; 0x38
    12a2:	a4 01       	movw	r20, r8
    12a4:	93 01       	movw	r18, r6
    12a6:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    12aa:	ca 01       	movw	r24, r20
    12ac:	b9 01       	movw	r22, r18
    12ae:	21 96       	adiw	r28, 0x01	; 1
    12b0:	2c ad       	ldd	r18, Y+60	; 0x3c
    12b2:	3d ad       	ldd	r19, Y+61	; 0x3d
    12b4:	4e ad       	ldd	r20, Y+62	; 0x3e
    12b6:	5f ad       	ldd	r21, Y+63	; 0x3f
    12b8:	21 97       	sbiw	r28, 0x01	; 1
    12ba:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    12be:	9b 01       	movw	r18, r22
    12c0:	ac 01       	movw	r20, r24
    12c2:	87 01       	movw	r16, r14
    12c4:	ff 24       	eor	r15, r15
    12c6:	ee 24       	eor	r14, r14
    12c8:	a9 a8       	ldd	r10, Y+49	; 0x31
    12ca:	ba a8       	ldd	r11, Y+50	; 0x32
    12cc:	cb a8       	ldd	r12, Y+51	; 0x33
    12ce:	dc a8       	ldd	r13, Y+52	; 0x34
    12d0:	c6 01       	movw	r24, r12
    12d2:	aa 27       	eor	r26, r26
    12d4:	bb 27       	eor	r27, r27
    12d6:	57 01       	movw	r10, r14
    12d8:	68 01       	movw	r12, r16
    12da:	a8 2a       	or	r10, r24
    12dc:	b9 2a       	or	r11, r25
    12de:	ca 2a       	or	r12, r26
    12e0:	db 2a       	or	r13, r27
    12e2:	a2 16       	cp	r10, r18
    12e4:	b3 06       	cpc	r11, r19
    12e6:	c4 06       	cpc	r12, r20
    12e8:	d5 06       	cpc	r13, r21
    12ea:	90 f4       	brcc	.+36     	; 0x1310 <__umoddi3+0x286>
    12ec:	a2 0c       	add	r10, r2
    12ee:	b3 1c       	adc	r11, r3
    12f0:	c4 1c       	adc	r12, r4
    12f2:	d5 1c       	adc	r13, r5
    12f4:	a2 14       	cp	r10, r2
    12f6:	b3 04       	cpc	r11, r3
    12f8:	c4 04       	cpc	r12, r4
    12fa:	d5 04       	cpc	r13, r5
    12fc:	48 f0       	brcs	.+18     	; 0x1310 <__umoddi3+0x286>
    12fe:	a2 16       	cp	r10, r18
    1300:	b3 06       	cpc	r11, r19
    1302:	c4 06       	cpc	r12, r20
    1304:	d5 06       	cpc	r13, r21
    1306:	20 f4       	brcc	.+8      	; 0x1310 <__umoddi3+0x286>
    1308:	a2 0c       	add	r10, r2
    130a:	b3 1c       	adc	r11, r3
    130c:	c4 1c       	adc	r12, r4
    130e:	d5 1c       	adc	r13, r5
    1310:	a2 1a       	sub	r10, r18
    1312:	b3 0a       	sbc	r11, r19
    1314:	c4 0a       	sbc	r12, r20
    1316:	d5 0a       	sbc	r13, r21
    1318:	c6 01       	movw	r24, r12
    131a:	b5 01       	movw	r22, r10
    131c:	a4 01       	movw	r20, r8
    131e:	93 01       	movw	r18, r6
    1320:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1324:	7b 01       	movw	r14, r22
    1326:	8c 01       	movw	r16, r24
    1328:	c6 01       	movw	r24, r12
    132a:	b5 01       	movw	r22, r10
    132c:	a4 01       	movw	r20, r8
    132e:	93 01       	movw	r18, r6
    1330:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1334:	ca 01       	movw	r24, r20
    1336:	b9 01       	movw	r22, r18
    1338:	21 96       	adiw	r28, 0x01	; 1
    133a:	2c ad       	ldd	r18, Y+60	; 0x3c
    133c:	3d ad       	ldd	r19, Y+61	; 0x3d
    133e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1340:	5f ad       	ldd	r21, Y+63	; 0x3f
    1342:	21 97       	sbiw	r28, 0x01	; 1
    1344:	ba c1       	rjmp	.+884    	; 0x16ba <__umoddi3+0x630>
    1346:	21 14       	cp	r2, r1
    1348:	31 04       	cpc	r3, r1
    134a:	41 04       	cpc	r4, r1
    134c:	51 04       	cpc	r5, r1
    134e:	71 f4       	brne	.+28     	; 0x136c <__umoddi3+0x2e2>
    1350:	61 e0       	ldi	r22, 0x01	; 1
    1352:	70 e0       	ldi	r23, 0x00	; 0
    1354:	80 e0       	ldi	r24, 0x00	; 0
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	20 e0       	ldi	r18, 0x00	; 0
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	40 e0       	ldi	r20, 0x00	; 0
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1364:	c9 01       	movw	r24, r18
    1366:	da 01       	movw	r26, r20
    1368:	1c 01       	movw	r2, r24
    136a:	2d 01       	movw	r4, r26
    136c:	00 e0       	ldi	r16, 0x00	; 0
    136e:	20 16       	cp	r2, r16
    1370:	00 e0       	ldi	r16, 0x00	; 0
    1372:	30 06       	cpc	r3, r16
    1374:	01 e0       	ldi	r16, 0x01	; 1
    1376:	40 06       	cpc	r4, r16
    1378:	00 e0       	ldi	r16, 0x00	; 0
    137a:	50 06       	cpc	r5, r16
    137c:	88 f4       	brcc	.+34     	; 0x13a0 <__umoddi3+0x316>
    137e:	1f ef       	ldi	r17, 0xFF	; 255
    1380:	21 16       	cp	r2, r17
    1382:	31 04       	cpc	r3, r1
    1384:	41 04       	cpc	r4, r1
    1386:	51 04       	cpc	r5, r1
    1388:	39 f0       	breq	.+14     	; 0x1398 <__umoddi3+0x30e>
    138a:	30 f0       	brcs	.+12     	; 0x1398 <__umoddi3+0x30e>
    138c:	68 e0       	ldi	r22, 0x08	; 8
    138e:	e6 2e       	mov	r14, r22
    1390:	f1 2c       	mov	r15, r1
    1392:	01 2d       	mov	r16, r1
    1394:	11 2d       	mov	r17, r1
    1396:	18 c0       	rjmp	.+48     	; 0x13c8 <__umoddi3+0x33e>
    1398:	ee 24       	eor	r14, r14
    139a:	ff 24       	eor	r15, r15
    139c:	87 01       	movw	r16, r14
    139e:	14 c0       	rjmp	.+40     	; 0x13c8 <__umoddi3+0x33e>
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	24 16       	cp	r2, r20
    13a4:	40 e0       	ldi	r20, 0x00	; 0
    13a6:	34 06       	cpc	r3, r20
    13a8:	40 e0       	ldi	r20, 0x00	; 0
    13aa:	44 06       	cpc	r4, r20
    13ac:	41 e0       	ldi	r20, 0x01	; 1
    13ae:	54 06       	cpc	r5, r20
    13b0:	30 f0       	brcs	.+12     	; 0x13be <__umoddi3+0x334>
    13b2:	58 e1       	ldi	r21, 0x18	; 24
    13b4:	e5 2e       	mov	r14, r21
    13b6:	f1 2c       	mov	r15, r1
    13b8:	01 2d       	mov	r16, r1
    13ba:	11 2d       	mov	r17, r1
    13bc:	05 c0       	rjmp	.+10     	; 0x13c8 <__umoddi3+0x33e>
    13be:	40 e1       	ldi	r20, 0x10	; 16
    13c0:	e4 2e       	mov	r14, r20
    13c2:	f1 2c       	mov	r15, r1
    13c4:	01 2d       	mov	r16, r1
    13c6:	11 2d       	mov	r17, r1
    13c8:	d2 01       	movw	r26, r4
    13ca:	c1 01       	movw	r24, r2
    13cc:	0e 2c       	mov	r0, r14
    13ce:	04 c0       	rjmp	.+8      	; 0x13d8 <__umoddi3+0x34e>
    13d0:	b6 95       	lsr	r27
    13d2:	a7 95       	ror	r26
    13d4:	97 95       	ror	r25
    13d6:	87 95       	ror	r24
    13d8:	0a 94       	dec	r0
    13da:	d2 f7       	brpl	.-12     	; 0x13d0 <__umoddi3+0x346>
    13dc:	85 59       	subi	r24, 0x95	; 149
    13de:	9f 4f       	sbci	r25, 0xFF	; 255
    13e0:	dc 01       	movw	r26, r24
    13e2:	2c 91       	ld	r18, X
    13e4:	30 e2       	ldi	r19, 0x20	; 32
    13e6:	a3 2e       	mov	r10, r19
    13e8:	b1 2c       	mov	r11, r1
    13ea:	c1 2c       	mov	r12, r1
    13ec:	d1 2c       	mov	r13, r1
    13ee:	d6 01       	movw	r26, r12
    13f0:	c5 01       	movw	r24, r10
    13f2:	8e 19       	sub	r24, r14
    13f4:	9f 09       	sbc	r25, r15
    13f6:	a0 0b       	sbc	r26, r16
    13f8:	b1 0b       	sbc	r27, r17
    13fa:	7c 01       	movw	r14, r24
    13fc:	8d 01       	movw	r16, r26
    13fe:	e2 1a       	sub	r14, r18
    1400:	f1 08       	sbc	r15, r1
    1402:	01 09       	sbc	r16, r1
    1404:	11 09       	sbc	r17, r1
    1406:	e9 ae       	std	Y+57, r14	; 0x39
    1408:	fa ae       	std	Y+58, r15	; 0x3a
    140a:	0b af       	std	Y+59, r16	; 0x3b
    140c:	1c af       	std	Y+60, r17	; 0x3c
    140e:	e1 14       	cp	r14, r1
    1410:	f1 04       	cpc	r15, r1
    1412:	01 05       	cpc	r16, r1
    1414:	11 05       	cpc	r17, r1
    1416:	39 f4       	brne	.+14     	; 0x1426 <__umoddi3+0x39c>
    1418:	64 01       	movw	r12, r8
    141a:	53 01       	movw	r10, r6
    141c:	a2 18       	sub	r10, r2
    141e:	b3 08       	sbc	r11, r3
    1420:	c4 08       	sbc	r12, r4
    1422:	d5 08       	sbc	r13, r5
    1424:	e2 c0       	rjmp	.+452    	; 0x15ea <__umoddi3+0x560>
    1426:	f9 ac       	ldd	r15, Y+57	; 0x39
    1428:	68 96       	adiw	r28, 0x18	; 24
    142a:	ff ae       	std	Y+63, r15	; 0x3f
    142c:	68 97       	sbiw	r28, 0x18	; 24
    142e:	0f 2c       	mov	r0, r15
    1430:	04 c0       	rjmp	.+8      	; 0x143a <__umoddi3+0x3b0>
    1432:	22 0c       	add	r2, r2
    1434:	33 1c       	adc	r3, r3
    1436:	44 1c       	adc	r4, r4
    1438:	55 1c       	adc	r5, r5
    143a:	0a 94       	dec	r0
    143c:	d2 f7       	brpl	.-12     	; 0x1432 <__umoddi3+0x3a8>
    143e:	8a 2d       	mov	r24, r10
    1440:	8f 19       	sub	r24, r15
    1442:	64 01       	movw	r12, r8
    1444:	53 01       	movw	r10, r6
    1446:	08 2e       	mov	r0, r24
    1448:	04 c0       	rjmp	.+8      	; 0x1452 <__umoddi3+0x3c8>
    144a:	d6 94       	lsr	r13
    144c:	c7 94       	ror	r12
    144e:	b7 94       	ror	r11
    1450:	a7 94       	ror	r10
    1452:	0a 94       	dec	r0
    1454:	d2 f7       	brpl	.-12     	; 0x144a <__umoddi3+0x3c0>
    1456:	a4 01       	movw	r20, r8
    1458:	93 01       	movw	r18, r6
    145a:	04 c0       	rjmp	.+8      	; 0x1464 <__umoddi3+0x3da>
    145c:	22 0f       	add	r18, r18
    145e:	33 1f       	adc	r19, r19
    1460:	44 1f       	adc	r20, r20
    1462:	55 1f       	adc	r21, r21
    1464:	fa 94       	dec	r15
    1466:	d2 f7       	brpl	.-12     	; 0x145c <__umoddi3+0x3d2>
    1468:	6c 96       	adiw	r28, 0x1c	; 28
    146a:	6c ac       	ldd	r6, Y+60	; 0x3c
    146c:	7d ac       	ldd	r7, Y+61	; 0x3d
    146e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1470:	9f ac       	ldd	r9, Y+63	; 0x3f
    1472:	6c 97       	sbiw	r28, 0x1c	; 28
    1474:	04 c0       	rjmp	.+8      	; 0x147e <__umoddi3+0x3f4>
    1476:	96 94       	lsr	r9
    1478:	87 94       	ror	r8
    147a:	77 94       	ror	r7
    147c:	67 94       	ror	r6
    147e:	8a 95       	dec	r24
    1480:	d2 f7       	brpl	.-12     	; 0x1476 <__umoddi3+0x3ec>
    1482:	84 01       	movw	r16, r8
    1484:	73 01       	movw	r14, r6
    1486:	e2 2a       	or	r14, r18
    1488:	f3 2a       	or	r15, r19
    148a:	04 2b       	or	r16, r20
    148c:	15 2b       	or	r17, r21
    148e:	ed a6       	std	Y+45, r14	; 0x2d
    1490:	fe a6       	std	Y+46, r15	; 0x2e
    1492:	0f a7       	std	Y+47, r16	; 0x2f
    1494:	18 ab       	std	Y+48, r17	; 0x30
    1496:	32 01       	movw	r6, r4
    1498:	88 24       	eor	r8, r8
    149a:	99 24       	eor	r9, r9
    149c:	b2 01       	movw	r22, r4
    149e:	a1 01       	movw	r20, r2
    14a0:	60 70       	andi	r22, 0x00	; 0
    14a2:	70 70       	andi	r23, 0x00	; 0
    14a4:	25 96       	adiw	r28, 0x05	; 5
    14a6:	4c af       	std	Y+60, r20	; 0x3c
    14a8:	5d af       	std	Y+61, r21	; 0x3d
    14aa:	6e af       	std	Y+62, r22	; 0x3e
    14ac:	7f af       	std	Y+63, r23	; 0x3f
    14ae:	25 97       	sbiw	r28, 0x05	; 5
    14b0:	c6 01       	movw	r24, r12
    14b2:	b5 01       	movw	r22, r10
    14b4:	a4 01       	movw	r20, r8
    14b6:	93 01       	movw	r18, r6
    14b8:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    14bc:	7b 01       	movw	r14, r22
    14be:	8c 01       	movw	r16, r24
    14c0:	c6 01       	movw	r24, r12
    14c2:	b5 01       	movw	r22, r10
    14c4:	a4 01       	movw	r20, r8
    14c6:	93 01       	movw	r18, r6
    14c8:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    14cc:	ca 01       	movw	r24, r20
    14ce:	b9 01       	movw	r22, r18
    14d0:	25 96       	adiw	r28, 0x05	; 5
    14d2:	2c ad       	ldd	r18, Y+60	; 0x3c
    14d4:	3d ad       	ldd	r19, Y+61	; 0x3d
    14d6:	4e ad       	ldd	r20, Y+62	; 0x3e
    14d8:	5f ad       	ldd	r21, Y+63	; 0x3f
    14da:	25 97       	sbiw	r28, 0x05	; 5
    14dc:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    14e0:	9b 01       	movw	r18, r22
    14e2:	ac 01       	movw	r20, r24
    14e4:	87 01       	movw	r16, r14
    14e6:	ff 24       	eor	r15, r15
    14e8:	ee 24       	eor	r14, r14
    14ea:	ad a4       	ldd	r10, Y+45	; 0x2d
    14ec:	be a4       	ldd	r11, Y+46	; 0x2e
    14ee:	cf a4       	ldd	r12, Y+47	; 0x2f
    14f0:	d8 a8       	ldd	r13, Y+48	; 0x30
    14f2:	c6 01       	movw	r24, r12
    14f4:	aa 27       	eor	r26, r26
    14f6:	bb 27       	eor	r27, r27
    14f8:	5c 01       	movw	r10, r24
    14fa:	6d 01       	movw	r12, r26
    14fc:	ae 28       	or	r10, r14
    14fe:	bf 28       	or	r11, r15
    1500:	c0 2a       	or	r12, r16
    1502:	d1 2a       	or	r13, r17
    1504:	a2 16       	cp	r10, r18
    1506:	b3 06       	cpc	r11, r19
    1508:	c4 06       	cpc	r12, r20
    150a:	d5 06       	cpc	r13, r21
    150c:	90 f4       	brcc	.+36     	; 0x1532 <__umoddi3+0x4a8>
    150e:	a2 0c       	add	r10, r2
    1510:	b3 1c       	adc	r11, r3
    1512:	c4 1c       	adc	r12, r4
    1514:	d5 1c       	adc	r13, r5
    1516:	a2 14       	cp	r10, r2
    1518:	b3 04       	cpc	r11, r3
    151a:	c4 04       	cpc	r12, r4
    151c:	d5 04       	cpc	r13, r5
    151e:	48 f0       	brcs	.+18     	; 0x1532 <__umoddi3+0x4a8>
    1520:	a2 16       	cp	r10, r18
    1522:	b3 06       	cpc	r11, r19
    1524:	c4 06       	cpc	r12, r20
    1526:	d5 06       	cpc	r13, r21
    1528:	20 f4       	brcc	.+8      	; 0x1532 <__umoddi3+0x4a8>
    152a:	a2 0c       	add	r10, r2
    152c:	b3 1c       	adc	r11, r3
    152e:	c4 1c       	adc	r12, r4
    1530:	d5 1c       	adc	r13, r5
    1532:	a2 1a       	sub	r10, r18
    1534:	b3 0a       	sbc	r11, r19
    1536:	c4 0a       	sbc	r12, r20
    1538:	d5 0a       	sbc	r13, r21
    153a:	c6 01       	movw	r24, r12
    153c:	b5 01       	movw	r22, r10
    153e:	a4 01       	movw	r20, r8
    1540:	93 01       	movw	r18, r6
    1542:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1546:	7b 01       	movw	r14, r22
    1548:	8c 01       	movw	r16, r24
    154a:	c6 01       	movw	r24, r12
    154c:	b5 01       	movw	r22, r10
    154e:	a4 01       	movw	r20, r8
    1550:	93 01       	movw	r18, r6
    1552:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1556:	ca 01       	movw	r24, r20
    1558:	b9 01       	movw	r22, r18
    155a:	25 96       	adiw	r28, 0x05	; 5
    155c:	2c ad       	ldd	r18, Y+60	; 0x3c
    155e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1560:	4e ad       	ldd	r20, Y+62	; 0x3e
    1562:	5f ad       	ldd	r21, Y+63	; 0x3f
    1564:	25 97       	sbiw	r28, 0x05	; 5
    1566:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    156a:	9b 01       	movw	r18, r22
    156c:	ac 01       	movw	r20, r24
    156e:	87 01       	movw	r16, r14
    1570:	ff 24       	eor	r15, r15
    1572:	ee 24       	eor	r14, r14
    1574:	8d a5       	ldd	r24, Y+45	; 0x2d
    1576:	9e a5       	ldd	r25, Y+46	; 0x2e
    1578:	af a5       	ldd	r26, Y+47	; 0x2f
    157a:	b8 a9       	ldd	r27, Y+48	; 0x30
    157c:	a0 70       	andi	r26, 0x00	; 0
    157e:	b0 70       	andi	r27, 0x00	; 0
    1580:	57 01       	movw	r10, r14
    1582:	68 01       	movw	r12, r16
    1584:	a8 2a       	or	r10, r24
    1586:	b9 2a       	or	r11, r25
    1588:	ca 2a       	or	r12, r26
    158a:	db 2a       	or	r13, r27
    158c:	a2 16       	cp	r10, r18
    158e:	b3 06       	cpc	r11, r19
    1590:	c4 06       	cpc	r12, r20
    1592:	d5 06       	cpc	r13, r21
    1594:	90 f4       	brcc	.+36     	; 0x15ba <__umoddi3+0x530>
    1596:	a2 0c       	add	r10, r2
    1598:	b3 1c       	adc	r11, r3
    159a:	c4 1c       	adc	r12, r4
    159c:	d5 1c       	adc	r13, r5
    159e:	a2 14       	cp	r10, r2
    15a0:	b3 04       	cpc	r11, r3
    15a2:	c4 04       	cpc	r12, r4
    15a4:	d5 04       	cpc	r13, r5
    15a6:	48 f0       	brcs	.+18     	; 0x15ba <__umoddi3+0x530>
    15a8:	a2 16       	cp	r10, r18
    15aa:	b3 06       	cpc	r11, r19
    15ac:	c4 06       	cpc	r12, r20
    15ae:	d5 06       	cpc	r13, r21
    15b0:	20 f4       	brcc	.+8      	; 0x15ba <__umoddi3+0x530>
    15b2:	a2 0c       	add	r10, r2
    15b4:	b3 1c       	adc	r11, r3
    15b6:	c4 1c       	adc	r12, r4
    15b8:	d5 1c       	adc	r13, r5
    15ba:	6c 96       	adiw	r28, 0x1c	; 28
    15bc:	ec ac       	ldd	r14, Y+60	; 0x3c
    15be:	fd ac       	ldd	r15, Y+61	; 0x3d
    15c0:	0e ad       	ldd	r16, Y+62	; 0x3e
    15c2:	1f ad       	ldd	r17, Y+63	; 0x3f
    15c4:	6c 97       	sbiw	r28, 0x1c	; 28
    15c6:	68 96       	adiw	r28, 0x18	; 24
    15c8:	0f ac       	ldd	r0, Y+63	; 0x3f
    15ca:	68 97       	sbiw	r28, 0x18	; 24
    15cc:	04 c0       	rjmp	.+8      	; 0x15d6 <__umoddi3+0x54c>
    15ce:	ee 0c       	add	r14, r14
    15d0:	ff 1c       	adc	r15, r15
    15d2:	00 1f       	adc	r16, r16
    15d4:	11 1f       	adc	r17, r17
    15d6:	0a 94       	dec	r0
    15d8:	d2 f7       	brpl	.-12     	; 0x15ce <__umoddi3+0x544>
    15da:	e9 aa       	std	Y+49, r14	; 0x31
    15dc:	fa aa       	std	Y+50, r15	; 0x32
    15de:	0b ab       	std	Y+51, r16	; 0x33
    15e0:	1c ab       	std	Y+52, r17	; 0x34
    15e2:	a2 1a       	sub	r10, r18
    15e4:	b3 0a       	sbc	r11, r19
    15e6:	c4 0a       	sbc	r12, r20
    15e8:	d5 0a       	sbc	r13, r21
    15ea:	32 01       	movw	r6, r4
    15ec:	88 24       	eor	r8, r8
    15ee:	99 24       	eor	r9, r9
    15f0:	b2 01       	movw	r22, r4
    15f2:	a1 01       	movw	r20, r2
    15f4:	60 70       	andi	r22, 0x00	; 0
    15f6:	70 70       	andi	r23, 0x00	; 0
    15f8:	29 96       	adiw	r28, 0x09	; 9
    15fa:	4c af       	std	Y+60, r20	; 0x3c
    15fc:	5d af       	std	Y+61, r21	; 0x3d
    15fe:	6e af       	std	Y+62, r22	; 0x3e
    1600:	7f af       	std	Y+63, r23	; 0x3f
    1602:	29 97       	sbiw	r28, 0x09	; 9
    1604:	c6 01       	movw	r24, r12
    1606:	b5 01       	movw	r22, r10
    1608:	a4 01       	movw	r20, r8
    160a:	93 01       	movw	r18, r6
    160c:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1610:	7b 01       	movw	r14, r22
    1612:	8c 01       	movw	r16, r24
    1614:	c6 01       	movw	r24, r12
    1616:	b5 01       	movw	r22, r10
    1618:	a4 01       	movw	r20, r8
    161a:	93 01       	movw	r18, r6
    161c:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1620:	ca 01       	movw	r24, r20
    1622:	b9 01       	movw	r22, r18
    1624:	29 96       	adiw	r28, 0x09	; 9
    1626:	2c ad       	ldd	r18, Y+60	; 0x3c
    1628:	3d ad       	ldd	r19, Y+61	; 0x3d
    162a:	4e ad       	ldd	r20, Y+62	; 0x3e
    162c:	5f ad       	ldd	r21, Y+63	; 0x3f
    162e:	29 97       	sbiw	r28, 0x09	; 9
    1630:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    1634:	9b 01       	movw	r18, r22
    1636:	ac 01       	movw	r20, r24
    1638:	87 01       	movw	r16, r14
    163a:	ff 24       	eor	r15, r15
    163c:	ee 24       	eor	r14, r14
    163e:	a9 a8       	ldd	r10, Y+49	; 0x31
    1640:	ba a8       	ldd	r11, Y+50	; 0x32
    1642:	cb a8       	ldd	r12, Y+51	; 0x33
    1644:	dc a8       	ldd	r13, Y+52	; 0x34
    1646:	c6 01       	movw	r24, r12
    1648:	aa 27       	eor	r26, r26
    164a:	bb 27       	eor	r27, r27
    164c:	57 01       	movw	r10, r14
    164e:	68 01       	movw	r12, r16
    1650:	a8 2a       	or	r10, r24
    1652:	b9 2a       	or	r11, r25
    1654:	ca 2a       	or	r12, r26
    1656:	db 2a       	or	r13, r27
    1658:	a2 16       	cp	r10, r18
    165a:	b3 06       	cpc	r11, r19
    165c:	c4 06       	cpc	r12, r20
    165e:	d5 06       	cpc	r13, r21
    1660:	90 f4       	brcc	.+36     	; 0x1686 <__umoddi3+0x5fc>
    1662:	a2 0c       	add	r10, r2
    1664:	b3 1c       	adc	r11, r3
    1666:	c4 1c       	adc	r12, r4
    1668:	d5 1c       	adc	r13, r5
    166a:	a2 14       	cp	r10, r2
    166c:	b3 04       	cpc	r11, r3
    166e:	c4 04       	cpc	r12, r4
    1670:	d5 04       	cpc	r13, r5
    1672:	48 f0       	brcs	.+18     	; 0x1686 <__umoddi3+0x5fc>
    1674:	a2 16       	cp	r10, r18
    1676:	b3 06       	cpc	r11, r19
    1678:	c4 06       	cpc	r12, r20
    167a:	d5 06       	cpc	r13, r21
    167c:	20 f4       	brcc	.+8      	; 0x1686 <__umoddi3+0x5fc>
    167e:	a2 0c       	add	r10, r2
    1680:	b3 1c       	adc	r11, r3
    1682:	c4 1c       	adc	r12, r4
    1684:	d5 1c       	adc	r13, r5
    1686:	a2 1a       	sub	r10, r18
    1688:	b3 0a       	sbc	r11, r19
    168a:	c4 0a       	sbc	r12, r20
    168c:	d5 0a       	sbc	r13, r21
    168e:	c6 01       	movw	r24, r12
    1690:	b5 01       	movw	r22, r10
    1692:	a4 01       	movw	r20, r8
    1694:	93 01       	movw	r18, r6
    1696:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    169a:	7b 01       	movw	r14, r22
    169c:	8c 01       	movw	r16, r24
    169e:	c6 01       	movw	r24, r12
    16a0:	b5 01       	movw	r22, r10
    16a2:	a4 01       	movw	r20, r8
    16a4:	93 01       	movw	r18, r6
    16a6:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    16aa:	ca 01       	movw	r24, r20
    16ac:	b9 01       	movw	r22, r18
    16ae:	29 96       	adiw	r28, 0x09	; 9
    16b0:	2c ad       	ldd	r18, Y+60	; 0x3c
    16b2:	3d ad       	ldd	r19, Y+61	; 0x3d
    16b4:	4e ad       	ldd	r20, Y+62	; 0x3e
    16b6:	5f ad       	ldd	r21, Y+63	; 0x3f
    16b8:	29 97       	sbiw	r28, 0x09	; 9
    16ba:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    16be:	9b 01       	movw	r18, r22
    16c0:	ac 01       	movw	r20, r24
    16c2:	87 01       	movw	r16, r14
    16c4:	ff 24       	eor	r15, r15
    16c6:	ee 24       	eor	r14, r14
    16c8:	89 a9       	ldd	r24, Y+49	; 0x31
    16ca:	9a a9       	ldd	r25, Y+50	; 0x32
    16cc:	ab a9       	ldd	r26, Y+51	; 0x33
    16ce:	bc a9       	ldd	r27, Y+52	; 0x34
    16d0:	a0 70       	andi	r26, 0x00	; 0
    16d2:	b0 70       	andi	r27, 0x00	; 0
    16d4:	e8 2a       	or	r14, r24
    16d6:	f9 2a       	or	r15, r25
    16d8:	0a 2b       	or	r16, r26
    16da:	1b 2b       	or	r17, r27
    16dc:	e2 16       	cp	r14, r18
    16de:	f3 06       	cpc	r15, r19
    16e0:	04 07       	cpc	r16, r20
    16e2:	15 07       	cpc	r17, r21
    16e4:	90 f4       	brcc	.+36     	; 0x170a <__umoddi3+0x680>
    16e6:	e2 0c       	add	r14, r2
    16e8:	f3 1c       	adc	r15, r3
    16ea:	04 1d       	adc	r16, r4
    16ec:	15 1d       	adc	r17, r5
    16ee:	e2 14       	cp	r14, r2
    16f0:	f3 04       	cpc	r15, r3
    16f2:	04 05       	cpc	r16, r4
    16f4:	15 05       	cpc	r17, r5
    16f6:	48 f0       	brcs	.+18     	; 0x170a <__umoddi3+0x680>
    16f8:	e2 16       	cp	r14, r18
    16fa:	f3 06       	cpc	r15, r19
    16fc:	04 07       	cpc	r16, r20
    16fe:	15 07       	cpc	r17, r21
    1700:	20 f4       	brcc	.+8      	; 0x170a <__umoddi3+0x680>
    1702:	e2 0c       	add	r14, r2
    1704:	f3 1c       	adc	r15, r3
    1706:	04 1d       	adc	r16, r4
    1708:	15 1d       	adc	r17, r5
    170a:	e2 1a       	sub	r14, r18
    170c:	f3 0a       	sbc	r15, r19
    170e:	04 0b       	sbc	r16, r20
    1710:	15 0b       	sbc	r17, r21
    1712:	d8 01       	movw	r26, r16
    1714:	c7 01       	movw	r24, r14
    1716:	09 ac       	ldd	r0, Y+57	; 0x39
    1718:	04 c0       	rjmp	.+8      	; 0x1722 <__umoddi3+0x698>
    171a:	b6 95       	lsr	r27
    171c:	a7 95       	ror	r26
    171e:	97 95       	ror	r25
    1720:	87 95       	ror	r24
    1722:	0a 94       	dec	r0
    1724:	d2 f7       	brpl	.-12     	; 0x171a <__umoddi3+0x690>
    1726:	89 8b       	std	Y+17, r24	; 0x11
    1728:	9a 8b       	std	Y+18, r25	; 0x12
    172a:	ab 8b       	std	Y+19, r26	; 0x13
    172c:	bc 8b       	std	Y+20, r27	; 0x14
    172e:	1d 8a       	std	Y+21, r1	; 0x15
    1730:	1e 8a       	std	Y+22, r1	; 0x16
    1732:	1f 8a       	std	Y+23, r1	; 0x17
    1734:	18 8e       	std	Y+24, r1	; 0x18
    1736:	28 2f       	mov	r18, r24
    1738:	3a 89       	ldd	r19, Y+18	; 0x12
    173a:	4b 89       	ldd	r20, Y+19	; 0x13
    173c:	5c 89       	ldd	r21, Y+20	; 0x14
    173e:	6d 89       	ldd	r22, Y+21	; 0x15
    1740:	0c c3       	rjmp	.+1560   	; 0x1d5a <__umoddi3+0xcd0>
    1742:	6a 14       	cp	r6, r10
    1744:	7b 04       	cpc	r7, r11
    1746:	8c 04       	cpc	r8, r12
    1748:	9d 04       	cpc	r9, r13
    174a:	08 f4       	brcc	.+2      	; 0x174e <__umoddi3+0x6c4>
    174c:	09 c3       	rjmp	.+1554   	; 0x1d60 <__umoddi3+0xcd6>
    174e:	00 e0       	ldi	r16, 0x00	; 0
    1750:	a0 16       	cp	r10, r16
    1752:	00 e0       	ldi	r16, 0x00	; 0
    1754:	b0 06       	cpc	r11, r16
    1756:	01 e0       	ldi	r16, 0x01	; 1
    1758:	c0 06       	cpc	r12, r16
    175a:	00 e0       	ldi	r16, 0x00	; 0
    175c:	d0 06       	cpc	r13, r16
    175e:	88 f4       	brcc	.+34     	; 0x1782 <__umoddi3+0x6f8>
    1760:	1f ef       	ldi	r17, 0xFF	; 255
    1762:	a1 16       	cp	r10, r17
    1764:	b1 04       	cpc	r11, r1
    1766:	c1 04       	cpc	r12, r1
    1768:	d1 04       	cpc	r13, r1
    176a:	39 f0       	breq	.+14     	; 0x177a <__umoddi3+0x6f0>
    176c:	30 f0       	brcs	.+12     	; 0x177a <__umoddi3+0x6f0>
    176e:	28 e0       	ldi	r18, 0x08	; 8
    1770:	e2 2e       	mov	r14, r18
    1772:	f1 2c       	mov	r15, r1
    1774:	01 2d       	mov	r16, r1
    1776:	11 2d       	mov	r17, r1
    1778:	18 c0       	rjmp	.+48     	; 0x17aa <__umoddi3+0x720>
    177a:	ee 24       	eor	r14, r14
    177c:	ff 24       	eor	r15, r15
    177e:	87 01       	movw	r16, r14
    1780:	14 c0       	rjmp	.+40     	; 0x17aa <__umoddi3+0x720>
    1782:	40 e0       	ldi	r20, 0x00	; 0
    1784:	a4 16       	cp	r10, r20
    1786:	40 e0       	ldi	r20, 0x00	; 0
    1788:	b4 06       	cpc	r11, r20
    178a:	40 e0       	ldi	r20, 0x00	; 0
    178c:	c4 06       	cpc	r12, r20
    178e:	41 e0       	ldi	r20, 0x01	; 1
    1790:	d4 06       	cpc	r13, r20
    1792:	30 f0       	brcs	.+12     	; 0x17a0 <__umoddi3+0x716>
    1794:	98 e1       	ldi	r25, 0x18	; 24
    1796:	e9 2e       	mov	r14, r25
    1798:	f1 2c       	mov	r15, r1
    179a:	01 2d       	mov	r16, r1
    179c:	11 2d       	mov	r17, r1
    179e:	05 c0       	rjmp	.+10     	; 0x17aa <__umoddi3+0x720>
    17a0:	80 e1       	ldi	r24, 0x10	; 16
    17a2:	e8 2e       	mov	r14, r24
    17a4:	f1 2c       	mov	r15, r1
    17a6:	01 2d       	mov	r16, r1
    17a8:	11 2d       	mov	r17, r1
    17aa:	d6 01       	movw	r26, r12
    17ac:	c5 01       	movw	r24, r10
    17ae:	0e 2c       	mov	r0, r14
    17b0:	04 c0       	rjmp	.+8      	; 0x17ba <__umoddi3+0x730>
    17b2:	b6 95       	lsr	r27
    17b4:	a7 95       	ror	r26
    17b6:	97 95       	ror	r25
    17b8:	87 95       	ror	r24
    17ba:	0a 94       	dec	r0
    17bc:	d2 f7       	brpl	.-12     	; 0x17b2 <__umoddi3+0x728>
    17be:	85 59       	subi	r24, 0x95	; 149
    17c0:	9f 4f       	sbci	r25, 0xFF	; 255
    17c2:	dc 01       	movw	r26, r24
    17c4:	2c 91       	ld	r18, X
    17c6:	80 e2       	ldi	r24, 0x20	; 32
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	a0 e0       	ldi	r26, 0x00	; 0
    17cc:	b0 e0       	ldi	r27, 0x00	; 0
    17ce:	8e 19       	sub	r24, r14
    17d0:	9f 09       	sbc	r25, r15
    17d2:	a0 0b       	sbc	r26, r16
    17d4:	b1 0b       	sbc	r27, r17
    17d6:	82 1b       	sub	r24, r18
    17d8:	91 09       	sbc	r25, r1
    17da:	a1 09       	sbc	r26, r1
    17dc:	b1 09       	sbc	r27, r1
    17de:	00 97       	sbiw	r24, 0x00	; 0
    17e0:	a1 05       	cpc	r26, r1
    17e2:	b1 05       	cpc	r27, r1
    17e4:	09 f0       	breq	.+2      	; 0x17e8 <__umoddi3+0x75e>
    17e6:	4f c0       	rjmp	.+158    	; 0x1886 <__umoddi3+0x7fc>
    17e8:	a6 14       	cp	r10, r6
    17ea:	b7 04       	cpc	r11, r7
    17ec:	c8 04       	cpc	r12, r8
    17ee:	d9 04       	cpc	r13, r9
    17f0:	58 f0       	brcs	.+22     	; 0x1808 <__umoddi3+0x77e>
    17f2:	6c 96       	adiw	r28, 0x1c	; 28
    17f4:	ec ac       	ldd	r14, Y+60	; 0x3c
    17f6:	fd ac       	ldd	r15, Y+61	; 0x3d
    17f8:	0e ad       	ldd	r16, Y+62	; 0x3e
    17fa:	1f ad       	ldd	r17, Y+63	; 0x3f
    17fc:	6c 97       	sbiw	r28, 0x1c	; 28
    17fe:	e2 14       	cp	r14, r2
    1800:	f3 04       	cpc	r15, r3
    1802:	04 05       	cpc	r16, r4
    1804:	15 05       	cpc	r17, r5
    1806:	68 f1       	brcs	.+90     	; 0x1862 <__umoddi3+0x7d8>
    1808:	6c 96       	adiw	r28, 0x1c	; 28
    180a:	ec ac       	ldd	r14, Y+60	; 0x3c
    180c:	fd ac       	ldd	r15, Y+61	; 0x3d
    180e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1810:	1f ad       	ldd	r17, Y+63	; 0x3f
    1812:	6c 97       	sbiw	r28, 0x1c	; 28
    1814:	e2 18       	sub	r14, r2
    1816:	f3 08       	sbc	r15, r3
    1818:	04 09       	sbc	r16, r4
    181a:	15 09       	sbc	r17, r5
    181c:	a4 01       	movw	r20, r8
    181e:	93 01       	movw	r18, r6
    1820:	2a 19       	sub	r18, r10
    1822:	3b 09       	sbc	r19, r11
    1824:	4c 09       	sbc	r20, r12
    1826:	5d 09       	sbc	r21, r13
    1828:	aa 24       	eor	r10, r10
    182a:	bb 24       	eor	r11, r11
    182c:	65 01       	movw	r12, r10
    182e:	6c 96       	adiw	r28, 0x1c	; 28
    1830:	6c ad       	ldd	r22, Y+60	; 0x3c
    1832:	7d ad       	ldd	r23, Y+61	; 0x3d
    1834:	8e ad       	ldd	r24, Y+62	; 0x3e
    1836:	9f ad       	ldd	r25, Y+63	; 0x3f
    1838:	6c 97       	sbiw	r28, 0x1c	; 28
    183a:	6e 15       	cp	r22, r14
    183c:	7f 05       	cpc	r23, r15
    183e:	80 07       	cpc	r24, r16
    1840:	91 07       	cpc	r25, r17
    1842:	28 f4       	brcc	.+10     	; 0x184e <__umoddi3+0x7c4>
    1844:	b1 e0       	ldi	r27, 0x01	; 1
    1846:	ab 2e       	mov	r10, r27
    1848:	b1 2c       	mov	r11, r1
    184a:	c1 2c       	mov	r12, r1
    184c:	d1 2c       	mov	r13, r1
    184e:	da 01       	movw	r26, r20
    1850:	c9 01       	movw	r24, r18
    1852:	8a 19       	sub	r24, r10
    1854:	9b 09       	sbc	r25, r11
    1856:	ac 09       	sbc	r26, r12
    1858:	bd 09       	sbc	r27, r13
    185a:	8d ab       	std	Y+53, r24	; 0x35
    185c:	9e ab       	std	Y+54, r25	; 0x36
    185e:	af ab       	std	Y+55, r26	; 0x37
    1860:	b8 af       	std	Y+56, r27	; 0x38
    1862:	e9 8a       	std	Y+17, r14	; 0x11
    1864:	fa 8a       	std	Y+18, r15	; 0x12
    1866:	0b 8b       	std	Y+19, r16	; 0x13
    1868:	1c 8b       	std	Y+20, r17	; 0x14
    186a:	6d a8       	ldd	r6, Y+53	; 0x35
    186c:	7e a8       	ldd	r7, Y+54	; 0x36
    186e:	8f a8       	ldd	r8, Y+55	; 0x37
    1870:	98 ac       	ldd	r9, Y+56	; 0x38
    1872:	6d 8a       	std	Y+21, r6	; 0x15
    1874:	7e 8a       	std	Y+22, r7	; 0x16
    1876:	8f 8a       	std	Y+23, r8	; 0x17
    1878:	98 8e       	std	Y+24, r9	; 0x18
    187a:	2e 2d       	mov	r18, r14
    187c:	3a 89       	ldd	r19, Y+18	; 0x12
    187e:	4b 89       	ldd	r20, Y+19	; 0x13
    1880:	5c 89       	ldd	r21, Y+20	; 0x14
    1882:	6d a9       	ldd	r22, Y+53	; 0x35
    1884:	6a c2       	rjmp	.+1236   	; 0x1d5a <__umoddi3+0xcd0>
    1886:	67 96       	adiw	r28, 0x17	; 23
    1888:	8f af       	std	Y+63, r24	; 0x3f
    188a:	67 97       	sbiw	r28, 0x17	; 23
    188c:	a6 01       	movw	r20, r12
    188e:	95 01       	movw	r18, r10
    1890:	08 2e       	mov	r0, r24
    1892:	04 c0       	rjmp	.+8      	; 0x189c <__umoddi3+0x812>
    1894:	22 0f       	add	r18, r18
    1896:	33 1f       	adc	r19, r19
    1898:	44 1f       	adc	r20, r20
    189a:	55 1f       	adc	r21, r21
    189c:	0a 94       	dec	r0
    189e:	d2 f7       	brpl	.-12     	; 0x1894 <__umoddi3+0x80a>
    18a0:	a0 e2       	ldi	r26, 0x20	; 32
    18a2:	aa 2e       	mov	r10, r26
    18a4:	a8 1a       	sub	r10, r24
    18a6:	66 96       	adiw	r28, 0x16	; 22
    18a8:	af ae       	std	Y+63, r10	; 0x3f
    18aa:	66 97       	sbiw	r28, 0x16	; 22
    18ac:	d2 01       	movw	r26, r4
    18ae:	c1 01       	movw	r24, r2
    18b0:	04 c0       	rjmp	.+8      	; 0x18ba <__umoddi3+0x830>
    18b2:	b6 95       	lsr	r27
    18b4:	a7 95       	ror	r26
    18b6:	97 95       	ror	r25
    18b8:	87 95       	ror	r24
    18ba:	aa 94       	dec	r10
    18bc:	d2 f7       	brpl	.-12     	; 0x18b2 <__umoddi3+0x828>
    18be:	6c 01       	movw	r12, r24
    18c0:	7d 01       	movw	r14, r26
    18c2:	c2 2a       	or	r12, r18
    18c4:	d3 2a       	or	r13, r19
    18c6:	e4 2a       	or	r14, r20
    18c8:	f5 2a       	or	r15, r21
    18ca:	c9 a6       	std	Y+41, r12	; 0x29
    18cc:	da a6       	std	Y+42, r13	; 0x2a
    18ce:	eb a6       	std	Y+43, r14	; 0x2b
    18d0:	fc a6       	std	Y+44, r15	; 0x2c
    18d2:	82 01       	movw	r16, r4
    18d4:	71 01       	movw	r14, r2
    18d6:	67 96       	adiw	r28, 0x17	; 23
    18d8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18da:	67 97       	sbiw	r28, 0x17	; 23
    18dc:	04 c0       	rjmp	.+8      	; 0x18e6 <__umoddi3+0x85c>
    18de:	ee 0c       	add	r14, r14
    18e0:	ff 1c       	adc	r15, r15
    18e2:	00 1f       	adc	r16, r16
    18e4:	11 1f       	adc	r17, r17
    18e6:	0a 94       	dec	r0
    18e8:	d2 f7       	brpl	.-12     	; 0x18de <__umoddi3+0x854>
    18ea:	ed a2       	std	Y+37, r14	; 0x25
    18ec:	fe a2       	std	Y+38, r15	; 0x26
    18ee:	0f a3       	std	Y+39, r16	; 0x27
    18f0:	18 a7       	std	Y+40, r17	; 0x28
    18f2:	64 01       	movw	r12, r8
    18f4:	53 01       	movw	r10, r6
    18f6:	66 96       	adiw	r28, 0x16	; 22
    18f8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18fa:	66 97       	sbiw	r28, 0x16	; 22
    18fc:	04 c0       	rjmp	.+8      	; 0x1906 <__umoddi3+0x87c>
    18fe:	d6 94       	lsr	r13
    1900:	c7 94       	ror	r12
    1902:	b7 94       	ror	r11
    1904:	a7 94       	ror	r10
    1906:	0a 94       	dec	r0
    1908:	d2 f7       	brpl	.-12     	; 0x18fe <__umoddi3+0x874>
    190a:	a4 01       	movw	r20, r8
    190c:	93 01       	movw	r18, r6
    190e:	67 96       	adiw	r28, 0x17	; 23
    1910:	0f ac       	ldd	r0, Y+63	; 0x3f
    1912:	67 97       	sbiw	r28, 0x17	; 23
    1914:	04 c0       	rjmp	.+8      	; 0x191e <__umoddi3+0x894>
    1916:	22 0f       	add	r18, r18
    1918:	33 1f       	adc	r19, r19
    191a:	44 1f       	adc	r20, r20
    191c:	55 1f       	adc	r21, r21
    191e:	0a 94       	dec	r0
    1920:	d2 f7       	brpl	.-12     	; 0x1916 <__umoddi3+0x88c>
    1922:	6c 96       	adiw	r28, 0x1c	; 28
    1924:	8c ad       	ldd	r24, Y+60	; 0x3c
    1926:	9d ad       	ldd	r25, Y+61	; 0x3d
    1928:	ae ad       	ldd	r26, Y+62	; 0x3e
    192a:	bf ad       	ldd	r27, Y+63	; 0x3f
    192c:	6c 97       	sbiw	r28, 0x1c	; 28
    192e:	66 96       	adiw	r28, 0x16	; 22
    1930:	0f ac       	ldd	r0, Y+63	; 0x3f
    1932:	66 97       	sbiw	r28, 0x16	; 22
    1934:	04 c0       	rjmp	.+8      	; 0x193e <__umoddi3+0x8b4>
    1936:	b6 95       	lsr	r27
    1938:	a7 95       	ror	r26
    193a:	97 95       	ror	r25
    193c:	87 95       	ror	r24
    193e:	0a 94       	dec	r0
    1940:	d2 f7       	brpl	.-12     	; 0x1936 <__umoddi3+0x8ac>
    1942:	3c 01       	movw	r6, r24
    1944:	4d 01       	movw	r8, r26
    1946:	62 2a       	or	r6, r18
    1948:	73 2a       	or	r7, r19
    194a:	84 2a       	or	r8, r20
    194c:	95 2a       	or	r9, r21
    194e:	69 a2       	std	Y+33, r6	; 0x21
    1950:	7a a2       	std	Y+34, r7	; 0x22
    1952:	8b a2       	std	Y+35, r8	; 0x23
    1954:	9c a2       	std	Y+36, r9	; 0x24
    1956:	6c 96       	adiw	r28, 0x1c	; 28
    1958:	ec ac       	ldd	r14, Y+60	; 0x3c
    195a:	fd ac       	ldd	r15, Y+61	; 0x3d
    195c:	0e ad       	ldd	r16, Y+62	; 0x3e
    195e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1960:	6c 97       	sbiw	r28, 0x1c	; 28
    1962:	67 96       	adiw	r28, 0x17	; 23
    1964:	0f ac       	ldd	r0, Y+63	; 0x3f
    1966:	67 97       	sbiw	r28, 0x17	; 23
    1968:	04 c0       	rjmp	.+8      	; 0x1972 <__umoddi3+0x8e8>
    196a:	ee 0c       	add	r14, r14
    196c:	ff 1c       	adc	r15, r15
    196e:	00 1f       	adc	r16, r16
    1970:	11 1f       	adc	r17, r17
    1972:	0a 94       	dec	r0
    1974:	d2 f7       	brpl	.-12     	; 0x196a <__umoddi3+0x8e0>
    1976:	ed 8e       	std	Y+29, r14	; 0x1d
    1978:	fe 8e       	std	Y+30, r15	; 0x1e
    197a:	0f 8f       	std	Y+31, r16	; 0x1f
    197c:	18 a3       	std	Y+32, r17	; 0x20
    197e:	49 a5       	ldd	r20, Y+41	; 0x29
    1980:	5a a5       	ldd	r21, Y+42	; 0x2a
    1982:	6b a5       	ldd	r22, Y+43	; 0x2b
    1984:	7c a5       	ldd	r23, Y+44	; 0x2c
    1986:	3b 01       	movw	r6, r22
    1988:	88 24       	eor	r8, r8
    198a:	99 24       	eor	r9, r9
    198c:	60 70       	andi	r22, 0x00	; 0
    198e:	70 70       	andi	r23, 0x00	; 0
    1990:	2d 96       	adiw	r28, 0x0d	; 13
    1992:	4c af       	std	Y+60, r20	; 0x3c
    1994:	5d af       	std	Y+61, r21	; 0x3d
    1996:	6e af       	std	Y+62, r22	; 0x3e
    1998:	7f af       	std	Y+63, r23	; 0x3f
    199a:	2d 97       	sbiw	r28, 0x0d	; 13
    199c:	c6 01       	movw	r24, r12
    199e:	b5 01       	movw	r22, r10
    19a0:	a4 01       	movw	r20, r8
    19a2:	93 01       	movw	r18, r6
    19a4:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    19a8:	7b 01       	movw	r14, r22
    19aa:	8c 01       	movw	r16, r24
    19ac:	c6 01       	movw	r24, r12
    19ae:	b5 01       	movw	r22, r10
    19b0:	a4 01       	movw	r20, r8
    19b2:	93 01       	movw	r18, r6
    19b4:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    19b8:	c9 01       	movw	r24, r18
    19ba:	da 01       	movw	r26, r20
    19bc:	1c 01       	movw	r2, r24
    19be:	2d 01       	movw	r4, r26
    19c0:	c2 01       	movw	r24, r4
    19c2:	b1 01       	movw	r22, r2
    19c4:	2d 96       	adiw	r28, 0x0d	; 13
    19c6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19c8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ca:	4e ad       	ldd	r20, Y+62	; 0x3e
    19cc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19ce:	2d 97       	sbiw	r28, 0x0d	; 13
    19d0:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    19d4:	9b 01       	movw	r18, r22
    19d6:	ac 01       	movw	r20, r24
    19d8:	87 01       	movw	r16, r14
    19da:	ff 24       	eor	r15, r15
    19dc:	ee 24       	eor	r14, r14
    19de:	a9 a0       	ldd	r10, Y+33	; 0x21
    19e0:	ba a0       	ldd	r11, Y+34	; 0x22
    19e2:	cb a0       	ldd	r12, Y+35	; 0x23
    19e4:	dc a0       	ldd	r13, Y+36	; 0x24
    19e6:	c6 01       	movw	r24, r12
    19e8:	aa 27       	eor	r26, r26
    19ea:	bb 27       	eor	r27, r27
    19ec:	57 01       	movw	r10, r14
    19ee:	68 01       	movw	r12, r16
    19f0:	a8 2a       	or	r10, r24
    19f2:	b9 2a       	or	r11, r25
    19f4:	ca 2a       	or	r12, r26
    19f6:	db 2a       	or	r13, r27
    19f8:	a2 16       	cp	r10, r18
    19fa:	b3 06       	cpc	r11, r19
    19fc:	c4 06       	cpc	r12, r20
    19fe:	d5 06       	cpc	r13, r21
    1a00:	00 f5       	brcc	.+64     	; 0x1a42 <__umoddi3+0x9b8>
    1a02:	08 94       	sec
    1a04:	21 08       	sbc	r2, r1
    1a06:	31 08       	sbc	r3, r1
    1a08:	41 08       	sbc	r4, r1
    1a0a:	51 08       	sbc	r5, r1
    1a0c:	e9 a4       	ldd	r14, Y+41	; 0x29
    1a0e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1a10:	0b a5       	ldd	r16, Y+43	; 0x2b
    1a12:	1c a5       	ldd	r17, Y+44	; 0x2c
    1a14:	ae 0c       	add	r10, r14
    1a16:	bf 1c       	adc	r11, r15
    1a18:	c0 1e       	adc	r12, r16
    1a1a:	d1 1e       	adc	r13, r17
    1a1c:	ae 14       	cp	r10, r14
    1a1e:	bf 04       	cpc	r11, r15
    1a20:	c0 06       	cpc	r12, r16
    1a22:	d1 06       	cpc	r13, r17
    1a24:	70 f0       	brcs	.+28     	; 0x1a42 <__umoddi3+0x9b8>
    1a26:	a2 16       	cp	r10, r18
    1a28:	b3 06       	cpc	r11, r19
    1a2a:	c4 06       	cpc	r12, r20
    1a2c:	d5 06       	cpc	r13, r21
    1a2e:	48 f4       	brcc	.+18     	; 0x1a42 <__umoddi3+0x9b8>
    1a30:	08 94       	sec
    1a32:	21 08       	sbc	r2, r1
    1a34:	31 08       	sbc	r3, r1
    1a36:	41 08       	sbc	r4, r1
    1a38:	51 08       	sbc	r5, r1
    1a3a:	ae 0c       	add	r10, r14
    1a3c:	bf 1c       	adc	r11, r15
    1a3e:	c0 1e       	adc	r12, r16
    1a40:	d1 1e       	adc	r13, r17
    1a42:	a2 1a       	sub	r10, r18
    1a44:	b3 0a       	sbc	r11, r19
    1a46:	c4 0a       	sbc	r12, r20
    1a48:	d5 0a       	sbc	r13, r21
    1a4a:	c6 01       	movw	r24, r12
    1a4c:	b5 01       	movw	r22, r10
    1a4e:	a4 01       	movw	r20, r8
    1a50:	93 01       	movw	r18, r6
    1a52:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1a56:	7b 01       	movw	r14, r22
    1a58:	8c 01       	movw	r16, r24
    1a5a:	c6 01       	movw	r24, r12
    1a5c:	b5 01       	movw	r22, r10
    1a5e:	a4 01       	movw	r20, r8
    1a60:	93 01       	movw	r18, r6
    1a62:	0e 94 83 29 	call	0x5306	; 0x5306 <__udivmodsi4>
    1a66:	c9 01       	movw	r24, r18
    1a68:	da 01       	movw	r26, r20
    1a6a:	3c 01       	movw	r6, r24
    1a6c:	4d 01       	movw	r8, r26
    1a6e:	c4 01       	movw	r24, r8
    1a70:	b3 01       	movw	r22, r6
    1a72:	2d 96       	adiw	r28, 0x0d	; 13
    1a74:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a76:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a78:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a7a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a7c:	2d 97       	sbiw	r28, 0x0d	; 13
    1a7e:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    1a82:	9b 01       	movw	r18, r22
    1a84:	ac 01       	movw	r20, r24
    1a86:	87 01       	movw	r16, r14
    1a88:	ff 24       	eor	r15, r15
    1a8a:	ee 24       	eor	r14, r14
    1a8c:	89 a1       	ldd	r24, Y+33	; 0x21
    1a8e:	9a a1       	ldd	r25, Y+34	; 0x22
    1a90:	ab a1       	ldd	r26, Y+35	; 0x23
    1a92:	bc a1       	ldd	r27, Y+36	; 0x24
    1a94:	a0 70       	andi	r26, 0x00	; 0
    1a96:	b0 70       	andi	r27, 0x00	; 0
    1a98:	57 01       	movw	r10, r14
    1a9a:	68 01       	movw	r12, r16
    1a9c:	a8 2a       	or	r10, r24
    1a9e:	b9 2a       	or	r11, r25
    1aa0:	ca 2a       	or	r12, r26
    1aa2:	db 2a       	or	r13, r27
    1aa4:	a2 16       	cp	r10, r18
    1aa6:	b3 06       	cpc	r11, r19
    1aa8:	c4 06       	cpc	r12, r20
    1aaa:	d5 06       	cpc	r13, r21
    1aac:	00 f5       	brcc	.+64     	; 0x1aee <__umoddi3+0xa64>
    1aae:	08 94       	sec
    1ab0:	61 08       	sbc	r6, r1
    1ab2:	71 08       	sbc	r7, r1
    1ab4:	81 08       	sbc	r8, r1
    1ab6:	91 08       	sbc	r9, r1
    1ab8:	69 a5       	ldd	r22, Y+41	; 0x29
    1aba:	7a a5       	ldd	r23, Y+42	; 0x2a
    1abc:	8b a5       	ldd	r24, Y+43	; 0x2b
    1abe:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ac0:	a6 0e       	add	r10, r22
    1ac2:	b7 1e       	adc	r11, r23
    1ac4:	c8 1e       	adc	r12, r24
    1ac6:	d9 1e       	adc	r13, r25
    1ac8:	a6 16       	cp	r10, r22
    1aca:	b7 06       	cpc	r11, r23
    1acc:	c8 06       	cpc	r12, r24
    1ace:	d9 06       	cpc	r13, r25
    1ad0:	70 f0       	brcs	.+28     	; 0x1aee <__umoddi3+0xa64>
    1ad2:	a2 16       	cp	r10, r18
    1ad4:	b3 06       	cpc	r11, r19
    1ad6:	c4 06       	cpc	r12, r20
    1ad8:	d5 06       	cpc	r13, r21
    1ada:	48 f4       	brcc	.+18     	; 0x1aee <__umoddi3+0xa64>
    1adc:	08 94       	sec
    1ade:	61 08       	sbc	r6, r1
    1ae0:	71 08       	sbc	r7, r1
    1ae2:	81 08       	sbc	r8, r1
    1ae4:	91 08       	sbc	r9, r1
    1ae6:	a6 0e       	add	r10, r22
    1ae8:	b7 1e       	adc	r11, r23
    1aea:	c8 1e       	adc	r12, r24
    1aec:	d9 1e       	adc	r13, r25
    1aee:	d6 01       	movw	r26, r12
    1af0:	c5 01       	movw	r24, r10
    1af2:	82 1b       	sub	r24, r18
    1af4:	93 0b       	sbc	r25, r19
    1af6:	a4 0b       	sbc	r26, r20
    1af8:	b5 0b       	sbc	r27, r21
    1afa:	89 8f       	std	Y+25, r24	; 0x19
    1afc:	9a 8f       	std	Y+26, r25	; 0x1a
    1afe:	ab 8f       	std	Y+27, r26	; 0x1b
    1b00:	bc 8f       	std	Y+28, r27	; 0x1c
    1b02:	d1 01       	movw	r26, r2
    1b04:	99 27       	eor	r25, r25
    1b06:	88 27       	eor	r24, r24
    1b08:	84 01       	movw	r16, r8
    1b0a:	73 01       	movw	r14, r6
    1b0c:	e8 2a       	or	r14, r24
    1b0e:	f9 2a       	or	r15, r25
    1b10:	0a 2b       	or	r16, r26
    1b12:	1b 2b       	or	r17, r27
    1b14:	4f ef       	ldi	r20, 0xFF	; 255
    1b16:	a4 2e       	mov	r10, r20
    1b18:	4f ef       	ldi	r20, 0xFF	; 255
    1b1a:	b4 2e       	mov	r11, r20
    1b1c:	c1 2c       	mov	r12, r1
    1b1e:	d1 2c       	mov	r13, r1
    1b20:	ae 20       	and	r10, r14
    1b22:	bf 20       	and	r11, r15
    1b24:	c0 22       	and	r12, r16
    1b26:	d1 22       	and	r13, r17
    1b28:	78 01       	movw	r14, r16
    1b2a:	00 27       	eor	r16, r16
    1b2c:	11 27       	eor	r17, r17
    1b2e:	6d a0       	ldd	r6, Y+37	; 0x25
    1b30:	7e a0       	ldd	r7, Y+38	; 0x26
    1b32:	8f a0       	ldd	r8, Y+39	; 0x27
    1b34:	98 a4       	ldd	r9, Y+40	; 0x28
    1b36:	4f ef       	ldi	r20, 0xFF	; 255
    1b38:	5f ef       	ldi	r21, 0xFF	; 255
    1b3a:	60 e0       	ldi	r22, 0x00	; 0
    1b3c:	70 e0       	ldi	r23, 0x00	; 0
    1b3e:	64 22       	and	r6, r20
    1b40:	75 22       	and	r7, r21
    1b42:	86 22       	and	r8, r22
    1b44:	97 22       	and	r9, r23
    1b46:	8d a1       	ldd	r24, Y+37	; 0x25
    1b48:	9e a1       	ldd	r25, Y+38	; 0x26
    1b4a:	af a1       	ldd	r26, Y+39	; 0x27
    1b4c:	b8 a5       	ldd	r27, Y+40	; 0x28
    1b4e:	bd 01       	movw	r22, r26
    1b50:	88 27       	eor	r24, r24
    1b52:	99 27       	eor	r25, r25
    1b54:	65 96       	adiw	r28, 0x15	; 21
    1b56:	6c af       	std	Y+60, r22	; 0x3c
    1b58:	7d af       	std	Y+61, r23	; 0x3d
    1b5a:	8e af       	std	Y+62, r24	; 0x3e
    1b5c:	9f af       	std	Y+63, r25	; 0x3f
    1b5e:	65 97       	sbiw	r28, 0x15	; 21
    1b60:	c6 01       	movw	r24, r12
    1b62:	b5 01       	movw	r22, r10
    1b64:	a4 01       	movw	r20, r8
    1b66:	93 01       	movw	r18, r6
    1b68:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    1b6c:	61 96       	adiw	r28, 0x11	; 17
    1b6e:	6c af       	std	Y+60, r22	; 0x3c
    1b70:	7d af       	std	Y+61, r23	; 0x3d
    1b72:	8e af       	std	Y+62, r24	; 0x3e
    1b74:	9f af       	std	Y+63, r25	; 0x3f
    1b76:	61 97       	sbiw	r28, 0x11	; 17
    1b78:	c6 01       	movw	r24, r12
    1b7a:	b5 01       	movw	r22, r10
    1b7c:	65 96       	adiw	r28, 0x15	; 21
    1b7e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b80:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b82:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b84:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b86:	65 97       	sbiw	r28, 0x15	; 21
    1b88:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    1b8c:	1b 01       	movw	r2, r22
    1b8e:	2c 01       	movw	r4, r24
    1b90:	c8 01       	movw	r24, r16
    1b92:	b7 01       	movw	r22, r14
    1b94:	a4 01       	movw	r20, r8
    1b96:	93 01       	movw	r18, r6
    1b98:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    1b9c:	5b 01       	movw	r10, r22
    1b9e:	6c 01       	movw	r12, r24
    1ba0:	c8 01       	movw	r24, r16
    1ba2:	b7 01       	movw	r22, r14
    1ba4:	65 96       	adiw	r28, 0x15	; 21
    1ba6:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ba8:	3d ad       	ldd	r19, Y+61	; 0x3d
    1baa:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bac:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bae:	65 97       	sbiw	r28, 0x15	; 21
    1bb0:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    1bb4:	7b 01       	movw	r14, r22
    1bb6:	8c 01       	movw	r16, r24
    1bb8:	a6 01       	movw	r20, r12
    1bba:	95 01       	movw	r18, r10
    1bbc:	22 0d       	add	r18, r2
    1bbe:	33 1d       	adc	r19, r3
    1bc0:	44 1d       	adc	r20, r4
    1bc2:	55 1d       	adc	r21, r5
    1bc4:	61 96       	adiw	r28, 0x11	; 17
    1bc6:	6c ac       	ldd	r6, Y+60	; 0x3c
    1bc8:	7d ac       	ldd	r7, Y+61	; 0x3d
    1bca:	8e ac       	ldd	r8, Y+62	; 0x3e
    1bcc:	9f ac       	ldd	r9, Y+63	; 0x3f
    1bce:	61 97       	sbiw	r28, 0x11	; 17
    1bd0:	c4 01       	movw	r24, r8
    1bd2:	aa 27       	eor	r26, r26
    1bd4:	bb 27       	eor	r27, r27
    1bd6:	28 0f       	add	r18, r24
    1bd8:	39 1f       	adc	r19, r25
    1bda:	4a 1f       	adc	r20, r26
    1bdc:	5b 1f       	adc	r21, r27
    1bde:	2a 15       	cp	r18, r10
    1be0:	3b 05       	cpc	r19, r11
    1be2:	4c 05       	cpc	r20, r12
    1be4:	5d 05       	cpc	r21, r13
    1be6:	48 f4       	brcc	.+18     	; 0x1bfa <__umoddi3+0xb70>
    1be8:	81 2c       	mov	r8, r1
    1bea:	91 2c       	mov	r9, r1
    1bec:	e1 e0       	ldi	r30, 0x01	; 1
    1bee:	ae 2e       	mov	r10, r30
    1bf0:	b1 2c       	mov	r11, r1
    1bf2:	e8 0c       	add	r14, r8
    1bf4:	f9 1c       	adc	r15, r9
    1bf6:	0a 1d       	adc	r16, r10
    1bf8:	1b 1d       	adc	r17, r11
    1bfa:	ca 01       	movw	r24, r20
    1bfc:	aa 27       	eor	r26, r26
    1bfe:	bb 27       	eor	r27, r27
    1c00:	57 01       	movw	r10, r14
    1c02:	68 01       	movw	r12, r16
    1c04:	a8 0e       	add	r10, r24
    1c06:	b9 1e       	adc	r11, r25
    1c08:	ca 1e       	adc	r12, r26
    1c0a:	db 1e       	adc	r13, r27
    1c0c:	a9 01       	movw	r20, r18
    1c0e:	33 27       	eor	r19, r19
    1c10:	22 27       	eor	r18, r18
    1c12:	61 96       	adiw	r28, 0x11	; 17
    1c14:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c16:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c18:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c1a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c1c:	61 97       	sbiw	r28, 0x11	; 17
    1c1e:	a0 70       	andi	r26, 0x00	; 0
    1c20:	b0 70       	andi	r27, 0x00	; 0
    1c22:	28 0f       	add	r18, r24
    1c24:	39 1f       	adc	r19, r25
    1c26:	4a 1f       	adc	r20, r26
    1c28:	5b 1f       	adc	r21, r27
    1c2a:	e9 8c       	ldd	r14, Y+25	; 0x19
    1c2c:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1c2e:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1c30:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1c32:	ea 14       	cp	r14, r10
    1c34:	fb 04       	cpc	r15, r11
    1c36:	0c 05       	cpc	r16, r12
    1c38:	1d 05       	cpc	r17, r13
    1c3a:	70 f0       	brcs	.+28     	; 0x1c58 <__umoddi3+0xbce>
    1c3c:	ae 14       	cp	r10, r14
    1c3e:	bf 04       	cpc	r11, r15
    1c40:	c0 06       	cpc	r12, r16
    1c42:	d1 06       	cpc	r13, r17
    1c44:	69 f5       	brne	.+90     	; 0x1ca0 <__umoddi3+0xc16>
    1c46:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c48:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c4a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c4c:	98 a1       	ldd	r25, Y+32	; 0x20
    1c4e:	62 17       	cp	r22, r18
    1c50:	73 07       	cpc	r23, r19
    1c52:	84 07       	cpc	r24, r20
    1c54:	95 07       	cpc	r25, r21
    1c56:	20 f5       	brcc	.+72     	; 0x1ca0 <__umoddi3+0xc16>
    1c58:	da 01       	movw	r26, r20
    1c5a:	c9 01       	movw	r24, r18
    1c5c:	6d a0       	ldd	r6, Y+37	; 0x25
    1c5e:	7e a0       	ldd	r7, Y+38	; 0x26
    1c60:	8f a0       	ldd	r8, Y+39	; 0x27
    1c62:	98 a4       	ldd	r9, Y+40	; 0x28
    1c64:	86 19       	sub	r24, r6
    1c66:	97 09       	sbc	r25, r7
    1c68:	a8 09       	sbc	r26, r8
    1c6a:	b9 09       	sbc	r27, r9
    1c6c:	e9 a4       	ldd	r14, Y+41	; 0x29
    1c6e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1c70:	0b a5       	ldd	r16, Y+43	; 0x2b
    1c72:	1c a5       	ldd	r17, Y+44	; 0x2c
    1c74:	ae 18       	sub	r10, r14
    1c76:	bf 08       	sbc	r11, r15
    1c78:	c0 0a       	sbc	r12, r16
    1c7a:	d1 0a       	sbc	r13, r17
    1c7c:	ee 24       	eor	r14, r14
    1c7e:	ff 24       	eor	r15, r15
    1c80:	87 01       	movw	r16, r14
    1c82:	28 17       	cp	r18, r24
    1c84:	39 07       	cpc	r19, r25
    1c86:	4a 07       	cpc	r20, r26
    1c88:	5b 07       	cpc	r21, r27
    1c8a:	28 f4       	brcc	.+10     	; 0x1c96 <__umoddi3+0xc0c>
    1c8c:	21 e0       	ldi	r18, 0x01	; 1
    1c8e:	e2 2e       	mov	r14, r18
    1c90:	f1 2c       	mov	r15, r1
    1c92:	01 2d       	mov	r16, r1
    1c94:	11 2d       	mov	r17, r1
    1c96:	ae 18       	sub	r10, r14
    1c98:	bf 08       	sbc	r11, r15
    1c9a:	c0 0a       	sbc	r12, r16
    1c9c:	d1 0a       	sbc	r13, r17
    1c9e:	02 c0       	rjmp	.+4      	; 0x1ca4 <__umoddi3+0xc1a>
    1ca0:	da 01       	movw	r26, r20
    1ca2:	c9 01       	movw	r24, r18
    1ca4:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1ca6:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1ca8:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1caa:	98 a0       	ldd	r9, Y+32	; 0x20
    1cac:	68 1a       	sub	r6, r24
    1cae:	79 0a       	sbc	r7, r25
    1cb0:	8a 0a       	sbc	r8, r26
    1cb2:	9b 0a       	sbc	r9, r27
    1cb4:	49 8d       	ldd	r20, Y+25	; 0x19
    1cb6:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1cb8:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1cba:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1cbc:	4a 19       	sub	r20, r10
    1cbe:	5b 09       	sbc	r21, r11
    1cc0:	6c 09       	sbc	r22, r12
    1cc2:	7d 09       	sbc	r23, r13
    1cc4:	5a 01       	movw	r10, r20
    1cc6:	6b 01       	movw	r12, r22
    1cc8:	22 24       	eor	r2, r2
    1cca:	33 24       	eor	r3, r3
    1ccc:	21 01       	movw	r4, r2
    1cce:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1cd0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1cd2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1cd4:	98 a1       	ldd	r25, Y+32	; 0x20
    1cd6:	66 15       	cp	r22, r6
    1cd8:	77 05       	cpc	r23, r7
    1cda:	88 05       	cpc	r24, r8
    1cdc:	99 05       	cpc	r25, r9
    1cde:	28 f4       	brcc	.+10     	; 0x1cea <__umoddi3+0xc60>
    1ce0:	81 e0       	ldi	r24, 0x01	; 1
    1ce2:	28 2e       	mov	r2, r24
    1ce4:	31 2c       	mov	r3, r1
    1ce6:	41 2c       	mov	r4, r1
    1ce8:	51 2c       	mov	r5, r1
    1cea:	86 01       	movw	r16, r12
    1cec:	75 01       	movw	r14, r10
    1cee:	e2 18       	sub	r14, r2
    1cf0:	f3 08       	sbc	r15, r3
    1cf2:	04 09       	sbc	r16, r4
    1cf4:	15 09       	sbc	r17, r5
    1cf6:	a8 01       	movw	r20, r16
    1cf8:	97 01       	movw	r18, r14
    1cfa:	66 96       	adiw	r28, 0x16	; 22
    1cfc:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cfe:	66 97       	sbiw	r28, 0x16	; 22
    1d00:	04 c0       	rjmp	.+8      	; 0x1d0a <__umoddi3+0xc80>
    1d02:	22 0f       	add	r18, r18
    1d04:	33 1f       	adc	r19, r19
    1d06:	44 1f       	adc	r20, r20
    1d08:	55 1f       	adc	r21, r21
    1d0a:	0a 94       	dec	r0
    1d0c:	d2 f7       	brpl	.-12     	; 0x1d02 <__umoddi3+0xc78>
    1d0e:	d4 01       	movw	r26, r8
    1d10:	c3 01       	movw	r24, r6
    1d12:	67 96       	adiw	r28, 0x17	; 23
    1d14:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d16:	67 97       	sbiw	r28, 0x17	; 23
    1d18:	04 c0       	rjmp	.+8      	; 0x1d22 <__umoddi3+0xc98>
    1d1a:	b6 95       	lsr	r27
    1d1c:	a7 95       	ror	r26
    1d1e:	97 95       	ror	r25
    1d20:	87 95       	ror	r24
    1d22:	0a 94       	dec	r0
    1d24:	d2 f7       	brpl	.-12     	; 0x1d1a <__umoddi3+0xc90>
    1d26:	28 2b       	or	r18, r24
    1d28:	39 2b       	or	r19, r25
    1d2a:	4a 2b       	or	r20, r26
    1d2c:	5b 2b       	or	r21, r27
    1d2e:	29 8b       	std	Y+17, r18	; 0x11
    1d30:	3a 8b       	std	Y+18, r19	; 0x12
    1d32:	4b 8b       	std	Y+19, r20	; 0x13
    1d34:	5c 8b       	std	Y+20, r21	; 0x14
    1d36:	67 96       	adiw	r28, 0x17	; 23
    1d38:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d3a:	67 97       	sbiw	r28, 0x17	; 23
    1d3c:	04 c0       	rjmp	.+8      	; 0x1d46 <__umoddi3+0xcbc>
    1d3e:	16 95       	lsr	r17
    1d40:	07 95       	ror	r16
    1d42:	f7 94       	ror	r15
    1d44:	e7 94       	ror	r14
    1d46:	0a 94       	dec	r0
    1d48:	d2 f7       	brpl	.-12     	; 0x1d3e <__umoddi3+0xcb4>
    1d4a:	ed 8a       	std	Y+21, r14	; 0x15
    1d4c:	fe 8a       	std	Y+22, r15	; 0x16
    1d4e:	0f 8b       	std	Y+23, r16	; 0x17
    1d50:	18 8f       	std	Y+24, r17	; 0x18
    1d52:	3a 89       	ldd	r19, Y+18	; 0x12
    1d54:	4b 89       	ldd	r20, Y+19	; 0x13
    1d56:	5c 89       	ldd	r21, Y+20	; 0x14
    1d58:	6e 2d       	mov	r22, r14
    1d5a:	7e 89       	ldd	r23, Y+22	; 0x16
    1d5c:	8f 89       	ldd	r24, Y+23	; 0x17
    1d5e:	98 8d       	ldd	r25, Y+24	; 0x18
    1d60:	c5 5a       	subi	r28, 0xA5	; 165
    1d62:	df 4f       	sbci	r29, 0xFF	; 255
    1d64:	e2 e1       	ldi	r30, 0x12	; 18
    1d66:	0c 94 c1 29 	jmp	0x5382	; 0x5382 <__epilogue_restores__>

00001d6a <_fpadd_parts>:
    1d6a:	a0 e0       	ldi	r26, 0x00	; 0
    1d6c:	b0 e0       	ldi	r27, 0x00	; 0
    1d6e:	eb eb       	ldi	r30, 0xBB	; 187
    1d70:	fe e0       	ldi	r31, 0x0E	; 14
    1d72:	0c 94 a5 29 	jmp	0x534a	; 0x534a <__prologue_saves__>
    1d76:	dc 01       	movw	r26, r24
    1d78:	2b 01       	movw	r4, r22
    1d7a:	fa 01       	movw	r30, r20
    1d7c:	9c 91       	ld	r25, X
    1d7e:	92 30       	cpi	r25, 0x02	; 2
    1d80:	08 f4       	brcc	.+2      	; 0x1d84 <_fpadd_parts+0x1a>
    1d82:	39 c1       	rjmp	.+626    	; 0x1ff6 <_fpadd_parts+0x28c>
    1d84:	eb 01       	movw	r28, r22
    1d86:	88 81       	ld	r24, Y
    1d88:	82 30       	cpi	r24, 0x02	; 2
    1d8a:	08 f4       	brcc	.+2      	; 0x1d8e <_fpadd_parts+0x24>
    1d8c:	33 c1       	rjmp	.+614    	; 0x1ff4 <_fpadd_parts+0x28a>
    1d8e:	94 30       	cpi	r25, 0x04	; 4
    1d90:	69 f4       	brne	.+26     	; 0x1dac <_fpadd_parts+0x42>
    1d92:	84 30       	cpi	r24, 0x04	; 4
    1d94:	09 f0       	breq	.+2      	; 0x1d98 <_fpadd_parts+0x2e>
    1d96:	2f c1       	rjmp	.+606    	; 0x1ff6 <_fpadd_parts+0x28c>
    1d98:	11 96       	adiw	r26, 0x01	; 1
    1d9a:	9c 91       	ld	r25, X
    1d9c:	11 97       	sbiw	r26, 0x01	; 1
    1d9e:	89 81       	ldd	r24, Y+1	; 0x01
    1da0:	98 17       	cp	r25, r24
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <_fpadd_parts+0x3c>
    1da4:	28 c1       	rjmp	.+592    	; 0x1ff6 <_fpadd_parts+0x28c>
    1da6:	a3 e6       	ldi	r26, 0x63	; 99
    1da8:	b0 e0       	ldi	r27, 0x00	; 0
    1daa:	25 c1       	rjmp	.+586    	; 0x1ff6 <_fpadd_parts+0x28c>
    1dac:	84 30       	cpi	r24, 0x04	; 4
    1dae:	09 f4       	brne	.+2      	; 0x1db2 <_fpadd_parts+0x48>
    1db0:	21 c1       	rjmp	.+578    	; 0x1ff4 <_fpadd_parts+0x28a>
    1db2:	82 30       	cpi	r24, 0x02	; 2
    1db4:	a9 f4       	brne	.+42     	; 0x1de0 <_fpadd_parts+0x76>
    1db6:	92 30       	cpi	r25, 0x02	; 2
    1db8:	09 f0       	breq	.+2      	; 0x1dbc <_fpadd_parts+0x52>
    1dba:	1d c1       	rjmp	.+570    	; 0x1ff6 <_fpadd_parts+0x28c>
    1dbc:	9a 01       	movw	r18, r20
    1dbe:	ad 01       	movw	r20, r26
    1dc0:	88 e0       	ldi	r24, 0x08	; 8
    1dc2:	ea 01       	movw	r28, r20
    1dc4:	09 90       	ld	r0, Y+
    1dc6:	ae 01       	movw	r20, r28
    1dc8:	e9 01       	movw	r28, r18
    1dca:	09 92       	st	Y+, r0
    1dcc:	9e 01       	movw	r18, r28
    1dce:	81 50       	subi	r24, 0x01	; 1
    1dd0:	c1 f7       	brne	.-16     	; 0x1dc2 <_fpadd_parts+0x58>
    1dd2:	e2 01       	movw	r28, r4
    1dd4:	89 81       	ldd	r24, Y+1	; 0x01
    1dd6:	11 96       	adiw	r26, 0x01	; 1
    1dd8:	9c 91       	ld	r25, X
    1dda:	89 23       	and	r24, r25
    1ddc:	81 83       	std	Z+1, r24	; 0x01
    1dde:	08 c1       	rjmp	.+528    	; 0x1ff0 <_fpadd_parts+0x286>
    1de0:	92 30       	cpi	r25, 0x02	; 2
    1de2:	09 f4       	brne	.+2      	; 0x1de6 <_fpadd_parts+0x7c>
    1de4:	07 c1       	rjmp	.+526    	; 0x1ff4 <_fpadd_parts+0x28a>
    1de6:	12 96       	adiw	r26, 0x02	; 2
    1de8:	2d 90       	ld	r2, X+
    1dea:	3c 90       	ld	r3, X
    1dec:	13 97       	sbiw	r26, 0x03	; 3
    1dee:	eb 01       	movw	r28, r22
    1df0:	8a 81       	ldd	r24, Y+2	; 0x02
    1df2:	9b 81       	ldd	r25, Y+3	; 0x03
    1df4:	14 96       	adiw	r26, 0x04	; 4
    1df6:	ad 90       	ld	r10, X+
    1df8:	bd 90       	ld	r11, X+
    1dfa:	cd 90       	ld	r12, X+
    1dfc:	dc 90       	ld	r13, X
    1dfe:	17 97       	sbiw	r26, 0x07	; 7
    1e00:	ec 80       	ldd	r14, Y+4	; 0x04
    1e02:	fd 80       	ldd	r15, Y+5	; 0x05
    1e04:	0e 81       	ldd	r16, Y+6	; 0x06
    1e06:	1f 81       	ldd	r17, Y+7	; 0x07
    1e08:	91 01       	movw	r18, r2
    1e0a:	28 1b       	sub	r18, r24
    1e0c:	39 0b       	sbc	r19, r25
    1e0e:	b9 01       	movw	r22, r18
    1e10:	37 ff       	sbrs	r19, 7
    1e12:	04 c0       	rjmp	.+8      	; 0x1e1c <_fpadd_parts+0xb2>
    1e14:	66 27       	eor	r22, r22
    1e16:	77 27       	eor	r23, r23
    1e18:	62 1b       	sub	r22, r18
    1e1a:	73 0b       	sbc	r23, r19
    1e1c:	60 32       	cpi	r22, 0x20	; 32
    1e1e:	71 05       	cpc	r23, r1
    1e20:	0c f0       	brlt	.+2      	; 0x1e24 <_fpadd_parts+0xba>
    1e22:	61 c0       	rjmp	.+194    	; 0x1ee6 <_fpadd_parts+0x17c>
    1e24:	12 16       	cp	r1, r18
    1e26:	13 06       	cpc	r1, r19
    1e28:	6c f5       	brge	.+90     	; 0x1e84 <_fpadd_parts+0x11a>
    1e2a:	37 01       	movw	r6, r14
    1e2c:	48 01       	movw	r8, r16
    1e2e:	06 2e       	mov	r0, r22
    1e30:	04 c0       	rjmp	.+8      	; 0x1e3a <_fpadd_parts+0xd0>
    1e32:	96 94       	lsr	r9
    1e34:	87 94       	ror	r8
    1e36:	77 94       	ror	r7
    1e38:	67 94       	ror	r6
    1e3a:	0a 94       	dec	r0
    1e3c:	d2 f7       	brpl	.-12     	; 0x1e32 <_fpadd_parts+0xc8>
    1e3e:	21 e0       	ldi	r18, 0x01	; 1
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	40 e0       	ldi	r20, 0x00	; 0
    1e44:	50 e0       	ldi	r21, 0x00	; 0
    1e46:	04 c0       	rjmp	.+8      	; 0x1e50 <_fpadd_parts+0xe6>
    1e48:	22 0f       	add	r18, r18
    1e4a:	33 1f       	adc	r19, r19
    1e4c:	44 1f       	adc	r20, r20
    1e4e:	55 1f       	adc	r21, r21
    1e50:	6a 95       	dec	r22
    1e52:	d2 f7       	brpl	.-12     	; 0x1e48 <_fpadd_parts+0xde>
    1e54:	21 50       	subi	r18, 0x01	; 1
    1e56:	30 40       	sbci	r19, 0x00	; 0
    1e58:	40 40       	sbci	r20, 0x00	; 0
    1e5a:	50 40       	sbci	r21, 0x00	; 0
    1e5c:	2e 21       	and	r18, r14
    1e5e:	3f 21       	and	r19, r15
    1e60:	40 23       	and	r20, r16
    1e62:	51 23       	and	r21, r17
    1e64:	21 15       	cp	r18, r1
    1e66:	31 05       	cpc	r19, r1
    1e68:	41 05       	cpc	r20, r1
    1e6a:	51 05       	cpc	r21, r1
    1e6c:	21 f0       	breq	.+8      	; 0x1e76 <_fpadd_parts+0x10c>
    1e6e:	21 e0       	ldi	r18, 0x01	; 1
    1e70:	30 e0       	ldi	r19, 0x00	; 0
    1e72:	40 e0       	ldi	r20, 0x00	; 0
    1e74:	50 e0       	ldi	r21, 0x00	; 0
    1e76:	79 01       	movw	r14, r18
    1e78:	8a 01       	movw	r16, r20
    1e7a:	e6 28       	or	r14, r6
    1e7c:	f7 28       	or	r15, r7
    1e7e:	08 29       	or	r16, r8
    1e80:	19 29       	or	r17, r9
    1e82:	3c c0       	rjmp	.+120    	; 0x1efc <_fpadd_parts+0x192>
    1e84:	23 2b       	or	r18, r19
    1e86:	d1 f1       	breq	.+116    	; 0x1efc <_fpadd_parts+0x192>
    1e88:	26 0e       	add	r2, r22
    1e8a:	37 1e       	adc	r3, r23
    1e8c:	35 01       	movw	r6, r10
    1e8e:	46 01       	movw	r8, r12
    1e90:	06 2e       	mov	r0, r22
    1e92:	04 c0       	rjmp	.+8      	; 0x1e9c <_fpadd_parts+0x132>
    1e94:	96 94       	lsr	r9
    1e96:	87 94       	ror	r8
    1e98:	77 94       	ror	r7
    1e9a:	67 94       	ror	r6
    1e9c:	0a 94       	dec	r0
    1e9e:	d2 f7       	brpl	.-12     	; 0x1e94 <_fpadd_parts+0x12a>
    1ea0:	21 e0       	ldi	r18, 0x01	; 1
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	40 e0       	ldi	r20, 0x00	; 0
    1ea6:	50 e0       	ldi	r21, 0x00	; 0
    1ea8:	04 c0       	rjmp	.+8      	; 0x1eb2 <_fpadd_parts+0x148>
    1eaa:	22 0f       	add	r18, r18
    1eac:	33 1f       	adc	r19, r19
    1eae:	44 1f       	adc	r20, r20
    1eb0:	55 1f       	adc	r21, r21
    1eb2:	6a 95       	dec	r22
    1eb4:	d2 f7       	brpl	.-12     	; 0x1eaa <_fpadd_parts+0x140>
    1eb6:	21 50       	subi	r18, 0x01	; 1
    1eb8:	30 40       	sbci	r19, 0x00	; 0
    1eba:	40 40       	sbci	r20, 0x00	; 0
    1ebc:	50 40       	sbci	r21, 0x00	; 0
    1ebe:	2a 21       	and	r18, r10
    1ec0:	3b 21       	and	r19, r11
    1ec2:	4c 21       	and	r20, r12
    1ec4:	5d 21       	and	r21, r13
    1ec6:	21 15       	cp	r18, r1
    1ec8:	31 05       	cpc	r19, r1
    1eca:	41 05       	cpc	r20, r1
    1ecc:	51 05       	cpc	r21, r1
    1ece:	21 f0       	breq	.+8      	; 0x1ed8 <_fpadd_parts+0x16e>
    1ed0:	21 e0       	ldi	r18, 0x01	; 1
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	40 e0       	ldi	r20, 0x00	; 0
    1ed6:	50 e0       	ldi	r21, 0x00	; 0
    1ed8:	59 01       	movw	r10, r18
    1eda:	6a 01       	movw	r12, r20
    1edc:	a6 28       	or	r10, r6
    1ede:	b7 28       	or	r11, r7
    1ee0:	c8 28       	or	r12, r8
    1ee2:	d9 28       	or	r13, r9
    1ee4:	0b c0       	rjmp	.+22     	; 0x1efc <_fpadd_parts+0x192>
    1ee6:	82 15       	cp	r24, r2
    1ee8:	93 05       	cpc	r25, r3
    1eea:	2c f0       	brlt	.+10     	; 0x1ef6 <_fpadd_parts+0x18c>
    1eec:	1c 01       	movw	r2, r24
    1eee:	aa 24       	eor	r10, r10
    1ef0:	bb 24       	eor	r11, r11
    1ef2:	65 01       	movw	r12, r10
    1ef4:	03 c0       	rjmp	.+6      	; 0x1efc <_fpadd_parts+0x192>
    1ef6:	ee 24       	eor	r14, r14
    1ef8:	ff 24       	eor	r15, r15
    1efa:	87 01       	movw	r16, r14
    1efc:	11 96       	adiw	r26, 0x01	; 1
    1efe:	9c 91       	ld	r25, X
    1f00:	d2 01       	movw	r26, r4
    1f02:	11 96       	adiw	r26, 0x01	; 1
    1f04:	8c 91       	ld	r24, X
    1f06:	98 17       	cp	r25, r24
    1f08:	09 f4       	brne	.+2      	; 0x1f0c <_fpadd_parts+0x1a2>
    1f0a:	45 c0       	rjmp	.+138    	; 0x1f96 <_fpadd_parts+0x22c>
    1f0c:	99 23       	and	r25, r25
    1f0e:	39 f0       	breq	.+14     	; 0x1f1e <_fpadd_parts+0x1b4>
    1f10:	a8 01       	movw	r20, r16
    1f12:	97 01       	movw	r18, r14
    1f14:	2a 19       	sub	r18, r10
    1f16:	3b 09       	sbc	r19, r11
    1f18:	4c 09       	sbc	r20, r12
    1f1a:	5d 09       	sbc	r21, r13
    1f1c:	06 c0       	rjmp	.+12     	; 0x1f2a <_fpadd_parts+0x1c0>
    1f1e:	a6 01       	movw	r20, r12
    1f20:	95 01       	movw	r18, r10
    1f22:	2e 19       	sub	r18, r14
    1f24:	3f 09       	sbc	r19, r15
    1f26:	40 0b       	sbc	r20, r16
    1f28:	51 0b       	sbc	r21, r17
    1f2a:	57 fd       	sbrc	r21, 7
    1f2c:	08 c0       	rjmp	.+16     	; 0x1f3e <_fpadd_parts+0x1d4>
    1f2e:	11 82       	std	Z+1, r1	; 0x01
    1f30:	33 82       	std	Z+3, r3	; 0x03
    1f32:	22 82       	std	Z+2, r2	; 0x02
    1f34:	24 83       	std	Z+4, r18	; 0x04
    1f36:	35 83       	std	Z+5, r19	; 0x05
    1f38:	46 83       	std	Z+6, r20	; 0x06
    1f3a:	57 83       	std	Z+7, r21	; 0x07
    1f3c:	1d c0       	rjmp	.+58     	; 0x1f78 <_fpadd_parts+0x20e>
    1f3e:	81 e0       	ldi	r24, 0x01	; 1
    1f40:	81 83       	std	Z+1, r24	; 0x01
    1f42:	33 82       	std	Z+3, r3	; 0x03
    1f44:	22 82       	std	Z+2, r2	; 0x02
    1f46:	88 27       	eor	r24, r24
    1f48:	99 27       	eor	r25, r25
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	82 1b       	sub	r24, r18
    1f4e:	93 0b       	sbc	r25, r19
    1f50:	a4 0b       	sbc	r26, r20
    1f52:	b5 0b       	sbc	r27, r21
    1f54:	84 83       	std	Z+4, r24	; 0x04
    1f56:	95 83       	std	Z+5, r25	; 0x05
    1f58:	a6 83       	std	Z+6, r26	; 0x06
    1f5a:	b7 83       	std	Z+7, r27	; 0x07
    1f5c:	0d c0       	rjmp	.+26     	; 0x1f78 <_fpadd_parts+0x20e>
    1f5e:	22 0f       	add	r18, r18
    1f60:	33 1f       	adc	r19, r19
    1f62:	44 1f       	adc	r20, r20
    1f64:	55 1f       	adc	r21, r21
    1f66:	24 83       	std	Z+4, r18	; 0x04
    1f68:	35 83       	std	Z+5, r19	; 0x05
    1f6a:	46 83       	std	Z+6, r20	; 0x06
    1f6c:	57 83       	std	Z+7, r21	; 0x07
    1f6e:	82 81       	ldd	r24, Z+2	; 0x02
    1f70:	93 81       	ldd	r25, Z+3	; 0x03
    1f72:	01 97       	sbiw	r24, 0x01	; 1
    1f74:	93 83       	std	Z+3, r25	; 0x03
    1f76:	82 83       	std	Z+2, r24	; 0x02
    1f78:	24 81       	ldd	r18, Z+4	; 0x04
    1f7a:	35 81       	ldd	r19, Z+5	; 0x05
    1f7c:	46 81       	ldd	r20, Z+6	; 0x06
    1f7e:	57 81       	ldd	r21, Z+7	; 0x07
    1f80:	da 01       	movw	r26, r20
    1f82:	c9 01       	movw	r24, r18
    1f84:	01 97       	sbiw	r24, 0x01	; 1
    1f86:	a1 09       	sbc	r26, r1
    1f88:	b1 09       	sbc	r27, r1
    1f8a:	8f 5f       	subi	r24, 0xFF	; 255
    1f8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8e:	af 4f       	sbci	r26, 0xFF	; 255
    1f90:	bf 43       	sbci	r27, 0x3F	; 63
    1f92:	28 f3       	brcs	.-54     	; 0x1f5e <_fpadd_parts+0x1f4>
    1f94:	0b c0       	rjmp	.+22     	; 0x1fac <_fpadd_parts+0x242>
    1f96:	91 83       	std	Z+1, r25	; 0x01
    1f98:	33 82       	std	Z+3, r3	; 0x03
    1f9a:	22 82       	std	Z+2, r2	; 0x02
    1f9c:	ea 0c       	add	r14, r10
    1f9e:	fb 1c       	adc	r15, r11
    1fa0:	0c 1d       	adc	r16, r12
    1fa2:	1d 1d       	adc	r17, r13
    1fa4:	e4 82       	std	Z+4, r14	; 0x04
    1fa6:	f5 82       	std	Z+5, r15	; 0x05
    1fa8:	06 83       	std	Z+6, r16	; 0x06
    1faa:	17 83       	std	Z+7, r17	; 0x07
    1fac:	83 e0       	ldi	r24, 0x03	; 3
    1fae:	80 83       	st	Z, r24
    1fb0:	24 81       	ldd	r18, Z+4	; 0x04
    1fb2:	35 81       	ldd	r19, Z+5	; 0x05
    1fb4:	46 81       	ldd	r20, Z+6	; 0x06
    1fb6:	57 81       	ldd	r21, Z+7	; 0x07
    1fb8:	57 ff       	sbrs	r21, 7
    1fba:	1a c0       	rjmp	.+52     	; 0x1ff0 <_fpadd_parts+0x286>
    1fbc:	c9 01       	movw	r24, r18
    1fbe:	aa 27       	eor	r26, r26
    1fc0:	97 fd       	sbrc	r25, 7
    1fc2:	a0 95       	com	r26
    1fc4:	ba 2f       	mov	r27, r26
    1fc6:	81 70       	andi	r24, 0x01	; 1
    1fc8:	90 70       	andi	r25, 0x00	; 0
    1fca:	a0 70       	andi	r26, 0x00	; 0
    1fcc:	b0 70       	andi	r27, 0x00	; 0
    1fce:	56 95       	lsr	r21
    1fd0:	47 95       	ror	r20
    1fd2:	37 95       	ror	r19
    1fd4:	27 95       	ror	r18
    1fd6:	82 2b       	or	r24, r18
    1fd8:	93 2b       	or	r25, r19
    1fda:	a4 2b       	or	r26, r20
    1fdc:	b5 2b       	or	r27, r21
    1fde:	84 83       	std	Z+4, r24	; 0x04
    1fe0:	95 83       	std	Z+5, r25	; 0x05
    1fe2:	a6 83       	std	Z+6, r26	; 0x06
    1fe4:	b7 83       	std	Z+7, r27	; 0x07
    1fe6:	82 81       	ldd	r24, Z+2	; 0x02
    1fe8:	93 81       	ldd	r25, Z+3	; 0x03
    1fea:	01 96       	adiw	r24, 0x01	; 1
    1fec:	93 83       	std	Z+3, r25	; 0x03
    1fee:	82 83       	std	Z+2, r24	; 0x02
    1ff0:	df 01       	movw	r26, r30
    1ff2:	01 c0       	rjmp	.+2      	; 0x1ff6 <_fpadd_parts+0x28c>
    1ff4:	d2 01       	movw	r26, r4
    1ff6:	cd 01       	movw	r24, r26
    1ff8:	cd b7       	in	r28, 0x3d	; 61
    1ffa:	de b7       	in	r29, 0x3e	; 62
    1ffc:	e2 e1       	ldi	r30, 0x12	; 18
    1ffe:	0c 94 c1 29 	jmp	0x5382	; 0x5382 <__epilogue_restores__>

00002002 <__subsf3>:
    2002:	a0 e2       	ldi	r26, 0x20	; 32
    2004:	b0 e0       	ldi	r27, 0x00	; 0
    2006:	e7 e0       	ldi	r30, 0x07	; 7
    2008:	f0 e1       	ldi	r31, 0x10	; 16
    200a:	0c 94 b1 29 	jmp	0x5362	; 0x5362 <__prologue_saves__+0x18>
    200e:	69 83       	std	Y+1, r22	; 0x01
    2010:	7a 83       	std	Y+2, r23	; 0x02
    2012:	8b 83       	std	Y+3, r24	; 0x03
    2014:	9c 83       	std	Y+4, r25	; 0x04
    2016:	2d 83       	std	Y+5, r18	; 0x05
    2018:	3e 83       	std	Y+6, r19	; 0x06
    201a:	4f 83       	std	Y+7, r20	; 0x07
    201c:	58 87       	std	Y+8, r21	; 0x08
    201e:	e9 e0       	ldi	r30, 0x09	; 9
    2020:	ee 2e       	mov	r14, r30
    2022:	f1 2c       	mov	r15, r1
    2024:	ec 0e       	add	r14, r28
    2026:	fd 1e       	adc	r15, r29
    2028:	ce 01       	movw	r24, r28
    202a:	01 96       	adiw	r24, 0x01	; 1
    202c:	b7 01       	movw	r22, r14
    202e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2032:	8e 01       	movw	r16, r28
    2034:	0f 5e       	subi	r16, 0xEF	; 239
    2036:	1f 4f       	sbci	r17, 0xFF	; 255
    2038:	ce 01       	movw	r24, r28
    203a:	05 96       	adiw	r24, 0x05	; 5
    203c:	b8 01       	movw	r22, r16
    203e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2042:	8a 89       	ldd	r24, Y+18	; 0x12
    2044:	91 e0       	ldi	r25, 0x01	; 1
    2046:	89 27       	eor	r24, r25
    2048:	8a 8b       	std	Y+18, r24	; 0x12
    204a:	c7 01       	movw	r24, r14
    204c:	b8 01       	movw	r22, r16
    204e:	ae 01       	movw	r20, r28
    2050:	47 5e       	subi	r20, 0xE7	; 231
    2052:	5f 4f       	sbci	r21, 0xFF	; 255
    2054:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <_fpadd_parts>
    2058:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    205c:	a0 96       	adiw	r28, 0x20	; 32
    205e:	e6 e0       	ldi	r30, 0x06	; 6
    2060:	0c 94 cd 29 	jmp	0x539a	; 0x539a <__epilogue_restores__+0x18>

00002064 <__addsf3>:
    2064:	a0 e2       	ldi	r26, 0x20	; 32
    2066:	b0 e0       	ldi	r27, 0x00	; 0
    2068:	e8 e3       	ldi	r30, 0x38	; 56
    206a:	f0 e1       	ldi	r31, 0x10	; 16
    206c:	0c 94 b1 29 	jmp	0x5362	; 0x5362 <__prologue_saves__+0x18>
    2070:	69 83       	std	Y+1, r22	; 0x01
    2072:	7a 83       	std	Y+2, r23	; 0x02
    2074:	8b 83       	std	Y+3, r24	; 0x03
    2076:	9c 83       	std	Y+4, r25	; 0x04
    2078:	2d 83       	std	Y+5, r18	; 0x05
    207a:	3e 83       	std	Y+6, r19	; 0x06
    207c:	4f 83       	std	Y+7, r20	; 0x07
    207e:	58 87       	std	Y+8, r21	; 0x08
    2080:	f9 e0       	ldi	r31, 0x09	; 9
    2082:	ef 2e       	mov	r14, r31
    2084:	f1 2c       	mov	r15, r1
    2086:	ec 0e       	add	r14, r28
    2088:	fd 1e       	adc	r15, r29
    208a:	ce 01       	movw	r24, r28
    208c:	01 96       	adiw	r24, 0x01	; 1
    208e:	b7 01       	movw	r22, r14
    2090:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2094:	8e 01       	movw	r16, r28
    2096:	0f 5e       	subi	r16, 0xEF	; 239
    2098:	1f 4f       	sbci	r17, 0xFF	; 255
    209a:	ce 01       	movw	r24, r28
    209c:	05 96       	adiw	r24, 0x05	; 5
    209e:	b8 01       	movw	r22, r16
    20a0:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    20a4:	c7 01       	movw	r24, r14
    20a6:	b8 01       	movw	r22, r16
    20a8:	ae 01       	movw	r20, r28
    20aa:	47 5e       	subi	r20, 0xE7	; 231
    20ac:	5f 4f       	sbci	r21, 0xFF	; 255
    20ae:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <_fpadd_parts>
    20b2:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    20b6:	a0 96       	adiw	r28, 0x20	; 32
    20b8:	e6 e0       	ldi	r30, 0x06	; 6
    20ba:	0c 94 cd 29 	jmp	0x539a	; 0x539a <__epilogue_restores__+0x18>

000020be <__mulsf3>:
    20be:	a0 e2       	ldi	r26, 0x20	; 32
    20c0:	b0 e0       	ldi	r27, 0x00	; 0
    20c2:	e5 e6       	ldi	r30, 0x65	; 101
    20c4:	f0 e1       	ldi	r31, 0x10	; 16
    20c6:	0c 94 a5 29 	jmp	0x534a	; 0x534a <__prologue_saves__>
    20ca:	69 83       	std	Y+1, r22	; 0x01
    20cc:	7a 83       	std	Y+2, r23	; 0x02
    20ce:	8b 83       	std	Y+3, r24	; 0x03
    20d0:	9c 83       	std	Y+4, r25	; 0x04
    20d2:	2d 83       	std	Y+5, r18	; 0x05
    20d4:	3e 83       	std	Y+6, r19	; 0x06
    20d6:	4f 83       	std	Y+7, r20	; 0x07
    20d8:	58 87       	std	Y+8, r21	; 0x08
    20da:	ce 01       	movw	r24, r28
    20dc:	01 96       	adiw	r24, 0x01	; 1
    20de:	be 01       	movw	r22, r28
    20e0:	67 5f       	subi	r22, 0xF7	; 247
    20e2:	7f 4f       	sbci	r23, 0xFF	; 255
    20e4:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    20e8:	ce 01       	movw	r24, r28
    20ea:	05 96       	adiw	r24, 0x05	; 5
    20ec:	be 01       	movw	r22, r28
    20ee:	6f 5e       	subi	r22, 0xEF	; 239
    20f0:	7f 4f       	sbci	r23, 0xFF	; 255
    20f2:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    20f6:	99 85       	ldd	r25, Y+9	; 0x09
    20f8:	92 30       	cpi	r25, 0x02	; 2
    20fa:	88 f0       	brcs	.+34     	; 0x211e <__mulsf3+0x60>
    20fc:	89 89       	ldd	r24, Y+17	; 0x11
    20fe:	82 30       	cpi	r24, 0x02	; 2
    2100:	c8 f0       	brcs	.+50     	; 0x2134 <__mulsf3+0x76>
    2102:	94 30       	cpi	r25, 0x04	; 4
    2104:	19 f4       	brne	.+6      	; 0x210c <__mulsf3+0x4e>
    2106:	82 30       	cpi	r24, 0x02	; 2
    2108:	51 f4       	brne	.+20     	; 0x211e <__mulsf3+0x60>
    210a:	04 c0       	rjmp	.+8      	; 0x2114 <__mulsf3+0x56>
    210c:	84 30       	cpi	r24, 0x04	; 4
    210e:	29 f4       	brne	.+10     	; 0x211a <__mulsf3+0x5c>
    2110:	92 30       	cpi	r25, 0x02	; 2
    2112:	81 f4       	brne	.+32     	; 0x2134 <__mulsf3+0x76>
    2114:	83 e6       	ldi	r24, 0x63	; 99
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	c6 c0       	rjmp	.+396    	; 0x22a6 <__mulsf3+0x1e8>
    211a:	92 30       	cpi	r25, 0x02	; 2
    211c:	49 f4       	brne	.+18     	; 0x2130 <__mulsf3+0x72>
    211e:	20 e0       	ldi	r18, 0x00	; 0
    2120:	9a 85       	ldd	r25, Y+10	; 0x0a
    2122:	8a 89       	ldd	r24, Y+18	; 0x12
    2124:	98 13       	cpse	r25, r24
    2126:	21 e0       	ldi	r18, 0x01	; 1
    2128:	2a 87       	std	Y+10, r18	; 0x0a
    212a:	ce 01       	movw	r24, r28
    212c:	09 96       	adiw	r24, 0x09	; 9
    212e:	bb c0       	rjmp	.+374    	; 0x22a6 <__mulsf3+0x1e8>
    2130:	82 30       	cpi	r24, 0x02	; 2
    2132:	49 f4       	brne	.+18     	; 0x2146 <__mulsf3+0x88>
    2134:	20 e0       	ldi	r18, 0x00	; 0
    2136:	9a 85       	ldd	r25, Y+10	; 0x0a
    2138:	8a 89       	ldd	r24, Y+18	; 0x12
    213a:	98 13       	cpse	r25, r24
    213c:	21 e0       	ldi	r18, 0x01	; 1
    213e:	2a 8b       	std	Y+18, r18	; 0x12
    2140:	ce 01       	movw	r24, r28
    2142:	41 96       	adiw	r24, 0x11	; 17
    2144:	b0 c0       	rjmp	.+352    	; 0x22a6 <__mulsf3+0x1e8>
    2146:	2d 84       	ldd	r2, Y+13	; 0x0d
    2148:	3e 84       	ldd	r3, Y+14	; 0x0e
    214a:	4f 84       	ldd	r4, Y+15	; 0x0f
    214c:	58 88       	ldd	r5, Y+16	; 0x10
    214e:	6d 88       	ldd	r6, Y+21	; 0x15
    2150:	7e 88       	ldd	r7, Y+22	; 0x16
    2152:	8f 88       	ldd	r8, Y+23	; 0x17
    2154:	98 8c       	ldd	r9, Y+24	; 0x18
    2156:	ee 24       	eor	r14, r14
    2158:	ff 24       	eor	r15, r15
    215a:	87 01       	movw	r16, r14
    215c:	aa 24       	eor	r10, r10
    215e:	bb 24       	eor	r11, r11
    2160:	65 01       	movw	r12, r10
    2162:	40 e0       	ldi	r20, 0x00	; 0
    2164:	50 e0       	ldi	r21, 0x00	; 0
    2166:	60 e0       	ldi	r22, 0x00	; 0
    2168:	70 e0       	ldi	r23, 0x00	; 0
    216a:	e0 e0       	ldi	r30, 0x00	; 0
    216c:	f0 e0       	ldi	r31, 0x00	; 0
    216e:	c1 01       	movw	r24, r2
    2170:	81 70       	andi	r24, 0x01	; 1
    2172:	90 70       	andi	r25, 0x00	; 0
    2174:	89 2b       	or	r24, r25
    2176:	e9 f0       	breq	.+58     	; 0x21b2 <__mulsf3+0xf4>
    2178:	e6 0c       	add	r14, r6
    217a:	f7 1c       	adc	r15, r7
    217c:	08 1d       	adc	r16, r8
    217e:	19 1d       	adc	r17, r9
    2180:	9a 01       	movw	r18, r20
    2182:	ab 01       	movw	r20, r22
    2184:	2a 0d       	add	r18, r10
    2186:	3b 1d       	adc	r19, r11
    2188:	4c 1d       	adc	r20, r12
    218a:	5d 1d       	adc	r21, r13
    218c:	80 e0       	ldi	r24, 0x00	; 0
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	a0 e0       	ldi	r26, 0x00	; 0
    2192:	b0 e0       	ldi	r27, 0x00	; 0
    2194:	e6 14       	cp	r14, r6
    2196:	f7 04       	cpc	r15, r7
    2198:	08 05       	cpc	r16, r8
    219a:	19 05       	cpc	r17, r9
    219c:	20 f4       	brcc	.+8      	; 0x21a6 <__mulsf3+0xe8>
    219e:	81 e0       	ldi	r24, 0x01	; 1
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	a0 e0       	ldi	r26, 0x00	; 0
    21a4:	b0 e0       	ldi	r27, 0x00	; 0
    21a6:	ba 01       	movw	r22, r20
    21a8:	a9 01       	movw	r20, r18
    21aa:	48 0f       	add	r20, r24
    21ac:	59 1f       	adc	r21, r25
    21ae:	6a 1f       	adc	r22, r26
    21b0:	7b 1f       	adc	r23, r27
    21b2:	aa 0c       	add	r10, r10
    21b4:	bb 1c       	adc	r11, r11
    21b6:	cc 1c       	adc	r12, r12
    21b8:	dd 1c       	adc	r13, r13
    21ba:	97 fe       	sbrs	r9, 7
    21bc:	08 c0       	rjmp	.+16     	; 0x21ce <__mulsf3+0x110>
    21be:	81 e0       	ldi	r24, 0x01	; 1
    21c0:	90 e0       	ldi	r25, 0x00	; 0
    21c2:	a0 e0       	ldi	r26, 0x00	; 0
    21c4:	b0 e0       	ldi	r27, 0x00	; 0
    21c6:	a8 2a       	or	r10, r24
    21c8:	b9 2a       	or	r11, r25
    21ca:	ca 2a       	or	r12, r26
    21cc:	db 2a       	or	r13, r27
    21ce:	31 96       	adiw	r30, 0x01	; 1
    21d0:	e0 32       	cpi	r30, 0x20	; 32
    21d2:	f1 05       	cpc	r31, r1
    21d4:	49 f0       	breq	.+18     	; 0x21e8 <__mulsf3+0x12a>
    21d6:	66 0c       	add	r6, r6
    21d8:	77 1c       	adc	r7, r7
    21da:	88 1c       	adc	r8, r8
    21dc:	99 1c       	adc	r9, r9
    21de:	56 94       	lsr	r5
    21e0:	47 94       	ror	r4
    21e2:	37 94       	ror	r3
    21e4:	27 94       	ror	r2
    21e6:	c3 cf       	rjmp	.-122    	; 0x216e <__mulsf3+0xb0>
    21e8:	fa 85       	ldd	r31, Y+10	; 0x0a
    21ea:	ea 89       	ldd	r30, Y+18	; 0x12
    21ec:	2b 89       	ldd	r18, Y+19	; 0x13
    21ee:	3c 89       	ldd	r19, Y+20	; 0x14
    21f0:	8b 85       	ldd	r24, Y+11	; 0x0b
    21f2:	9c 85       	ldd	r25, Y+12	; 0x0c
    21f4:	28 0f       	add	r18, r24
    21f6:	39 1f       	adc	r19, r25
    21f8:	2e 5f       	subi	r18, 0xFE	; 254
    21fa:	3f 4f       	sbci	r19, 0xFF	; 255
    21fc:	17 c0       	rjmp	.+46     	; 0x222c <__mulsf3+0x16e>
    21fe:	ca 01       	movw	r24, r20
    2200:	81 70       	andi	r24, 0x01	; 1
    2202:	90 70       	andi	r25, 0x00	; 0
    2204:	89 2b       	or	r24, r25
    2206:	61 f0       	breq	.+24     	; 0x2220 <__mulsf3+0x162>
    2208:	16 95       	lsr	r17
    220a:	07 95       	ror	r16
    220c:	f7 94       	ror	r15
    220e:	e7 94       	ror	r14
    2210:	80 e0       	ldi	r24, 0x00	; 0
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	a0 e0       	ldi	r26, 0x00	; 0
    2216:	b0 e8       	ldi	r27, 0x80	; 128
    2218:	e8 2a       	or	r14, r24
    221a:	f9 2a       	or	r15, r25
    221c:	0a 2b       	or	r16, r26
    221e:	1b 2b       	or	r17, r27
    2220:	76 95       	lsr	r23
    2222:	67 95       	ror	r22
    2224:	57 95       	ror	r21
    2226:	47 95       	ror	r20
    2228:	2f 5f       	subi	r18, 0xFF	; 255
    222a:	3f 4f       	sbci	r19, 0xFF	; 255
    222c:	77 fd       	sbrc	r23, 7
    222e:	e7 cf       	rjmp	.-50     	; 0x21fe <__mulsf3+0x140>
    2230:	0c c0       	rjmp	.+24     	; 0x224a <__mulsf3+0x18c>
    2232:	44 0f       	add	r20, r20
    2234:	55 1f       	adc	r21, r21
    2236:	66 1f       	adc	r22, r22
    2238:	77 1f       	adc	r23, r23
    223a:	17 fd       	sbrc	r17, 7
    223c:	41 60       	ori	r20, 0x01	; 1
    223e:	ee 0c       	add	r14, r14
    2240:	ff 1c       	adc	r15, r15
    2242:	00 1f       	adc	r16, r16
    2244:	11 1f       	adc	r17, r17
    2246:	21 50       	subi	r18, 0x01	; 1
    2248:	30 40       	sbci	r19, 0x00	; 0
    224a:	40 30       	cpi	r20, 0x00	; 0
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	59 07       	cpc	r21, r25
    2250:	90 e0       	ldi	r25, 0x00	; 0
    2252:	69 07       	cpc	r22, r25
    2254:	90 e4       	ldi	r25, 0x40	; 64
    2256:	79 07       	cpc	r23, r25
    2258:	60 f3       	brcs	.-40     	; 0x2232 <__mulsf3+0x174>
    225a:	2b 8f       	std	Y+27, r18	; 0x1b
    225c:	3c 8f       	std	Y+28, r19	; 0x1c
    225e:	db 01       	movw	r26, r22
    2260:	ca 01       	movw	r24, r20
    2262:	8f 77       	andi	r24, 0x7F	; 127
    2264:	90 70       	andi	r25, 0x00	; 0
    2266:	a0 70       	andi	r26, 0x00	; 0
    2268:	b0 70       	andi	r27, 0x00	; 0
    226a:	80 34       	cpi	r24, 0x40	; 64
    226c:	91 05       	cpc	r25, r1
    226e:	a1 05       	cpc	r26, r1
    2270:	b1 05       	cpc	r27, r1
    2272:	61 f4       	brne	.+24     	; 0x228c <__mulsf3+0x1ce>
    2274:	47 fd       	sbrc	r20, 7
    2276:	0a c0       	rjmp	.+20     	; 0x228c <__mulsf3+0x1ce>
    2278:	e1 14       	cp	r14, r1
    227a:	f1 04       	cpc	r15, r1
    227c:	01 05       	cpc	r16, r1
    227e:	11 05       	cpc	r17, r1
    2280:	29 f0       	breq	.+10     	; 0x228c <__mulsf3+0x1ce>
    2282:	40 5c       	subi	r20, 0xC0	; 192
    2284:	5f 4f       	sbci	r21, 0xFF	; 255
    2286:	6f 4f       	sbci	r22, 0xFF	; 255
    2288:	7f 4f       	sbci	r23, 0xFF	; 255
    228a:	40 78       	andi	r20, 0x80	; 128
    228c:	1a 8e       	std	Y+26, r1	; 0x1a
    228e:	fe 17       	cp	r31, r30
    2290:	11 f0       	breq	.+4      	; 0x2296 <__mulsf3+0x1d8>
    2292:	81 e0       	ldi	r24, 0x01	; 1
    2294:	8a 8f       	std	Y+26, r24	; 0x1a
    2296:	4d 8f       	std	Y+29, r20	; 0x1d
    2298:	5e 8f       	std	Y+30, r21	; 0x1e
    229a:	6f 8f       	std	Y+31, r22	; 0x1f
    229c:	78 a3       	std	Y+32, r23	; 0x20
    229e:	83 e0       	ldi	r24, 0x03	; 3
    22a0:	89 8f       	std	Y+25, r24	; 0x19
    22a2:	ce 01       	movw	r24, r28
    22a4:	49 96       	adiw	r24, 0x19	; 25
    22a6:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    22aa:	a0 96       	adiw	r28, 0x20	; 32
    22ac:	e2 e1       	ldi	r30, 0x12	; 18
    22ae:	0c 94 c1 29 	jmp	0x5382	; 0x5382 <__epilogue_restores__>

000022b2 <__gtsf2>:
    22b2:	a8 e1       	ldi	r26, 0x18	; 24
    22b4:	b0 e0       	ldi	r27, 0x00	; 0
    22b6:	ef e5       	ldi	r30, 0x5F	; 95
    22b8:	f1 e1       	ldi	r31, 0x11	; 17
    22ba:	0c 94 b1 29 	jmp	0x5362	; 0x5362 <__prologue_saves__+0x18>
    22be:	69 83       	std	Y+1, r22	; 0x01
    22c0:	7a 83       	std	Y+2, r23	; 0x02
    22c2:	8b 83       	std	Y+3, r24	; 0x03
    22c4:	9c 83       	std	Y+4, r25	; 0x04
    22c6:	2d 83       	std	Y+5, r18	; 0x05
    22c8:	3e 83       	std	Y+6, r19	; 0x06
    22ca:	4f 83       	std	Y+7, r20	; 0x07
    22cc:	58 87       	std	Y+8, r21	; 0x08
    22ce:	89 e0       	ldi	r24, 0x09	; 9
    22d0:	e8 2e       	mov	r14, r24
    22d2:	f1 2c       	mov	r15, r1
    22d4:	ec 0e       	add	r14, r28
    22d6:	fd 1e       	adc	r15, r29
    22d8:	ce 01       	movw	r24, r28
    22da:	01 96       	adiw	r24, 0x01	; 1
    22dc:	b7 01       	movw	r22, r14
    22de:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    22e2:	8e 01       	movw	r16, r28
    22e4:	0f 5e       	subi	r16, 0xEF	; 239
    22e6:	1f 4f       	sbci	r17, 0xFF	; 255
    22e8:	ce 01       	movw	r24, r28
    22ea:	05 96       	adiw	r24, 0x05	; 5
    22ec:	b8 01       	movw	r22, r16
    22ee:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    22f2:	89 85       	ldd	r24, Y+9	; 0x09
    22f4:	82 30       	cpi	r24, 0x02	; 2
    22f6:	40 f0       	brcs	.+16     	; 0x2308 <__gtsf2+0x56>
    22f8:	89 89       	ldd	r24, Y+17	; 0x11
    22fa:	82 30       	cpi	r24, 0x02	; 2
    22fc:	28 f0       	brcs	.+10     	; 0x2308 <__gtsf2+0x56>
    22fe:	c7 01       	movw	r24, r14
    2300:	b8 01       	movw	r22, r16
    2302:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <__fpcmp_parts_f>
    2306:	01 c0       	rjmp	.+2      	; 0x230a <__gtsf2+0x58>
    2308:	8f ef       	ldi	r24, 0xFF	; 255
    230a:	68 96       	adiw	r28, 0x18	; 24
    230c:	e6 e0       	ldi	r30, 0x06	; 6
    230e:	0c 94 cd 29 	jmp	0x539a	; 0x539a <__epilogue_restores__+0x18>

00002312 <__gesf2>:
    2312:	a8 e1       	ldi	r26, 0x18	; 24
    2314:	b0 e0       	ldi	r27, 0x00	; 0
    2316:	ef e8       	ldi	r30, 0x8F	; 143
    2318:	f1 e1       	ldi	r31, 0x11	; 17
    231a:	0c 94 b1 29 	jmp	0x5362	; 0x5362 <__prologue_saves__+0x18>
    231e:	69 83       	std	Y+1, r22	; 0x01
    2320:	7a 83       	std	Y+2, r23	; 0x02
    2322:	8b 83       	std	Y+3, r24	; 0x03
    2324:	9c 83       	std	Y+4, r25	; 0x04
    2326:	2d 83       	std	Y+5, r18	; 0x05
    2328:	3e 83       	std	Y+6, r19	; 0x06
    232a:	4f 83       	std	Y+7, r20	; 0x07
    232c:	58 87       	std	Y+8, r21	; 0x08
    232e:	89 e0       	ldi	r24, 0x09	; 9
    2330:	e8 2e       	mov	r14, r24
    2332:	f1 2c       	mov	r15, r1
    2334:	ec 0e       	add	r14, r28
    2336:	fd 1e       	adc	r15, r29
    2338:	ce 01       	movw	r24, r28
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	b7 01       	movw	r22, r14
    233e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2342:	8e 01       	movw	r16, r28
    2344:	0f 5e       	subi	r16, 0xEF	; 239
    2346:	1f 4f       	sbci	r17, 0xFF	; 255
    2348:	ce 01       	movw	r24, r28
    234a:	05 96       	adiw	r24, 0x05	; 5
    234c:	b8 01       	movw	r22, r16
    234e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2352:	89 85       	ldd	r24, Y+9	; 0x09
    2354:	82 30       	cpi	r24, 0x02	; 2
    2356:	40 f0       	brcs	.+16     	; 0x2368 <__gesf2+0x56>
    2358:	89 89       	ldd	r24, Y+17	; 0x11
    235a:	82 30       	cpi	r24, 0x02	; 2
    235c:	28 f0       	brcs	.+10     	; 0x2368 <__gesf2+0x56>
    235e:	c7 01       	movw	r24, r14
    2360:	b8 01       	movw	r22, r16
    2362:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <__fpcmp_parts_f>
    2366:	01 c0       	rjmp	.+2      	; 0x236a <__gesf2+0x58>
    2368:	8f ef       	ldi	r24, 0xFF	; 255
    236a:	68 96       	adiw	r28, 0x18	; 24
    236c:	e6 e0       	ldi	r30, 0x06	; 6
    236e:	0c 94 cd 29 	jmp	0x539a	; 0x539a <__epilogue_restores__+0x18>

00002372 <__ltsf2>:
    2372:	a8 e1       	ldi	r26, 0x18	; 24
    2374:	b0 e0       	ldi	r27, 0x00	; 0
    2376:	ef eb       	ldi	r30, 0xBF	; 191
    2378:	f1 e1       	ldi	r31, 0x11	; 17
    237a:	0c 94 b1 29 	jmp	0x5362	; 0x5362 <__prologue_saves__+0x18>
    237e:	69 83       	std	Y+1, r22	; 0x01
    2380:	7a 83       	std	Y+2, r23	; 0x02
    2382:	8b 83       	std	Y+3, r24	; 0x03
    2384:	9c 83       	std	Y+4, r25	; 0x04
    2386:	2d 83       	std	Y+5, r18	; 0x05
    2388:	3e 83       	std	Y+6, r19	; 0x06
    238a:	4f 83       	std	Y+7, r20	; 0x07
    238c:	58 87       	std	Y+8, r21	; 0x08
    238e:	89 e0       	ldi	r24, 0x09	; 9
    2390:	e8 2e       	mov	r14, r24
    2392:	f1 2c       	mov	r15, r1
    2394:	ec 0e       	add	r14, r28
    2396:	fd 1e       	adc	r15, r29
    2398:	ce 01       	movw	r24, r28
    239a:	01 96       	adiw	r24, 0x01	; 1
    239c:	b7 01       	movw	r22, r14
    239e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    23a2:	8e 01       	movw	r16, r28
    23a4:	0f 5e       	subi	r16, 0xEF	; 239
    23a6:	1f 4f       	sbci	r17, 0xFF	; 255
    23a8:	ce 01       	movw	r24, r28
    23aa:	05 96       	adiw	r24, 0x05	; 5
    23ac:	b8 01       	movw	r22, r16
    23ae:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    23b2:	89 85       	ldd	r24, Y+9	; 0x09
    23b4:	82 30       	cpi	r24, 0x02	; 2
    23b6:	40 f0       	brcs	.+16     	; 0x23c8 <__ltsf2+0x56>
    23b8:	89 89       	ldd	r24, Y+17	; 0x11
    23ba:	82 30       	cpi	r24, 0x02	; 2
    23bc:	28 f0       	brcs	.+10     	; 0x23c8 <__ltsf2+0x56>
    23be:	c7 01       	movw	r24, r14
    23c0:	b8 01       	movw	r22, r16
    23c2:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <__fpcmp_parts_f>
    23c6:	01 c0       	rjmp	.+2      	; 0x23ca <__ltsf2+0x58>
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	68 96       	adiw	r28, 0x18	; 24
    23cc:	e6 e0       	ldi	r30, 0x06	; 6
    23ce:	0c 94 cd 29 	jmp	0x539a	; 0x539a <__epilogue_restores__+0x18>

000023d2 <__floatsisf>:
    23d2:	a8 e0       	ldi	r26, 0x08	; 8
    23d4:	b0 e0       	ldi	r27, 0x00	; 0
    23d6:	ef ee       	ldi	r30, 0xEF	; 239
    23d8:	f1 e1       	ldi	r31, 0x11	; 17
    23da:	0c 94 ae 29 	jmp	0x535c	; 0x535c <__prologue_saves__+0x12>
    23de:	9b 01       	movw	r18, r22
    23e0:	ac 01       	movw	r20, r24
    23e2:	83 e0       	ldi	r24, 0x03	; 3
    23e4:	89 83       	std	Y+1, r24	; 0x01
    23e6:	da 01       	movw	r26, r20
    23e8:	c9 01       	movw	r24, r18
    23ea:	88 27       	eor	r24, r24
    23ec:	b7 fd       	sbrc	r27, 7
    23ee:	83 95       	inc	r24
    23f0:	99 27       	eor	r25, r25
    23f2:	aa 27       	eor	r26, r26
    23f4:	bb 27       	eor	r27, r27
    23f6:	b8 2e       	mov	r11, r24
    23f8:	21 15       	cp	r18, r1
    23fa:	31 05       	cpc	r19, r1
    23fc:	41 05       	cpc	r20, r1
    23fe:	51 05       	cpc	r21, r1
    2400:	19 f4       	brne	.+6      	; 0x2408 <__floatsisf+0x36>
    2402:	82 e0       	ldi	r24, 0x02	; 2
    2404:	89 83       	std	Y+1, r24	; 0x01
    2406:	3a c0       	rjmp	.+116    	; 0x247c <__floatsisf+0xaa>
    2408:	88 23       	and	r24, r24
    240a:	a9 f0       	breq	.+42     	; 0x2436 <__floatsisf+0x64>
    240c:	20 30       	cpi	r18, 0x00	; 0
    240e:	80 e0       	ldi	r24, 0x00	; 0
    2410:	38 07       	cpc	r19, r24
    2412:	80 e0       	ldi	r24, 0x00	; 0
    2414:	48 07       	cpc	r20, r24
    2416:	80 e8       	ldi	r24, 0x80	; 128
    2418:	58 07       	cpc	r21, r24
    241a:	29 f4       	brne	.+10     	; 0x2426 <__floatsisf+0x54>
    241c:	60 e0       	ldi	r22, 0x00	; 0
    241e:	70 e0       	ldi	r23, 0x00	; 0
    2420:	80 e0       	ldi	r24, 0x00	; 0
    2422:	9f ec       	ldi	r25, 0xCF	; 207
    2424:	30 c0       	rjmp	.+96     	; 0x2486 <__floatsisf+0xb4>
    2426:	ee 24       	eor	r14, r14
    2428:	ff 24       	eor	r15, r15
    242a:	87 01       	movw	r16, r14
    242c:	e2 1a       	sub	r14, r18
    242e:	f3 0a       	sbc	r15, r19
    2430:	04 0b       	sbc	r16, r20
    2432:	15 0b       	sbc	r17, r21
    2434:	02 c0       	rjmp	.+4      	; 0x243a <__floatsisf+0x68>
    2436:	79 01       	movw	r14, r18
    2438:	8a 01       	movw	r16, r20
    243a:	8e e1       	ldi	r24, 0x1E	; 30
    243c:	c8 2e       	mov	r12, r24
    243e:	d1 2c       	mov	r13, r1
    2440:	dc 82       	std	Y+4, r13	; 0x04
    2442:	cb 82       	std	Y+3, r12	; 0x03
    2444:	ed 82       	std	Y+5, r14	; 0x05
    2446:	fe 82       	std	Y+6, r15	; 0x06
    2448:	0f 83       	std	Y+7, r16	; 0x07
    244a:	18 87       	std	Y+8, r17	; 0x08
    244c:	c8 01       	movw	r24, r16
    244e:	b7 01       	movw	r22, r14
    2450:	0e 94 93 13 	call	0x2726	; 0x2726 <__clzsi2>
    2454:	01 97       	sbiw	r24, 0x01	; 1
    2456:	18 16       	cp	r1, r24
    2458:	19 06       	cpc	r1, r25
    245a:	84 f4       	brge	.+32     	; 0x247c <__floatsisf+0xaa>
    245c:	08 2e       	mov	r0, r24
    245e:	04 c0       	rjmp	.+8      	; 0x2468 <__floatsisf+0x96>
    2460:	ee 0c       	add	r14, r14
    2462:	ff 1c       	adc	r15, r15
    2464:	00 1f       	adc	r16, r16
    2466:	11 1f       	adc	r17, r17
    2468:	0a 94       	dec	r0
    246a:	d2 f7       	brpl	.-12     	; 0x2460 <__floatsisf+0x8e>
    246c:	ed 82       	std	Y+5, r14	; 0x05
    246e:	fe 82       	std	Y+6, r15	; 0x06
    2470:	0f 83       	std	Y+7, r16	; 0x07
    2472:	18 87       	std	Y+8, r17	; 0x08
    2474:	c8 1a       	sub	r12, r24
    2476:	d9 0a       	sbc	r13, r25
    2478:	dc 82       	std	Y+4, r13	; 0x04
    247a:	cb 82       	std	Y+3, r12	; 0x03
    247c:	ba 82       	std	Y+2, r11	; 0x02
    247e:	ce 01       	movw	r24, r28
    2480:	01 96       	adiw	r24, 0x01	; 1
    2482:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    2486:	28 96       	adiw	r28, 0x08	; 8
    2488:	e9 e0       	ldi	r30, 0x09	; 9
    248a:	0c 94 ca 29 	jmp	0x5394	; 0x5394 <__epilogue_restores__+0x12>

0000248e <__fixsfsi>:
    248e:	ac e0       	ldi	r26, 0x0C	; 12
    2490:	b0 e0       	ldi	r27, 0x00	; 0
    2492:	ed e4       	ldi	r30, 0x4D	; 77
    2494:	f2 e1       	ldi	r31, 0x12	; 18
    2496:	0c 94 b5 29 	jmp	0x536a	; 0x536a <__prologue_saves__+0x20>
    249a:	69 83       	std	Y+1, r22	; 0x01
    249c:	7a 83       	std	Y+2, r23	; 0x02
    249e:	8b 83       	std	Y+3, r24	; 0x03
    24a0:	9c 83       	std	Y+4, r25	; 0x04
    24a2:	ce 01       	movw	r24, r28
    24a4:	01 96       	adiw	r24, 0x01	; 1
    24a6:	be 01       	movw	r22, r28
    24a8:	6b 5f       	subi	r22, 0xFB	; 251
    24aa:	7f 4f       	sbci	r23, 0xFF	; 255
    24ac:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    24b0:	8d 81       	ldd	r24, Y+5	; 0x05
    24b2:	82 30       	cpi	r24, 0x02	; 2
    24b4:	61 f1       	breq	.+88     	; 0x250e <__fixsfsi+0x80>
    24b6:	82 30       	cpi	r24, 0x02	; 2
    24b8:	50 f1       	brcs	.+84     	; 0x250e <__fixsfsi+0x80>
    24ba:	84 30       	cpi	r24, 0x04	; 4
    24bc:	21 f4       	brne	.+8      	; 0x24c6 <__fixsfsi+0x38>
    24be:	8e 81       	ldd	r24, Y+6	; 0x06
    24c0:	88 23       	and	r24, r24
    24c2:	51 f1       	breq	.+84     	; 0x2518 <__fixsfsi+0x8a>
    24c4:	2e c0       	rjmp	.+92     	; 0x2522 <__fixsfsi+0x94>
    24c6:	2f 81       	ldd	r18, Y+7	; 0x07
    24c8:	38 85       	ldd	r19, Y+8	; 0x08
    24ca:	37 fd       	sbrc	r19, 7
    24cc:	20 c0       	rjmp	.+64     	; 0x250e <__fixsfsi+0x80>
    24ce:	6e 81       	ldd	r22, Y+6	; 0x06
    24d0:	2f 31       	cpi	r18, 0x1F	; 31
    24d2:	31 05       	cpc	r19, r1
    24d4:	1c f0       	brlt	.+6      	; 0x24dc <__fixsfsi+0x4e>
    24d6:	66 23       	and	r22, r22
    24d8:	f9 f0       	breq	.+62     	; 0x2518 <__fixsfsi+0x8a>
    24da:	23 c0       	rjmp	.+70     	; 0x2522 <__fixsfsi+0x94>
    24dc:	8e e1       	ldi	r24, 0x1E	; 30
    24de:	90 e0       	ldi	r25, 0x00	; 0
    24e0:	82 1b       	sub	r24, r18
    24e2:	93 0b       	sbc	r25, r19
    24e4:	29 85       	ldd	r18, Y+9	; 0x09
    24e6:	3a 85       	ldd	r19, Y+10	; 0x0a
    24e8:	4b 85       	ldd	r20, Y+11	; 0x0b
    24ea:	5c 85       	ldd	r21, Y+12	; 0x0c
    24ec:	04 c0       	rjmp	.+8      	; 0x24f6 <__fixsfsi+0x68>
    24ee:	56 95       	lsr	r21
    24f0:	47 95       	ror	r20
    24f2:	37 95       	ror	r19
    24f4:	27 95       	ror	r18
    24f6:	8a 95       	dec	r24
    24f8:	d2 f7       	brpl	.-12     	; 0x24ee <__fixsfsi+0x60>
    24fa:	66 23       	and	r22, r22
    24fc:	b1 f0       	breq	.+44     	; 0x252a <__fixsfsi+0x9c>
    24fe:	50 95       	com	r21
    2500:	40 95       	com	r20
    2502:	30 95       	com	r19
    2504:	21 95       	neg	r18
    2506:	3f 4f       	sbci	r19, 0xFF	; 255
    2508:	4f 4f       	sbci	r20, 0xFF	; 255
    250a:	5f 4f       	sbci	r21, 0xFF	; 255
    250c:	0e c0       	rjmp	.+28     	; 0x252a <__fixsfsi+0x9c>
    250e:	20 e0       	ldi	r18, 0x00	; 0
    2510:	30 e0       	ldi	r19, 0x00	; 0
    2512:	40 e0       	ldi	r20, 0x00	; 0
    2514:	50 e0       	ldi	r21, 0x00	; 0
    2516:	09 c0       	rjmp	.+18     	; 0x252a <__fixsfsi+0x9c>
    2518:	2f ef       	ldi	r18, 0xFF	; 255
    251a:	3f ef       	ldi	r19, 0xFF	; 255
    251c:	4f ef       	ldi	r20, 0xFF	; 255
    251e:	5f e7       	ldi	r21, 0x7F	; 127
    2520:	04 c0       	rjmp	.+8      	; 0x252a <__fixsfsi+0x9c>
    2522:	20 e0       	ldi	r18, 0x00	; 0
    2524:	30 e0       	ldi	r19, 0x00	; 0
    2526:	40 e0       	ldi	r20, 0x00	; 0
    2528:	50 e8       	ldi	r21, 0x80	; 128
    252a:	b9 01       	movw	r22, r18
    252c:	ca 01       	movw	r24, r20
    252e:	2c 96       	adiw	r28, 0x0c	; 12
    2530:	e2 e0       	ldi	r30, 0x02	; 2
    2532:	0c 94 d1 29 	jmp	0x53a2	; 0x53a2 <__epilogue_restores__+0x20>

00002536 <__floatunsisf>:
    2536:	a8 e0       	ldi	r26, 0x08	; 8
    2538:	b0 e0       	ldi	r27, 0x00	; 0
    253a:	e1 ea       	ldi	r30, 0xA1	; 161
    253c:	f2 e1       	ldi	r31, 0x12	; 18
    253e:	0c 94 ad 29 	jmp	0x535a	; 0x535a <__prologue_saves__+0x10>
    2542:	7b 01       	movw	r14, r22
    2544:	8c 01       	movw	r16, r24
    2546:	61 15       	cp	r22, r1
    2548:	71 05       	cpc	r23, r1
    254a:	81 05       	cpc	r24, r1
    254c:	91 05       	cpc	r25, r1
    254e:	19 f4       	brne	.+6      	; 0x2556 <__floatunsisf+0x20>
    2550:	82 e0       	ldi	r24, 0x02	; 2
    2552:	89 83       	std	Y+1, r24	; 0x01
    2554:	60 c0       	rjmp	.+192    	; 0x2616 <__floatunsisf+0xe0>
    2556:	83 e0       	ldi	r24, 0x03	; 3
    2558:	89 83       	std	Y+1, r24	; 0x01
    255a:	8e e1       	ldi	r24, 0x1E	; 30
    255c:	c8 2e       	mov	r12, r24
    255e:	d1 2c       	mov	r13, r1
    2560:	dc 82       	std	Y+4, r13	; 0x04
    2562:	cb 82       	std	Y+3, r12	; 0x03
    2564:	ed 82       	std	Y+5, r14	; 0x05
    2566:	fe 82       	std	Y+6, r15	; 0x06
    2568:	0f 83       	std	Y+7, r16	; 0x07
    256a:	18 87       	std	Y+8, r17	; 0x08
    256c:	c8 01       	movw	r24, r16
    256e:	b7 01       	movw	r22, r14
    2570:	0e 94 93 13 	call	0x2726	; 0x2726 <__clzsi2>
    2574:	fc 01       	movw	r30, r24
    2576:	31 97       	sbiw	r30, 0x01	; 1
    2578:	f7 ff       	sbrs	r31, 7
    257a:	3b c0       	rjmp	.+118    	; 0x25f2 <__floatunsisf+0xbc>
    257c:	22 27       	eor	r18, r18
    257e:	33 27       	eor	r19, r19
    2580:	2e 1b       	sub	r18, r30
    2582:	3f 0b       	sbc	r19, r31
    2584:	57 01       	movw	r10, r14
    2586:	68 01       	movw	r12, r16
    2588:	02 2e       	mov	r0, r18
    258a:	04 c0       	rjmp	.+8      	; 0x2594 <__floatunsisf+0x5e>
    258c:	d6 94       	lsr	r13
    258e:	c7 94       	ror	r12
    2590:	b7 94       	ror	r11
    2592:	a7 94       	ror	r10
    2594:	0a 94       	dec	r0
    2596:	d2 f7       	brpl	.-12     	; 0x258c <__floatunsisf+0x56>
    2598:	40 e0       	ldi	r20, 0x00	; 0
    259a:	50 e0       	ldi	r21, 0x00	; 0
    259c:	60 e0       	ldi	r22, 0x00	; 0
    259e:	70 e0       	ldi	r23, 0x00	; 0
    25a0:	81 e0       	ldi	r24, 0x01	; 1
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	a0 e0       	ldi	r26, 0x00	; 0
    25a6:	b0 e0       	ldi	r27, 0x00	; 0
    25a8:	04 c0       	rjmp	.+8      	; 0x25b2 <__floatunsisf+0x7c>
    25aa:	88 0f       	add	r24, r24
    25ac:	99 1f       	adc	r25, r25
    25ae:	aa 1f       	adc	r26, r26
    25b0:	bb 1f       	adc	r27, r27
    25b2:	2a 95       	dec	r18
    25b4:	d2 f7       	brpl	.-12     	; 0x25aa <__floatunsisf+0x74>
    25b6:	01 97       	sbiw	r24, 0x01	; 1
    25b8:	a1 09       	sbc	r26, r1
    25ba:	b1 09       	sbc	r27, r1
    25bc:	8e 21       	and	r24, r14
    25be:	9f 21       	and	r25, r15
    25c0:	a0 23       	and	r26, r16
    25c2:	b1 23       	and	r27, r17
    25c4:	00 97       	sbiw	r24, 0x00	; 0
    25c6:	a1 05       	cpc	r26, r1
    25c8:	b1 05       	cpc	r27, r1
    25ca:	21 f0       	breq	.+8      	; 0x25d4 <__floatunsisf+0x9e>
    25cc:	41 e0       	ldi	r20, 0x01	; 1
    25ce:	50 e0       	ldi	r21, 0x00	; 0
    25d0:	60 e0       	ldi	r22, 0x00	; 0
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	4a 29       	or	r20, r10
    25d6:	5b 29       	or	r21, r11
    25d8:	6c 29       	or	r22, r12
    25da:	7d 29       	or	r23, r13
    25dc:	4d 83       	std	Y+5, r20	; 0x05
    25de:	5e 83       	std	Y+6, r21	; 0x06
    25e0:	6f 83       	std	Y+7, r22	; 0x07
    25e2:	78 87       	std	Y+8, r23	; 0x08
    25e4:	8e e1       	ldi	r24, 0x1E	; 30
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	8e 1b       	sub	r24, r30
    25ea:	9f 0b       	sbc	r25, r31
    25ec:	9c 83       	std	Y+4, r25	; 0x04
    25ee:	8b 83       	std	Y+3, r24	; 0x03
    25f0:	12 c0       	rjmp	.+36     	; 0x2616 <__floatunsisf+0xe0>
    25f2:	30 97       	sbiw	r30, 0x00	; 0
    25f4:	81 f0       	breq	.+32     	; 0x2616 <__floatunsisf+0xe0>
    25f6:	0e 2e       	mov	r0, r30
    25f8:	04 c0       	rjmp	.+8      	; 0x2602 <__floatunsisf+0xcc>
    25fa:	ee 0c       	add	r14, r14
    25fc:	ff 1c       	adc	r15, r15
    25fe:	00 1f       	adc	r16, r16
    2600:	11 1f       	adc	r17, r17
    2602:	0a 94       	dec	r0
    2604:	d2 f7       	brpl	.-12     	; 0x25fa <__floatunsisf+0xc4>
    2606:	ed 82       	std	Y+5, r14	; 0x05
    2608:	fe 82       	std	Y+6, r15	; 0x06
    260a:	0f 83       	std	Y+7, r16	; 0x07
    260c:	18 87       	std	Y+8, r17	; 0x08
    260e:	ce 1a       	sub	r12, r30
    2610:	df 0a       	sbc	r13, r31
    2612:	dc 82       	std	Y+4, r13	; 0x04
    2614:	cb 82       	std	Y+3, r12	; 0x03
    2616:	1a 82       	std	Y+2, r1	; 0x02
    2618:	ce 01       	movw	r24, r28
    261a:	01 96       	adiw	r24, 0x01	; 1
    261c:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    2620:	28 96       	adiw	r28, 0x08	; 8
    2622:	ea e0       	ldi	r30, 0x0A	; 10
    2624:	0c 94 c9 29 	jmp	0x5392	; 0x5392 <__epilogue_restores__+0x10>

00002628 <__lshrdi3>:
    2628:	ef 92       	push	r14
    262a:	ff 92       	push	r15
    262c:	0f 93       	push	r16
    262e:	df 93       	push	r29
    2630:	cf 93       	push	r28
    2632:	cd b7       	in	r28, 0x3d	; 61
    2634:	de b7       	in	r29, 0x3e	; 62
    2636:	60 97       	sbiw	r28, 0x10	; 16
    2638:	0f b6       	in	r0, 0x3f	; 63
    263a:	f8 94       	cli
    263c:	de bf       	out	0x3e, r29	; 62
    263e:	0f be       	out	0x3f, r0	; 63
    2640:	cd bf       	out	0x3d, r28	; 61
    2642:	a8 2f       	mov	r26, r24
    2644:	00 23       	and	r16, r16
    2646:	09 f4       	brne	.+2      	; 0x264a <__lshrdi3+0x22>
    2648:	61 c0       	rjmp	.+194    	; 0x270c <__lshrdi3+0xe4>
    264a:	7e 01       	movw	r14, r28
    264c:	08 94       	sec
    264e:	e1 1c       	adc	r14, r1
    2650:	f1 1c       	adc	r15, r1
    2652:	88 e0       	ldi	r24, 0x08	; 8
    2654:	f7 01       	movw	r30, r14
    2656:	11 92       	st	Z+, r1
    2658:	8a 95       	dec	r24
    265a:	e9 f7       	brne	.-6      	; 0x2656 <__lshrdi3+0x2e>
    265c:	29 83       	std	Y+1, r18	; 0x01
    265e:	3a 83       	std	Y+2, r19	; 0x02
    2660:	4b 83       	std	Y+3, r20	; 0x03
    2662:	5c 83       	std	Y+4, r21	; 0x04
    2664:	6d 83       	std	Y+5, r22	; 0x05
    2666:	7e 83       	std	Y+6, r23	; 0x06
    2668:	af 83       	std	Y+7, r26	; 0x07
    266a:	98 87       	std	Y+8, r25	; 0x08
    266c:	80 e2       	ldi	r24, 0x20	; 32
    266e:	80 1b       	sub	r24, r16
    2670:	e8 2f       	mov	r30, r24
    2672:	ff 27       	eor	r31, r31
    2674:	e7 fd       	sbrc	r30, 7
    2676:	f0 95       	com	r31
    2678:	4d 81       	ldd	r20, Y+5	; 0x05
    267a:	5e 81       	ldd	r21, Y+6	; 0x06
    267c:	6f 81       	ldd	r22, Y+7	; 0x07
    267e:	78 85       	ldd	r23, Y+8	; 0x08
    2680:	18 16       	cp	r1, r24
    2682:	84 f0       	brlt	.+32     	; 0x26a4 <__lshrdi3+0x7c>
    2684:	1d 86       	std	Y+13, r1	; 0x0d
    2686:	1e 86       	std	Y+14, r1	; 0x0e
    2688:	1f 86       	std	Y+15, r1	; 0x0f
    268a:	18 8a       	std	Y+16, r1	; 0x10
    268c:	88 27       	eor	r24, r24
    268e:	99 27       	eor	r25, r25
    2690:	8e 1b       	sub	r24, r30
    2692:	9f 0b       	sbc	r25, r31
    2694:	04 c0       	rjmp	.+8      	; 0x269e <__lshrdi3+0x76>
    2696:	76 95       	lsr	r23
    2698:	67 95       	ror	r22
    269a:	57 95       	ror	r21
    269c:	47 95       	ror	r20
    269e:	8a 95       	dec	r24
    26a0:	d2 f7       	brpl	.-12     	; 0x2696 <__lshrdi3+0x6e>
    26a2:	28 c0       	rjmp	.+80     	; 0x26f4 <__lshrdi3+0xcc>
    26a4:	20 2f       	mov	r18, r16
    26a6:	33 27       	eor	r19, r19
    26a8:	27 fd       	sbrc	r18, 7
    26aa:	30 95       	com	r19
    26ac:	db 01       	movw	r26, r22
    26ae:	ca 01       	movw	r24, r20
    26b0:	02 2e       	mov	r0, r18
    26b2:	04 c0       	rjmp	.+8      	; 0x26bc <__lshrdi3+0x94>
    26b4:	b6 95       	lsr	r27
    26b6:	a7 95       	ror	r26
    26b8:	97 95       	ror	r25
    26ba:	87 95       	ror	r24
    26bc:	0a 94       	dec	r0
    26be:	d2 f7       	brpl	.-12     	; 0x26b4 <__lshrdi3+0x8c>
    26c0:	8d 87       	std	Y+13, r24	; 0x0d
    26c2:	9e 87       	std	Y+14, r25	; 0x0e
    26c4:	af 87       	std	Y+15, r26	; 0x0f
    26c6:	b8 8b       	std	Y+16, r27	; 0x10
    26c8:	04 c0       	rjmp	.+8      	; 0x26d2 <__lshrdi3+0xaa>
    26ca:	44 0f       	add	r20, r20
    26cc:	55 1f       	adc	r21, r21
    26ce:	66 1f       	adc	r22, r22
    26d0:	77 1f       	adc	r23, r23
    26d2:	ea 95       	dec	r30
    26d4:	d2 f7       	brpl	.-12     	; 0x26ca <__lshrdi3+0xa2>
    26d6:	89 81       	ldd	r24, Y+1	; 0x01
    26d8:	9a 81       	ldd	r25, Y+2	; 0x02
    26da:	ab 81       	ldd	r26, Y+3	; 0x03
    26dc:	bc 81       	ldd	r27, Y+4	; 0x04
    26de:	04 c0       	rjmp	.+8      	; 0x26e8 <__lshrdi3+0xc0>
    26e0:	b6 95       	lsr	r27
    26e2:	a7 95       	ror	r26
    26e4:	97 95       	ror	r25
    26e6:	87 95       	ror	r24
    26e8:	2a 95       	dec	r18
    26ea:	d2 f7       	brpl	.-12     	; 0x26e0 <__lshrdi3+0xb8>
    26ec:	48 2b       	or	r20, r24
    26ee:	59 2b       	or	r21, r25
    26f0:	6a 2b       	or	r22, r26
    26f2:	7b 2b       	or	r23, r27
    26f4:	49 87       	std	Y+9, r20	; 0x09
    26f6:	5a 87       	std	Y+10, r21	; 0x0a
    26f8:	6b 87       	std	Y+11, r22	; 0x0b
    26fa:	7c 87       	std	Y+12, r23	; 0x0c
    26fc:	29 85       	ldd	r18, Y+9	; 0x09
    26fe:	3a 85       	ldd	r19, Y+10	; 0x0a
    2700:	4b 85       	ldd	r20, Y+11	; 0x0b
    2702:	5c 85       	ldd	r21, Y+12	; 0x0c
    2704:	6d 85       	ldd	r22, Y+13	; 0x0d
    2706:	7e 85       	ldd	r23, Y+14	; 0x0e
    2708:	af 85       	ldd	r26, Y+15	; 0x0f
    270a:	98 89       	ldd	r25, Y+16	; 0x10
    270c:	8a 2f       	mov	r24, r26
    270e:	60 96       	adiw	r28, 0x10	; 16
    2710:	0f b6       	in	r0, 0x3f	; 63
    2712:	f8 94       	cli
    2714:	de bf       	out	0x3e, r29	; 62
    2716:	0f be       	out	0x3f, r0	; 63
    2718:	cd bf       	out	0x3d, r28	; 61
    271a:	cf 91       	pop	r28
    271c:	df 91       	pop	r29
    271e:	0f 91       	pop	r16
    2720:	ff 90       	pop	r15
    2722:	ef 90       	pop	r14
    2724:	08 95       	ret

00002726 <__clzsi2>:
    2726:	ef 92       	push	r14
    2728:	ff 92       	push	r15
    272a:	0f 93       	push	r16
    272c:	1f 93       	push	r17
    272e:	7b 01       	movw	r14, r22
    2730:	8c 01       	movw	r16, r24
    2732:	80 e0       	ldi	r24, 0x00	; 0
    2734:	e8 16       	cp	r14, r24
    2736:	80 e0       	ldi	r24, 0x00	; 0
    2738:	f8 06       	cpc	r15, r24
    273a:	81 e0       	ldi	r24, 0x01	; 1
    273c:	08 07       	cpc	r16, r24
    273e:	80 e0       	ldi	r24, 0x00	; 0
    2740:	18 07       	cpc	r17, r24
    2742:	88 f4       	brcc	.+34     	; 0x2766 <__clzsi2+0x40>
    2744:	8f ef       	ldi	r24, 0xFF	; 255
    2746:	e8 16       	cp	r14, r24
    2748:	f1 04       	cpc	r15, r1
    274a:	01 05       	cpc	r16, r1
    274c:	11 05       	cpc	r17, r1
    274e:	31 f0       	breq	.+12     	; 0x275c <__clzsi2+0x36>
    2750:	28 f0       	brcs	.+10     	; 0x275c <__clzsi2+0x36>
    2752:	88 e0       	ldi	r24, 0x08	; 8
    2754:	90 e0       	ldi	r25, 0x00	; 0
    2756:	a0 e0       	ldi	r26, 0x00	; 0
    2758:	b0 e0       	ldi	r27, 0x00	; 0
    275a:	17 c0       	rjmp	.+46     	; 0x278a <__clzsi2+0x64>
    275c:	80 e0       	ldi	r24, 0x00	; 0
    275e:	90 e0       	ldi	r25, 0x00	; 0
    2760:	a0 e0       	ldi	r26, 0x00	; 0
    2762:	b0 e0       	ldi	r27, 0x00	; 0
    2764:	12 c0       	rjmp	.+36     	; 0x278a <__clzsi2+0x64>
    2766:	80 e0       	ldi	r24, 0x00	; 0
    2768:	e8 16       	cp	r14, r24
    276a:	80 e0       	ldi	r24, 0x00	; 0
    276c:	f8 06       	cpc	r15, r24
    276e:	80 e0       	ldi	r24, 0x00	; 0
    2770:	08 07       	cpc	r16, r24
    2772:	81 e0       	ldi	r24, 0x01	; 1
    2774:	18 07       	cpc	r17, r24
    2776:	28 f0       	brcs	.+10     	; 0x2782 <__clzsi2+0x5c>
    2778:	88 e1       	ldi	r24, 0x18	; 24
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	a0 e0       	ldi	r26, 0x00	; 0
    277e:	b0 e0       	ldi	r27, 0x00	; 0
    2780:	04 c0       	rjmp	.+8      	; 0x278a <__clzsi2+0x64>
    2782:	80 e1       	ldi	r24, 0x10	; 16
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	a0 e0       	ldi	r26, 0x00	; 0
    2788:	b0 e0       	ldi	r27, 0x00	; 0
    278a:	20 e2       	ldi	r18, 0x20	; 32
    278c:	30 e0       	ldi	r19, 0x00	; 0
    278e:	40 e0       	ldi	r20, 0x00	; 0
    2790:	50 e0       	ldi	r21, 0x00	; 0
    2792:	28 1b       	sub	r18, r24
    2794:	39 0b       	sbc	r19, r25
    2796:	4a 0b       	sbc	r20, r26
    2798:	5b 0b       	sbc	r21, r27
    279a:	04 c0       	rjmp	.+8      	; 0x27a4 <__clzsi2+0x7e>
    279c:	16 95       	lsr	r17
    279e:	07 95       	ror	r16
    27a0:	f7 94       	ror	r15
    27a2:	e7 94       	ror	r14
    27a4:	8a 95       	dec	r24
    27a6:	d2 f7       	brpl	.-12     	; 0x279c <__clzsi2+0x76>
    27a8:	f7 01       	movw	r30, r14
    27aa:	e5 59       	subi	r30, 0x95	; 149
    27ac:	ff 4f       	sbci	r31, 0xFF	; 255
    27ae:	80 81       	ld	r24, Z
    27b0:	28 1b       	sub	r18, r24
    27b2:	31 09       	sbc	r19, r1
    27b4:	41 09       	sbc	r20, r1
    27b6:	51 09       	sbc	r21, r1
    27b8:	c9 01       	movw	r24, r18
    27ba:	1f 91       	pop	r17
    27bc:	0f 91       	pop	r16
    27be:	ff 90       	pop	r15
    27c0:	ef 90       	pop	r14
    27c2:	08 95       	ret

000027c4 <__pack_f>:
    27c4:	df 92       	push	r13
    27c6:	ef 92       	push	r14
    27c8:	ff 92       	push	r15
    27ca:	0f 93       	push	r16
    27cc:	1f 93       	push	r17
    27ce:	fc 01       	movw	r30, r24
    27d0:	e4 80       	ldd	r14, Z+4	; 0x04
    27d2:	f5 80       	ldd	r15, Z+5	; 0x05
    27d4:	06 81       	ldd	r16, Z+6	; 0x06
    27d6:	17 81       	ldd	r17, Z+7	; 0x07
    27d8:	d1 80       	ldd	r13, Z+1	; 0x01
    27da:	80 81       	ld	r24, Z
    27dc:	82 30       	cpi	r24, 0x02	; 2
    27de:	48 f4       	brcc	.+18     	; 0x27f2 <__pack_f+0x2e>
    27e0:	80 e0       	ldi	r24, 0x00	; 0
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	a0 e1       	ldi	r26, 0x10	; 16
    27e6:	b0 e0       	ldi	r27, 0x00	; 0
    27e8:	e8 2a       	or	r14, r24
    27ea:	f9 2a       	or	r15, r25
    27ec:	0a 2b       	or	r16, r26
    27ee:	1b 2b       	or	r17, r27
    27f0:	a5 c0       	rjmp	.+330    	; 0x293c <__pack_f+0x178>
    27f2:	84 30       	cpi	r24, 0x04	; 4
    27f4:	09 f4       	brne	.+2      	; 0x27f8 <__pack_f+0x34>
    27f6:	9f c0       	rjmp	.+318    	; 0x2936 <__pack_f+0x172>
    27f8:	82 30       	cpi	r24, 0x02	; 2
    27fa:	21 f4       	brne	.+8      	; 0x2804 <__pack_f+0x40>
    27fc:	ee 24       	eor	r14, r14
    27fe:	ff 24       	eor	r15, r15
    2800:	87 01       	movw	r16, r14
    2802:	05 c0       	rjmp	.+10     	; 0x280e <__pack_f+0x4a>
    2804:	e1 14       	cp	r14, r1
    2806:	f1 04       	cpc	r15, r1
    2808:	01 05       	cpc	r16, r1
    280a:	11 05       	cpc	r17, r1
    280c:	19 f4       	brne	.+6      	; 0x2814 <__pack_f+0x50>
    280e:	e0 e0       	ldi	r30, 0x00	; 0
    2810:	f0 e0       	ldi	r31, 0x00	; 0
    2812:	96 c0       	rjmp	.+300    	; 0x2940 <__pack_f+0x17c>
    2814:	62 81       	ldd	r22, Z+2	; 0x02
    2816:	73 81       	ldd	r23, Z+3	; 0x03
    2818:	9f ef       	ldi	r25, 0xFF	; 255
    281a:	62 38       	cpi	r22, 0x82	; 130
    281c:	79 07       	cpc	r23, r25
    281e:	0c f0       	brlt	.+2      	; 0x2822 <__pack_f+0x5e>
    2820:	5b c0       	rjmp	.+182    	; 0x28d8 <__pack_f+0x114>
    2822:	22 e8       	ldi	r18, 0x82	; 130
    2824:	3f ef       	ldi	r19, 0xFF	; 255
    2826:	26 1b       	sub	r18, r22
    2828:	37 0b       	sbc	r19, r23
    282a:	2a 31       	cpi	r18, 0x1A	; 26
    282c:	31 05       	cpc	r19, r1
    282e:	2c f0       	brlt	.+10     	; 0x283a <__pack_f+0x76>
    2830:	20 e0       	ldi	r18, 0x00	; 0
    2832:	30 e0       	ldi	r19, 0x00	; 0
    2834:	40 e0       	ldi	r20, 0x00	; 0
    2836:	50 e0       	ldi	r21, 0x00	; 0
    2838:	2a c0       	rjmp	.+84     	; 0x288e <__pack_f+0xca>
    283a:	b8 01       	movw	r22, r16
    283c:	a7 01       	movw	r20, r14
    283e:	02 2e       	mov	r0, r18
    2840:	04 c0       	rjmp	.+8      	; 0x284a <__pack_f+0x86>
    2842:	76 95       	lsr	r23
    2844:	67 95       	ror	r22
    2846:	57 95       	ror	r21
    2848:	47 95       	ror	r20
    284a:	0a 94       	dec	r0
    284c:	d2 f7       	brpl	.-12     	; 0x2842 <__pack_f+0x7e>
    284e:	81 e0       	ldi	r24, 0x01	; 1
    2850:	90 e0       	ldi	r25, 0x00	; 0
    2852:	a0 e0       	ldi	r26, 0x00	; 0
    2854:	b0 e0       	ldi	r27, 0x00	; 0
    2856:	04 c0       	rjmp	.+8      	; 0x2860 <__pack_f+0x9c>
    2858:	88 0f       	add	r24, r24
    285a:	99 1f       	adc	r25, r25
    285c:	aa 1f       	adc	r26, r26
    285e:	bb 1f       	adc	r27, r27
    2860:	2a 95       	dec	r18
    2862:	d2 f7       	brpl	.-12     	; 0x2858 <__pack_f+0x94>
    2864:	01 97       	sbiw	r24, 0x01	; 1
    2866:	a1 09       	sbc	r26, r1
    2868:	b1 09       	sbc	r27, r1
    286a:	8e 21       	and	r24, r14
    286c:	9f 21       	and	r25, r15
    286e:	a0 23       	and	r26, r16
    2870:	b1 23       	and	r27, r17
    2872:	00 97       	sbiw	r24, 0x00	; 0
    2874:	a1 05       	cpc	r26, r1
    2876:	b1 05       	cpc	r27, r1
    2878:	21 f0       	breq	.+8      	; 0x2882 <__pack_f+0xbe>
    287a:	81 e0       	ldi	r24, 0x01	; 1
    287c:	90 e0       	ldi	r25, 0x00	; 0
    287e:	a0 e0       	ldi	r26, 0x00	; 0
    2880:	b0 e0       	ldi	r27, 0x00	; 0
    2882:	9a 01       	movw	r18, r20
    2884:	ab 01       	movw	r20, r22
    2886:	28 2b       	or	r18, r24
    2888:	39 2b       	or	r19, r25
    288a:	4a 2b       	or	r20, r26
    288c:	5b 2b       	or	r21, r27
    288e:	da 01       	movw	r26, r20
    2890:	c9 01       	movw	r24, r18
    2892:	8f 77       	andi	r24, 0x7F	; 127
    2894:	90 70       	andi	r25, 0x00	; 0
    2896:	a0 70       	andi	r26, 0x00	; 0
    2898:	b0 70       	andi	r27, 0x00	; 0
    289a:	80 34       	cpi	r24, 0x40	; 64
    289c:	91 05       	cpc	r25, r1
    289e:	a1 05       	cpc	r26, r1
    28a0:	b1 05       	cpc	r27, r1
    28a2:	39 f4       	brne	.+14     	; 0x28b2 <__pack_f+0xee>
    28a4:	27 ff       	sbrs	r18, 7
    28a6:	09 c0       	rjmp	.+18     	; 0x28ba <__pack_f+0xf6>
    28a8:	20 5c       	subi	r18, 0xC0	; 192
    28aa:	3f 4f       	sbci	r19, 0xFF	; 255
    28ac:	4f 4f       	sbci	r20, 0xFF	; 255
    28ae:	5f 4f       	sbci	r21, 0xFF	; 255
    28b0:	04 c0       	rjmp	.+8      	; 0x28ba <__pack_f+0xf6>
    28b2:	21 5c       	subi	r18, 0xC1	; 193
    28b4:	3f 4f       	sbci	r19, 0xFF	; 255
    28b6:	4f 4f       	sbci	r20, 0xFF	; 255
    28b8:	5f 4f       	sbci	r21, 0xFF	; 255
    28ba:	e0 e0       	ldi	r30, 0x00	; 0
    28bc:	f0 e0       	ldi	r31, 0x00	; 0
    28be:	20 30       	cpi	r18, 0x00	; 0
    28c0:	a0 e0       	ldi	r26, 0x00	; 0
    28c2:	3a 07       	cpc	r19, r26
    28c4:	a0 e0       	ldi	r26, 0x00	; 0
    28c6:	4a 07       	cpc	r20, r26
    28c8:	a0 e4       	ldi	r26, 0x40	; 64
    28ca:	5a 07       	cpc	r21, r26
    28cc:	10 f0       	brcs	.+4      	; 0x28d2 <__pack_f+0x10e>
    28ce:	e1 e0       	ldi	r30, 0x01	; 1
    28d0:	f0 e0       	ldi	r31, 0x00	; 0
    28d2:	79 01       	movw	r14, r18
    28d4:	8a 01       	movw	r16, r20
    28d6:	27 c0       	rjmp	.+78     	; 0x2926 <__pack_f+0x162>
    28d8:	60 38       	cpi	r22, 0x80	; 128
    28da:	71 05       	cpc	r23, r1
    28dc:	64 f5       	brge	.+88     	; 0x2936 <__pack_f+0x172>
    28de:	fb 01       	movw	r30, r22
    28e0:	e1 58       	subi	r30, 0x81	; 129
    28e2:	ff 4f       	sbci	r31, 0xFF	; 255
    28e4:	d8 01       	movw	r26, r16
    28e6:	c7 01       	movw	r24, r14
    28e8:	8f 77       	andi	r24, 0x7F	; 127
    28ea:	90 70       	andi	r25, 0x00	; 0
    28ec:	a0 70       	andi	r26, 0x00	; 0
    28ee:	b0 70       	andi	r27, 0x00	; 0
    28f0:	80 34       	cpi	r24, 0x40	; 64
    28f2:	91 05       	cpc	r25, r1
    28f4:	a1 05       	cpc	r26, r1
    28f6:	b1 05       	cpc	r27, r1
    28f8:	39 f4       	brne	.+14     	; 0x2908 <__pack_f+0x144>
    28fa:	e7 fe       	sbrs	r14, 7
    28fc:	0d c0       	rjmp	.+26     	; 0x2918 <__pack_f+0x154>
    28fe:	80 e4       	ldi	r24, 0x40	; 64
    2900:	90 e0       	ldi	r25, 0x00	; 0
    2902:	a0 e0       	ldi	r26, 0x00	; 0
    2904:	b0 e0       	ldi	r27, 0x00	; 0
    2906:	04 c0       	rjmp	.+8      	; 0x2910 <__pack_f+0x14c>
    2908:	8f e3       	ldi	r24, 0x3F	; 63
    290a:	90 e0       	ldi	r25, 0x00	; 0
    290c:	a0 e0       	ldi	r26, 0x00	; 0
    290e:	b0 e0       	ldi	r27, 0x00	; 0
    2910:	e8 0e       	add	r14, r24
    2912:	f9 1e       	adc	r15, r25
    2914:	0a 1f       	adc	r16, r26
    2916:	1b 1f       	adc	r17, r27
    2918:	17 ff       	sbrs	r17, 7
    291a:	05 c0       	rjmp	.+10     	; 0x2926 <__pack_f+0x162>
    291c:	16 95       	lsr	r17
    291e:	07 95       	ror	r16
    2920:	f7 94       	ror	r15
    2922:	e7 94       	ror	r14
    2924:	31 96       	adiw	r30, 0x01	; 1
    2926:	87 e0       	ldi	r24, 0x07	; 7
    2928:	16 95       	lsr	r17
    292a:	07 95       	ror	r16
    292c:	f7 94       	ror	r15
    292e:	e7 94       	ror	r14
    2930:	8a 95       	dec	r24
    2932:	d1 f7       	brne	.-12     	; 0x2928 <__pack_f+0x164>
    2934:	05 c0       	rjmp	.+10     	; 0x2940 <__pack_f+0x17c>
    2936:	ee 24       	eor	r14, r14
    2938:	ff 24       	eor	r15, r15
    293a:	87 01       	movw	r16, r14
    293c:	ef ef       	ldi	r30, 0xFF	; 255
    293e:	f0 e0       	ldi	r31, 0x00	; 0
    2940:	6e 2f       	mov	r22, r30
    2942:	67 95       	ror	r22
    2944:	66 27       	eor	r22, r22
    2946:	67 95       	ror	r22
    2948:	90 2f       	mov	r25, r16
    294a:	9f 77       	andi	r25, 0x7F	; 127
    294c:	d7 94       	ror	r13
    294e:	dd 24       	eor	r13, r13
    2950:	d7 94       	ror	r13
    2952:	8e 2f       	mov	r24, r30
    2954:	86 95       	lsr	r24
    2956:	49 2f       	mov	r20, r25
    2958:	46 2b       	or	r20, r22
    295a:	58 2f       	mov	r21, r24
    295c:	5d 29       	or	r21, r13
    295e:	b7 01       	movw	r22, r14
    2960:	ca 01       	movw	r24, r20
    2962:	1f 91       	pop	r17
    2964:	0f 91       	pop	r16
    2966:	ff 90       	pop	r15
    2968:	ef 90       	pop	r14
    296a:	df 90       	pop	r13
    296c:	08 95       	ret

0000296e <__unpack_f>:
    296e:	fc 01       	movw	r30, r24
    2970:	db 01       	movw	r26, r22
    2972:	40 81       	ld	r20, Z
    2974:	51 81       	ldd	r21, Z+1	; 0x01
    2976:	22 81       	ldd	r18, Z+2	; 0x02
    2978:	62 2f       	mov	r22, r18
    297a:	6f 77       	andi	r22, 0x7F	; 127
    297c:	70 e0       	ldi	r23, 0x00	; 0
    297e:	22 1f       	adc	r18, r18
    2980:	22 27       	eor	r18, r18
    2982:	22 1f       	adc	r18, r18
    2984:	93 81       	ldd	r25, Z+3	; 0x03
    2986:	89 2f       	mov	r24, r25
    2988:	88 0f       	add	r24, r24
    298a:	82 2b       	or	r24, r18
    298c:	28 2f       	mov	r18, r24
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	99 1f       	adc	r25, r25
    2992:	99 27       	eor	r25, r25
    2994:	99 1f       	adc	r25, r25
    2996:	11 96       	adiw	r26, 0x01	; 1
    2998:	9c 93       	st	X, r25
    299a:	11 97       	sbiw	r26, 0x01	; 1
    299c:	21 15       	cp	r18, r1
    299e:	31 05       	cpc	r19, r1
    29a0:	a9 f5       	brne	.+106    	; 0x2a0c <__unpack_f+0x9e>
    29a2:	41 15       	cp	r20, r1
    29a4:	51 05       	cpc	r21, r1
    29a6:	61 05       	cpc	r22, r1
    29a8:	71 05       	cpc	r23, r1
    29aa:	11 f4       	brne	.+4      	; 0x29b0 <__unpack_f+0x42>
    29ac:	82 e0       	ldi	r24, 0x02	; 2
    29ae:	37 c0       	rjmp	.+110    	; 0x2a1e <__unpack_f+0xb0>
    29b0:	82 e8       	ldi	r24, 0x82	; 130
    29b2:	9f ef       	ldi	r25, 0xFF	; 255
    29b4:	13 96       	adiw	r26, 0x03	; 3
    29b6:	9c 93       	st	X, r25
    29b8:	8e 93       	st	-X, r24
    29ba:	12 97       	sbiw	r26, 0x02	; 2
    29bc:	9a 01       	movw	r18, r20
    29be:	ab 01       	movw	r20, r22
    29c0:	67 e0       	ldi	r22, 0x07	; 7
    29c2:	22 0f       	add	r18, r18
    29c4:	33 1f       	adc	r19, r19
    29c6:	44 1f       	adc	r20, r20
    29c8:	55 1f       	adc	r21, r21
    29ca:	6a 95       	dec	r22
    29cc:	d1 f7       	brne	.-12     	; 0x29c2 <__unpack_f+0x54>
    29ce:	83 e0       	ldi	r24, 0x03	; 3
    29d0:	8c 93       	st	X, r24
    29d2:	0d c0       	rjmp	.+26     	; 0x29ee <__unpack_f+0x80>
    29d4:	22 0f       	add	r18, r18
    29d6:	33 1f       	adc	r19, r19
    29d8:	44 1f       	adc	r20, r20
    29da:	55 1f       	adc	r21, r21
    29dc:	12 96       	adiw	r26, 0x02	; 2
    29de:	8d 91       	ld	r24, X+
    29e0:	9c 91       	ld	r25, X
    29e2:	13 97       	sbiw	r26, 0x03	; 3
    29e4:	01 97       	sbiw	r24, 0x01	; 1
    29e6:	13 96       	adiw	r26, 0x03	; 3
    29e8:	9c 93       	st	X, r25
    29ea:	8e 93       	st	-X, r24
    29ec:	12 97       	sbiw	r26, 0x02	; 2
    29ee:	20 30       	cpi	r18, 0x00	; 0
    29f0:	80 e0       	ldi	r24, 0x00	; 0
    29f2:	38 07       	cpc	r19, r24
    29f4:	80 e0       	ldi	r24, 0x00	; 0
    29f6:	48 07       	cpc	r20, r24
    29f8:	80 e4       	ldi	r24, 0x40	; 64
    29fa:	58 07       	cpc	r21, r24
    29fc:	58 f3       	brcs	.-42     	; 0x29d4 <__unpack_f+0x66>
    29fe:	14 96       	adiw	r26, 0x04	; 4
    2a00:	2d 93       	st	X+, r18
    2a02:	3d 93       	st	X+, r19
    2a04:	4d 93       	st	X+, r20
    2a06:	5c 93       	st	X, r21
    2a08:	17 97       	sbiw	r26, 0x07	; 7
    2a0a:	08 95       	ret
    2a0c:	2f 3f       	cpi	r18, 0xFF	; 255
    2a0e:	31 05       	cpc	r19, r1
    2a10:	79 f4       	brne	.+30     	; 0x2a30 <__unpack_f+0xc2>
    2a12:	41 15       	cp	r20, r1
    2a14:	51 05       	cpc	r21, r1
    2a16:	61 05       	cpc	r22, r1
    2a18:	71 05       	cpc	r23, r1
    2a1a:	19 f4       	brne	.+6      	; 0x2a22 <__unpack_f+0xb4>
    2a1c:	84 e0       	ldi	r24, 0x04	; 4
    2a1e:	8c 93       	st	X, r24
    2a20:	08 95       	ret
    2a22:	64 ff       	sbrs	r22, 4
    2a24:	03 c0       	rjmp	.+6      	; 0x2a2c <__unpack_f+0xbe>
    2a26:	81 e0       	ldi	r24, 0x01	; 1
    2a28:	8c 93       	st	X, r24
    2a2a:	12 c0       	rjmp	.+36     	; 0x2a50 <__unpack_f+0xe2>
    2a2c:	1c 92       	st	X, r1
    2a2e:	10 c0       	rjmp	.+32     	; 0x2a50 <__unpack_f+0xe2>
    2a30:	2f 57       	subi	r18, 0x7F	; 127
    2a32:	30 40       	sbci	r19, 0x00	; 0
    2a34:	13 96       	adiw	r26, 0x03	; 3
    2a36:	3c 93       	st	X, r19
    2a38:	2e 93       	st	-X, r18
    2a3a:	12 97       	sbiw	r26, 0x02	; 2
    2a3c:	83 e0       	ldi	r24, 0x03	; 3
    2a3e:	8c 93       	st	X, r24
    2a40:	87 e0       	ldi	r24, 0x07	; 7
    2a42:	44 0f       	add	r20, r20
    2a44:	55 1f       	adc	r21, r21
    2a46:	66 1f       	adc	r22, r22
    2a48:	77 1f       	adc	r23, r23
    2a4a:	8a 95       	dec	r24
    2a4c:	d1 f7       	brne	.-12     	; 0x2a42 <__unpack_f+0xd4>
    2a4e:	70 64       	ori	r23, 0x40	; 64
    2a50:	14 96       	adiw	r26, 0x04	; 4
    2a52:	4d 93       	st	X+, r20
    2a54:	5d 93       	st	X+, r21
    2a56:	6d 93       	st	X+, r22
    2a58:	7c 93       	st	X, r23
    2a5a:	17 97       	sbiw	r26, 0x07	; 7
    2a5c:	08 95       	ret

00002a5e <__fpcmp_parts_f>:
    2a5e:	1f 93       	push	r17
    2a60:	dc 01       	movw	r26, r24
    2a62:	fb 01       	movw	r30, r22
    2a64:	9c 91       	ld	r25, X
    2a66:	92 30       	cpi	r25, 0x02	; 2
    2a68:	08 f4       	brcc	.+2      	; 0x2a6c <__fpcmp_parts_f+0xe>
    2a6a:	47 c0       	rjmp	.+142    	; 0x2afa <__fpcmp_parts_f+0x9c>
    2a6c:	80 81       	ld	r24, Z
    2a6e:	82 30       	cpi	r24, 0x02	; 2
    2a70:	08 f4       	brcc	.+2      	; 0x2a74 <__fpcmp_parts_f+0x16>
    2a72:	43 c0       	rjmp	.+134    	; 0x2afa <__fpcmp_parts_f+0x9c>
    2a74:	94 30       	cpi	r25, 0x04	; 4
    2a76:	51 f4       	brne	.+20     	; 0x2a8c <__fpcmp_parts_f+0x2e>
    2a78:	11 96       	adiw	r26, 0x01	; 1
    2a7a:	1c 91       	ld	r17, X
    2a7c:	84 30       	cpi	r24, 0x04	; 4
    2a7e:	99 f5       	brne	.+102    	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2a80:	81 81       	ldd	r24, Z+1	; 0x01
    2a82:	68 2f       	mov	r22, r24
    2a84:	70 e0       	ldi	r23, 0x00	; 0
    2a86:	61 1b       	sub	r22, r17
    2a88:	71 09       	sbc	r23, r1
    2a8a:	3f c0       	rjmp	.+126    	; 0x2b0a <__fpcmp_parts_f+0xac>
    2a8c:	84 30       	cpi	r24, 0x04	; 4
    2a8e:	21 f0       	breq	.+8      	; 0x2a98 <__fpcmp_parts_f+0x3a>
    2a90:	92 30       	cpi	r25, 0x02	; 2
    2a92:	31 f4       	brne	.+12     	; 0x2aa0 <__fpcmp_parts_f+0x42>
    2a94:	82 30       	cpi	r24, 0x02	; 2
    2a96:	b9 f1       	breq	.+110    	; 0x2b06 <__fpcmp_parts_f+0xa8>
    2a98:	81 81       	ldd	r24, Z+1	; 0x01
    2a9a:	88 23       	and	r24, r24
    2a9c:	89 f1       	breq	.+98     	; 0x2b00 <__fpcmp_parts_f+0xa2>
    2a9e:	2d c0       	rjmp	.+90     	; 0x2afa <__fpcmp_parts_f+0x9c>
    2aa0:	11 96       	adiw	r26, 0x01	; 1
    2aa2:	1c 91       	ld	r17, X
    2aa4:	11 97       	sbiw	r26, 0x01	; 1
    2aa6:	82 30       	cpi	r24, 0x02	; 2
    2aa8:	f1 f0       	breq	.+60     	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2aaa:	81 81       	ldd	r24, Z+1	; 0x01
    2aac:	18 17       	cp	r17, r24
    2aae:	d9 f4       	brne	.+54     	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2ab0:	12 96       	adiw	r26, 0x02	; 2
    2ab2:	2d 91       	ld	r18, X+
    2ab4:	3c 91       	ld	r19, X
    2ab6:	13 97       	sbiw	r26, 0x03	; 3
    2ab8:	82 81       	ldd	r24, Z+2	; 0x02
    2aba:	93 81       	ldd	r25, Z+3	; 0x03
    2abc:	82 17       	cp	r24, r18
    2abe:	93 07       	cpc	r25, r19
    2ac0:	94 f0       	brlt	.+36     	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2ac2:	28 17       	cp	r18, r24
    2ac4:	39 07       	cpc	r19, r25
    2ac6:	bc f0       	brlt	.+46     	; 0x2af6 <__fpcmp_parts_f+0x98>
    2ac8:	14 96       	adiw	r26, 0x04	; 4
    2aca:	8d 91       	ld	r24, X+
    2acc:	9d 91       	ld	r25, X+
    2ace:	0d 90       	ld	r0, X+
    2ad0:	bc 91       	ld	r27, X
    2ad2:	a0 2d       	mov	r26, r0
    2ad4:	24 81       	ldd	r18, Z+4	; 0x04
    2ad6:	35 81       	ldd	r19, Z+5	; 0x05
    2ad8:	46 81       	ldd	r20, Z+6	; 0x06
    2ada:	57 81       	ldd	r21, Z+7	; 0x07
    2adc:	28 17       	cp	r18, r24
    2ade:	39 07       	cpc	r19, r25
    2ae0:	4a 07       	cpc	r20, r26
    2ae2:	5b 07       	cpc	r21, r27
    2ae4:	18 f4       	brcc	.+6      	; 0x2aec <__fpcmp_parts_f+0x8e>
    2ae6:	11 23       	and	r17, r17
    2ae8:	41 f0       	breq	.+16     	; 0x2afa <__fpcmp_parts_f+0x9c>
    2aea:	0a c0       	rjmp	.+20     	; 0x2b00 <__fpcmp_parts_f+0xa2>
    2aec:	82 17       	cp	r24, r18
    2aee:	93 07       	cpc	r25, r19
    2af0:	a4 07       	cpc	r26, r20
    2af2:	b5 07       	cpc	r27, r21
    2af4:	40 f4       	brcc	.+16     	; 0x2b06 <__fpcmp_parts_f+0xa8>
    2af6:	11 23       	and	r17, r17
    2af8:	19 f0       	breq	.+6      	; 0x2b00 <__fpcmp_parts_f+0xa2>
    2afa:	61 e0       	ldi	r22, 0x01	; 1
    2afc:	70 e0       	ldi	r23, 0x00	; 0
    2afe:	05 c0       	rjmp	.+10     	; 0x2b0a <__fpcmp_parts_f+0xac>
    2b00:	6f ef       	ldi	r22, 0xFF	; 255
    2b02:	7f ef       	ldi	r23, 0xFF	; 255
    2b04:	02 c0       	rjmp	.+4      	; 0x2b0a <__fpcmp_parts_f+0xac>
    2b06:	60 e0       	ldi	r22, 0x00	; 0
    2b08:	70 e0       	ldi	r23, 0x00	; 0
    2b0a:	cb 01       	movw	r24, r22
    2b0c:	1f 91       	pop	r17
    2b0e:	08 95       	ret

00002b10 <main>:
int counter = 2 ;
DC_Motor config;
void TASK();


int main(void){
    2b10:	df 93       	push	r29
    2b12:	cf 93       	push	r28
    2b14:	cd b7       	in	r28, 0x3d	; 61
    2b16:	de b7       	in	r29, 0x3e	; 62
    2b18:	6c 97       	sbiw	r28, 0x1c	; 28
    2b1a:	0f b6       	in	r0, 0x3f	; 63
    2b1c:	f8 94       	cli
    2b1e:	de bf       	out	0x3e, r29	; 62
    2b20:	0f be       	out	0x3f, r0	; 63
    2b22:	cd bf       	out	0x3d, r28	; 61

	config.port = DC_Port; 		// Specify the port for the DC Motor
    2b24:	84 e0       	ldi	r24, 0x04	; 4
    2b26:	80 93 96 01 	sts	0x0196, r24
	config.pin_1= DIO_u8PIN0;	// Specify the first pin of the motor
    2b2a:	10 92 94 01 	sts	0x0194, r1
	config.pin_2= DIO_u8PIN1;	// Specify the second pin of the motor
    2b2e:	81 e0       	ldi	r24, 0x01	; 1
    2b30:	80 93 95 01 	sts	0x0195, r24
	DC_Init(config);			// Initialize the DC Motor
    2b34:	60 91 94 01 	lds	r22, 0x0194
    2b38:	70 91 95 01 	lds	r23, 0x0195
    2b3c:	80 91 96 01 	lds	r24, 0x0196
    2b40:	0e 94 59 17 	call	0x2eb2	; 0x2eb2 <DC_Init>

	DIO_voidSetPinDirection(DIO_u8PORTD,DIO_u8PIN2,DIO_u8INPUT);
    2b44:	84 e0       	ldi	r24, 0x04	; 4
    2b46:	62 e0       	ldi	r22, 0x02	; 2
    2b48:	40 e0       	ldi	r20, 0x00	; 0
    2b4a:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(DIO_u8PORTD,DIO_u8PIN2,DIO_u8HIGH);
    2b4e:	84 e0       	ldi	r24, 0x04	; 4
    2b50:	62 e0       	ldi	r22, 0x02	; 2
    2b52:	41 e0       	ldi	r20, 0x01	; 1
    2b54:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPinDirection(DIO_u8PORTD,DIO_u8PIN3,DIO_u8OUTPUT);
    2b58:	84 e0       	ldi	r24, 0x04	; 4
    2b5a:	63 e0       	ldi	r22, 0x03	; 3
    2b5c:	41 e0       	ldi	r20, 0x01	; 1
    2b5e:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(DIO_u8PORTD,DIO_u8PIN3,DIO_u8HIGH);
    2b62:	84 e0       	ldi	r24, 0x04	; 4
    2b64:	63 e0       	ldi	r22, 0x03	; 3
    2b66:	41 e0       	ldi	r20, 0x01	; 1
    2b68:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>

	EXT_INT_voidInit(INT0,INT_FALLING_EDGE);
    2b6c:	80 e0       	ldi	r24, 0x00	; 0
    2b6e:	63 e0       	ldi	r22, 0x03	; 3
    2b70:	0e 94 6c 23 	call	0x46d8	; 0x46d8 <EXT_INT_voidInit>
	EXT_INT_voidSetCallBack(TASK,INT0);
    2b74:	8a ea       	ldi	r24, 0xAA	; 170
    2b76:	96 e1       	ldi	r25, 0x16	; 22
    2b78:	60 e0       	ldi	r22, 0x00	; 0
    2b7a:	0e 94 78 24 	call	0x48f0	; 0x48f0 <EXT_INT_voidSetCallBack>
	
	GIE_voidEnable();
    2b7e:	0e 94 50 23 	call	0x46a0	; 0x46a0 <GIE_voidEnable>
    2b82:	80 e0       	ldi	r24, 0x00	; 0
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	a8 e4       	ldi	r26, 0x48	; 72
    2b88:	b3 e4       	ldi	r27, 0x43	; 67
    2b8a:	89 8f       	std	Y+25, r24	; 0x19
    2b8c:	9a 8f       	std	Y+26, r25	; 0x1a
    2b8e:	ab 8f       	std	Y+27, r26	; 0x1b
    2b90:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b92:	69 8d       	ldd	r22, Y+25	; 0x19
    2b94:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b96:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b98:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b9a:	20 e0       	ldi	r18, 0x00	; 0
    2b9c:	30 e0       	ldi	r19, 0x00	; 0
    2b9e:	4a ef       	ldi	r20, 0xFA	; 250
    2ba0:	54 e4       	ldi	r21, 0x44	; 68
    2ba2:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2ba6:	dc 01       	movw	r26, r24
    2ba8:	cb 01       	movw	r24, r22
    2baa:	8d 8b       	std	Y+21, r24	; 0x15
    2bac:	9e 8b       	std	Y+22, r25	; 0x16
    2bae:	af 8b       	std	Y+23, r26	; 0x17
    2bb0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2bb2:	6d 89       	ldd	r22, Y+21	; 0x15
    2bb4:	7e 89       	ldd	r23, Y+22	; 0x16
    2bb6:	8f 89       	ldd	r24, Y+23	; 0x17
    2bb8:	98 8d       	ldd	r25, Y+24	; 0x18
    2bba:	20 e0       	ldi	r18, 0x00	; 0
    2bbc:	30 e0       	ldi	r19, 0x00	; 0
    2bbe:	40 e8       	ldi	r20, 0x80	; 128
    2bc0:	5f e3       	ldi	r21, 0x3F	; 63
    2bc2:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    2bc6:	88 23       	and	r24, r24
    2bc8:	2c f4       	brge	.+10     	; 0x2bd4 <main+0xc4>
		__ticks = 1;
    2bca:	81 e0       	ldi	r24, 0x01	; 1
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	9c 8b       	std	Y+20, r25	; 0x14
    2bd0:	8b 8b       	std	Y+19, r24	; 0x13
    2bd2:	3f c0       	rjmp	.+126    	; 0x2c52 <main+0x142>
	else if (__tmp > 65535)
    2bd4:	6d 89       	ldd	r22, Y+21	; 0x15
    2bd6:	7e 89       	ldd	r23, Y+22	; 0x16
    2bd8:	8f 89       	ldd	r24, Y+23	; 0x17
    2bda:	98 8d       	ldd	r25, Y+24	; 0x18
    2bdc:	20 e0       	ldi	r18, 0x00	; 0
    2bde:	3f ef       	ldi	r19, 0xFF	; 255
    2be0:	4f e7       	ldi	r20, 0x7F	; 127
    2be2:	57 e4       	ldi	r21, 0x47	; 71
    2be4:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    2be8:	18 16       	cp	r1, r24
    2bea:	4c f5       	brge	.+82     	; 0x2c3e <main+0x12e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bec:	69 8d       	ldd	r22, Y+25	; 0x19
    2bee:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2bf0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2bf2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2bf4:	20 e0       	ldi	r18, 0x00	; 0
    2bf6:	30 e0       	ldi	r19, 0x00	; 0
    2bf8:	40 e2       	ldi	r20, 0x20	; 32
    2bfa:	51 e4       	ldi	r21, 0x41	; 65
    2bfc:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2c00:	dc 01       	movw	r26, r24
    2c02:	cb 01       	movw	r24, r22
    2c04:	bc 01       	movw	r22, r24
    2c06:	cd 01       	movw	r24, r26
    2c08:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2c0c:	dc 01       	movw	r26, r24
    2c0e:	cb 01       	movw	r24, r22
    2c10:	9c 8b       	std	Y+20, r25	; 0x14
    2c12:	8b 8b       	std	Y+19, r24	; 0x13
    2c14:	0f c0       	rjmp	.+30     	; 0x2c34 <main+0x124>
    2c16:	88 ec       	ldi	r24, 0xC8	; 200
    2c18:	90 e0       	ldi	r25, 0x00	; 0
    2c1a:	9a 8b       	std	Y+18, r25	; 0x12
    2c1c:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2c1e:	89 89       	ldd	r24, Y+17	; 0x11
    2c20:	9a 89       	ldd	r25, Y+18	; 0x12
    2c22:	01 97       	sbiw	r24, 0x01	; 1
    2c24:	f1 f7       	brne	.-4      	; 0x2c22 <main+0x112>
    2c26:	9a 8b       	std	Y+18, r25	; 0x12
    2c28:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c2a:	8b 89       	ldd	r24, Y+19	; 0x13
    2c2c:	9c 89       	ldd	r25, Y+20	; 0x14
    2c2e:	01 97       	sbiw	r24, 0x01	; 1
    2c30:	9c 8b       	std	Y+20, r25	; 0x14
    2c32:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c34:	8b 89       	ldd	r24, Y+19	; 0x13
    2c36:	9c 89       	ldd	r25, Y+20	; 0x14
    2c38:	00 97       	sbiw	r24, 0x00	; 0
    2c3a:	69 f7       	brne	.-38     	; 0x2c16 <main+0x106>
    2c3c:	14 c0       	rjmp	.+40     	; 0x2c66 <main+0x156>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c3e:	6d 89       	ldd	r22, Y+21	; 0x15
    2c40:	7e 89       	ldd	r23, Y+22	; 0x16
    2c42:	8f 89       	ldd	r24, Y+23	; 0x17
    2c44:	98 8d       	ldd	r25, Y+24	; 0x18
    2c46:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2c4a:	dc 01       	movw	r26, r24
    2c4c:	cb 01       	movw	r24, r22
    2c4e:	9c 8b       	std	Y+20, r25	; 0x14
    2c50:	8b 8b       	std	Y+19, r24	; 0x13
    2c52:	8b 89       	ldd	r24, Y+19	; 0x13
    2c54:	9c 89       	ldd	r25, Y+20	; 0x14
    2c56:	98 8b       	std	Y+16, r25	; 0x10
    2c58:	8f 87       	std	Y+15, r24	; 0x0f
    2c5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c5c:	98 89       	ldd	r25, Y+16	; 0x10
    2c5e:	01 97       	sbiw	r24, 0x01	; 1
    2c60:	f1 f7       	brne	.-4      	; 0x2c5e <main+0x14e>
    2c62:	98 8b       	std	Y+16, r25	; 0x10
    2c64:	8f 87       	std	Y+15, r24	; 0x0f


	while (1){
		_delay_ms(200);
		DIO_voidSetTogglePin(DIO_u8PORTD,DIO_u8PIN3);
    2c66:	84 e0       	ldi	r24, 0x04	; 4
    2c68:	63 e0       	ldi	r22, 0x03	; 3
    2c6a:	0e 94 45 28 	call	0x508a	; 0x508a <DIO_voidSetTogglePin>
    2c6e:	80 e0       	ldi	r24, 0x00	; 0
    2c70:	90 e0       	ldi	r25, 0x00	; 0
    2c72:	a8 e4       	ldi	r26, 0x48	; 72
    2c74:	b3 e4       	ldi	r27, 0x43	; 67
    2c76:	8b 87       	std	Y+11, r24	; 0x0b
    2c78:	9c 87       	std	Y+12, r25	; 0x0c
    2c7a:	ad 87       	std	Y+13, r26	; 0x0d
    2c7c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c7e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c80:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c82:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c84:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c86:	20 e0       	ldi	r18, 0x00	; 0
    2c88:	30 e0       	ldi	r19, 0x00	; 0
    2c8a:	4a ef       	ldi	r20, 0xFA	; 250
    2c8c:	54 e4       	ldi	r21, 0x44	; 68
    2c8e:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2c92:	dc 01       	movw	r26, r24
    2c94:	cb 01       	movw	r24, r22
    2c96:	8f 83       	std	Y+7, r24	; 0x07
    2c98:	98 87       	std	Y+8, r25	; 0x08
    2c9a:	a9 87       	std	Y+9, r26	; 0x09
    2c9c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c9e:	6f 81       	ldd	r22, Y+7	; 0x07
    2ca0:	78 85       	ldd	r23, Y+8	; 0x08
    2ca2:	89 85       	ldd	r24, Y+9	; 0x09
    2ca4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ca6:	20 e0       	ldi	r18, 0x00	; 0
    2ca8:	30 e0       	ldi	r19, 0x00	; 0
    2caa:	40 e8       	ldi	r20, 0x80	; 128
    2cac:	5f e3       	ldi	r21, 0x3F	; 63
    2cae:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    2cb2:	88 23       	and	r24, r24
    2cb4:	2c f4       	brge	.+10     	; 0x2cc0 <main+0x1b0>
		__ticks = 1;
    2cb6:	81 e0       	ldi	r24, 0x01	; 1
    2cb8:	90 e0       	ldi	r25, 0x00	; 0
    2cba:	9e 83       	std	Y+6, r25	; 0x06
    2cbc:	8d 83       	std	Y+5, r24	; 0x05
    2cbe:	3f c0       	rjmp	.+126    	; 0x2d3e <main+0x22e>
	else if (__tmp > 65535)
    2cc0:	6f 81       	ldd	r22, Y+7	; 0x07
    2cc2:	78 85       	ldd	r23, Y+8	; 0x08
    2cc4:	89 85       	ldd	r24, Y+9	; 0x09
    2cc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cc8:	20 e0       	ldi	r18, 0x00	; 0
    2cca:	3f ef       	ldi	r19, 0xFF	; 255
    2ccc:	4f e7       	ldi	r20, 0x7F	; 127
    2cce:	57 e4       	ldi	r21, 0x47	; 71
    2cd0:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    2cd4:	18 16       	cp	r1, r24
    2cd6:	4c f5       	brge	.+82     	; 0x2d2a <main+0x21a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cd8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2cda:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cdc:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cde:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ce0:	20 e0       	ldi	r18, 0x00	; 0
    2ce2:	30 e0       	ldi	r19, 0x00	; 0
    2ce4:	40 e2       	ldi	r20, 0x20	; 32
    2ce6:	51 e4       	ldi	r21, 0x41	; 65
    2ce8:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2cec:	dc 01       	movw	r26, r24
    2cee:	cb 01       	movw	r24, r22
    2cf0:	bc 01       	movw	r22, r24
    2cf2:	cd 01       	movw	r24, r26
    2cf4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2cf8:	dc 01       	movw	r26, r24
    2cfa:	cb 01       	movw	r24, r22
    2cfc:	9e 83       	std	Y+6, r25	; 0x06
    2cfe:	8d 83       	std	Y+5, r24	; 0x05
    2d00:	0f c0       	rjmp	.+30     	; 0x2d20 <main+0x210>
    2d02:	88 ec       	ldi	r24, 0xC8	; 200
    2d04:	90 e0       	ldi	r25, 0x00	; 0
    2d06:	9c 83       	std	Y+4, r25	; 0x04
    2d08:	8b 83       	std	Y+3, r24	; 0x03
    2d0a:	8b 81       	ldd	r24, Y+3	; 0x03
    2d0c:	9c 81       	ldd	r25, Y+4	; 0x04
    2d0e:	01 97       	sbiw	r24, 0x01	; 1
    2d10:	f1 f7       	brne	.-4      	; 0x2d0e <main+0x1fe>
    2d12:	9c 83       	std	Y+4, r25	; 0x04
    2d14:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d16:	8d 81       	ldd	r24, Y+5	; 0x05
    2d18:	9e 81       	ldd	r25, Y+6	; 0x06
    2d1a:	01 97       	sbiw	r24, 0x01	; 1
    2d1c:	9e 83       	std	Y+6, r25	; 0x06
    2d1e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d20:	8d 81       	ldd	r24, Y+5	; 0x05
    2d22:	9e 81       	ldd	r25, Y+6	; 0x06
    2d24:	00 97       	sbiw	r24, 0x00	; 0
    2d26:	69 f7       	brne	.-38     	; 0x2d02 <main+0x1f2>
    2d28:	2c cf       	rjmp	.-424    	; 0x2b82 <main+0x72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d2a:	6f 81       	ldd	r22, Y+7	; 0x07
    2d2c:	78 85       	ldd	r23, Y+8	; 0x08
    2d2e:	89 85       	ldd	r24, Y+9	; 0x09
    2d30:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d32:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2d36:	dc 01       	movw	r26, r24
    2d38:	cb 01       	movw	r24, r22
    2d3a:	9e 83       	std	Y+6, r25	; 0x06
    2d3c:	8d 83       	std	Y+5, r24	; 0x05
    2d3e:	8d 81       	ldd	r24, Y+5	; 0x05
    2d40:	9e 81       	ldd	r25, Y+6	; 0x06
    2d42:	9a 83       	std	Y+2, r25	; 0x02
    2d44:	89 83       	std	Y+1, r24	; 0x01
    2d46:	89 81       	ldd	r24, Y+1	; 0x01
    2d48:	9a 81       	ldd	r25, Y+2	; 0x02
    2d4a:	01 97       	sbiw	r24, 0x01	; 1
    2d4c:	f1 f7       	brne	.-4      	; 0x2d4a <main+0x23a>
    2d4e:	9a 83       	std	Y+2, r25	; 0x02
    2d50:	89 83       	std	Y+1, r24	; 0x01
    2d52:	17 cf       	rjmp	.-466    	; 0x2b82 <main+0x72>

00002d54 <TASK>:
		_delay_ms(200);
	}
}


void TASK(){
    2d54:	df 93       	push	r29
    2d56:	cf 93       	push	r28
    2d58:	cd b7       	in	r28, 0x3d	; 61
    2d5a:	de b7       	in	r29, 0x3e	; 62
    2d5c:	2e 97       	sbiw	r28, 0x0e	; 14
    2d5e:	0f b6       	in	r0, 0x3f	; 63
    2d60:	f8 94       	cli
    2d62:	de bf       	out	0x3e, r29	; 62
    2d64:	0f be       	out	0x3f, r0	; 63
    2d66:	cd bf       	out	0x3d, r28	; 61
	if (counter % 2 == 0){
    2d68:	80 91 6b 01 	lds	r24, 0x016B
    2d6c:	90 91 6c 01 	lds	r25, 0x016C
    2d70:	81 70       	andi	r24, 0x01	; 1
    2d72:	90 70       	andi	r25, 0x00	; 0
    2d74:	00 97       	sbiw	r24, 0x00	; 0
    2d76:	49 f4       	brne	.+18     	; 0x2d8a <TASK+0x36>
		DC_Cw(config);
    2d78:	60 91 94 01 	lds	r22, 0x0194
    2d7c:	70 91 95 01 	lds	r23, 0x0195
    2d80:	80 91 96 01 	lds	r24, 0x0196
    2d84:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <DC_Cw>
    2d88:	10 c0       	rjmp	.+32     	; 0x2daa <TASK+0x56>
	}else if (counter % 2 != 0 ){
    2d8a:	80 91 6b 01 	lds	r24, 0x016B
    2d8e:	90 91 6c 01 	lds	r25, 0x016C
    2d92:	81 70       	andi	r24, 0x01	; 1
    2d94:	90 70       	andi	r25, 0x00	; 0
    2d96:	88 23       	and	r24, r24
    2d98:	41 f0       	breq	.+16     	; 0x2daa <TASK+0x56>
		DC_Ccw(config);
    2d9a:	60 91 94 01 	lds	r22, 0x0194
    2d9e:	70 91 95 01 	lds	r23, 0x0195
    2da2:	80 91 96 01 	lds	r24, 0x0196
    2da6:	0e 94 8f 17 	call	0x2f1e	; 0x2f1e <DC_Ccw>
    2daa:	80 e0       	ldi	r24, 0x00	; 0
    2dac:	90 e0       	ldi	r25, 0x00	; 0
    2dae:	a6 e9       	ldi	r26, 0x96	; 150
    2db0:	b3 e4       	ldi	r27, 0x43	; 67
    2db2:	8b 87       	std	Y+11, r24	; 0x0b
    2db4:	9c 87       	std	Y+12, r25	; 0x0c
    2db6:	ad 87       	std	Y+13, r26	; 0x0d
    2db8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dba:	6b 85       	ldd	r22, Y+11	; 0x0b
    2dbc:	7c 85       	ldd	r23, Y+12	; 0x0c
    2dbe:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dc0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dc2:	20 e0       	ldi	r18, 0x00	; 0
    2dc4:	30 e0       	ldi	r19, 0x00	; 0
    2dc6:	4a ef       	ldi	r20, 0xFA	; 250
    2dc8:	54 e4       	ldi	r21, 0x44	; 68
    2dca:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2dce:	dc 01       	movw	r26, r24
    2dd0:	cb 01       	movw	r24, r22
    2dd2:	8f 83       	std	Y+7, r24	; 0x07
    2dd4:	98 87       	std	Y+8, r25	; 0x08
    2dd6:	a9 87       	std	Y+9, r26	; 0x09
    2dd8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2dda:	6f 81       	ldd	r22, Y+7	; 0x07
    2ddc:	78 85       	ldd	r23, Y+8	; 0x08
    2dde:	89 85       	ldd	r24, Y+9	; 0x09
    2de0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2de2:	20 e0       	ldi	r18, 0x00	; 0
    2de4:	30 e0       	ldi	r19, 0x00	; 0
    2de6:	40 e8       	ldi	r20, 0x80	; 128
    2de8:	5f e3       	ldi	r21, 0x3F	; 63
    2dea:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    2dee:	88 23       	and	r24, r24
    2df0:	2c f4       	brge	.+10     	; 0x2dfc <TASK+0xa8>
		__ticks = 1;
    2df2:	81 e0       	ldi	r24, 0x01	; 1
    2df4:	90 e0       	ldi	r25, 0x00	; 0
    2df6:	9e 83       	std	Y+6, r25	; 0x06
    2df8:	8d 83       	std	Y+5, r24	; 0x05
    2dfa:	3f c0       	rjmp	.+126    	; 0x2e7a <TASK+0x126>
	else if (__tmp > 65535)
    2dfc:	6f 81       	ldd	r22, Y+7	; 0x07
    2dfe:	78 85       	ldd	r23, Y+8	; 0x08
    2e00:	89 85       	ldd	r24, Y+9	; 0x09
    2e02:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e04:	20 e0       	ldi	r18, 0x00	; 0
    2e06:	3f ef       	ldi	r19, 0xFF	; 255
    2e08:	4f e7       	ldi	r20, 0x7F	; 127
    2e0a:	57 e4       	ldi	r21, 0x47	; 71
    2e0c:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    2e10:	18 16       	cp	r1, r24
    2e12:	4c f5       	brge	.+82     	; 0x2e66 <TASK+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e14:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e16:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e18:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e1a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e1c:	20 e0       	ldi	r18, 0x00	; 0
    2e1e:	30 e0       	ldi	r19, 0x00	; 0
    2e20:	40 e2       	ldi	r20, 0x20	; 32
    2e22:	51 e4       	ldi	r21, 0x41	; 65
    2e24:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2e28:	dc 01       	movw	r26, r24
    2e2a:	cb 01       	movw	r24, r22
    2e2c:	bc 01       	movw	r22, r24
    2e2e:	cd 01       	movw	r24, r26
    2e30:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2e34:	dc 01       	movw	r26, r24
    2e36:	cb 01       	movw	r24, r22
    2e38:	9e 83       	std	Y+6, r25	; 0x06
    2e3a:	8d 83       	std	Y+5, r24	; 0x05
    2e3c:	0f c0       	rjmp	.+30     	; 0x2e5c <TASK+0x108>
    2e3e:	88 ec       	ldi	r24, 0xC8	; 200
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	9c 83       	std	Y+4, r25	; 0x04
    2e44:	8b 83       	std	Y+3, r24	; 0x03
    2e46:	8b 81       	ldd	r24, Y+3	; 0x03
    2e48:	9c 81       	ldd	r25, Y+4	; 0x04
    2e4a:	01 97       	sbiw	r24, 0x01	; 1
    2e4c:	f1 f7       	brne	.-4      	; 0x2e4a <TASK+0xf6>
    2e4e:	9c 83       	std	Y+4, r25	; 0x04
    2e50:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e52:	8d 81       	ldd	r24, Y+5	; 0x05
    2e54:	9e 81       	ldd	r25, Y+6	; 0x06
    2e56:	01 97       	sbiw	r24, 0x01	; 1
    2e58:	9e 83       	std	Y+6, r25	; 0x06
    2e5a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e5c:	8d 81       	ldd	r24, Y+5	; 0x05
    2e5e:	9e 81       	ldd	r25, Y+6	; 0x06
    2e60:	00 97       	sbiw	r24, 0x00	; 0
    2e62:	69 f7       	brne	.-38     	; 0x2e3e <TASK+0xea>
    2e64:	14 c0       	rjmp	.+40     	; 0x2e8e <TASK+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e66:	6f 81       	ldd	r22, Y+7	; 0x07
    2e68:	78 85       	ldd	r23, Y+8	; 0x08
    2e6a:	89 85       	ldd	r24, Y+9	; 0x09
    2e6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e6e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2e72:	dc 01       	movw	r26, r24
    2e74:	cb 01       	movw	r24, r22
    2e76:	9e 83       	std	Y+6, r25	; 0x06
    2e78:	8d 83       	std	Y+5, r24	; 0x05
    2e7a:	8d 81       	ldd	r24, Y+5	; 0x05
    2e7c:	9e 81       	ldd	r25, Y+6	; 0x06
    2e7e:	9a 83       	std	Y+2, r25	; 0x02
    2e80:	89 83       	std	Y+1, r24	; 0x01
    2e82:	89 81       	ldd	r24, Y+1	; 0x01
    2e84:	9a 81       	ldd	r25, Y+2	; 0x02
    2e86:	01 97       	sbiw	r24, 0x01	; 1
    2e88:	f1 f7       	brne	.-4      	; 0x2e86 <TASK+0x132>
    2e8a:	9a 83       	std	Y+2, r25	; 0x02
    2e8c:	89 83       	std	Y+1, r24	; 0x01
	}
	_delay_ms(300);
	counter++;
    2e8e:	80 91 6b 01 	lds	r24, 0x016B
    2e92:	90 91 6c 01 	lds	r25, 0x016C
    2e96:	01 96       	adiw	r24, 0x01	; 1
    2e98:	90 93 6c 01 	sts	0x016C, r25
    2e9c:	80 93 6b 01 	sts	0x016B, r24
}
    2ea0:	2e 96       	adiw	r28, 0x0e	; 14
    2ea2:	0f b6       	in	r0, 0x3f	; 63
    2ea4:	f8 94       	cli
    2ea6:	de bf       	out	0x3e, r29	; 62
    2ea8:	0f be       	out	0x3f, r0	; 63
    2eaa:	cd bf       	out	0x3d, r28	; 61
    2eac:	cf 91       	pop	r28
    2eae:	df 91       	pop	r29
    2eb0:	08 95       	ret

00002eb2 <DC_Init>:

#include "util/delay.h"
#include "DC_Motor_Interface.h"


void DC_Init(DC_Motor config){
    2eb2:	df 93       	push	r29
    2eb4:	cf 93       	push	r28
    2eb6:	00 d0       	rcall	.+0      	; 0x2eb8 <DC_Init+0x6>
    2eb8:	0f 92       	push	r0
    2eba:	cd b7       	in	r28, 0x3d	; 61
    2ebc:	de b7       	in	r29, 0x3e	; 62
    2ebe:	69 83       	std	Y+1, r22	; 0x01
    2ec0:	7a 83       	std	Y+2, r23	; 0x02
    2ec2:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinDirection(config.port,config.pin_1,DIO_u8OUTPUT);
    2ec4:	8b 81       	ldd	r24, Y+3	; 0x03
    2ec6:	99 81       	ldd	r25, Y+1	; 0x01
    2ec8:	69 2f       	mov	r22, r25
    2eca:	41 e0       	ldi	r20, 0x01	; 1
    2ecc:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(config.port,config.pin_2,DIO_u8OUTPUT);
    2ed0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ed4:	69 2f       	mov	r22, r25
    2ed6:	41 e0       	ldi	r20, 0x01	; 1
    2ed8:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>

}
    2edc:	0f 90       	pop	r0
    2ede:	0f 90       	pop	r0
    2ee0:	0f 90       	pop	r0
    2ee2:	cf 91       	pop	r28
    2ee4:	df 91       	pop	r29
    2ee6:	08 95       	ret

00002ee8 <DC_Cw>:

void DC_Cw(DC_Motor config){
    2ee8:	df 93       	push	r29
    2eea:	cf 93       	push	r28
    2eec:	00 d0       	rcall	.+0      	; 0x2eee <DC_Cw+0x6>
    2eee:	0f 92       	push	r0
    2ef0:	cd b7       	in	r28, 0x3d	; 61
    2ef2:	de b7       	in	r29, 0x3e	; 62
    2ef4:	69 83       	std	Y+1, r22	; 0x01
    2ef6:	7a 83       	std	Y+2, r23	; 0x02
    2ef8:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8HIGH);
    2efa:	8b 81       	ldd	r24, Y+3	; 0x03
    2efc:	9a 81       	ldd	r25, Y+2	; 0x02
    2efe:	69 2f       	mov	r22, r25
    2f00:	41 e0       	ldi	r20, 0x01	; 1
    2f02:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    2f06:	8b 81       	ldd	r24, Y+3	; 0x03
    2f08:	99 81       	ldd	r25, Y+1	; 0x01
    2f0a:	69 2f       	mov	r22, r25
    2f0c:	40 e0       	ldi	r20, 0x00	; 0
    2f0e:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
}
    2f12:	0f 90       	pop	r0
    2f14:	0f 90       	pop	r0
    2f16:	0f 90       	pop	r0
    2f18:	cf 91       	pop	r28
    2f1a:	df 91       	pop	r29
    2f1c:	08 95       	ret

00002f1e <DC_Ccw>:

void DC_Ccw(DC_Motor config){
    2f1e:	df 93       	push	r29
    2f20:	cf 93       	push	r28
    2f22:	00 d0       	rcall	.+0      	; 0x2f24 <DC_Ccw+0x6>
    2f24:	0f 92       	push	r0
    2f26:	cd b7       	in	r28, 0x3d	; 61
    2f28:	de b7       	in	r29, 0x3e	; 62
    2f2a:	69 83       	std	Y+1, r22	; 0x01
    2f2c:	7a 83       	std	Y+2, r23	; 0x02
    2f2e:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8HIGH);
    2f30:	8b 81       	ldd	r24, Y+3	; 0x03
    2f32:	99 81       	ldd	r25, Y+1	; 0x01
    2f34:	69 2f       	mov	r22, r25
    2f36:	41 e0       	ldi	r20, 0x01	; 1
    2f38:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    2f3c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f40:	69 2f       	mov	r22, r25
    2f42:	40 e0       	ldi	r20, 0x00	; 0
    2f44:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
}
    2f48:	0f 90       	pop	r0
    2f4a:	0f 90       	pop	r0
    2f4c:	0f 90       	pop	r0
    2f4e:	cf 91       	pop	r28
    2f50:	df 91       	pop	r29
    2f52:	08 95       	ret

00002f54 <DC_Off>:

void DC_Off(DC_Motor config){
    2f54:	df 93       	push	r29
    2f56:	cf 93       	push	r28
    2f58:	00 d0       	rcall	.+0      	; 0x2f5a <DC_Off+0x6>
    2f5a:	0f 92       	push	r0
    2f5c:	cd b7       	in	r28, 0x3d	; 61
    2f5e:	de b7       	in	r29, 0x3e	; 62
    2f60:	69 83       	std	Y+1, r22	; 0x01
    2f62:	7a 83       	std	Y+2, r23	; 0x02
    2f64:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    2f66:	8b 81       	ldd	r24, Y+3	; 0x03
    2f68:	99 81       	ldd	r25, Y+1	; 0x01
    2f6a:	69 2f       	mov	r22, r25
    2f6c:	40 e0       	ldi	r20, 0x00	; 0
    2f6e:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    2f72:	8b 81       	ldd	r24, Y+3	; 0x03
    2f74:	9a 81       	ldd	r25, Y+2	; 0x02
    2f76:	69 2f       	mov	r22, r25
    2f78:	40 e0       	ldi	r20, 0x00	; 0
    2f7a:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
}
    2f7e:	0f 90       	pop	r0
    2f80:	0f 90       	pop	r0
    2f82:	0f 90       	pop	r0
    2f84:	cf 91       	pop	r28
    2f86:	df 91       	pop	r29
    2f88:	08 95       	ret

00002f8a <DC_Tog>:
void DC_Tog(DC_Motor config , uint64 delay)
{
    2f8a:	ef 92       	push	r14
    2f8c:	ff 92       	push	r15
    2f8e:	0f 93       	push	r16
    2f90:	1f 93       	push	r17
    2f92:	df 93       	push	r29
    2f94:	cf 93       	push	r28
    2f96:	cd b7       	in	r28, 0x3d	; 61
    2f98:	de b7       	in	r29, 0x3e	; 62
    2f9a:	a7 97       	sbiw	r28, 0x27	; 39
    2f9c:	0f b6       	in	r0, 0x3f	; 63
    2f9e:	f8 94       	cli
    2fa0:	de bf       	out	0x3e, r29	; 62
    2fa2:	0f be       	out	0x3f, r0	; 63
    2fa4:	cd bf       	out	0x3d, r28	; 61
    2fa6:	6d 8f       	std	Y+29, r22	; 0x1d
    2fa8:	7e 8f       	std	Y+30, r23	; 0x1e
    2faa:	8f 8f       	std	Y+31, r24	; 0x1f
    2fac:	e8 a2       	std	Y+32, r14	; 0x20
    2fae:	f9 a2       	std	Y+33, r15	; 0x21
    2fb0:	0a a3       	std	Y+34, r16	; 0x22
    2fb2:	1b a3       	std	Y+35, r17	; 0x23
    2fb4:	2c a3       	std	Y+36, r18	; 0x24
    2fb6:	3d a3       	std	Y+37, r19	; 0x25
    2fb8:	4e a3       	std	Y+38, r20	; 0x26
    2fba:	5f a3       	std	Y+39, r21	; 0x27
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8HIGH);
    2fbc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2fbe:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2fc0:	69 2f       	mov	r22, r25
    2fc2:	41 e0       	ldi	r20, 0x01	; 1
    2fc4:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    2fc8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2fca:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2fcc:	69 2f       	mov	r22, r25
    2fce:	40 e0       	ldi	r20, 0x00	; 0
    2fd0:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	_delay_ms(delay);
    2fd4:	28 a1       	ldd	r18, Y+32	; 0x20
    2fd6:	39 a1       	ldd	r19, Y+33	; 0x21
    2fd8:	4a a1       	ldd	r20, Y+34	; 0x22
    2fda:	5b a1       	ldd	r21, Y+35	; 0x23
    2fdc:	6c a1       	ldd	r22, Y+36	; 0x24
    2fde:	7d a1       	ldd	r23, Y+37	; 0x25
    2fe0:	8e a1       	ldd	r24, Y+38	; 0x26
    2fe2:	9f a1       	ldd	r25, Y+39	; 0x27
    2fe4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__floatundisf>
    2fe8:	dc 01       	movw	r26, r24
    2fea:	cb 01       	movw	r24, r22
    2fec:	89 8f       	std	Y+25, r24	; 0x19
    2fee:	9a 8f       	std	Y+26, r25	; 0x1a
    2ff0:	ab 8f       	std	Y+27, r26	; 0x1b
    2ff2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ff4:	69 8d       	ldd	r22, Y+25	; 0x19
    2ff6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ff8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ffa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ffc:	20 e0       	ldi	r18, 0x00	; 0
    2ffe:	30 e0       	ldi	r19, 0x00	; 0
    3000:	4a ef       	ldi	r20, 0xFA	; 250
    3002:	54 e4       	ldi	r21, 0x44	; 68
    3004:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3008:	dc 01       	movw	r26, r24
    300a:	cb 01       	movw	r24, r22
    300c:	8d 8b       	std	Y+21, r24	; 0x15
    300e:	9e 8b       	std	Y+22, r25	; 0x16
    3010:	af 8b       	std	Y+23, r26	; 0x17
    3012:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3014:	6d 89       	ldd	r22, Y+21	; 0x15
    3016:	7e 89       	ldd	r23, Y+22	; 0x16
    3018:	8f 89       	ldd	r24, Y+23	; 0x17
    301a:	98 8d       	ldd	r25, Y+24	; 0x18
    301c:	20 e0       	ldi	r18, 0x00	; 0
    301e:	30 e0       	ldi	r19, 0x00	; 0
    3020:	40 e8       	ldi	r20, 0x80	; 128
    3022:	5f e3       	ldi	r21, 0x3F	; 63
    3024:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    3028:	88 23       	and	r24, r24
    302a:	2c f4       	brge	.+10     	; 0x3036 <DC_Tog+0xac>
		__ticks = 1;
    302c:	81 e0       	ldi	r24, 0x01	; 1
    302e:	90 e0       	ldi	r25, 0x00	; 0
    3030:	9c 8b       	std	Y+20, r25	; 0x14
    3032:	8b 8b       	std	Y+19, r24	; 0x13
    3034:	3f c0       	rjmp	.+126    	; 0x30b4 <DC_Tog+0x12a>
	else if (__tmp > 65535)
    3036:	6d 89       	ldd	r22, Y+21	; 0x15
    3038:	7e 89       	ldd	r23, Y+22	; 0x16
    303a:	8f 89       	ldd	r24, Y+23	; 0x17
    303c:	98 8d       	ldd	r25, Y+24	; 0x18
    303e:	20 e0       	ldi	r18, 0x00	; 0
    3040:	3f ef       	ldi	r19, 0xFF	; 255
    3042:	4f e7       	ldi	r20, 0x7F	; 127
    3044:	57 e4       	ldi	r21, 0x47	; 71
    3046:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    304a:	18 16       	cp	r1, r24
    304c:	4c f5       	brge	.+82     	; 0x30a0 <DC_Tog+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    304e:	69 8d       	ldd	r22, Y+25	; 0x19
    3050:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3052:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3054:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3056:	20 e0       	ldi	r18, 0x00	; 0
    3058:	30 e0       	ldi	r19, 0x00	; 0
    305a:	40 e2       	ldi	r20, 0x20	; 32
    305c:	51 e4       	ldi	r21, 0x41	; 65
    305e:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3062:	dc 01       	movw	r26, r24
    3064:	cb 01       	movw	r24, r22
    3066:	bc 01       	movw	r22, r24
    3068:	cd 01       	movw	r24, r26
    306a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    306e:	dc 01       	movw	r26, r24
    3070:	cb 01       	movw	r24, r22
    3072:	9c 8b       	std	Y+20, r25	; 0x14
    3074:	8b 8b       	std	Y+19, r24	; 0x13
    3076:	0f c0       	rjmp	.+30     	; 0x3096 <DC_Tog+0x10c>
    3078:	88 ec       	ldi	r24, 0xC8	; 200
    307a:	90 e0       	ldi	r25, 0x00	; 0
    307c:	9a 8b       	std	Y+18, r25	; 0x12
    307e:	89 8b       	std	Y+17, r24	; 0x11
    3080:	89 89       	ldd	r24, Y+17	; 0x11
    3082:	9a 89       	ldd	r25, Y+18	; 0x12
    3084:	01 97       	sbiw	r24, 0x01	; 1
    3086:	f1 f7       	brne	.-4      	; 0x3084 <DC_Tog+0xfa>
    3088:	9a 8b       	std	Y+18, r25	; 0x12
    308a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    308c:	8b 89       	ldd	r24, Y+19	; 0x13
    308e:	9c 89       	ldd	r25, Y+20	; 0x14
    3090:	01 97       	sbiw	r24, 0x01	; 1
    3092:	9c 8b       	std	Y+20, r25	; 0x14
    3094:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3096:	8b 89       	ldd	r24, Y+19	; 0x13
    3098:	9c 89       	ldd	r25, Y+20	; 0x14
    309a:	00 97       	sbiw	r24, 0x00	; 0
    309c:	69 f7       	brne	.-38     	; 0x3078 <DC_Tog+0xee>
    309e:	14 c0       	rjmp	.+40     	; 0x30c8 <DC_Tog+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30a0:	6d 89       	ldd	r22, Y+21	; 0x15
    30a2:	7e 89       	ldd	r23, Y+22	; 0x16
    30a4:	8f 89       	ldd	r24, Y+23	; 0x17
    30a6:	98 8d       	ldd	r25, Y+24	; 0x18
    30a8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    30ac:	dc 01       	movw	r26, r24
    30ae:	cb 01       	movw	r24, r22
    30b0:	9c 8b       	std	Y+20, r25	; 0x14
    30b2:	8b 8b       	std	Y+19, r24	; 0x13
    30b4:	8b 89       	ldd	r24, Y+19	; 0x13
    30b6:	9c 89       	ldd	r25, Y+20	; 0x14
    30b8:	98 8b       	std	Y+16, r25	; 0x10
    30ba:	8f 87       	std	Y+15, r24	; 0x0f
    30bc:	8f 85       	ldd	r24, Y+15	; 0x0f
    30be:	98 89       	ldd	r25, Y+16	; 0x10
    30c0:	01 97       	sbiw	r24, 0x01	; 1
    30c2:	f1 f7       	brne	.-4      	; 0x30c0 <DC_Tog+0x136>
    30c4:	98 8b       	std	Y+16, r25	; 0x10
    30c6:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8HIGH);
    30c8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    30ca:	9d 8d       	ldd	r25, Y+29	; 0x1d
    30cc:	69 2f       	mov	r22, r25
    30ce:	41 e0       	ldi	r20, 0x01	; 1
    30d0:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    30d4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    30d6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    30d8:	69 2f       	mov	r22, r25
    30da:	40 e0       	ldi	r20, 0x00	; 0
    30dc:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	_delay_ms(delay);
    30e0:	28 a1       	ldd	r18, Y+32	; 0x20
    30e2:	39 a1       	ldd	r19, Y+33	; 0x21
    30e4:	4a a1       	ldd	r20, Y+34	; 0x22
    30e6:	5b a1       	ldd	r21, Y+35	; 0x23
    30e8:	6c a1       	ldd	r22, Y+36	; 0x24
    30ea:	7d a1       	ldd	r23, Y+37	; 0x25
    30ec:	8e a1       	ldd	r24, Y+38	; 0x26
    30ee:	9f a1       	ldd	r25, Y+39	; 0x27
    30f0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__floatundisf>
    30f4:	dc 01       	movw	r26, r24
    30f6:	cb 01       	movw	r24, r22
    30f8:	8b 87       	std	Y+11, r24	; 0x0b
    30fa:	9c 87       	std	Y+12, r25	; 0x0c
    30fc:	ad 87       	std	Y+13, r26	; 0x0d
    30fe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3100:	6b 85       	ldd	r22, Y+11	; 0x0b
    3102:	7c 85       	ldd	r23, Y+12	; 0x0c
    3104:	8d 85       	ldd	r24, Y+13	; 0x0d
    3106:	9e 85       	ldd	r25, Y+14	; 0x0e
    3108:	20 e0       	ldi	r18, 0x00	; 0
    310a:	30 e0       	ldi	r19, 0x00	; 0
    310c:	4a ef       	ldi	r20, 0xFA	; 250
    310e:	54 e4       	ldi	r21, 0x44	; 68
    3110:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3114:	dc 01       	movw	r26, r24
    3116:	cb 01       	movw	r24, r22
    3118:	8f 83       	std	Y+7, r24	; 0x07
    311a:	98 87       	std	Y+8, r25	; 0x08
    311c:	a9 87       	std	Y+9, r26	; 0x09
    311e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3120:	6f 81       	ldd	r22, Y+7	; 0x07
    3122:	78 85       	ldd	r23, Y+8	; 0x08
    3124:	89 85       	ldd	r24, Y+9	; 0x09
    3126:	9a 85       	ldd	r25, Y+10	; 0x0a
    3128:	20 e0       	ldi	r18, 0x00	; 0
    312a:	30 e0       	ldi	r19, 0x00	; 0
    312c:	40 e8       	ldi	r20, 0x80	; 128
    312e:	5f e3       	ldi	r21, 0x3F	; 63
    3130:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    3134:	88 23       	and	r24, r24
    3136:	2c f4       	brge	.+10     	; 0x3142 <DC_Tog+0x1b8>
		__ticks = 1;
    3138:	81 e0       	ldi	r24, 0x01	; 1
    313a:	90 e0       	ldi	r25, 0x00	; 0
    313c:	9e 83       	std	Y+6, r25	; 0x06
    313e:	8d 83       	std	Y+5, r24	; 0x05
    3140:	3f c0       	rjmp	.+126    	; 0x31c0 <DC_Tog+0x236>
	else if (__tmp > 65535)
    3142:	6f 81       	ldd	r22, Y+7	; 0x07
    3144:	78 85       	ldd	r23, Y+8	; 0x08
    3146:	89 85       	ldd	r24, Y+9	; 0x09
    3148:	9a 85       	ldd	r25, Y+10	; 0x0a
    314a:	20 e0       	ldi	r18, 0x00	; 0
    314c:	3f ef       	ldi	r19, 0xFF	; 255
    314e:	4f e7       	ldi	r20, 0x7F	; 127
    3150:	57 e4       	ldi	r21, 0x47	; 71
    3152:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    3156:	18 16       	cp	r1, r24
    3158:	4c f5       	brge	.+82     	; 0x31ac <DC_Tog+0x222>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    315a:	6b 85       	ldd	r22, Y+11	; 0x0b
    315c:	7c 85       	ldd	r23, Y+12	; 0x0c
    315e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3160:	9e 85       	ldd	r25, Y+14	; 0x0e
    3162:	20 e0       	ldi	r18, 0x00	; 0
    3164:	30 e0       	ldi	r19, 0x00	; 0
    3166:	40 e2       	ldi	r20, 0x20	; 32
    3168:	51 e4       	ldi	r21, 0x41	; 65
    316a:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    316e:	dc 01       	movw	r26, r24
    3170:	cb 01       	movw	r24, r22
    3172:	bc 01       	movw	r22, r24
    3174:	cd 01       	movw	r24, r26
    3176:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    317a:	dc 01       	movw	r26, r24
    317c:	cb 01       	movw	r24, r22
    317e:	9e 83       	std	Y+6, r25	; 0x06
    3180:	8d 83       	std	Y+5, r24	; 0x05
    3182:	0f c0       	rjmp	.+30     	; 0x31a2 <DC_Tog+0x218>
    3184:	88 ec       	ldi	r24, 0xC8	; 200
    3186:	90 e0       	ldi	r25, 0x00	; 0
    3188:	9c 83       	std	Y+4, r25	; 0x04
    318a:	8b 83       	std	Y+3, r24	; 0x03
    318c:	8b 81       	ldd	r24, Y+3	; 0x03
    318e:	9c 81       	ldd	r25, Y+4	; 0x04
    3190:	01 97       	sbiw	r24, 0x01	; 1
    3192:	f1 f7       	brne	.-4      	; 0x3190 <DC_Tog+0x206>
    3194:	9c 83       	std	Y+4, r25	; 0x04
    3196:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3198:	8d 81       	ldd	r24, Y+5	; 0x05
    319a:	9e 81       	ldd	r25, Y+6	; 0x06
    319c:	01 97       	sbiw	r24, 0x01	; 1
    319e:	9e 83       	std	Y+6, r25	; 0x06
    31a0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31a2:	8d 81       	ldd	r24, Y+5	; 0x05
    31a4:	9e 81       	ldd	r25, Y+6	; 0x06
    31a6:	00 97       	sbiw	r24, 0x00	; 0
    31a8:	69 f7       	brne	.-38     	; 0x3184 <DC_Tog+0x1fa>
    31aa:	14 c0       	rjmp	.+40     	; 0x31d4 <DC_Tog+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31ac:	6f 81       	ldd	r22, Y+7	; 0x07
    31ae:	78 85       	ldd	r23, Y+8	; 0x08
    31b0:	89 85       	ldd	r24, Y+9	; 0x09
    31b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    31b4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    31b8:	dc 01       	movw	r26, r24
    31ba:	cb 01       	movw	r24, r22
    31bc:	9e 83       	std	Y+6, r25	; 0x06
    31be:	8d 83       	std	Y+5, r24	; 0x05
    31c0:	8d 81       	ldd	r24, Y+5	; 0x05
    31c2:	9e 81       	ldd	r25, Y+6	; 0x06
    31c4:	9a 83       	std	Y+2, r25	; 0x02
    31c6:	89 83       	std	Y+1, r24	; 0x01
    31c8:	89 81       	ldd	r24, Y+1	; 0x01
    31ca:	9a 81       	ldd	r25, Y+2	; 0x02
    31cc:	01 97       	sbiw	r24, 0x01	; 1
    31ce:	f1 f7       	brne	.-4      	; 0x31cc <DC_Tog+0x242>
    31d0:	9a 83       	std	Y+2, r25	; 0x02
    31d2:	89 83       	std	Y+1, r24	; 0x01
}
    31d4:	a7 96       	adiw	r28, 0x27	; 39
    31d6:	0f b6       	in	r0, 0x3f	; 63
    31d8:	f8 94       	cli
    31da:	de bf       	out	0x3e, r29	; 62
    31dc:	0f be       	out	0x3f, r0	; 63
    31de:	cd bf       	out	0x3d, r28	; 61
    31e0:	cf 91       	pop	r28
    31e2:	df 91       	pop	r29
    31e4:	1f 91       	pop	r17
    31e6:	0f 91       	pop	r16
    31e8:	ff 90       	pop	r15
    31ea:	ef 90       	pop	r14
    31ec:	08 95       	ret

000031ee <Keypad_init>:
		{'4','5','6','*'},
		{'1','2','3','-'},
		{'c','0','=','+'},
};

void Keypad_init(void){
    31ee:	df 93       	push	r29
    31f0:	cf 93       	push	r28
    31f2:	cd b7       	in	r28, 0x3d	; 61
    31f4:	de b7       	in	r29, 0x3e	; 62
    31f6:	28 97       	sbiw	r28, 0x08	; 8
    31f8:	0f b6       	in	r0, 0x3f	; 63
    31fa:	f8 94       	cli
    31fc:	de bf       	out	0x3e, r29	; 62
    31fe:	0f be       	out	0x3f, r0	; 63
    3200:	cd bf       	out	0x3d, r28	; 61


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    3202:	18 86       	std	Y+8, r1	; 0x08
    3204:	1f 82       	std	Y+7, r1	; 0x07
    3206:	0b c0       	rjmp	.+22     	; 0x321e <Keypad_init+0x30>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
    3208:	9f 81       	ldd	r25, Y+7	; 0x07
    320a:	83 e0       	ldi	r24, 0x03	; 3
    320c:	69 2f       	mov	r22, r25
    320e:	41 e0       	ldi	r20, 0x01	; 1
    3210:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>

void Keypad_init(void){


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    3214:	8f 81       	ldd	r24, Y+7	; 0x07
    3216:	98 85       	ldd	r25, Y+8	; 0x08
    3218:	01 96       	adiw	r24, 0x01	; 1
    321a:	98 87       	std	Y+8, r25	; 0x08
    321c:	8f 83       	std	Y+7, r24	; 0x07
    321e:	8f 81       	ldd	r24, Y+7	; 0x07
    3220:	98 85       	ldd	r25, Y+8	; 0x08
    3222:	84 30       	cpi	r24, 0x04	; 4
    3224:	91 05       	cpc	r25, r1
    3226:	84 f3       	brlt	.-32     	; 0x3208 <Keypad_init+0x1a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    3228:	1e 82       	std	Y+6, r1	; 0x06
    322a:	1d 82       	std	Y+5, r1	; 0x05
    322c:	0b c0       	rjmp	.+22     	; 0x3244 <Keypad_init+0x56>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    322e:	9d 81       	ldd	r25, Y+5	; 0x05
    3230:	83 e0       	ldi	r24, 0x03	; 3
    3232:	69 2f       	mov	r22, r25
    3234:	41 e0       	ldi	r20, 0x01	; 1
    3236:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
		for (int i=0; i<4; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    323a:	8d 81       	ldd	r24, Y+5	; 0x05
    323c:	9e 81       	ldd	r25, Y+6	; 0x06
    323e:	01 96       	adiw	r24, 0x01	; 1
    3240:	9e 83       	std	Y+6, r25	; 0x06
    3242:	8d 83       	std	Y+5, r24	; 0x05
    3244:	8d 81       	ldd	r24, Y+5	; 0x05
    3246:	9e 81       	ldd	r25, Y+6	; 0x06
    3248:	84 30       	cpi	r24, 0x04	; 4
    324a:	91 05       	cpc	r25, r1
    324c:	84 f3       	brlt	.-32     	; 0x322e <Keypad_init+0x40>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    324e:	84 e0       	ldi	r24, 0x04	; 4
    3250:	90 e0       	ldi	r25, 0x00	; 0
    3252:	9c 83       	std	Y+4, r25	; 0x04
    3254:	8b 83       	std	Y+3, r24	; 0x03
    3256:	0b c0       	rjmp	.+22     	; 0x326e <Keypad_init+0x80>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
    3258:	9b 81       	ldd	r25, Y+3	; 0x03
    325a:	83 e0       	ldi	r24, 0x03	; 3
    325c:	69 2f       	mov	r22, r25
    325e:	40 e0       	ldi	r20, 0x00	; 0
    3260:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>
	for (int i=0; i<4; i++){
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    3264:	8b 81       	ldd	r24, Y+3	; 0x03
    3266:	9c 81       	ldd	r25, Y+4	; 0x04
    3268:	01 96       	adiw	r24, 0x01	; 1
    326a:	9c 83       	std	Y+4, r25	; 0x04
    326c:	8b 83       	std	Y+3, r24	; 0x03
    326e:	8b 81       	ldd	r24, Y+3	; 0x03
    3270:	9c 81       	ldd	r25, Y+4	; 0x04
    3272:	88 30       	cpi	r24, 0x08	; 8
    3274:	91 05       	cpc	r25, r1
    3276:	84 f3       	brlt	.-32     	; 0x3258 <Keypad_init+0x6a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    3278:	84 e0       	ldi	r24, 0x04	; 4
    327a:	90 e0       	ldi	r25, 0x00	; 0
    327c:	9a 83       	std	Y+2, r25	; 0x02
    327e:	89 83       	std	Y+1, r24	; 0x01
    3280:	0b c0       	rjmp	.+22     	; 0x3298 <Keypad_init+0xaa>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    3282:	99 81       	ldd	r25, Y+1	; 0x01
    3284:	83 e0       	ldi	r24, 0x03	; 3
    3286:	69 2f       	mov	r22, r25
    3288:	41 e0       	ldi	r20, 0x01	; 1
    328a:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	for (int i=4; i<8; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    328e:	89 81       	ldd	r24, Y+1	; 0x01
    3290:	9a 81       	ldd	r25, Y+2	; 0x02
    3292:	01 96       	adiw	r24, 0x01	; 1
    3294:	9a 83       	std	Y+2, r25	; 0x02
    3296:	89 83       	std	Y+1, r24	; 0x01
    3298:	89 81       	ldd	r24, Y+1	; 0x01
    329a:	9a 81       	ldd	r25, Y+2	; 0x02
    329c:	88 30       	cpi	r24, 0x08	; 8
    329e:	91 05       	cpc	r25, r1
    32a0:	84 f3       	brlt	.-32     	; 0x3282 <Keypad_init+0x94>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
		}

}
    32a2:	28 96       	adiw	r28, 0x08	; 8
    32a4:	0f b6       	in	r0, 0x3f	; 63
    32a6:	f8 94       	cli
    32a8:	de bf       	out	0x3e, r29	; 62
    32aa:	0f be       	out	0x3f, r0	; 63
    32ac:	cd bf       	out	0x3d, r28	; 61
    32ae:	cf 91       	pop	r28
    32b0:	df 91       	pop	r29
    32b2:	08 95       	ret

000032b4 <KeyBad_uint8GetKey>:



uint8 KeyBad_uint8GetKey(void){
    32b4:	df 93       	push	r29
    32b6:	cf 93       	push	r28
    32b8:	00 d0       	rcall	.+0      	; 0x32ba <KeyBad_uint8GetKey+0x6>
    32ba:	00 d0       	rcall	.+0      	; 0x32bc <KeyBad_uint8GetKey+0x8>
    32bc:	00 d0       	rcall	.+0      	; 0x32be <KeyBad_uint8GetKey+0xa>
    32be:	cd b7       	in	r28, 0x3d	; 61
    32c0:	de b7       	in	r29, 0x3e	; 62
	uint8 Key = 'z';
    32c2:	8a e7       	ldi	r24, 0x7A	; 122
    32c4:	8e 83       	std	Y+6, r24	; 0x06
	uint8 x = 1 ;
    32c6:	81 e0       	ldi	r24, 0x01	; 1
    32c8:	8d 83       	std	Y+5, r24	; 0x05
	for (int r=0; r<4; r++){
    32ca:	1c 82       	std	Y+4, r1	; 0x04
    32cc:	1b 82       	std	Y+3, r1	; 0x03
    32ce:	43 c0       	rjmp	.+134    	; 0x3356 <KeyBad_uint8GetKey+0xa2>
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
    32d0:	9b 81       	ldd	r25, Y+3	; 0x03
    32d2:	83 e0       	ldi	r24, 0x03	; 3
    32d4:	69 2f       	mov	r22, r25
    32d6:	40 e0       	ldi	r20, 0x00	; 0
    32d8:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
		for(int c=4; c<8; c++){
    32dc:	84 e0       	ldi	r24, 0x04	; 4
    32de:	90 e0       	ldi	r25, 0x00	; 0
    32e0:	9a 83       	std	Y+2, r25	; 0x02
    32e2:	89 83       	std	Y+1, r24	; 0x01
    32e4:	28 c0       	rjmp	.+80     	; 0x3336 <KeyBad_uint8GetKey+0x82>
		 x=	DIO_u8GetPinValue(PortNum,c);
    32e6:	99 81       	ldd	r25, Y+1	; 0x01
    32e8:	83 e0       	ldi	r24, 0x03	; 3
    32ea:	69 2f       	mov	r22, r25
    32ec:	0e 94 48 27 	call	0x4e90	; 0x4e90 <DIO_u8GetPinValue>
    32f0:	8d 83       	std	Y+5, r24	; 0x05
			if (x ==0){
    32f2:	8d 81       	ldd	r24, Y+5	; 0x05
    32f4:	88 23       	and	r24, r24
    32f6:	99 f4       	brne	.+38     	; 0x331e <KeyBad_uint8GetKey+0x6a>
				Key = Keypad_arr[r][c-4];
    32f8:	4b 81       	ldd	r20, Y+3	; 0x03
    32fa:	5c 81       	ldd	r21, Y+4	; 0x04
    32fc:	89 81       	ldd	r24, Y+1	; 0x01
    32fe:	9a 81       	ldd	r25, Y+2	; 0x02
    3300:	9c 01       	movw	r18, r24
    3302:	24 50       	subi	r18, 0x04	; 4
    3304:	30 40       	sbci	r19, 0x00	; 0
    3306:	ca 01       	movw	r24, r20
    3308:	88 0f       	add	r24, r24
    330a:	99 1f       	adc	r25, r25
    330c:	88 0f       	add	r24, r24
    330e:	99 1f       	adc	r25, r25
    3310:	82 0f       	add	r24, r18
    3312:	93 1f       	adc	r25, r19
    3314:	fc 01       	movw	r30, r24
    3316:	e3 59       	subi	r30, 0x93	; 147
    3318:	fe 4f       	sbci	r31, 0xFE	; 254
    331a:	80 81       	ld	r24, Z
    331c:	8e 83       	std	Y+6, r24	; 0x06
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
    331e:	99 81       	ldd	r25, Y+1	; 0x01
    3320:	83 e0       	ldi	r24, 0x03	; 3
    3322:	69 2f       	mov	r22, r25
    3324:	0e 94 48 27 	call	0x4e90	; 0x4e90 <DIO_u8GetPinValue>
    3328:	88 23       	and	r24, r24
    332a:	c9 f3       	breq	.-14     	; 0x331e <KeyBad_uint8GetKey+0x6a>
uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
		for(int c=4; c<8; c++){
    332c:	89 81       	ldd	r24, Y+1	; 0x01
    332e:	9a 81       	ldd	r25, Y+2	; 0x02
    3330:	01 96       	adiw	r24, 0x01	; 1
    3332:	9a 83       	std	Y+2, r25	; 0x02
    3334:	89 83       	std	Y+1, r24	; 0x01
    3336:	89 81       	ldd	r24, Y+1	; 0x01
    3338:	9a 81       	ldd	r25, Y+2	; 0x02
    333a:	88 30       	cpi	r24, 0x08	; 8
    333c:	91 05       	cpc	r25, r1
    333e:	9c f2       	brlt	.-90     	; 0x32e6 <KeyBad_uint8GetKey+0x32>
			if (x ==0){
				Key = Keypad_arr[r][c-4];
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
    3340:	9b 81       	ldd	r25, Y+3	; 0x03
    3342:	83 e0       	ldi	r24, 0x03	; 3
    3344:	69 2f       	mov	r22, r25
    3346:	41 e0       	ldi	r20, 0x01	; 1
    3348:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>


uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
    334c:	8b 81       	ldd	r24, Y+3	; 0x03
    334e:	9c 81       	ldd	r25, Y+4	; 0x04
    3350:	01 96       	adiw	r24, 0x01	; 1
    3352:	9c 83       	std	Y+4, r25	; 0x04
    3354:	8b 83       	std	Y+3, r24	; 0x03
    3356:	8b 81       	ldd	r24, Y+3	; 0x03
    3358:	9c 81       	ldd	r25, Y+4	; 0x04
    335a:	84 30       	cpi	r24, 0x04	; 4
    335c:	91 05       	cpc	r25, r1
    335e:	0c f4       	brge	.+2      	; 0x3362 <KeyBad_uint8GetKey+0xae>
    3360:	b7 cf       	rjmp	.-146    	; 0x32d0 <KeyBad_uint8GetKey+0x1c>
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
	}
	return Key;
    3362:	8e 81       	ldd	r24, Y+6	; 0x06
}
    3364:	26 96       	adiw	r28, 0x06	; 6
    3366:	0f b6       	in	r0, 0x3f	; 63
    3368:	f8 94       	cli
    336a:	de bf       	out	0x3e, r29	; 62
    336c:	0f be       	out	0x3f, r0	; 63
    336e:	cd bf       	out	0x3d, r28	; 61
    3370:	cf 91       	pop	r28
    3372:	df 91       	pop	r29
    3374:	08 95       	ret

00003376 <PushButton_voidInit>:
/* Version             :  1.0.0                    */
/***************************************************/ 

#include "PushButton_interface.h"

void PushButton_voidInit(Button *Button){
    3376:	df 93       	push	r29
    3378:	cf 93       	push	r28
    337a:	00 d0       	rcall	.+0      	; 0x337c <PushButton_voidInit+0x6>
    337c:	cd b7       	in	r28, 0x3d	; 61
    337e:	de b7       	in	r29, 0x3e	; 62
    3380:	9a 83       	std	Y+2, r25	; 0x02
    3382:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(Button -> Button_port, Button -> Button_pin, DIO_u8INPUT);
    3384:	e9 81       	ldd	r30, Y+1	; 0x01
    3386:	fa 81       	ldd	r31, Y+2	; 0x02
    3388:	81 81       	ldd	r24, Z+1	; 0x01
    338a:	e9 81       	ldd	r30, Y+1	; 0x01
    338c:	fa 81       	ldd	r31, Y+2	; 0x02
    338e:	90 81       	ld	r25, Z
    3390:	69 2f       	mov	r22, r25
    3392:	40 e0       	ldi	r20, 0x00	; 0
    3394:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(Button-> Button_port, Button -> Button_pin, DIO_u8HIGH); //pull up
    3398:	e9 81       	ldd	r30, Y+1	; 0x01
    339a:	fa 81       	ldd	r31, Y+2	; 0x02
    339c:	81 81       	ldd	r24, Z+1	; 0x01
    339e:	e9 81       	ldd	r30, Y+1	; 0x01
    33a0:	fa 81       	ldd	r31, Y+2	; 0x02
    33a2:	90 81       	ld	r25, Z
    33a4:	69 2f       	mov	r22, r25
    33a6:	41 e0       	ldi	r20, 0x01	; 1
    33a8:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
}
    33ac:	0f 90       	pop	r0
    33ae:	0f 90       	pop	r0
    33b0:	cf 91       	pop	r28
    33b2:	df 91       	pop	r29
    33b4:	08 95       	ret

000033b6 <PushButton_voidRead>:

uint8 PushButton_voidRead(Button *Button){
    33b6:	df 93       	push	r29
    33b8:	cf 93       	push	r28
    33ba:	00 d0       	rcall	.+0      	; 0x33bc <PushButton_voidRead+0x6>
    33bc:	0f 92       	push	r0
    33be:	cd b7       	in	r28, 0x3d	; 61
    33c0:	de b7       	in	r29, 0x3e	; 62
    33c2:	9b 83       	std	Y+3, r25	; 0x03
    33c4:	8a 83       	std	Y+2, r24	; 0x02
    uint8 local_u8Read = DIO_u8GetPinValue(Button->Button_port, Button->Button_pin);
    33c6:	ea 81       	ldd	r30, Y+2	; 0x02
    33c8:	fb 81       	ldd	r31, Y+3	; 0x03
    33ca:	81 81       	ldd	r24, Z+1	; 0x01
    33cc:	ea 81       	ldd	r30, Y+2	; 0x02
    33ce:	fb 81       	ldd	r31, Y+3	; 0x03
    33d0:	90 81       	ld	r25, Z
    33d2:	69 2f       	mov	r22, r25
    33d4:	0e 94 48 27 	call	0x4e90	; 0x4e90 <DIO_u8GetPinValue>
    33d8:	89 83       	std	Y+1, r24	; 0x01
    static Button_state lastButtonState = Button_RELEASED; // Static variable to remember the last state

    if (local_u8Read == 0 && lastButtonState == Button_RELEASED) {
    33da:	89 81       	ldd	r24, Y+1	; 0x01
    33dc:	88 23       	and	r24, r24
    33de:	39 f4       	brne	.+14     	; 0x33ee <PushButton_voidRead+0x38>
    33e0:	80 91 7d 01 	lds	r24, 0x017D
    33e4:	81 30       	cpi	r24, 0x01	; 1
    33e6:	19 f4       	brne	.+6      	; 0x33ee <PushButton_voidRead+0x38>
        // Button was just pressed
        lastButtonState = Button_PRESSESD;
    33e8:	10 92 7d 01 	sts	0x017D, r1
    33ec:	0a c0       	rjmp	.+20     	; 0x3402 <PushButton_voidRead+0x4c>
    } else if (local_u8Read == 1 && lastButtonState == Button_PRESSESD) {
    33ee:	89 81       	ldd	r24, Y+1	; 0x01
    33f0:	81 30       	cpi	r24, 0x01	; 1
    33f2:	39 f4       	brne	.+14     	; 0x3402 <PushButton_voidRead+0x4c>
    33f4:	80 91 7d 01 	lds	r24, 0x017D
    33f8:	88 23       	and	r24, r24
    33fa:	19 f4       	brne	.+6      	; 0x3402 <PushButton_voidRead+0x4c>
        // Button was just released
        lastButtonState = Button_RELEASED;
    33fc:	81 e0       	ldi	r24, 0x01	; 1
    33fe:	80 93 7d 01 	sts	0x017D, r24
    }
    return lastButtonState;
    3402:	80 91 7d 01 	lds	r24, 0x017D
    3406:	0f 90       	pop	r0
    3408:	0f 90       	pop	r0
    340a:	0f 90       	pop	r0
    340c:	cf 91       	pop	r28
    340e:	df 91       	pop	r29
    3410:	08 95       	ret

00003412 <LCD_Init>:
/* Version             :  1.0.0                    */
/***************************************************/ 

#include "CLCD_interface.h"

void LCD_Init(void){
    3412:	df 93       	push	r29
    3414:	cf 93       	push	r28
    3416:	cd b7       	in	r28, 0x3d	; 61
    3418:	de b7       	in	r29, 0x3e	; 62
    341a:	6c 97       	sbiw	r28, 0x1c	; 28
    341c:	0f b6       	in	r0, 0x3f	; 63
    341e:	f8 94       	cli
    3420:	de bf       	out	0x3e, r29	; 62
    3422:	0f be       	out	0x3f, r0	; 63
    3424:	cd bf       	out	0x3d, r28	; 61
	DIO_voidSetPortDirection(DIO_u8PORTA ,DIO_u8PortOn);
    3426:	81 e0       	ldi	r24, 0x01	; 1
    3428:	6f ef       	ldi	r22, 0xFF	; 255
    342a:	0e 94 c1 27 	call	0x4f82	; 0x4f82 <DIO_voidSetPortDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_RS ,DIO_u8OUTPUT);
    342e:	82 e0       	ldi	r24, 0x02	; 2
    3430:	65 e0       	ldi	r22, 0x05	; 5
    3432:	41 e0       	ldi	r20, 0x01	; 1
    3434:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_EN ,DIO_u8OUTPUT);
    3438:	82 e0       	ldi	r24, 0x02	; 2
    343a:	67 e0       	ldi	r22, 0x07	; 7
    343c:	41 e0       	ldi	r20, 0x01	; 1
    343e:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>
    3442:	80 e0       	ldi	r24, 0x00	; 0
    3444:	90 e0       	ldi	r25, 0x00	; 0
    3446:	a8 e4       	ldi	r26, 0x48	; 72
    3448:	b2 e4       	ldi	r27, 0x42	; 66
    344a:	89 8f       	std	Y+25, r24	; 0x19
    344c:	9a 8f       	std	Y+26, r25	; 0x1a
    344e:	ab 8f       	std	Y+27, r26	; 0x1b
    3450:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3452:	69 8d       	ldd	r22, Y+25	; 0x19
    3454:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3456:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3458:	9c 8d       	ldd	r25, Y+28	; 0x1c
    345a:	20 e0       	ldi	r18, 0x00	; 0
    345c:	30 e0       	ldi	r19, 0x00	; 0
    345e:	4a ef       	ldi	r20, 0xFA	; 250
    3460:	54 e4       	ldi	r21, 0x44	; 68
    3462:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3466:	dc 01       	movw	r26, r24
    3468:	cb 01       	movw	r24, r22
    346a:	8d 8b       	std	Y+21, r24	; 0x15
    346c:	9e 8b       	std	Y+22, r25	; 0x16
    346e:	af 8b       	std	Y+23, r26	; 0x17
    3470:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3472:	6d 89       	ldd	r22, Y+21	; 0x15
    3474:	7e 89       	ldd	r23, Y+22	; 0x16
    3476:	8f 89       	ldd	r24, Y+23	; 0x17
    3478:	98 8d       	ldd	r25, Y+24	; 0x18
    347a:	20 e0       	ldi	r18, 0x00	; 0
    347c:	30 e0       	ldi	r19, 0x00	; 0
    347e:	40 e8       	ldi	r20, 0x80	; 128
    3480:	5f e3       	ldi	r21, 0x3F	; 63
    3482:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    3486:	88 23       	and	r24, r24
    3488:	2c f4       	brge	.+10     	; 0x3494 <LCD_Init+0x82>
		__ticks = 1;
    348a:	81 e0       	ldi	r24, 0x01	; 1
    348c:	90 e0       	ldi	r25, 0x00	; 0
    348e:	9c 8b       	std	Y+20, r25	; 0x14
    3490:	8b 8b       	std	Y+19, r24	; 0x13
    3492:	3f c0       	rjmp	.+126    	; 0x3512 <LCD_Init+0x100>
	else if (__tmp > 65535)
    3494:	6d 89       	ldd	r22, Y+21	; 0x15
    3496:	7e 89       	ldd	r23, Y+22	; 0x16
    3498:	8f 89       	ldd	r24, Y+23	; 0x17
    349a:	98 8d       	ldd	r25, Y+24	; 0x18
    349c:	20 e0       	ldi	r18, 0x00	; 0
    349e:	3f ef       	ldi	r19, 0xFF	; 255
    34a0:	4f e7       	ldi	r20, 0x7F	; 127
    34a2:	57 e4       	ldi	r21, 0x47	; 71
    34a4:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    34a8:	18 16       	cp	r1, r24
    34aa:	4c f5       	brge	.+82     	; 0x34fe <LCD_Init+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34ac:	69 8d       	ldd	r22, Y+25	; 0x19
    34ae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    34b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34b2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34b4:	20 e0       	ldi	r18, 0x00	; 0
    34b6:	30 e0       	ldi	r19, 0x00	; 0
    34b8:	40 e2       	ldi	r20, 0x20	; 32
    34ba:	51 e4       	ldi	r21, 0x41	; 65
    34bc:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    34c0:	dc 01       	movw	r26, r24
    34c2:	cb 01       	movw	r24, r22
    34c4:	bc 01       	movw	r22, r24
    34c6:	cd 01       	movw	r24, r26
    34c8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    34cc:	dc 01       	movw	r26, r24
    34ce:	cb 01       	movw	r24, r22
    34d0:	9c 8b       	std	Y+20, r25	; 0x14
    34d2:	8b 8b       	std	Y+19, r24	; 0x13
    34d4:	0f c0       	rjmp	.+30     	; 0x34f4 <LCD_Init+0xe2>
    34d6:	88 ec       	ldi	r24, 0xC8	; 200
    34d8:	90 e0       	ldi	r25, 0x00	; 0
    34da:	9a 8b       	std	Y+18, r25	; 0x12
    34dc:	89 8b       	std	Y+17, r24	; 0x11
    34de:	89 89       	ldd	r24, Y+17	; 0x11
    34e0:	9a 89       	ldd	r25, Y+18	; 0x12
    34e2:	01 97       	sbiw	r24, 0x01	; 1
    34e4:	f1 f7       	brne	.-4      	; 0x34e2 <LCD_Init+0xd0>
    34e6:	9a 8b       	std	Y+18, r25	; 0x12
    34e8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34ea:	8b 89       	ldd	r24, Y+19	; 0x13
    34ec:	9c 89       	ldd	r25, Y+20	; 0x14
    34ee:	01 97       	sbiw	r24, 0x01	; 1
    34f0:	9c 8b       	std	Y+20, r25	; 0x14
    34f2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34f4:	8b 89       	ldd	r24, Y+19	; 0x13
    34f6:	9c 89       	ldd	r25, Y+20	; 0x14
    34f8:	00 97       	sbiw	r24, 0x00	; 0
    34fa:	69 f7       	brne	.-38     	; 0x34d6 <LCD_Init+0xc4>
    34fc:	14 c0       	rjmp	.+40     	; 0x3526 <LCD_Init+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34fe:	6d 89       	ldd	r22, Y+21	; 0x15
    3500:	7e 89       	ldd	r23, Y+22	; 0x16
    3502:	8f 89       	ldd	r24, Y+23	; 0x17
    3504:	98 8d       	ldd	r25, Y+24	; 0x18
    3506:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    350a:	dc 01       	movw	r26, r24
    350c:	cb 01       	movw	r24, r22
    350e:	9c 8b       	std	Y+20, r25	; 0x14
    3510:	8b 8b       	std	Y+19, r24	; 0x13
    3512:	8b 89       	ldd	r24, Y+19	; 0x13
    3514:	9c 89       	ldd	r25, Y+20	; 0x14
    3516:	98 8b       	std	Y+16, r25	; 0x10
    3518:	8f 87       	std	Y+15, r24	; 0x0f
    351a:	8f 85       	ldd	r24, Y+15	; 0x0f
    351c:	98 89       	ldd	r25, Y+16	; 0x10
    351e:	01 97       	sbiw	r24, 0x01	; 1
    3520:	f1 f7       	brne	.-4      	; 0x351e <LCD_Init+0x10c>
    3522:	98 8b       	std	Y+16, r25	; 0x10
    3524:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	LCD_WriteInst(0x38);
    3526:	88 e3       	ldi	r24, 0x38	; 56
    3528:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
	LCD_WriteInst(0x0C);
    352c:	8c e0       	ldi	r24, 0x0C	; 12
    352e:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
	LCD_WriteInst(0x01);
    3532:	81 e0       	ldi	r24, 0x01	; 1
    3534:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
    3538:	80 e0       	ldi	r24, 0x00	; 0
    353a:	90 e0       	ldi	r25, 0x00	; 0
    353c:	a0 e8       	ldi	r26, 0x80	; 128
    353e:	bf e3       	ldi	r27, 0x3F	; 63
    3540:	8b 87       	std	Y+11, r24	; 0x0b
    3542:	9c 87       	std	Y+12, r25	; 0x0c
    3544:	ad 87       	std	Y+13, r26	; 0x0d
    3546:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3548:	6b 85       	ldd	r22, Y+11	; 0x0b
    354a:	7c 85       	ldd	r23, Y+12	; 0x0c
    354c:	8d 85       	ldd	r24, Y+13	; 0x0d
    354e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3550:	20 e0       	ldi	r18, 0x00	; 0
    3552:	30 e0       	ldi	r19, 0x00	; 0
    3554:	4a ef       	ldi	r20, 0xFA	; 250
    3556:	54 e4       	ldi	r21, 0x44	; 68
    3558:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    355c:	dc 01       	movw	r26, r24
    355e:	cb 01       	movw	r24, r22
    3560:	8f 83       	std	Y+7, r24	; 0x07
    3562:	98 87       	std	Y+8, r25	; 0x08
    3564:	a9 87       	std	Y+9, r26	; 0x09
    3566:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3568:	6f 81       	ldd	r22, Y+7	; 0x07
    356a:	78 85       	ldd	r23, Y+8	; 0x08
    356c:	89 85       	ldd	r24, Y+9	; 0x09
    356e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3570:	20 e0       	ldi	r18, 0x00	; 0
    3572:	30 e0       	ldi	r19, 0x00	; 0
    3574:	40 e8       	ldi	r20, 0x80	; 128
    3576:	5f e3       	ldi	r21, 0x3F	; 63
    3578:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    357c:	88 23       	and	r24, r24
    357e:	2c f4       	brge	.+10     	; 0x358a <LCD_Init+0x178>
		__ticks = 1;
    3580:	81 e0       	ldi	r24, 0x01	; 1
    3582:	90 e0       	ldi	r25, 0x00	; 0
    3584:	9e 83       	std	Y+6, r25	; 0x06
    3586:	8d 83       	std	Y+5, r24	; 0x05
    3588:	3f c0       	rjmp	.+126    	; 0x3608 <LCD_Init+0x1f6>
	else if (__tmp > 65535)
    358a:	6f 81       	ldd	r22, Y+7	; 0x07
    358c:	78 85       	ldd	r23, Y+8	; 0x08
    358e:	89 85       	ldd	r24, Y+9	; 0x09
    3590:	9a 85       	ldd	r25, Y+10	; 0x0a
    3592:	20 e0       	ldi	r18, 0x00	; 0
    3594:	3f ef       	ldi	r19, 0xFF	; 255
    3596:	4f e7       	ldi	r20, 0x7F	; 127
    3598:	57 e4       	ldi	r21, 0x47	; 71
    359a:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    359e:	18 16       	cp	r1, r24
    35a0:	4c f5       	brge	.+82     	; 0x35f4 <LCD_Init+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35a2:	6b 85       	ldd	r22, Y+11	; 0x0b
    35a4:	7c 85       	ldd	r23, Y+12	; 0x0c
    35a6:	8d 85       	ldd	r24, Y+13	; 0x0d
    35a8:	9e 85       	ldd	r25, Y+14	; 0x0e
    35aa:	20 e0       	ldi	r18, 0x00	; 0
    35ac:	30 e0       	ldi	r19, 0x00	; 0
    35ae:	40 e2       	ldi	r20, 0x20	; 32
    35b0:	51 e4       	ldi	r21, 0x41	; 65
    35b2:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    35b6:	dc 01       	movw	r26, r24
    35b8:	cb 01       	movw	r24, r22
    35ba:	bc 01       	movw	r22, r24
    35bc:	cd 01       	movw	r24, r26
    35be:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    35c2:	dc 01       	movw	r26, r24
    35c4:	cb 01       	movw	r24, r22
    35c6:	9e 83       	std	Y+6, r25	; 0x06
    35c8:	8d 83       	std	Y+5, r24	; 0x05
    35ca:	0f c0       	rjmp	.+30     	; 0x35ea <LCD_Init+0x1d8>
    35cc:	88 ec       	ldi	r24, 0xC8	; 200
    35ce:	90 e0       	ldi	r25, 0x00	; 0
    35d0:	9c 83       	std	Y+4, r25	; 0x04
    35d2:	8b 83       	std	Y+3, r24	; 0x03
    35d4:	8b 81       	ldd	r24, Y+3	; 0x03
    35d6:	9c 81       	ldd	r25, Y+4	; 0x04
    35d8:	01 97       	sbiw	r24, 0x01	; 1
    35da:	f1 f7       	brne	.-4      	; 0x35d8 <LCD_Init+0x1c6>
    35dc:	9c 83       	std	Y+4, r25	; 0x04
    35de:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35e0:	8d 81       	ldd	r24, Y+5	; 0x05
    35e2:	9e 81       	ldd	r25, Y+6	; 0x06
    35e4:	01 97       	sbiw	r24, 0x01	; 1
    35e6:	9e 83       	std	Y+6, r25	; 0x06
    35e8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35ea:	8d 81       	ldd	r24, Y+5	; 0x05
    35ec:	9e 81       	ldd	r25, Y+6	; 0x06
    35ee:	00 97       	sbiw	r24, 0x00	; 0
    35f0:	69 f7       	brne	.-38     	; 0x35cc <LCD_Init+0x1ba>
    35f2:	14 c0       	rjmp	.+40     	; 0x361c <LCD_Init+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35f4:	6f 81       	ldd	r22, Y+7	; 0x07
    35f6:	78 85       	ldd	r23, Y+8	; 0x08
    35f8:	89 85       	ldd	r24, Y+9	; 0x09
    35fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    35fc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3600:	dc 01       	movw	r26, r24
    3602:	cb 01       	movw	r24, r22
    3604:	9e 83       	std	Y+6, r25	; 0x06
    3606:	8d 83       	std	Y+5, r24	; 0x05
    3608:	8d 81       	ldd	r24, Y+5	; 0x05
    360a:	9e 81       	ldd	r25, Y+6	; 0x06
    360c:	9a 83       	std	Y+2, r25	; 0x02
    360e:	89 83       	std	Y+1, r24	; 0x01
    3610:	89 81       	ldd	r24, Y+1	; 0x01
    3612:	9a 81       	ldd	r25, Y+2	; 0x02
    3614:	01 97       	sbiw	r24, 0x01	; 1
    3616:	f1 f7       	brne	.-4      	; 0x3614 <LCD_Init+0x202>
    3618:	9a 83       	std	Y+2, r25	; 0x02
    361a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	LCD_WriteInst(0x06);
    361c:	86 e0       	ldi	r24, 0x06	; 6
    361e:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>

}
    3622:	6c 96       	adiw	r28, 0x1c	; 28
    3624:	0f b6       	in	r0, 0x3f	; 63
    3626:	f8 94       	cli
    3628:	de bf       	out	0x3e, r29	; 62
    362a:	0f be       	out	0x3f, r0	; 63
    362c:	cd bf       	out	0x3d, r28	; 61
    362e:	cf 91       	pop	r28
    3630:	df 91       	pop	r29
    3632:	08 95       	ret

00003634 <LCD_WriteInst>:

void LCD_WriteInst(uint8 Ins)
{
    3634:	df 93       	push	r29
    3636:	cf 93       	push	r28
    3638:	cd b7       	in	r28, 0x3d	; 61
    363a:	de b7       	in	r29, 0x3e	; 62
    363c:	6d 97       	sbiw	r28, 0x1d	; 29
    363e:	0f b6       	in	r0, 0x3f	; 63
    3640:	f8 94       	cli
    3642:	de bf       	out	0x3e, r29	; 62
    3644:	0f be       	out	0x3f, r0	; 63
    3646:	cd bf       	out	0x3d, r28	; 61
    3648:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendCmd);
    364a:	82 e0       	ldi	r24, 0x02	; 2
    364c:	65 e0       	ldi	r22, 0x05	; 5
    364e:	40 e0       	ldi	r20, 0x00	; 0
    3650:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,Ins);
    3654:	81 e0       	ldi	r24, 0x01	; 1
    3656:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3658:	0e 94 03 28 	call	0x5006	; 0x5006 <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    365c:	82 e0       	ldi	r24, 0x02	; 2
    365e:	67 e0       	ldi	r22, 0x07	; 7
    3660:	41 e0       	ldi	r20, 0x01	; 1
    3662:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
    3666:	80 e0       	ldi	r24, 0x00	; 0
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	a0 e8       	ldi	r26, 0x80	; 128
    366c:	bf e3       	ldi	r27, 0x3F	; 63
    366e:	89 8f       	std	Y+25, r24	; 0x19
    3670:	9a 8f       	std	Y+26, r25	; 0x1a
    3672:	ab 8f       	std	Y+27, r26	; 0x1b
    3674:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3676:	69 8d       	ldd	r22, Y+25	; 0x19
    3678:	7a 8d       	ldd	r23, Y+26	; 0x1a
    367a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    367c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    367e:	20 e0       	ldi	r18, 0x00	; 0
    3680:	30 e0       	ldi	r19, 0x00	; 0
    3682:	4a ef       	ldi	r20, 0xFA	; 250
    3684:	54 e4       	ldi	r21, 0x44	; 68
    3686:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    368a:	dc 01       	movw	r26, r24
    368c:	cb 01       	movw	r24, r22
    368e:	8d 8b       	std	Y+21, r24	; 0x15
    3690:	9e 8b       	std	Y+22, r25	; 0x16
    3692:	af 8b       	std	Y+23, r26	; 0x17
    3694:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3696:	6d 89       	ldd	r22, Y+21	; 0x15
    3698:	7e 89       	ldd	r23, Y+22	; 0x16
    369a:	8f 89       	ldd	r24, Y+23	; 0x17
    369c:	98 8d       	ldd	r25, Y+24	; 0x18
    369e:	20 e0       	ldi	r18, 0x00	; 0
    36a0:	30 e0       	ldi	r19, 0x00	; 0
    36a2:	40 e8       	ldi	r20, 0x80	; 128
    36a4:	5f e3       	ldi	r21, 0x3F	; 63
    36a6:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    36aa:	88 23       	and	r24, r24
    36ac:	2c f4       	brge	.+10     	; 0x36b8 <LCD_WriteInst+0x84>
		__ticks = 1;
    36ae:	81 e0       	ldi	r24, 0x01	; 1
    36b0:	90 e0       	ldi	r25, 0x00	; 0
    36b2:	9c 8b       	std	Y+20, r25	; 0x14
    36b4:	8b 8b       	std	Y+19, r24	; 0x13
    36b6:	3f c0       	rjmp	.+126    	; 0x3736 <LCD_WriteInst+0x102>
	else if (__tmp > 65535)
    36b8:	6d 89       	ldd	r22, Y+21	; 0x15
    36ba:	7e 89       	ldd	r23, Y+22	; 0x16
    36bc:	8f 89       	ldd	r24, Y+23	; 0x17
    36be:	98 8d       	ldd	r25, Y+24	; 0x18
    36c0:	20 e0       	ldi	r18, 0x00	; 0
    36c2:	3f ef       	ldi	r19, 0xFF	; 255
    36c4:	4f e7       	ldi	r20, 0x7F	; 127
    36c6:	57 e4       	ldi	r21, 0x47	; 71
    36c8:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    36cc:	18 16       	cp	r1, r24
    36ce:	4c f5       	brge	.+82     	; 0x3722 <LCD_WriteInst+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36d0:	69 8d       	ldd	r22, Y+25	; 0x19
    36d2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    36d4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    36d6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    36d8:	20 e0       	ldi	r18, 0x00	; 0
    36da:	30 e0       	ldi	r19, 0x00	; 0
    36dc:	40 e2       	ldi	r20, 0x20	; 32
    36de:	51 e4       	ldi	r21, 0x41	; 65
    36e0:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    36e4:	dc 01       	movw	r26, r24
    36e6:	cb 01       	movw	r24, r22
    36e8:	bc 01       	movw	r22, r24
    36ea:	cd 01       	movw	r24, r26
    36ec:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    36f0:	dc 01       	movw	r26, r24
    36f2:	cb 01       	movw	r24, r22
    36f4:	9c 8b       	std	Y+20, r25	; 0x14
    36f6:	8b 8b       	std	Y+19, r24	; 0x13
    36f8:	0f c0       	rjmp	.+30     	; 0x3718 <LCD_WriteInst+0xe4>
    36fa:	88 ec       	ldi	r24, 0xC8	; 200
    36fc:	90 e0       	ldi	r25, 0x00	; 0
    36fe:	9a 8b       	std	Y+18, r25	; 0x12
    3700:	89 8b       	std	Y+17, r24	; 0x11
    3702:	89 89       	ldd	r24, Y+17	; 0x11
    3704:	9a 89       	ldd	r25, Y+18	; 0x12
    3706:	01 97       	sbiw	r24, 0x01	; 1
    3708:	f1 f7       	brne	.-4      	; 0x3706 <LCD_WriteInst+0xd2>
    370a:	9a 8b       	std	Y+18, r25	; 0x12
    370c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    370e:	8b 89       	ldd	r24, Y+19	; 0x13
    3710:	9c 89       	ldd	r25, Y+20	; 0x14
    3712:	01 97       	sbiw	r24, 0x01	; 1
    3714:	9c 8b       	std	Y+20, r25	; 0x14
    3716:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3718:	8b 89       	ldd	r24, Y+19	; 0x13
    371a:	9c 89       	ldd	r25, Y+20	; 0x14
    371c:	00 97       	sbiw	r24, 0x00	; 0
    371e:	69 f7       	brne	.-38     	; 0x36fa <LCD_WriteInst+0xc6>
    3720:	14 c0       	rjmp	.+40     	; 0x374a <LCD_WriteInst+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3722:	6d 89       	ldd	r22, Y+21	; 0x15
    3724:	7e 89       	ldd	r23, Y+22	; 0x16
    3726:	8f 89       	ldd	r24, Y+23	; 0x17
    3728:	98 8d       	ldd	r25, Y+24	; 0x18
    372a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    372e:	dc 01       	movw	r26, r24
    3730:	cb 01       	movw	r24, r22
    3732:	9c 8b       	std	Y+20, r25	; 0x14
    3734:	8b 8b       	std	Y+19, r24	; 0x13
    3736:	8b 89       	ldd	r24, Y+19	; 0x13
    3738:	9c 89       	ldd	r25, Y+20	; 0x14
    373a:	98 8b       	std	Y+16, r25	; 0x10
    373c:	8f 87       	std	Y+15, r24	; 0x0f
    373e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3740:	98 89       	ldd	r25, Y+16	; 0x10
    3742:	01 97       	sbiw	r24, 0x01	; 1
    3744:	f1 f7       	brne	.-4      	; 0x3742 <LCD_WriteInst+0x10e>
    3746:	98 8b       	std	Y+16, r25	; 0x10
    3748:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    374a:	82 e0       	ldi	r24, 0x02	; 2
    374c:	67 e0       	ldi	r22, 0x07	; 7
    374e:	40 e0       	ldi	r20, 0x00	; 0
    3750:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
    3754:	80 e0       	ldi	r24, 0x00	; 0
    3756:	90 e0       	ldi	r25, 0x00	; 0
    3758:	a0 e8       	ldi	r26, 0x80	; 128
    375a:	bf e3       	ldi	r27, 0x3F	; 63
    375c:	8b 87       	std	Y+11, r24	; 0x0b
    375e:	9c 87       	std	Y+12, r25	; 0x0c
    3760:	ad 87       	std	Y+13, r26	; 0x0d
    3762:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3764:	6b 85       	ldd	r22, Y+11	; 0x0b
    3766:	7c 85       	ldd	r23, Y+12	; 0x0c
    3768:	8d 85       	ldd	r24, Y+13	; 0x0d
    376a:	9e 85       	ldd	r25, Y+14	; 0x0e
    376c:	20 e0       	ldi	r18, 0x00	; 0
    376e:	30 e0       	ldi	r19, 0x00	; 0
    3770:	4a ef       	ldi	r20, 0xFA	; 250
    3772:	54 e4       	ldi	r21, 0x44	; 68
    3774:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3778:	dc 01       	movw	r26, r24
    377a:	cb 01       	movw	r24, r22
    377c:	8f 83       	std	Y+7, r24	; 0x07
    377e:	98 87       	std	Y+8, r25	; 0x08
    3780:	a9 87       	std	Y+9, r26	; 0x09
    3782:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3784:	6f 81       	ldd	r22, Y+7	; 0x07
    3786:	78 85       	ldd	r23, Y+8	; 0x08
    3788:	89 85       	ldd	r24, Y+9	; 0x09
    378a:	9a 85       	ldd	r25, Y+10	; 0x0a
    378c:	20 e0       	ldi	r18, 0x00	; 0
    378e:	30 e0       	ldi	r19, 0x00	; 0
    3790:	40 e8       	ldi	r20, 0x80	; 128
    3792:	5f e3       	ldi	r21, 0x3F	; 63
    3794:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    3798:	88 23       	and	r24, r24
    379a:	2c f4       	brge	.+10     	; 0x37a6 <LCD_WriteInst+0x172>
		__ticks = 1;
    379c:	81 e0       	ldi	r24, 0x01	; 1
    379e:	90 e0       	ldi	r25, 0x00	; 0
    37a0:	9e 83       	std	Y+6, r25	; 0x06
    37a2:	8d 83       	std	Y+5, r24	; 0x05
    37a4:	3f c0       	rjmp	.+126    	; 0x3824 <LCD_WriteInst+0x1f0>
	else if (__tmp > 65535)
    37a6:	6f 81       	ldd	r22, Y+7	; 0x07
    37a8:	78 85       	ldd	r23, Y+8	; 0x08
    37aa:	89 85       	ldd	r24, Y+9	; 0x09
    37ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    37ae:	20 e0       	ldi	r18, 0x00	; 0
    37b0:	3f ef       	ldi	r19, 0xFF	; 255
    37b2:	4f e7       	ldi	r20, 0x7F	; 127
    37b4:	57 e4       	ldi	r21, 0x47	; 71
    37b6:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    37ba:	18 16       	cp	r1, r24
    37bc:	4c f5       	brge	.+82     	; 0x3810 <LCD_WriteInst+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37be:	6b 85       	ldd	r22, Y+11	; 0x0b
    37c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    37c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    37c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    37c6:	20 e0       	ldi	r18, 0x00	; 0
    37c8:	30 e0       	ldi	r19, 0x00	; 0
    37ca:	40 e2       	ldi	r20, 0x20	; 32
    37cc:	51 e4       	ldi	r21, 0x41	; 65
    37ce:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    37d2:	dc 01       	movw	r26, r24
    37d4:	cb 01       	movw	r24, r22
    37d6:	bc 01       	movw	r22, r24
    37d8:	cd 01       	movw	r24, r26
    37da:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    37de:	dc 01       	movw	r26, r24
    37e0:	cb 01       	movw	r24, r22
    37e2:	9e 83       	std	Y+6, r25	; 0x06
    37e4:	8d 83       	std	Y+5, r24	; 0x05
    37e6:	0f c0       	rjmp	.+30     	; 0x3806 <LCD_WriteInst+0x1d2>
    37e8:	88 ec       	ldi	r24, 0xC8	; 200
    37ea:	90 e0       	ldi	r25, 0x00	; 0
    37ec:	9c 83       	std	Y+4, r25	; 0x04
    37ee:	8b 83       	std	Y+3, r24	; 0x03
    37f0:	8b 81       	ldd	r24, Y+3	; 0x03
    37f2:	9c 81       	ldd	r25, Y+4	; 0x04
    37f4:	01 97       	sbiw	r24, 0x01	; 1
    37f6:	f1 f7       	brne	.-4      	; 0x37f4 <LCD_WriteInst+0x1c0>
    37f8:	9c 83       	std	Y+4, r25	; 0x04
    37fa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37fc:	8d 81       	ldd	r24, Y+5	; 0x05
    37fe:	9e 81       	ldd	r25, Y+6	; 0x06
    3800:	01 97       	sbiw	r24, 0x01	; 1
    3802:	9e 83       	std	Y+6, r25	; 0x06
    3804:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3806:	8d 81       	ldd	r24, Y+5	; 0x05
    3808:	9e 81       	ldd	r25, Y+6	; 0x06
    380a:	00 97       	sbiw	r24, 0x00	; 0
    380c:	69 f7       	brne	.-38     	; 0x37e8 <LCD_WriteInst+0x1b4>
    380e:	14 c0       	rjmp	.+40     	; 0x3838 <LCD_WriteInst+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3810:	6f 81       	ldd	r22, Y+7	; 0x07
    3812:	78 85       	ldd	r23, Y+8	; 0x08
    3814:	89 85       	ldd	r24, Y+9	; 0x09
    3816:	9a 85       	ldd	r25, Y+10	; 0x0a
    3818:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    381c:	dc 01       	movw	r26, r24
    381e:	cb 01       	movw	r24, r22
    3820:	9e 83       	std	Y+6, r25	; 0x06
    3822:	8d 83       	std	Y+5, r24	; 0x05
    3824:	8d 81       	ldd	r24, Y+5	; 0x05
    3826:	9e 81       	ldd	r25, Y+6	; 0x06
    3828:	9a 83       	std	Y+2, r25	; 0x02
    382a:	89 83       	std	Y+1, r24	; 0x01
    382c:	89 81       	ldd	r24, Y+1	; 0x01
    382e:	9a 81       	ldd	r25, Y+2	; 0x02
    3830:	01 97       	sbiw	r24, 0x01	; 1
    3832:	f1 f7       	brne	.-4      	; 0x3830 <LCD_WriteInst+0x1fc>
    3834:	9a 83       	std	Y+2, r25	; 0x02
    3836:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3838:	6d 96       	adiw	r28, 0x1d	; 29
    383a:	0f b6       	in	r0, 0x3f	; 63
    383c:	f8 94       	cli
    383e:	de bf       	out	0x3e, r29	; 62
    3840:	0f be       	out	0x3f, r0	; 63
    3842:	cd bf       	out	0x3d, r28	; 61
    3844:	cf 91       	pop	r28
    3846:	df 91       	pop	r29
    3848:	08 95       	ret

0000384a <LCD_WriteData>:

void LCD_WriteData(uint8 data)
{
    384a:	df 93       	push	r29
    384c:	cf 93       	push	r28
    384e:	cd b7       	in	r28, 0x3d	; 61
    3850:	de b7       	in	r29, 0x3e	; 62
    3852:	6d 97       	sbiw	r28, 0x1d	; 29
    3854:	0f b6       	in	r0, 0x3f	; 63
    3856:	f8 94       	cli
    3858:	de bf       	out	0x3e, r29	; 62
    385a:	0f be       	out	0x3f, r0	; 63
    385c:	cd bf       	out	0x3d, r28	; 61
    385e:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendData);
    3860:	82 e0       	ldi	r24, 0x02	; 2
    3862:	65 e0       	ldi	r22, 0x05	; 5
    3864:	41 e0       	ldi	r20, 0x01	; 1
    3866:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,data);
    386a:	81 e0       	ldi	r24, 0x01	; 1
    386c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    386e:	0e 94 03 28 	call	0x5006	; 0x5006 <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    3872:	82 e0       	ldi	r24, 0x02	; 2
    3874:	67 e0       	ldi	r22, 0x07	; 7
    3876:	41 e0       	ldi	r20, 0x01	; 1
    3878:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
    387c:	80 e0       	ldi	r24, 0x00	; 0
    387e:	90 e0       	ldi	r25, 0x00	; 0
    3880:	a0 e8       	ldi	r26, 0x80	; 128
    3882:	bf e3       	ldi	r27, 0x3F	; 63
    3884:	89 8f       	std	Y+25, r24	; 0x19
    3886:	9a 8f       	std	Y+26, r25	; 0x1a
    3888:	ab 8f       	std	Y+27, r26	; 0x1b
    388a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    388c:	69 8d       	ldd	r22, Y+25	; 0x19
    388e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3890:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3892:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3894:	20 e0       	ldi	r18, 0x00	; 0
    3896:	30 e0       	ldi	r19, 0x00	; 0
    3898:	4a ef       	ldi	r20, 0xFA	; 250
    389a:	54 e4       	ldi	r21, 0x44	; 68
    389c:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    38a0:	dc 01       	movw	r26, r24
    38a2:	cb 01       	movw	r24, r22
    38a4:	8d 8b       	std	Y+21, r24	; 0x15
    38a6:	9e 8b       	std	Y+22, r25	; 0x16
    38a8:	af 8b       	std	Y+23, r26	; 0x17
    38aa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    38ac:	6d 89       	ldd	r22, Y+21	; 0x15
    38ae:	7e 89       	ldd	r23, Y+22	; 0x16
    38b0:	8f 89       	ldd	r24, Y+23	; 0x17
    38b2:	98 8d       	ldd	r25, Y+24	; 0x18
    38b4:	20 e0       	ldi	r18, 0x00	; 0
    38b6:	30 e0       	ldi	r19, 0x00	; 0
    38b8:	40 e8       	ldi	r20, 0x80	; 128
    38ba:	5f e3       	ldi	r21, 0x3F	; 63
    38bc:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    38c0:	88 23       	and	r24, r24
    38c2:	2c f4       	brge	.+10     	; 0x38ce <LCD_WriteData+0x84>
		__ticks = 1;
    38c4:	81 e0       	ldi	r24, 0x01	; 1
    38c6:	90 e0       	ldi	r25, 0x00	; 0
    38c8:	9c 8b       	std	Y+20, r25	; 0x14
    38ca:	8b 8b       	std	Y+19, r24	; 0x13
    38cc:	3f c0       	rjmp	.+126    	; 0x394c <LCD_WriteData+0x102>
	else if (__tmp > 65535)
    38ce:	6d 89       	ldd	r22, Y+21	; 0x15
    38d0:	7e 89       	ldd	r23, Y+22	; 0x16
    38d2:	8f 89       	ldd	r24, Y+23	; 0x17
    38d4:	98 8d       	ldd	r25, Y+24	; 0x18
    38d6:	20 e0       	ldi	r18, 0x00	; 0
    38d8:	3f ef       	ldi	r19, 0xFF	; 255
    38da:	4f e7       	ldi	r20, 0x7F	; 127
    38dc:	57 e4       	ldi	r21, 0x47	; 71
    38de:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    38e2:	18 16       	cp	r1, r24
    38e4:	4c f5       	brge	.+82     	; 0x3938 <LCD_WriteData+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38e6:	69 8d       	ldd	r22, Y+25	; 0x19
    38e8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    38ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    38ec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    38ee:	20 e0       	ldi	r18, 0x00	; 0
    38f0:	30 e0       	ldi	r19, 0x00	; 0
    38f2:	40 e2       	ldi	r20, 0x20	; 32
    38f4:	51 e4       	ldi	r21, 0x41	; 65
    38f6:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    38fa:	dc 01       	movw	r26, r24
    38fc:	cb 01       	movw	r24, r22
    38fe:	bc 01       	movw	r22, r24
    3900:	cd 01       	movw	r24, r26
    3902:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3906:	dc 01       	movw	r26, r24
    3908:	cb 01       	movw	r24, r22
    390a:	9c 8b       	std	Y+20, r25	; 0x14
    390c:	8b 8b       	std	Y+19, r24	; 0x13
    390e:	0f c0       	rjmp	.+30     	; 0x392e <LCD_WriteData+0xe4>
    3910:	88 ec       	ldi	r24, 0xC8	; 200
    3912:	90 e0       	ldi	r25, 0x00	; 0
    3914:	9a 8b       	std	Y+18, r25	; 0x12
    3916:	89 8b       	std	Y+17, r24	; 0x11
    3918:	89 89       	ldd	r24, Y+17	; 0x11
    391a:	9a 89       	ldd	r25, Y+18	; 0x12
    391c:	01 97       	sbiw	r24, 0x01	; 1
    391e:	f1 f7       	brne	.-4      	; 0x391c <LCD_WriteData+0xd2>
    3920:	9a 8b       	std	Y+18, r25	; 0x12
    3922:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3924:	8b 89       	ldd	r24, Y+19	; 0x13
    3926:	9c 89       	ldd	r25, Y+20	; 0x14
    3928:	01 97       	sbiw	r24, 0x01	; 1
    392a:	9c 8b       	std	Y+20, r25	; 0x14
    392c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    392e:	8b 89       	ldd	r24, Y+19	; 0x13
    3930:	9c 89       	ldd	r25, Y+20	; 0x14
    3932:	00 97       	sbiw	r24, 0x00	; 0
    3934:	69 f7       	brne	.-38     	; 0x3910 <LCD_WriteData+0xc6>
    3936:	14 c0       	rjmp	.+40     	; 0x3960 <LCD_WriteData+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3938:	6d 89       	ldd	r22, Y+21	; 0x15
    393a:	7e 89       	ldd	r23, Y+22	; 0x16
    393c:	8f 89       	ldd	r24, Y+23	; 0x17
    393e:	98 8d       	ldd	r25, Y+24	; 0x18
    3940:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3944:	dc 01       	movw	r26, r24
    3946:	cb 01       	movw	r24, r22
    3948:	9c 8b       	std	Y+20, r25	; 0x14
    394a:	8b 8b       	std	Y+19, r24	; 0x13
    394c:	8b 89       	ldd	r24, Y+19	; 0x13
    394e:	9c 89       	ldd	r25, Y+20	; 0x14
    3950:	98 8b       	std	Y+16, r25	; 0x10
    3952:	8f 87       	std	Y+15, r24	; 0x0f
    3954:	8f 85       	ldd	r24, Y+15	; 0x0f
    3956:	98 89       	ldd	r25, Y+16	; 0x10
    3958:	01 97       	sbiw	r24, 0x01	; 1
    395a:	f1 f7       	brne	.-4      	; 0x3958 <LCD_WriteData+0x10e>
    395c:	98 8b       	std	Y+16, r25	; 0x10
    395e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    3960:	82 e0       	ldi	r24, 0x02	; 2
    3962:	67 e0       	ldi	r22, 0x07	; 7
    3964:	40 e0       	ldi	r20, 0x00	; 0
    3966:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
    396a:	80 e0       	ldi	r24, 0x00	; 0
    396c:	90 e0       	ldi	r25, 0x00	; 0
    396e:	a0 e8       	ldi	r26, 0x80	; 128
    3970:	bf e3       	ldi	r27, 0x3F	; 63
    3972:	8b 87       	std	Y+11, r24	; 0x0b
    3974:	9c 87       	std	Y+12, r25	; 0x0c
    3976:	ad 87       	std	Y+13, r26	; 0x0d
    3978:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    397a:	6b 85       	ldd	r22, Y+11	; 0x0b
    397c:	7c 85       	ldd	r23, Y+12	; 0x0c
    397e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3980:	9e 85       	ldd	r25, Y+14	; 0x0e
    3982:	20 e0       	ldi	r18, 0x00	; 0
    3984:	30 e0       	ldi	r19, 0x00	; 0
    3986:	4a ef       	ldi	r20, 0xFA	; 250
    3988:	54 e4       	ldi	r21, 0x44	; 68
    398a:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    398e:	dc 01       	movw	r26, r24
    3990:	cb 01       	movw	r24, r22
    3992:	8f 83       	std	Y+7, r24	; 0x07
    3994:	98 87       	std	Y+8, r25	; 0x08
    3996:	a9 87       	std	Y+9, r26	; 0x09
    3998:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    399a:	6f 81       	ldd	r22, Y+7	; 0x07
    399c:	78 85       	ldd	r23, Y+8	; 0x08
    399e:	89 85       	ldd	r24, Y+9	; 0x09
    39a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    39a2:	20 e0       	ldi	r18, 0x00	; 0
    39a4:	30 e0       	ldi	r19, 0x00	; 0
    39a6:	40 e8       	ldi	r20, 0x80	; 128
    39a8:	5f e3       	ldi	r21, 0x3F	; 63
    39aa:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    39ae:	88 23       	and	r24, r24
    39b0:	2c f4       	brge	.+10     	; 0x39bc <LCD_WriteData+0x172>
		__ticks = 1;
    39b2:	81 e0       	ldi	r24, 0x01	; 1
    39b4:	90 e0       	ldi	r25, 0x00	; 0
    39b6:	9e 83       	std	Y+6, r25	; 0x06
    39b8:	8d 83       	std	Y+5, r24	; 0x05
    39ba:	3f c0       	rjmp	.+126    	; 0x3a3a <LCD_WriteData+0x1f0>
	else if (__tmp > 65535)
    39bc:	6f 81       	ldd	r22, Y+7	; 0x07
    39be:	78 85       	ldd	r23, Y+8	; 0x08
    39c0:	89 85       	ldd	r24, Y+9	; 0x09
    39c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    39c4:	20 e0       	ldi	r18, 0x00	; 0
    39c6:	3f ef       	ldi	r19, 0xFF	; 255
    39c8:	4f e7       	ldi	r20, 0x7F	; 127
    39ca:	57 e4       	ldi	r21, 0x47	; 71
    39cc:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    39d0:	18 16       	cp	r1, r24
    39d2:	4c f5       	brge	.+82     	; 0x3a26 <LCD_WriteData+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39d4:	6b 85       	ldd	r22, Y+11	; 0x0b
    39d6:	7c 85       	ldd	r23, Y+12	; 0x0c
    39d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    39da:	9e 85       	ldd	r25, Y+14	; 0x0e
    39dc:	20 e0       	ldi	r18, 0x00	; 0
    39de:	30 e0       	ldi	r19, 0x00	; 0
    39e0:	40 e2       	ldi	r20, 0x20	; 32
    39e2:	51 e4       	ldi	r21, 0x41	; 65
    39e4:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    39e8:	dc 01       	movw	r26, r24
    39ea:	cb 01       	movw	r24, r22
    39ec:	bc 01       	movw	r22, r24
    39ee:	cd 01       	movw	r24, r26
    39f0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    39f4:	dc 01       	movw	r26, r24
    39f6:	cb 01       	movw	r24, r22
    39f8:	9e 83       	std	Y+6, r25	; 0x06
    39fa:	8d 83       	std	Y+5, r24	; 0x05
    39fc:	0f c0       	rjmp	.+30     	; 0x3a1c <LCD_WriteData+0x1d2>
    39fe:	88 ec       	ldi	r24, 0xC8	; 200
    3a00:	90 e0       	ldi	r25, 0x00	; 0
    3a02:	9c 83       	std	Y+4, r25	; 0x04
    3a04:	8b 83       	std	Y+3, r24	; 0x03
    3a06:	8b 81       	ldd	r24, Y+3	; 0x03
    3a08:	9c 81       	ldd	r25, Y+4	; 0x04
    3a0a:	01 97       	sbiw	r24, 0x01	; 1
    3a0c:	f1 f7       	brne	.-4      	; 0x3a0a <LCD_WriteData+0x1c0>
    3a0e:	9c 83       	std	Y+4, r25	; 0x04
    3a10:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a12:	8d 81       	ldd	r24, Y+5	; 0x05
    3a14:	9e 81       	ldd	r25, Y+6	; 0x06
    3a16:	01 97       	sbiw	r24, 0x01	; 1
    3a18:	9e 83       	std	Y+6, r25	; 0x06
    3a1a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a1c:	8d 81       	ldd	r24, Y+5	; 0x05
    3a1e:	9e 81       	ldd	r25, Y+6	; 0x06
    3a20:	00 97       	sbiw	r24, 0x00	; 0
    3a22:	69 f7       	brne	.-38     	; 0x39fe <LCD_WriteData+0x1b4>
    3a24:	14 c0       	rjmp	.+40     	; 0x3a4e <LCD_WriteData+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a26:	6f 81       	ldd	r22, Y+7	; 0x07
    3a28:	78 85       	ldd	r23, Y+8	; 0x08
    3a2a:	89 85       	ldd	r24, Y+9	; 0x09
    3a2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a2e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3a32:	dc 01       	movw	r26, r24
    3a34:	cb 01       	movw	r24, r22
    3a36:	9e 83       	std	Y+6, r25	; 0x06
    3a38:	8d 83       	std	Y+5, r24	; 0x05
    3a3a:	8d 81       	ldd	r24, Y+5	; 0x05
    3a3c:	9e 81       	ldd	r25, Y+6	; 0x06
    3a3e:	9a 83       	std	Y+2, r25	; 0x02
    3a40:	89 83       	std	Y+1, r24	; 0x01
    3a42:	89 81       	ldd	r24, Y+1	; 0x01
    3a44:	9a 81       	ldd	r25, Y+2	; 0x02
    3a46:	01 97       	sbiw	r24, 0x01	; 1
    3a48:	f1 f7       	brne	.-4      	; 0x3a46 <LCD_WriteData+0x1fc>
    3a4a:	9a 83       	std	Y+2, r25	; 0x02
    3a4c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3a4e:	6d 96       	adiw	r28, 0x1d	; 29
    3a50:	0f b6       	in	r0, 0x3f	; 63
    3a52:	f8 94       	cli
    3a54:	de bf       	out	0x3e, r29	; 62
    3a56:	0f be       	out	0x3f, r0	; 63
    3a58:	cd bf       	out	0x3d, r28	; 61
    3a5a:	cf 91       	pop	r28
    3a5c:	df 91       	pop	r29
    3a5e:	08 95       	ret

00003a60 <LCD_WriteString>:

void LCD_WriteString(char* Name)
{
    3a60:	0f 93       	push	r16
    3a62:	1f 93       	push	r17
    3a64:	df 93       	push	r29
    3a66:	cf 93       	push	r28
    3a68:	00 d0       	rcall	.+0      	; 0x3a6a <LCD_WriteString+0xa>
    3a6a:	00 d0       	rcall	.+0      	; 0x3a6c <LCD_WriteString+0xc>
    3a6c:	cd b7       	in	r28, 0x3d	; 61
    3a6e:	de b7       	in	r29, 0x3e	; 62
    3a70:	9c 83       	std	Y+4, r25	; 0x04
    3a72:	8b 83       	std	Y+3, r24	; 0x03
	for(int i= 0 ; i < strlen(Name);i++)
    3a74:	1a 82       	std	Y+2, r1	; 0x02
    3a76:	19 82       	std	Y+1, r1	; 0x01
    3a78:	0f c0       	rjmp	.+30     	; 0x3a98 <LCD_WriteString+0x38>
	{
		LCD_WriteData(Name[i]);
    3a7a:	29 81       	ldd	r18, Y+1	; 0x01
    3a7c:	3a 81       	ldd	r19, Y+2	; 0x02
    3a7e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a80:	9c 81       	ldd	r25, Y+4	; 0x04
    3a82:	fc 01       	movw	r30, r24
    3a84:	e2 0f       	add	r30, r18
    3a86:	f3 1f       	adc	r31, r19
    3a88:	80 81       	ld	r24, Z
    3a8a:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>
	_delay_ms(1);
}

void LCD_WriteString(char* Name)
{
	for(int i= 0 ; i < strlen(Name);i++)
    3a8e:	89 81       	ldd	r24, Y+1	; 0x01
    3a90:	9a 81       	ldd	r25, Y+2	; 0x02
    3a92:	01 96       	adiw	r24, 0x01	; 1
    3a94:	9a 83       	std	Y+2, r25	; 0x02
    3a96:	89 83       	std	Y+1, r24	; 0x01
    3a98:	09 81       	ldd	r16, Y+1	; 0x01
    3a9a:	1a 81       	ldd	r17, Y+2	; 0x02
    3a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    3a9e:	9c 81       	ldd	r25, Y+4	; 0x04
    3aa0:	0e 94 dc 29 	call	0x53b8	; 0x53b8 <strlen>
    3aa4:	08 17       	cp	r16, r24
    3aa6:	19 07       	cpc	r17, r25
    3aa8:	40 f3       	brcs	.-48     	; 0x3a7a <LCD_WriteString+0x1a>
	{
		LCD_WriteData(Name[i]);
	}
}
    3aaa:	0f 90       	pop	r0
    3aac:	0f 90       	pop	r0
    3aae:	0f 90       	pop	r0
    3ab0:	0f 90       	pop	r0
    3ab2:	cf 91       	pop	r28
    3ab4:	df 91       	pop	r29
    3ab6:	1f 91       	pop	r17
    3ab8:	0f 91       	pop	r16
    3aba:	08 95       	ret

00003abc <LCD_Goto>:

void LCD_Goto(uint8 row,uint8 col)
{
    3abc:	df 93       	push	r29
    3abe:	cf 93       	push	r28
    3ac0:	00 d0       	rcall	.+0      	; 0x3ac2 <LCD_Goto+0x6>
    3ac2:	00 d0       	rcall	.+0      	; 0x3ac4 <LCD_Goto+0x8>
    3ac4:	cd b7       	in	r28, 0x3d	; 61
    3ac6:	de b7       	in	r29, 0x3e	; 62
    3ac8:	89 83       	std	Y+1, r24	; 0x01
    3aca:	6a 83       	std	Y+2, r22	; 0x02
	 row--;
    3acc:	89 81       	ldd	r24, Y+1	; 0x01
    3ace:	81 50       	subi	r24, 0x01	; 1
    3ad0:	89 83       	std	Y+1, r24	; 0x01
	 col--;
    3ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    3ad4:	81 50       	subi	r24, 0x01	; 1
    3ad6:	8a 83       	std	Y+2, r24	; 0x02
	 switch(row)
    3ad8:	89 81       	ldd	r24, Y+1	; 0x01
    3ada:	28 2f       	mov	r18, r24
    3adc:	30 e0       	ldi	r19, 0x00	; 0
    3ade:	3c 83       	std	Y+4, r19	; 0x04
    3ae0:	2b 83       	std	Y+3, r18	; 0x03
    3ae2:	8b 81       	ldd	r24, Y+3	; 0x03
    3ae4:	9c 81       	ldd	r25, Y+4	; 0x04
    3ae6:	00 97       	sbiw	r24, 0x00	; 0
    3ae8:	31 f0       	breq	.+12     	; 0x3af6 <LCD_Goto+0x3a>
    3aea:	2b 81       	ldd	r18, Y+3	; 0x03
    3aec:	3c 81       	ldd	r19, Y+4	; 0x04
    3aee:	21 30       	cpi	r18, 0x01	; 1
    3af0:	31 05       	cpc	r19, r1
    3af2:	31 f0       	breq	.+12     	; 0x3b00 <LCD_Goto+0x44>
    3af4:	09 c0       	rjmp	.+18     	; 0x3b08 <LCD_Goto+0x4c>
	 {
	 case 0: LCD_WriteInst(0x80+col);break;
    3af6:	8a 81       	ldd	r24, Y+2	; 0x02
    3af8:	80 58       	subi	r24, 0x80	; 128
    3afa:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
    3afe:	04 c0       	rjmp	.+8      	; 0x3b08 <LCD_Goto+0x4c>
	 case 1: LCD_WriteInst(0xc0+col);break;
    3b00:	8a 81       	ldd	r24, Y+2	; 0x02
    3b02:	80 54       	subi	r24, 0x40	; 64
    3b04:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
	 }
	}
    3b08:	0f 90       	pop	r0
    3b0a:	0f 90       	pop	r0
    3b0c:	0f 90       	pop	r0
    3b0e:	0f 90       	pop	r0
    3b10:	cf 91       	pop	r28
    3b12:	df 91       	pop	r29
    3b14:	08 95       	ret

00003b16 <LCD_PrintNumber>:
void LCD_PrintNumber(uint64 num)
{
    3b16:	af 92       	push	r10
    3b18:	bf 92       	push	r11
    3b1a:	cf 92       	push	r12
    3b1c:	df 92       	push	r13
    3b1e:	ef 92       	push	r14
    3b20:	ff 92       	push	r15
    3b22:	0f 93       	push	r16
    3b24:	1f 93       	push	r17
    3b26:	df 93       	push	r29
    3b28:	cf 93       	push	r28
    3b2a:	cd b7       	in	r28, 0x3d	; 61
    3b2c:	de b7       	in	r29, 0x3e	; 62
    3b2e:	c6 56       	subi	r28, 0x66	; 102
    3b30:	d0 40       	sbci	r29, 0x00	; 0
    3b32:	0f b6       	in	r0, 0x3f	; 63
    3b34:	f8 94       	cli
    3b36:	de bf       	out	0x3e, r29	; 62
    3b38:	0f be       	out	0x3f, r0	; 63
    3b3a:	cd bf       	out	0x3d, r28	; 61
    3b3c:	29 87       	std	Y+9, r18	; 0x09
    3b3e:	3a 87       	std	Y+10, r19	; 0x0a
    3b40:	4b 87       	std	Y+11, r20	; 0x0b
    3b42:	5c 87       	std	Y+12, r21	; 0x0c
    3b44:	6d 87       	std	Y+13, r22	; 0x0d
    3b46:	7e 87       	std	Y+14, r23	; 0x0e
    3b48:	8f 87       	std	Y+15, r24	; 0x0f
    3b4a:	98 8b       	std	Y+16, r25	; 0x10
	uint64 reverse= 1;
    3b4c:	81 e0       	ldi	r24, 0x01	; 1
    3b4e:	89 83       	std	Y+1, r24	; 0x01
    3b50:	1a 82       	std	Y+2, r1	; 0x02
    3b52:	1b 82       	std	Y+3, r1	; 0x03
    3b54:	1c 82       	std	Y+4, r1	; 0x04
    3b56:	1d 82       	std	Y+5, r1	; 0x05
    3b58:	1e 82       	std	Y+6, r1	; 0x06
    3b5a:	1f 82       	std	Y+7, r1	; 0x07
    3b5c:	18 86       	std	Y+8, r1	; 0x08
    3b5e:	5e c3       	rjmp	.+1724   	; 0x421c <LCD_PrintNumber+0x706>
	    while (num > 0) //123
	    {
	        reverse= (reverse * 10) + num % 10;
    3b60:	29 81       	ldd	r18, Y+1	; 0x01
    3b62:	3a 81       	ldd	r19, Y+2	; 0x02
    3b64:	4b 81       	ldd	r20, Y+3	; 0x03
    3b66:	5c 81       	ldd	r21, Y+4	; 0x04
    3b68:	6d 81       	ldd	r22, Y+5	; 0x05
    3b6a:	7e 81       	ldd	r23, Y+6	; 0x06
    3b6c:	8f 81       	ldd	r24, Y+7	; 0x07
    3b6e:	98 85       	ldd	r25, Y+8	; 0x08
    3b70:	a2 2e       	mov	r10, r18
    3b72:	b3 2e       	mov	r11, r19
    3b74:	c4 2e       	mov	r12, r20
    3b76:	d5 2e       	mov	r13, r21
    3b78:	e6 2e       	mov	r14, r22
    3b7a:	f7 2e       	mov	r15, r23
    3b7c:	08 2f       	mov	r16, r24
    3b7e:	19 2f       	mov	r17, r25
    3b80:	2a 2d       	mov	r18, r10
    3b82:	3b 2d       	mov	r19, r11
    3b84:	4c 2d       	mov	r20, r12
    3b86:	5d 2d       	mov	r21, r13
    3b88:	6e 2d       	mov	r22, r14
    3b8a:	7f 2d       	mov	r23, r15
    3b8c:	80 2f       	mov	r24, r16
    3b8e:	91 2f       	mov	r25, r17
    3b90:	01 e0       	ldi	r16, 0x01	; 1
    3b92:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    3b96:	29 a3       	std	Y+33, r18	; 0x21
    3b98:	3a a3       	std	Y+34, r19	; 0x22
    3b9a:	4b a3       	std	Y+35, r20	; 0x23
    3b9c:	5c a3       	std	Y+36, r21	; 0x24
    3b9e:	6d a3       	std	Y+37, r22	; 0x25
    3ba0:	7e a3       	std	Y+38, r23	; 0x26
    3ba2:	8f a3       	std	Y+39, r24	; 0x27
    3ba4:	98 a7       	std	Y+40, r25	; 0x28
    3ba6:	29 a1       	ldd	r18, Y+33	; 0x21
    3ba8:	3a a1       	ldd	r19, Y+34	; 0x22
    3baa:	4b a1       	ldd	r20, Y+35	; 0x23
    3bac:	5c a1       	ldd	r21, Y+36	; 0x24
    3bae:	6d a1       	ldd	r22, Y+37	; 0x25
    3bb0:	7e a1       	ldd	r23, Y+38	; 0x26
    3bb2:	8f a1       	ldd	r24, Y+39	; 0x27
    3bb4:	98 a5       	ldd	r25, Y+40	; 0x28
    3bb6:	02 e0       	ldi	r16, 0x02	; 2
    3bb8:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    3bbc:	29 a7       	std	Y+41, r18	; 0x29
    3bbe:	3a a7       	std	Y+42, r19	; 0x2a
    3bc0:	4b a7       	std	Y+43, r20	; 0x2b
    3bc2:	5c a7       	std	Y+44, r21	; 0x2c
    3bc4:	6d a7       	std	Y+45, r22	; 0x2d
    3bc6:	7e a7       	std	Y+46, r23	; 0x2e
    3bc8:	8f a7       	std	Y+47, r24	; 0x2f
    3bca:	98 ab       	std	Y+48, r25	; 0x30
    3bcc:	89 a1       	ldd	r24, Y+33	; 0x21
    3bce:	99 a5       	ldd	r25, Y+41	; 0x29
    3bd0:	89 0f       	add	r24, r25
    3bd2:	89 ab       	std	Y+49, r24	; 0x31
    3bd4:	81 e0       	ldi	r24, 0x01	; 1
    3bd6:	89 af       	std	Y+57, r24	; 0x39
    3bd8:	99 a9       	ldd	r25, Y+49	; 0x31
    3bda:	89 a1       	ldd	r24, Y+33	; 0x21
    3bdc:	98 17       	cp	r25, r24
    3bde:	08 f0       	brcs	.+2      	; 0x3be2 <LCD_PrintNumber+0xcc>
    3be0:	19 ae       	std	Y+57, r1	; 0x39
    3be2:	9a a1       	ldd	r25, Y+34	; 0x22
    3be4:	8a a5       	ldd	r24, Y+42	; 0x2a
    3be6:	98 0f       	add	r25, r24
    3be8:	9a ab       	std	Y+50, r25	; 0x32
    3bea:	91 e0       	ldi	r25, 0x01	; 1
    3bec:	9a af       	std	Y+58, r25	; 0x3a
    3bee:	8a a9       	ldd	r24, Y+50	; 0x32
    3bf0:	9a a1       	ldd	r25, Y+34	; 0x22
    3bf2:	89 17       	cp	r24, r25
    3bf4:	08 f0       	brcs	.+2      	; 0x3bf8 <LCD_PrintNumber+0xe2>
    3bf6:	1a ae       	std	Y+58, r1	; 0x3a
    3bf8:	89 ad       	ldd	r24, Y+57	; 0x39
    3bfa:	9a a9       	ldd	r25, Y+50	; 0x32
    3bfc:	89 0f       	add	r24, r25
    3bfe:	8b af       	std	Y+59, r24	; 0x3b
    3c00:	81 e0       	ldi	r24, 0x01	; 1
    3c02:	8c af       	std	Y+60, r24	; 0x3c
    3c04:	9b ad       	ldd	r25, Y+59	; 0x3b
    3c06:	8a a9       	ldd	r24, Y+50	; 0x32
    3c08:	98 17       	cp	r25, r24
    3c0a:	08 f0       	brcs	.+2      	; 0x3c0e <LCD_PrintNumber+0xf8>
    3c0c:	1c ae       	std	Y+60, r1	; 0x3c
    3c0e:	9a ad       	ldd	r25, Y+58	; 0x3a
    3c10:	8c ad       	ldd	r24, Y+60	; 0x3c
    3c12:	98 2b       	or	r25, r24
    3c14:	9a af       	std	Y+58, r25	; 0x3a
    3c16:	9b ad       	ldd	r25, Y+59	; 0x3b
    3c18:	9a ab       	std	Y+50, r25	; 0x32
    3c1a:	8b a1       	ldd	r24, Y+35	; 0x23
    3c1c:	9b a5       	ldd	r25, Y+43	; 0x2b
    3c1e:	89 0f       	add	r24, r25
    3c20:	8b ab       	std	Y+51, r24	; 0x33
    3c22:	81 e0       	ldi	r24, 0x01	; 1
    3c24:	8d af       	std	Y+61, r24	; 0x3d
    3c26:	9b a9       	ldd	r25, Y+51	; 0x33
    3c28:	8b a1       	ldd	r24, Y+35	; 0x23
    3c2a:	98 17       	cp	r25, r24
    3c2c:	08 f0       	brcs	.+2      	; 0x3c30 <LCD_PrintNumber+0x11a>
    3c2e:	1d ae       	std	Y+61, r1	; 0x3d
    3c30:	9a ad       	ldd	r25, Y+58	; 0x3a
    3c32:	8b a9       	ldd	r24, Y+51	; 0x33
    3c34:	98 0f       	add	r25, r24
    3c36:	9e af       	std	Y+62, r25	; 0x3e
    3c38:	91 e0       	ldi	r25, 0x01	; 1
    3c3a:	9f af       	std	Y+63, r25	; 0x3f
    3c3c:	8e ad       	ldd	r24, Y+62	; 0x3e
    3c3e:	9b a9       	ldd	r25, Y+51	; 0x33
    3c40:	89 17       	cp	r24, r25
    3c42:	08 f0       	brcs	.+2      	; 0x3c46 <LCD_PrintNumber+0x130>
    3c44:	1f ae       	std	Y+63, r1	; 0x3f
    3c46:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c48:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c4a:	89 2b       	or	r24, r25
    3c4c:	8d af       	std	Y+61, r24	; 0x3d
    3c4e:	8e ad       	ldd	r24, Y+62	; 0x3e
    3c50:	8b ab       	std	Y+51, r24	; 0x33
    3c52:	9c a1       	ldd	r25, Y+36	; 0x24
    3c54:	8c a5       	ldd	r24, Y+44	; 0x2c
    3c56:	98 0f       	add	r25, r24
    3c58:	9c ab       	std	Y+52, r25	; 0x34
    3c5a:	91 e0       	ldi	r25, 0x01	; 1
    3c5c:	21 96       	adiw	r28, 0x01	; 1
    3c5e:	9f af       	std	Y+63, r25	; 0x3f
    3c60:	21 97       	sbiw	r28, 0x01	; 1
    3c62:	8c a9       	ldd	r24, Y+52	; 0x34
    3c64:	9c a1       	ldd	r25, Y+36	; 0x24
    3c66:	89 17       	cp	r24, r25
    3c68:	18 f0       	brcs	.+6      	; 0x3c70 <LCD_PrintNumber+0x15a>
    3c6a:	21 96       	adiw	r28, 0x01	; 1
    3c6c:	1f ae       	std	Y+63, r1	; 0x3f
    3c6e:	21 97       	sbiw	r28, 0x01	; 1
    3c70:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c72:	9c a9       	ldd	r25, Y+52	; 0x34
    3c74:	89 0f       	add	r24, r25
    3c76:	22 96       	adiw	r28, 0x02	; 2
    3c78:	8f af       	std	Y+63, r24	; 0x3f
    3c7a:	22 97       	sbiw	r28, 0x02	; 2
    3c7c:	81 e0       	ldi	r24, 0x01	; 1
    3c7e:	23 96       	adiw	r28, 0x03	; 3
    3c80:	8f af       	std	Y+63, r24	; 0x3f
    3c82:	23 97       	sbiw	r28, 0x03	; 3
    3c84:	22 96       	adiw	r28, 0x02	; 2
    3c86:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c88:	22 97       	sbiw	r28, 0x02	; 2
    3c8a:	8c a9       	ldd	r24, Y+52	; 0x34
    3c8c:	98 17       	cp	r25, r24
    3c8e:	18 f0       	brcs	.+6      	; 0x3c96 <LCD_PrintNumber+0x180>
    3c90:	23 96       	adiw	r28, 0x03	; 3
    3c92:	1f ae       	std	Y+63, r1	; 0x3f
    3c94:	23 97       	sbiw	r28, 0x03	; 3
    3c96:	21 96       	adiw	r28, 0x01	; 1
    3c98:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c9a:	21 97       	sbiw	r28, 0x01	; 1
    3c9c:	23 96       	adiw	r28, 0x03	; 3
    3c9e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ca0:	23 97       	sbiw	r28, 0x03	; 3
    3ca2:	98 2b       	or	r25, r24
    3ca4:	21 96       	adiw	r28, 0x01	; 1
    3ca6:	9f af       	std	Y+63, r25	; 0x3f
    3ca8:	21 97       	sbiw	r28, 0x01	; 1
    3caa:	22 96       	adiw	r28, 0x02	; 2
    3cac:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cae:	22 97       	sbiw	r28, 0x02	; 2
    3cb0:	9c ab       	std	Y+52, r25	; 0x34
    3cb2:	8d a1       	ldd	r24, Y+37	; 0x25
    3cb4:	9d a5       	ldd	r25, Y+45	; 0x2d
    3cb6:	89 0f       	add	r24, r25
    3cb8:	8d ab       	std	Y+53, r24	; 0x35
    3cba:	81 e0       	ldi	r24, 0x01	; 1
    3cbc:	24 96       	adiw	r28, 0x04	; 4
    3cbe:	8f af       	std	Y+63, r24	; 0x3f
    3cc0:	24 97       	sbiw	r28, 0x04	; 4
    3cc2:	9d a9       	ldd	r25, Y+53	; 0x35
    3cc4:	8d a1       	ldd	r24, Y+37	; 0x25
    3cc6:	98 17       	cp	r25, r24
    3cc8:	18 f0       	brcs	.+6      	; 0x3cd0 <LCD_PrintNumber+0x1ba>
    3cca:	24 96       	adiw	r28, 0x04	; 4
    3ccc:	1f ae       	std	Y+63, r1	; 0x3f
    3cce:	24 97       	sbiw	r28, 0x04	; 4
    3cd0:	21 96       	adiw	r28, 0x01	; 1
    3cd2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cd4:	21 97       	sbiw	r28, 0x01	; 1
    3cd6:	8d a9       	ldd	r24, Y+53	; 0x35
    3cd8:	98 0f       	add	r25, r24
    3cda:	25 96       	adiw	r28, 0x05	; 5
    3cdc:	9f af       	std	Y+63, r25	; 0x3f
    3cde:	25 97       	sbiw	r28, 0x05	; 5
    3ce0:	91 e0       	ldi	r25, 0x01	; 1
    3ce2:	26 96       	adiw	r28, 0x06	; 6
    3ce4:	9f af       	std	Y+63, r25	; 0x3f
    3ce6:	26 97       	sbiw	r28, 0x06	; 6
    3ce8:	25 96       	adiw	r28, 0x05	; 5
    3cea:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cec:	25 97       	sbiw	r28, 0x05	; 5
    3cee:	9d a9       	ldd	r25, Y+53	; 0x35
    3cf0:	89 17       	cp	r24, r25
    3cf2:	18 f0       	brcs	.+6      	; 0x3cfa <LCD_PrintNumber+0x1e4>
    3cf4:	26 96       	adiw	r28, 0x06	; 6
    3cf6:	1f ae       	std	Y+63, r1	; 0x3f
    3cf8:	26 97       	sbiw	r28, 0x06	; 6
    3cfa:	24 96       	adiw	r28, 0x04	; 4
    3cfc:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cfe:	24 97       	sbiw	r28, 0x04	; 4
    3d00:	26 96       	adiw	r28, 0x06	; 6
    3d02:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d04:	26 97       	sbiw	r28, 0x06	; 6
    3d06:	89 2b       	or	r24, r25
    3d08:	24 96       	adiw	r28, 0x04	; 4
    3d0a:	8f af       	std	Y+63, r24	; 0x3f
    3d0c:	24 97       	sbiw	r28, 0x04	; 4
    3d0e:	25 96       	adiw	r28, 0x05	; 5
    3d10:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d12:	25 97       	sbiw	r28, 0x05	; 5
    3d14:	8d ab       	std	Y+53, r24	; 0x35
    3d16:	9e a1       	ldd	r25, Y+38	; 0x26
    3d18:	8e a5       	ldd	r24, Y+46	; 0x2e
    3d1a:	98 0f       	add	r25, r24
    3d1c:	9e ab       	std	Y+54, r25	; 0x36
    3d1e:	91 e0       	ldi	r25, 0x01	; 1
    3d20:	27 96       	adiw	r28, 0x07	; 7
    3d22:	9f af       	std	Y+63, r25	; 0x3f
    3d24:	27 97       	sbiw	r28, 0x07	; 7
    3d26:	8e a9       	ldd	r24, Y+54	; 0x36
    3d28:	9e a1       	ldd	r25, Y+38	; 0x26
    3d2a:	89 17       	cp	r24, r25
    3d2c:	18 f0       	brcs	.+6      	; 0x3d34 <LCD_PrintNumber+0x21e>
    3d2e:	27 96       	adiw	r28, 0x07	; 7
    3d30:	1f ae       	std	Y+63, r1	; 0x3f
    3d32:	27 97       	sbiw	r28, 0x07	; 7
    3d34:	24 96       	adiw	r28, 0x04	; 4
    3d36:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d38:	24 97       	sbiw	r28, 0x04	; 4
    3d3a:	9e a9       	ldd	r25, Y+54	; 0x36
    3d3c:	89 0f       	add	r24, r25
    3d3e:	28 96       	adiw	r28, 0x08	; 8
    3d40:	8f af       	std	Y+63, r24	; 0x3f
    3d42:	28 97       	sbiw	r28, 0x08	; 8
    3d44:	81 e0       	ldi	r24, 0x01	; 1
    3d46:	29 96       	adiw	r28, 0x09	; 9
    3d48:	8f af       	std	Y+63, r24	; 0x3f
    3d4a:	29 97       	sbiw	r28, 0x09	; 9
    3d4c:	28 96       	adiw	r28, 0x08	; 8
    3d4e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d50:	28 97       	sbiw	r28, 0x08	; 8
    3d52:	8e a9       	ldd	r24, Y+54	; 0x36
    3d54:	98 17       	cp	r25, r24
    3d56:	18 f0       	brcs	.+6      	; 0x3d5e <LCD_PrintNumber+0x248>
    3d58:	29 96       	adiw	r28, 0x09	; 9
    3d5a:	1f ae       	std	Y+63, r1	; 0x3f
    3d5c:	29 97       	sbiw	r28, 0x09	; 9
    3d5e:	27 96       	adiw	r28, 0x07	; 7
    3d60:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d62:	27 97       	sbiw	r28, 0x07	; 7
    3d64:	29 96       	adiw	r28, 0x09	; 9
    3d66:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d68:	29 97       	sbiw	r28, 0x09	; 9
    3d6a:	98 2b       	or	r25, r24
    3d6c:	27 96       	adiw	r28, 0x07	; 7
    3d6e:	9f af       	std	Y+63, r25	; 0x3f
    3d70:	27 97       	sbiw	r28, 0x07	; 7
    3d72:	28 96       	adiw	r28, 0x08	; 8
    3d74:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d76:	28 97       	sbiw	r28, 0x08	; 8
    3d78:	9e ab       	std	Y+54, r25	; 0x36
    3d7a:	8f a1       	ldd	r24, Y+39	; 0x27
    3d7c:	9f a5       	ldd	r25, Y+47	; 0x2f
    3d7e:	89 0f       	add	r24, r25
    3d80:	8f ab       	std	Y+55, r24	; 0x37
    3d82:	81 e0       	ldi	r24, 0x01	; 1
    3d84:	2a 96       	adiw	r28, 0x0a	; 10
    3d86:	8f af       	std	Y+63, r24	; 0x3f
    3d88:	2a 97       	sbiw	r28, 0x0a	; 10
    3d8a:	9f a9       	ldd	r25, Y+55	; 0x37
    3d8c:	8f a1       	ldd	r24, Y+39	; 0x27
    3d8e:	98 17       	cp	r25, r24
    3d90:	18 f0       	brcs	.+6      	; 0x3d98 <LCD_PrintNumber+0x282>
    3d92:	2a 96       	adiw	r28, 0x0a	; 10
    3d94:	1f ae       	std	Y+63, r1	; 0x3f
    3d96:	2a 97       	sbiw	r28, 0x0a	; 10
    3d98:	27 96       	adiw	r28, 0x07	; 7
    3d9a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d9c:	27 97       	sbiw	r28, 0x07	; 7
    3d9e:	8f a9       	ldd	r24, Y+55	; 0x37
    3da0:	98 0f       	add	r25, r24
    3da2:	2b 96       	adiw	r28, 0x0b	; 11
    3da4:	9f af       	std	Y+63, r25	; 0x3f
    3da6:	2b 97       	sbiw	r28, 0x0b	; 11
    3da8:	91 e0       	ldi	r25, 0x01	; 1
    3daa:	2c 96       	adiw	r28, 0x0c	; 12
    3dac:	9f af       	std	Y+63, r25	; 0x3f
    3dae:	2c 97       	sbiw	r28, 0x0c	; 12
    3db0:	2b 96       	adiw	r28, 0x0b	; 11
    3db2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3db4:	2b 97       	sbiw	r28, 0x0b	; 11
    3db6:	9f a9       	ldd	r25, Y+55	; 0x37
    3db8:	89 17       	cp	r24, r25
    3dba:	18 f0       	brcs	.+6      	; 0x3dc2 <LCD_PrintNumber+0x2ac>
    3dbc:	2c 96       	adiw	r28, 0x0c	; 12
    3dbe:	1f ae       	std	Y+63, r1	; 0x3f
    3dc0:	2c 97       	sbiw	r28, 0x0c	; 12
    3dc2:	2a 96       	adiw	r28, 0x0a	; 10
    3dc4:	8f ad       	ldd	r24, Y+63	; 0x3f
    3dc6:	2a 97       	sbiw	r28, 0x0a	; 10
    3dc8:	2c 96       	adiw	r28, 0x0c	; 12
    3dca:	9f ad       	ldd	r25, Y+63	; 0x3f
    3dcc:	2c 97       	sbiw	r28, 0x0c	; 12
    3dce:	89 2b       	or	r24, r25
    3dd0:	2a 96       	adiw	r28, 0x0a	; 10
    3dd2:	8f af       	std	Y+63, r24	; 0x3f
    3dd4:	2a 97       	sbiw	r28, 0x0a	; 10
    3dd6:	2b 96       	adiw	r28, 0x0b	; 11
    3dd8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3dda:	2b 97       	sbiw	r28, 0x0b	; 11
    3ddc:	8f ab       	std	Y+55, r24	; 0x37
    3dde:	98 a5       	ldd	r25, Y+40	; 0x28
    3de0:	88 a9       	ldd	r24, Y+48	; 0x30
    3de2:	98 0f       	add	r25, r24
    3de4:	98 af       	std	Y+56, r25	; 0x38
    3de6:	2a 96       	adiw	r28, 0x0a	; 10
    3de8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3dea:	2a 97       	sbiw	r28, 0x0a	; 10
    3dec:	98 ad       	ldd	r25, Y+56	; 0x38
    3dee:	89 0f       	add	r24, r25
    3df0:	88 af       	std	Y+56, r24	; 0x38
    3df2:	89 a9       	ldd	r24, Y+49	; 0x31
    3df4:	89 8f       	std	Y+25, r24	; 0x19
    3df6:	9a a9       	ldd	r25, Y+50	; 0x32
    3df8:	9a 8f       	std	Y+26, r25	; 0x1a
    3dfa:	8b a9       	ldd	r24, Y+51	; 0x33
    3dfc:	8b 8f       	std	Y+27, r24	; 0x1b
    3dfe:	9c a9       	ldd	r25, Y+52	; 0x34
    3e00:	9c 8f       	std	Y+28, r25	; 0x1c
    3e02:	8d a9       	ldd	r24, Y+53	; 0x35
    3e04:	8d 8f       	std	Y+29, r24	; 0x1d
    3e06:	9e a9       	ldd	r25, Y+54	; 0x36
    3e08:	9e 8f       	std	Y+30, r25	; 0x1e
    3e0a:	8f a9       	ldd	r24, Y+55	; 0x37
    3e0c:	8f 8f       	std	Y+31, r24	; 0x1f
    3e0e:	98 ad       	ldd	r25, Y+56	; 0x38
    3e10:	98 a3       	std	Y+32, r25	; 0x20
    3e12:	a9 84       	ldd	r10, Y+9	; 0x09
    3e14:	ba 84       	ldd	r11, Y+10	; 0x0a
    3e16:	cb 84       	ldd	r12, Y+11	; 0x0b
    3e18:	dc 84       	ldd	r13, Y+12	; 0x0c
    3e1a:	ed 84       	ldd	r14, Y+13	; 0x0d
    3e1c:	fe 84       	ldd	r15, Y+14	; 0x0e
    3e1e:	0f 85       	ldd	r16, Y+15	; 0x0f
    3e20:	18 89       	ldd	r17, Y+16	; 0x10
    3e22:	2a 2d       	mov	r18, r10
    3e24:	3b 2d       	mov	r19, r11
    3e26:	4c 2d       	mov	r20, r12
    3e28:	5d 2d       	mov	r21, r13
    3e2a:	6e 2d       	mov	r22, r14
    3e2c:	7f 2d       	mov	r23, r15
    3e2e:	80 2f       	mov	r24, r16
    3e30:	91 2f       	mov	r25, r17
    3e32:	0f 2e       	mov	r0, r31
    3e34:	fa e0       	ldi	r31, 0x0A	; 10
    3e36:	af 2e       	mov	r10, r31
    3e38:	f0 2d       	mov	r31, r0
    3e3a:	bb 24       	eor	r11, r11
    3e3c:	cc 24       	eor	r12, r12
    3e3e:	dd 24       	eor	r13, r13
    3e40:	ee 24       	eor	r14, r14
    3e42:	ff 24       	eor	r15, r15
    3e44:	00 e0       	ldi	r16, 0x00	; 0
    3e46:	10 e0       	ldi	r17, 0x00	; 0
    3e48:	0e 94 45 08 	call	0x108a	; 0x108a <__umoddi3>
    3e4c:	a2 2e       	mov	r10, r18
    3e4e:	b3 2e       	mov	r11, r19
    3e50:	c4 2e       	mov	r12, r20
    3e52:	d5 2e       	mov	r13, r21
    3e54:	e6 2e       	mov	r14, r22
    3e56:	f7 2e       	mov	r15, r23
    3e58:	08 2f       	mov	r16, r24
    3e5a:	19 2f       	mov	r17, r25
    3e5c:	a9 8a       	std	Y+17, r10	; 0x11
    3e5e:	ba 8a       	std	Y+18, r11	; 0x12
    3e60:	cb 8a       	std	Y+19, r12	; 0x13
    3e62:	dc 8a       	std	Y+20, r13	; 0x14
    3e64:	ed 8a       	std	Y+21, r14	; 0x15
    3e66:	fe 8a       	std	Y+22, r15	; 0x16
    3e68:	0f 8b       	std	Y+23, r16	; 0x17
    3e6a:	18 8f       	std	Y+24, r17	; 0x18
    3e6c:	89 8d       	ldd	r24, Y+25	; 0x19
    3e6e:	99 89       	ldd	r25, Y+17	; 0x11
    3e70:	89 0f       	add	r24, r25
    3e72:	2d 96       	adiw	r28, 0x0d	; 13
    3e74:	8f af       	std	Y+63, r24	; 0x3f
    3e76:	2d 97       	sbiw	r28, 0x0d	; 13
    3e78:	81 e0       	ldi	r24, 0x01	; 1
    3e7a:	65 96       	adiw	r28, 0x15	; 21
    3e7c:	8f af       	std	Y+63, r24	; 0x3f
    3e7e:	65 97       	sbiw	r28, 0x15	; 21
    3e80:	2d 96       	adiw	r28, 0x0d	; 13
    3e82:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e84:	2d 97       	sbiw	r28, 0x0d	; 13
    3e86:	89 8d       	ldd	r24, Y+25	; 0x19
    3e88:	98 17       	cp	r25, r24
    3e8a:	18 f0       	brcs	.+6      	; 0x3e92 <LCD_PrintNumber+0x37c>
    3e8c:	65 96       	adiw	r28, 0x15	; 21
    3e8e:	1f ae       	std	Y+63, r1	; 0x3f
    3e90:	65 97       	sbiw	r28, 0x15	; 21
    3e92:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3e94:	8a 89       	ldd	r24, Y+18	; 0x12
    3e96:	98 0f       	add	r25, r24
    3e98:	2e 96       	adiw	r28, 0x0e	; 14
    3e9a:	9f af       	std	Y+63, r25	; 0x3f
    3e9c:	2e 97       	sbiw	r28, 0x0e	; 14
    3e9e:	91 e0       	ldi	r25, 0x01	; 1
    3ea0:	66 96       	adiw	r28, 0x16	; 22
    3ea2:	9f af       	std	Y+63, r25	; 0x3f
    3ea4:	66 97       	sbiw	r28, 0x16	; 22
    3ea6:	2e 96       	adiw	r28, 0x0e	; 14
    3ea8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3eaa:	2e 97       	sbiw	r28, 0x0e	; 14
    3eac:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3eae:	89 17       	cp	r24, r25
    3eb0:	18 f0       	brcs	.+6      	; 0x3eb8 <LCD_PrintNumber+0x3a2>
    3eb2:	66 96       	adiw	r28, 0x16	; 22
    3eb4:	1f ae       	std	Y+63, r1	; 0x3f
    3eb6:	66 97       	sbiw	r28, 0x16	; 22
    3eb8:	65 96       	adiw	r28, 0x15	; 21
    3eba:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ebc:	65 97       	sbiw	r28, 0x15	; 21
    3ebe:	2e 96       	adiw	r28, 0x0e	; 14
    3ec0:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ec2:	2e 97       	sbiw	r28, 0x0e	; 14
    3ec4:	89 0f       	add	r24, r25
    3ec6:	67 96       	adiw	r28, 0x17	; 23
    3ec8:	8f af       	std	Y+63, r24	; 0x3f
    3eca:	67 97       	sbiw	r28, 0x17	; 23
    3ecc:	81 e0       	ldi	r24, 0x01	; 1
    3ece:	68 96       	adiw	r28, 0x18	; 24
    3ed0:	8f af       	std	Y+63, r24	; 0x3f
    3ed2:	68 97       	sbiw	r28, 0x18	; 24
    3ed4:	67 96       	adiw	r28, 0x17	; 23
    3ed6:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ed8:	67 97       	sbiw	r28, 0x17	; 23
    3eda:	2e 96       	adiw	r28, 0x0e	; 14
    3edc:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ede:	2e 97       	sbiw	r28, 0x0e	; 14
    3ee0:	98 17       	cp	r25, r24
    3ee2:	18 f0       	brcs	.+6      	; 0x3eea <LCD_PrintNumber+0x3d4>
    3ee4:	68 96       	adiw	r28, 0x18	; 24
    3ee6:	1f ae       	std	Y+63, r1	; 0x3f
    3ee8:	68 97       	sbiw	r28, 0x18	; 24
    3eea:	66 96       	adiw	r28, 0x16	; 22
    3eec:	9f ad       	ldd	r25, Y+63	; 0x3f
    3eee:	66 97       	sbiw	r28, 0x16	; 22
    3ef0:	68 96       	adiw	r28, 0x18	; 24
    3ef2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ef4:	68 97       	sbiw	r28, 0x18	; 24
    3ef6:	98 2b       	or	r25, r24
    3ef8:	66 96       	adiw	r28, 0x16	; 22
    3efa:	9f af       	std	Y+63, r25	; 0x3f
    3efc:	66 97       	sbiw	r28, 0x16	; 22
    3efe:	67 96       	adiw	r28, 0x17	; 23
    3f00:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f02:	67 97       	sbiw	r28, 0x17	; 23
    3f04:	2e 96       	adiw	r28, 0x0e	; 14
    3f06:	9f af       	std	Y+63, r25	; 0x3f
    3f08:	2e 97       	sbiw	r28, 0x0e	; 14
    3f0a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f0c:	9b 89       	ldd	r25, Y+19	; 0x13
    3f0e:	89 0f       	add	r24, r25
    3f10:	2f 96       	adiw	r28, 0x0f	; 15
    3f12:	8f af       	std	Y+63, r24	; 0x3f
    3f14:	2f 97       	sbiw	r28, 0x0f	; 15
    3f16:	81 e0       	ldi	r24, 0x01	; 1
    3f18:	69 96       	adiw	r28, 0x19	; 25
    3f1a:	8f af       	std	Y+63, r24	; 0x3f
    3f1c:	69 97       	sbiw	r28, 0x19	; 25
    3f1e:	2f 96       	adiw	r28, 0x0f	; 15
    3f20:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f22:	2f 97       	sbiw	r28, 0x0f	; 15
    3f24:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f26:	98 17       	cp	r25, r24
    3f28:	18 f0       	brcs	.+6      	; 0x3f30 <LCD_PrintNumber+0x41a>
    3f2a:	69 96       	adiw	r28, 0x19	; 25
    3f2c:	1f ae       	std	Y+63, r1	; 0x3f
    3f2e:	69 97       	sbiw	r28, 0x19	; 25
    3f30:	66 96       	adiw	r28, 0x16	; 22
    3f32:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f34:	66 97       	sbiw	r28, 0x16	; 22
    3f36:	2f 96       	adiw	r28, 0x0f	; 15
    3f38:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f3a:	2f 97       	sbiw	r28, 0x0f	; 15
    3f3c:	98 0f       	add	r25, r24
    3f3e:	6a 96       	adiw	r28, 0x1a	; 26
    3f40:	9f af       	std	Y+63, r25	; 0x3f
    3f42:	6a 97       	sbiw	r28, 0x1a	; 26
    3f44:	91 e0       	ldi	r25, 0x01	; 1
    3f46:	6b 96       	adiw	r28, 0x1b	; 27
    3f48:	9f af       	std	Y+63, r25	; 0x3f
    3f4a:	6b 97       	sbiw	r28, 0x1b	; 27
    3f4c:	6a 96       	adiw	r28, 0x1a	; 26
    3f4e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f50:	6a 97       	sbiw	r28, 0x1a	; 26
    3f52:	2f 96       	adiw	r28, 0x0f	; 15
    3f54:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f56:	2f 97       	sbiw	r28, 0x0f	; 15
    3f58:	89 17       	cp	r24, r25
    3f5a:	18 f0       	brcs	.+6      	; 0x3f62 <LCD_PrintNumber+0x44c>
    3f5c:	6b 96       	adiw	r28, 0x1b	; 27
    3f5e:	1f ae       	std	Y+63, r1	; 0x3f
    3f60:	6b 97       	sbiw	r28, 0x1b	; 27
    3f62:	69 96       	adiw	r28, 0x19	; 25
    3f64:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f66:	69 97       	sbiw	r28, 0x19	; 25
    3f68:	6b 96       	adiw	r28, 0x1b	; 27
    3f6a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f6c:	6b 97       	sbiw	r28, 0x1b	; 27
    3f6e:	89 2b       	or	r24, r25
    3f70:	69 96       	adiw	r28, 0x19	; 25
    3f72:	8f af       	std	Y+63, r24	; 0x3f
    3f74:	69 97       	sbiw	r28, 0x19	; 25
    3f76:	6a 96       	adiw	r28, 0x1a	; 26
    3f78:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f7a:	6a 97       	sbiw	r28, 0x1a	; 26
    3f7c:	2f 96       	adiw	r28, 0x0f	; 15
    3f7e:	8f af       	std	Y+63, r24	; 0x3f
    3f80:	2f 97       	sbiw	r28, 0x0f	; 15
    3f82:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f84:	8c 89       	ldd	r24, Y+20	; 0x14
    3f86:	98 0f       	add	r25, r24
    3f88:	60 96       	adiw	r28, 0x10	; 16
    3f8a:	9f af       	std	Y+63, r25	; 0x3f
    3f8c:	60 97       	sbiw	r28, 0x10	; 16
    3f8e:	91 e0       	ldi	r25, 0x01	; 1
    3f90:	6c 96       	adiw	r28, 0x1c	; 28
    3f92:	9f af       	std	Y+63, r25	; 0x3f
    3f94:	6c 97       	sbiw	r28, 0x1c	; 28
    3f96:	60 96       	adiw	r28, 0x10	; 16
    3f98:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f9a:	60 97       	sbiw	r28, 0x10	; 16
    3f9c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f9e:	89 17       	cp	r24, r25
    3fa0:	18 f0       	brcs	.+6      	; 0x3fa8 <LCD_PrintNumber+0x492>
    3fa2:	6c 96       	adiw	r28, 0x1c	; 28
    3fa4:	1f ae       	std	Y+63, r1	; 0x3f
    3fa6:	6c 97       	sbiw	r28, 0x1c	; 28
    3fa8:	69 96       	adiw	r28, 0x19	; 25
    3faa:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fac:	69 97       	sbiw	r28, 0x19	; 25
    3fae:	60 96       	adiw	r28, 0x10	; 16
    3fb0:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fb2:	60 97       	sbiw	r28, 0x10	; 16
    3fb4:	89 0f       	add	r24, r25
    3fb6:	6d 96       	adiw	r28, 0x1d	; 29
    3fb8:	8f af       	std	Y+63, r24	; 0x3f
    3fba:	6d 97       	sbiw	r28, 0x1d	; 29
    3fbc:	81 e0       	ldi	r24, 0x01	; 1
    3fbe:	6e 96       	adiw	r28, 0x1e	; 30
    3fc0:	8f af       	std	Y+63, r24	; 0x3f
    3fc2:	6e 97       	sbiw	r28, 0x1e	; 30
    3fc4:	6d 96       	adiw	r28, 0x1d	; 29
    3fc6:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fc8:	6d 97       	sbiw	r28, 0x1d	; 29
    3fca:	60 96       	adiw	r28, 0x10	; 16
    3fcc:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fce:	60 97       	sbiw	r28, 0x10	; 16
    3fd0:	98 17       	cp	r25, r24
    3fd2:	18 f0       	brcs	.+6      	; 0x3fda <LCD_PrintNumber+0x4c4>
    3fd4:	6e 96       	adiw	r28, 0x1e	; 30
    3fd6:	1f ae       	std	Y+63, r1	; 0x3f
    3fd8:	6e 97       	sbiw	r28, 0x1e	; 30
    3fda:	6c 96       	adiw	r28, 0x1c	; 28
    3fdc:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fde:	6c 97       	sbiw	r28, 0x1c	; 28
    3fe0:	6e 96       	adiw	r28, 0x1e	; 30
    3fe2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fe4:	6e 97       	sbiw	r28, 0x1e	; 30
    3fe6:	98 2b       	or	r25, r24
    3fe8:	6c 96       	adiw	r28, 0x1c	; 28
    3fea:	9f af       	std	Y+63, r25	; 0x3f
    3fec:	6c 97       	sbiw	r28, 0x1c	; 28
    3fee:	6d 96       	adiw	r28, 0x1d	; 29
    3ff0:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ff2:	6d 97       	sbiw	r28, 0x1d	; 29
    3ff4:	60 96       	adiw	r28, 0x10	; 16
    3ff6:	9f af       	std	Y+63, r25	; 0x3f
    3ff8:	60 97       	sbiw	r28, 0x10	; 16
    3ffa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3ffc:	9d 89       	ldd	r25, Y+21	; 0x15
    3ffe:	89 0f       	add	r24, r25
    4000:	61 96       	adiw	r28, 0x11	; 17
    4002:	8f af       	std	Y+63, r24	; 0x3f
    4004:	61 97       	sbiw	r28, 0x11	; 17
    4006:	81 e0       	ldi	r24, 0x01	; 1
    4008:	6f 96       	adiw	r28, 0x1f	; 31
    400a:	8f af       	std	Y+63, r24	; 0x3f
    400c:	6f 97       	sbiw	r28, 0x1f	; 31
    400e:	61 96       	adiw	r28, 0x11	; 17
    4010:	9f ad       	ldd	r25, Y+63	; 0x3f
    4012:	61 97       	sbiw	r28, 0x11	; 17
    4014:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4016:	98 17       	cp	r25, r24
    4018:	18 f0       	brcs	.+6      	; 0x4020 <LCD_PrintNumber+0x50a>
    401a:	6f 96       	adiw	r28, 0x1f	; 31
    401c:	1f ae       	std	Y+63, r1	; 0x3f
    401e:	6f 97       	sbiw	r28, 0x1f	; 31
    4020:	6c 96       	adiw	r28, 0x1c	; 28
    4022:	9f ad       	ldd	r25, Y+63	; 0x3f
    4024:	6c 97       	sbiw	r28, 0x1c	; 28
    4026:	61 96       	adiw	r28, 0x11	; 17
    4028:	8f ad       	ldd	r24, Y+63	; 0x3f
    402a:	61 97       	sbiw	r28, 0x11	; 17
    402c:	98 0f       	add	r25, r24
    402e:	a0 96       	adiw	r28, 0x20	; 32
    4030:	9f af       	std	Y+63, r25	; 0x3f
    4032:	a0 97       	sbiw	r28, 0x20	; 32
    4034:	91 e0       	ldi	r25, 0x01	; 1
    4036:	a1 96       	adiw	r28, 0x21	; 33
    4038:	9f af       	std	Y+63, r25	; 0x3f
    403a:	a1 97       	sbiw	r28, 0x21	; 33
    403c:	a0 96       	adiw	r28, 0x20	; 32
    403e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4040:	a0 97       	sbiw	r28, 0x20	; 32
    4042:	61 96       	adiw	r28, 0x11	; 17
    4044:	9f ad       	ldd	r25, Y+63	; 0x3f
    4046:	61 97       	sbiw	r28, 0x11	; 17
    4048:	89 17       	cp	r24, r25
    404a:	18 f0       	brcs	.+6      	; 0x4052 <LCD_PrintNumber+0x53c>
    404c:	a1 96       	adiw	r28, 0x21	; 33
    404e:	1f ae       	std	Y+63, r1	; 0x3f
    4050:	a1 97       	sbiw	r28, 0x21	; 33
    4052:	6f 96       	adiw	r28, 0x1f	; 31
    4054:	8f ad       	ldd	r24, Y+63	; 0x3f
    4056:	6f 97       	sbiw	r28, 0x1f	; 31
    4058:	a1 96       	adiw	r28, 0x21	; 33
    405a:	9f ad       	ldd	r25, Y+63	; 0x3f
    405c:	a1 97       	sbiw	r28, 0x21	; 33
    405e:	89 2b       	or	r24, r25
    4060:	6f 96       	adiw	r28, 0x1f	; 31
    4062:	8f af       	std	Y+63, r24	; 0x3f
    4064:	6f 97       	sbiw	r28, 0x1f	; 31
    4066:	a0 96       	adiw	r28, 0x20	; 32
    4068:	8f ad       	ldd	r24, Y+63	; 0x3f
    406a:	a0 97       	sbiw	r28, 0x20	; 32
    406c:	61 96       	adiw	r28, 0x11	; 17
    406e:	8f af       	std	Y+63, r24	; 0x3f
    4070:	61 97       	sbiw	r28, 0x11	; 17
    4072:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4074:	8e 89       	ldd	r24, Y+22	; 0x16
    4076:	98 0f       	add	r25, r24
    4078:	62 96       	adiw	r28, 0x12	; 18
    407a:	9f af       	std	Y+63, r25	; 0x3f
    407c:	62 97       	sbiw	r28, 0x12	; 18
    407e:	91 e0       	ldi	r25, 0x01	; 1
    4080:	a2 96       	adiw	r28, 0x22	; 34
    4082:	9f af       	std	Y+63, r25	; 0x3f
    4084:	a2 97       	sbiw	r28, 0x22	; 34
    4086:	62 96       	adiw	r28, 0x12	; 18
    4088:	8f ad       	ldd	r24, Y+63	; 0x3f
    408a:	62 97       	sbiw	r28, 0x12	; 18
    408c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    408e:	89 17       	cp	r24, r25
    4090:	18 f0       	brcs	.+6      	; 0x4098 <LCD_PrintNumber+0x582>
    4092:	a2 96       	adiw	r28, 0x22	; 34
    4094:	1f ae       	std	Y+63, r1	; 0x3f
    4096:	a2 97       	sbiw	r28, 0x22	; 34
    4098:	6f 96       	adiw	r28, 0x1f	; 31
    409a:	8f ad       	ldd	r24, Y+63	; 0x3f
    409c:	6f 97       	sbiw	r28, 0x1f	; 31
    409e:	62 96       	adiw	r28, 0x12	; 18
    40a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    40a2:	62 97       	sbiw	r28, 0x12	; 18
    40a4:	89 0f       	add	r24, r25
    40a6:	a3 96       	adiw	r28, 0x23	; 35
    40a8:	8f af       	std	Y+63, r24	; 0x3f
    40aa:	a3 97       	sbiw	r28, 0x23	; 35
    40ac:	81 e0       	ldi	r24, 0x01	; 1
    40ae:	a4 96       	adiw	r28, 0x24	; 36
    40b0:	8f af       	std	Y+63, r24	; 0x3f
    40b2:	a4 97       	sbiw	r28, 0x24	; 36
    40b4:	a3 96       	adiw	r28, 0x23	; 35
    40b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    40b8:	a3 97       	sbiw	r28, 0x23	; 35
    40ba:	62 96       	adiw	r28, 0x12	; 18
    40bc:	8f ad       	ldd	r24, Y+63	; 0x3f
    40be:	62 97       	sbiw	r28, 0x12	; 18
    40c0:	98 17       	cp	r25, r24
    40c2:	18 f0       	brcs	.+6      	; 0x40ca <LCD_PrintNumber+0x5b4>
    40c4:	a4 96       	adiw	r28, 0x24	; 36
    40c6:	1f ae       	std	Y+63, r1	; 0x3f
    40c8:	a4 97       	sbiw	r28, 0x24	; 36
    40ca:	a2 96       	adiw	r28, 0x22	; 34
    40cc:	9f ad       	ldd	r25, Y+63	; 0x3f
    40ce:	a2 97       	sbiw	r28, 0x22	; 34
    40d0:	a4 96       	adiw	r28, 0x24	; 36
    40d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    40d4:	a4 97       	sbiw	r28, 0x24	; 36
    40d6:	98 2b       	or	r25, r24
    40d8:	a2 96       	adiw	r28, 0x22	; 34
    40da:	9f af       	std	Y+63, r25	; 0x3f
    40dc:	a2 97       	sbiw	r28, 0x22	; 34
    40de:	a3 96       	adiw	r28, 0x23	; 35
    40e0:	9f ad       	ldd	r25, Y+63	; 0x3f
    40e2:	a3 97       	sbiw	r28, 0x23	; 35
    40e4:	62 96       	adiw	r28, 0x12	; 18
    40e6:	9f af       	std	Y+63, r25	; 0x3f
    40e8:	62 97       	sbiw	r28, 0x12	; 18
    40ea:	8f 8d       	ldd	r24, Y+31	; 0x1f
    40ec:	9f 89       	ldd	r25, Y+23	; 0x17
    40ee:	89 0f       	add	r24, r25
    40f0:	63 96       	adiw	r28, 0x13	; 19
    40f2:	8f af       	std	Y+63, r24	; 0x3f
    40f4:	63 97       	sbiw	r28, 0x13	; 19
    40f6:	81 e0       	ldi	r24, 0x01	; 1
    40f8:	a5 96       	adiw	r28, 0x25	; 37
    40fa:	8f af       	std	Y+63, r24	; 0x3f
    40fc:	a5 97       	sbiw	r28, 0x25	; 37
    40fe:	63 96       	adiw	r28, 0x13	; 19
    4100:	9f ad       	ldd	r25, Y+63	; 0x3f
    4102:	63 97       	sbiw	r28, 0x13	; 19
    4104:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4106:	98 17       	cp	r25, r24
    4108:	18 f0       	brcs	.+6      	; 0x4110 <LCD_PrintNumber+0x5fa>
    410a:	a5 96       	adiw	r28, 0x25	; 37
    410c:	1f ae       	std	Y+63, r1	; 0x3f
    410e:	a5 97       	sbiw	r28, 0x25	; 37
    4110:	a2 96       	adiw	r28, 0x22	; 34
    4112:	9f ad       	ldd	r25, Y+63	; 0x3f
    4114:	a2 97       	sbiw	r28, 0x22	; 34
    4116:	63 96       	adiw	r28, 0x13	; 19
    4118:	8f ad       	ldd	r24, Y+63	; 0x3f
    411a:	63 97       	sbiw	r28, 0x13	; 19
    411c:	98 0f       	add	r25, r24
    411e:	a6 96       	adiw	r28, 0x26	; 38
    4120:	9f af       	std	Y+63, r25	; 0x3f
    4122:	a6 97       	sbiw	r28, 0x26	; 38
    4124:	91 e0       	ldi	r25, 0x01	; 1
    4126:	a7 96       	adiw	r28, 0x27	; 39
    4128:	9f af       	std	Y+63, r25	; 0x3f
    412a:	a7 97       	sbiw	r28, 0x27	; 39
    412c:	a6 96       	adiw	r28, 0x26	; 38
    412e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4130:	a6 97       	sbiw	r28, 0x26	; 38
    4132:	63 96       	adiw	r28, 0x13	; 19
    4134:	9f ad       	ldd	r25, Y+63	; 0x3f
    4136:	63 97       	sbiw	r28, 0x13	; 19
    4138:	89 17       	cp	r24, r25
    413a:	18 f0       	brcs	.+6      	; 0x4142 <LCD_PrintNumber+0x62c>
    413c:	a7 96       	adiw	r28, 0x27	; 39
    413e:	1f ae       	std	Y+63, r1	; 0x3f
    4140:	a7 97       	sbiw	r28, 0x27	; 39
    4142:	a5 96       	adiw	r28, 0x25	; 37
    4144:	8f ad       	ldd	r24, Y+63	; 0x3f
    4146:	a5 97       	sbiw	r28, 0x25	; 37
    4148:	a7 96       	adiw	r28, 0x27	; 39
    414a:	9f ad       	ldd	r25, Y+63	; 0x3f
    414c:	a7 97       	sbiw	r28, 0x27	; 39
    414e:	89 2b       	or	r24, r25
    4150:	a5 96       	adiw	r28, 0x25	; 37
    4152:	8f af       	std	Y+63, r24	; 0x3f
    4154:	a5 97       	sbiw	r28, 0x25	; 37
    4156:	a6 96       	adiw	r28, 0x26	; 38
    4158:	8f ad       	ldd	r24, Y+63	; 0x3f
    415a:	a6 97       	sbiw	r28, 0x26	; 38
    415c:	63 96       	adiw	r28, 0x13	; 19
    415e:	8f af       	std	Y+63, r24	; 0x3f
    4160:	63 97       	sbiw	r28, 0x13	; 19
    4162:	98 a1       	ldd	r25, Y+32	; 0x20
    4164:	88 8d       	ldd	r24, Y+24	; 0x18
    4166:	98 0f       	add	r25, r24
    4168:	64 96       	adiw	r28, 0x14	; 20
    416a:	9f af       	std	Y+63, r25	; 0x3f
    416c:	64 97       	sbiw	r28, 0x14	; 20
    416e:	a5 96       	adiw	r28, 0x25	; 37
    4170:	8f ad       	ldd	r24, Y+63	; 0x3f
    4172:	a5 97       	sbiw	r28, 0x25	; 37
    4174:	64 96       	adiw	r28, 0x14	; 20
    4176:	9f ad       	ldd	r25, Y+63	; 0x3f
    4178:	64 97       	sbiw	r28, 0x14	; 20
    417a:	89 0f       	add	r24, r25
    417c:	64 96       	adiw	r28, 0x14	; 20
    417e:	8f af       	std	Y+63, r24	; 0x3f
    4180:	64 97       	sbiw	r28, 0x14	; 20
    4182:	2d 96       	adiw	r28, 0x0d	; 13
    4184:	8f ad       	ldd	r24, Y+63	; 0x3f
    4186:	2d 97       	sbiw	r28, 0x0d	; 13
    4188:	89 83       	std	Y+1, r24	; 0x01
    418a:	2e 96       	adiw	r28, 0x0e	; 14
    418c:	9f ad       	ldd	r25, Y+63	; 0x3f
    418e:	2e 97       	sbiw	r28, 0x0e	; 14
    4190:	9a 83       	std	Y+2, r25	; 0x02
    4192:	2f 96       	adiw	r28, 0x0f	; 15
    4194:	8f ad       	ldd	r24, Y+63	; 0x3f
    4196:	2f 97       	sbiw	r28, 0x0f	; 15
    4198:	8b 83       	std	Y+3, r24	; 0x03
    419a:	60 96       	adiw	r28, 0x10	; 16
    419c:	9f ad       	ldd	r25, Y+63	; 0x3f
    419e:	60 97       	sbiw	r28, 0x10	; 16
    41a0:	9c 83       	std	Y+4, r25	; 0x04
    41a2:	61 96       	adiw	r28, 0x11	; 17
    41a4:	8f ad       	ldd	r24, Y+63	; 0x3f
    41a6:	61 97       	sbiw	r28, 0x11	; 17
    41a8:	8d 83       	std	Y+5, r24	; 0x05
    41aa:	62 96       	adiw	r28, 0x12	; 18
    41ac:	9f ad       	ldd	r25, Y+63	; 0x3f
    41ae:	62 97       	sbiw	r28, 0x12	; 18
    41b0:	9e 83       	std	Y+6, r25	; 0x06
    41b2:	63 96       	adiw	r28, 0x13	; 19
    41b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    41b6:	63 97       	sbiw	r28, 0x13	; 19
    41b8:	8f 83       	std	Y+7, r24	; 0x07
    41ba:	64 96       	adiw	r28, 0x14	; 20
    41bc:	9f ad       	ldd	r25, Y+63	; 0x3f
    41be:	64 97       	sbiw	r28, 0x14	; 20
    41c0:	98 87       	std	Y+8, r25	; 0x08

	        num = num / 10;
    41c2:	a9 84       	ldd	r10, Y+9	; 0x09
    41c4:	ba 84       	ldd	r11, Y+10	; 0x0a
    41c6:	cb 84       	ldd	r12, Y+11	; 0x0b
    41c8:	dc 84       	ldd	r13, Y+12	; 0x0c
    41ca:	ed 84       	ldd	r14, Y+13	; 0x0d
    41cc:	fe 84       	ldd	r15, Y+14	; 0x0e
    41ce:	0f 85       	ldd	r16, Y+15	; 0x0f
    41d0:	18 89       	ldd	r17, Y+16	; 0x10
    41d2:	2a 2d       	mov	r18, r10
    41d4:	3b 2d       	mov	r19, r11
    41d6:	4c 2d       	mov	r20, r12
    41d8:	5d 2d       	mov	r21, r13
    41da:	6e 2d       	mov	r22, r14
    41dc:	7f 2d       	mov	r23, r15
    41de:	80 2f       	mov	r24, r16
    41e0:	91 2f       	mov	r25, r17
    41e2:	0f 2e       	mov	r0, r31
    41e4:	fa e0       	ldi	r31, 0x0A	; 10
    41e6:	af 2e       	mov	r10, r31
    41e8:	f0 2d       	mov	r31, r0
    41ea:	bb 24       	eor	r11, r11
    41ec:	cc 24       	eor	r12, r12
    41ee:	dd 24       	eor	r13, r13
    41f0:	ee 24       	eor	r14, r14
    41f2:	ff 24       	eor	r15, r15
    41f4:	00 e0       	ldi	r16, 0x00	; 0
    41f6:	10 e0       	ldi	r17, 0x00	; 0
    41f8:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__udivdi3>
    41fc:	a2 2e       	mov	r10, r18
    41fe:	b3 2e       	mov	r11, r19
    4200:	c4 2e       	mov	r12, r20
    4202:	d5 2e       	mov	r13, r21
    4204:	e6 2e       	mov	r14, r22
    4206:	f7 2e       	mov	r15, r23
    4208:	08 2f       	mov	r16, r24
    420a:	19 2f       	mov	r17, r25
    420c:	a9 86       	std	Y+9, r10	; 0x09
    420e:	ba 86       	std	Y+10, r11	; 0x0a
    4210:	cb 86       	std	Y+11, r12	; 0x0b
    4212:	dc 86       	std	Y+12, r13	; 0x0c
    4214:	ed 86       	std	Y+13, r14	; 0x0d
    4216:	fe 86       	std	Y+14, r15	; 0x0e
    4218:	0f 87       	std	Y+15, r16	; 0x0f
    421a:	18 8b       	std	Y+16, r17	; 0x10
	 }
	}
void LCD_PrintNumber(uint64 num)
{
	uint64 reverse= 1;
	    while (num > 0) //123
    421c:	89 85       	ldd	r24, Y+9	; 0x09
    421e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4220:	89 2b       	or	r24, r25
    4222:	9b 85       	ldd	r25, Y+11	; 0x0b
    4224:	89 2b       	or	r24, r25
    4226:	9c 85       	ldd	r25, Y+12	; 0x0c
    4228:	89 2b       	or	r24, r25
    422a:	9d 85       	ldd	r25, Y+13	; 0x0d
    422c:	89 2b       	or	r24, r25
    422e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4230:	89 2b       	or	r24, r25
    4232:	9f 85       	ldd	r25, Y+15	; 0x0f
    4234:	89 2b       	or	r24, r25
    4236:	98 89       	ldd	r25, Y+16	; 0x10
    4238:	89 2b       	or	r24, r25
    423a:	88 23       	and	r24, r24
    423c:	09 f0       	breq	.+2      	; 0x4240 <LCD_PrintNumber+0x72a>
    423e:	90 cc       	rjmp	.-1760   	; 0x3b60 <LCD_PrintNumber+0x4a>
    4240:	5e c0       	rjmp	.+188    	; 0x42fe <LCD_PrintNumber+0x7e8>
	    }

	    while(reverse>1) //321
	    {

	    	LCD_WriteData((reverse%10)+48);
    4242:	a9 80       	ldd	r10, Y+1	; 0x01
    4244:	ba 80       	ldd	r11, Y+2	; 0x02
    4246:	cb 80       	ldd	r12, Y+3	; 0x03
    4248:	dc 80       	ldd	r13, Y+4	; 0x04
    424a:	ed 80       	ldd	r14, Y+5	; 0x05
    424c:	fe 80       	ldd	r15, Y+6	; 0x06
    424e:	0f 81       	ldd	r16, Y+7	; 0x07
    4250:	18 85       	ldd	r17, Y+8	; 0x08
    4252:	2a 2d       	mov	r18, r10
    4254:	3b 2d       	mov	r19, r11
    4256:	4c 2d       	mov	r20, r12
    4258:	5d 2d       	mov	r21, r13
    425a:	6e 2d       	mov	r22, r14
    425c:	7f 2d       	mov	r23, r15
    425e:	80 2f       	mov	r24, r16
    4260:	91 2f       	mov	r25, r17
    4262:	0f 2e       	mov	r0, r31
    4264:	fa e0       	ldi	r31, 0x0A	; 10
    4266:	af 2e       	mov	r10, r31
    4268:	f0 2d       	mov	r31, r0
    426a:	bb 24       	eor	r11, r11
    426c:	cc 24       	eor	r12, r12
    426e:	dd 24       	eor	r13, r13
    4270:	ee 24       	eor	r14, r14
    4272:	ff 24       	eor	r15, r15
    4274:	00 e0       	ldi	r16, 0x00	; 0
    4276:	10 e0       	ldi	r17, 0x00	; 0
    4278:	0e 94 45 08 	call	0x108a	; 0x108a <__umoddi3>
    427c:	a2 2e       	mov	r10, r18
    427e:	b3 2e       	mov	r11, r19
    4280:	c4 2e       	mov	r12, r20
    4282:	d5 2e       	mov	r13, r21
    4284:	e6 2e       	mov	r14, r22
    4286:	f7 2e       	mov	r15, r23
    4288:	08 2f       	mov	r16, r24
    428a:	19 2f       	mov	r17, r25
    428c:	2a 2d       	mov	r18, r10
    428e:	3b 2d       	mov	r19, r11
    4290:	4c 2d       	mov	r20, r12
    4292:	5d 2d       	mov	r21, r13
    4294:	6e 2d       	mov	r22, r14
    4296:	7f 2d       	mov	r23, r15
    4298:	80 2f       	mov	r24, r16
    429a:	91 2f       	mov	r25, r17
    429c:	82 2f       	mov	r24, r18
    429e:	80 5d       	subi	r24, 0xD0	; 208
    42a0:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>
	    	reverse=reverse/10;
    42a4:	a9 80       	ldd	r10, Y+1	; 0x01
    42a6:	ba 80       	ldd	r11, Y+2	; 0x02
    42a8:	cb 80       	ldd	r12, Y+3	; 0x03
    42aa:	dc 80       	ldd	r13, Y+4	; 0x04
    42ac:	ed 80       	ldd	r14, Y+5	; 0x05
    42ae:	fe 80       	ldd	r15, Y+6	; 0x06
    42b0:	0f 81       	ldd	r16, Y+7	; 0x07
    42b2:	18 85       	ldd	r17, Y+8	; 0x08
    42b4:	2a 2d       	mov	r18, r10
    42b6:	3b 2d       	mov	r19, r11
    42b8:	4c 2d       	mov	r20, r12
    42ba:	5d 2d       	mov	r21, r13
    42bc:	6e 2d       	mov	r22, r14
    42be:	7f 2d       	mov	r23, r15
    42c0:	80 2f       	mov	r24, r16
    42c2:	91 2f       	mov	r25, r17
    42c4:	0f 2e       	mov	r0, r31
    42c6:	fa e0       	ldi	r31, 0x0A	; 10
    42c8:	af 2e       	mov	r10, r31
    42ca:	f0 2d       	mov	r31, r0
    42cc:	bb 24       	eor	r11, r11
    42ce:	cc 24       	eor	r12, r12
    42d0:	dd 24       	eor	r13, r13
    42d2:	ee 24       	eor	r14, r14
    42d4:	ff 24       	eor	r15, r15
    42d6:	00 e0       	ldi	r16, 0x00	; 0
    42d8:	10 e0       	ldi	r17, 0x00	; 0
    42da:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__udivdi3>
    42de:	a2 2e       	mov	r10, r18
    42e0:	b3 2e       	mov	r11, r19
    42e2:	c4 2e       	mov	r12, r20
    42e4:	d5 2e       	mov	r13, r21
    42e6:	e6 2e       	mov	r14, r22
    42e8:	f7 2e       	mov	r15, r23
    42ea:	08 2f       	mov	r16, r24
    42ec:	19 2f       	mov	r17, r25
    42ee:	a9 82       	std	Y+1, r10	; 0x01
    42f0:	ba 82       	std	Y+2, r11	; 0x02
    42f2:	cb 82       	std	Y+3, r12	; 0x03
    42f4:	dc 82       	std	Y+4, r13	; 0x04
    42f6:	ed 82       	std	Y+5, r14	; 0x05
    42f8:	fe 82       	std	Y+6, r15	; 0x06
    42fa:	0f 83       	std	Y+7, r16	; 0x07
    42fc:	18 87       	std	Y+8, r17	; 0x08
	        reverse= (reverse * 10) + num % 10;

	        num = num / 10;
	    }

	    while(reverse>1) //321
    42fe:	88 85       	ldd	r24, Y+8	; 0x08
    4300:	88 23       	and	r24, r24
    4302:	09 f0       	breq	.+2      	; 0x4306 <LCD_PrintNumber+0x7f0>
    4304:	9e cf       	rjmp	.-196    	; 0x4242 <LCD_PrintNumber+0x72c>
    4306:	88 85       	ldd	r24, Y+8	; 0x08
    4308:	88 23       	and	r24, r24
    430a:	71 f5       	brne	.+92     	; 0x4368 <LCD_PrintNumber+0x852>
    430c:	8f 81       	ldd	r24, Y+7	; 0x07
    430e:	88 23       	and	r24, r24
    4310:	09 f0       	breq	.+2      	; 0x4314 <LCD_PrintNumber+0x7fe>
    4312:	97 cf       	rjmp	.-210    	; 0x4242 <LCD_PrintNumber+0x72c>
    4314:	8f 81       	ldd	r24, Y+7	; 0x07
    4316:	88 23       	and	r24, r24
    4318:	39 f5       	brne	.+78     	; 0x4368 <LCD_PrintNumber+0x852>
    431a:	8e 81       	ldd	r24, Y+6	; 0x06
    431c:	88 23       	and	r24, r24
    431e:	09 f0       	breq	.+2      	; 0x4322 <LCD_PrintNumber+0x80c>
    4320:	90 cf       	rjmp	.-224    	; 0x4242 <LCD_PrintNumber+0x72c>
    4322:	8e 81       	ldd	r24, Y+6	; 0x06
    4324:	88 23       	and	r24, r24
    4326:	01 f5       	brne	.+64     	; 0x4368 <LCD_PrintNumber+0x852>
    4328:	8d 81       	ldd	r24, Y+5	; 0x05
    432a:	88 23       	and	r24, r24
    432c:	09 f0       	breq	.+2      	; 0x4330 <LCD_PrintNumber+0x81a>
    432e:	89 cf       	rjmp	.-238    	; 0x4242 <LCD_PrintNumber+0x72c>
    4330:	8d 81       	ldd	r24, Y+5	; 0x05
    4332:	88 23       	and	r24, r24
    4334:	c9 f4       	brne	.+50     	; 0x4368 <LCD_PrintNumber+0x852>
    4336:	8c 81       	ldd	r24, Y+4	; 0x04
    4338:	88 23       	and	r24, r24
    433a:	09 f0       	breq	.+2      	; 0x433e <LCD_PrintNumber+0x828>
    433c:	82 cf       	rjmp	.-252    	; 0x4242 <LCD_PrintNumber+0x72c>
    433e:	8c 81       	ldd	r24, Y+4	; 0x04
    4340:	88 23       	and	r24, r24
    4342:	91 f4       	brne	.+36     	; 0x4368 <LCD_PrintNumber+0x852>
    4344:	8b 81       	ldd	r24, Y+3	; 0x03
    4346:	88 23       	and	r24, r24
    4348:	09 f0       	breq	.+2      	; 0x434c <LCD_PrintNumber+0x836>
    434a:	7b cf       	rjmp	.-266    	; 0x4242 <LCD_PrintNumber+0x72c>
    434c:	8b 81       	ldd	r24, Y+3	; 0x03
    434e:	88 23       	and	r24, r24
    4350:	59 f4       	brne	.+22     	; 0x4368 <LCD_PrintNumber+0x852>
    4352:	8a 81       	ldd	r24, Y+2	; 0x02
    4354:	88 23       	and	r24, r24
    4356:	09 f0       	breq	.+2      	; 0x435a <LCD_PrintNumber+0x844>
    4358:	74 cf       	rjmp	.-280    	; 0x4242 <LCD_PrintNumber+0x72c>
    435a:	8a 81       	ldd	r24, Y+2	; 0x02
    435c:	88 23       	and	r24, r24
    435e:	21 f4       	brne	.+8      	; 0x4368 <LCD_PrintNumber+0x852>
    4360:	89 81       	ldd	r24, Y+1	; 0x01
    4362:	82 30       	cpi	r24, 0x02	; 2
    4364:	08 f0       	brcs	.+2      	; 0x4368 <LCD_PrintNumber+0x852>
    4366:	6d cf       	rjmp	.-294    	; 0x4242 <LCD_PrintNumber+0x72c>
	    {

	    	LCD_WriteData((reverse%10)+48);
	    	reverse=reverse/10;
	    }
}
    4368:	ca 59       	subi	r28, 0x9A	; 154
    436a:	df 4f       	sbci	r29, 0xFF	; 255
    436c:	0f b6       	in	r0, 0x3f	; 63
    436e:	f8 94       	cli
    4370:	de bf       	out	0x3e, r29	; 62
    4372:	0f be       	out	0x3f, r0	; 63
    4374:	cd bf       	out	0x3d, r28	; 61
    4376:	cf 91       	pop	r28
    4378:	df 91       	pop	r29
    437a:	1f 91       	pop	r17
    437c:	0f 91       	pop	r16
    437e:	ff 90       	pop	r15
    4380:	ef 90       	pop	r14
    4382:	df 90       	pop	r13
    4384:	cf 90       	pop	r12
    4386:	bf 90       	pop	r11
    4388:	af 90       	pop	r10
    438a:	08 95       	ret

0000438c <LCD_PrintBinary>:

void LCD_PrintBinary(uint8 num)
{
    438c:	df 93       	push	r29
    438e:	cf 93       	push	r28
    4390:	00 d0       	rcall	.+0      	; 0x4392 <LCD_PrintBinary+0x6>
    4392:	0f 92       	push	r0
    4394:	cd b7       	in	r28, 0x3d	; 61
    4396:	de b7       	in	r29, 0x3e	; 62
    4398:	8a 83       	std	Y+2, r24	; 0x02
	for (sint8 i=7; i>=0; i--)
    439a:	87 e0       	ldi	r24, 0x07	; 7
    439c:	89 83       	std	Y+1, r24	; 0x01
    439e:	1d c0       	rjmp	.+58     	; 0x43da <LCD_PrintBinary+0x4e>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
    43a0:	8a 81       	ldd	r24, Y+2	; 0x02
    43a2:	28 2f       	mov	r18, r24
    43a4:	30 e0       	ldi	r19, 0x00	; 0
    43a6:	89 81       	ldd	r24, Y+1	; 0x01
    43a8:	99 27       	eor	r25, r25
    43aa:	87 fd       	sbrc	r24, 7
    43ac:	90 95       	com	r25
    43ae:	a9 01       	movw	r20, r18
    43b0:	02 c0       	rjmp	.+4      	; 0x43b6 <LCD_PrintBinary+0x2a>
    43b2:	55 95       	asr	r21
    43b4:	47 95       	ror	r20
    43b6:	8a 95       	dec	r24
    43b8:	e2 f7       	brpl	.-8      	; 0x43b2 <LCD_PrintBinary+0x26>
    43ba:	ca 01       	movw	r24, r20
    43bc:	81 70       	andi	r24, 0x01	; 1
    43be:	90 70       	andi	r25, 0x00	; 0
    43c0:	88 23       	and	r24, r24
    43c2:	19 f0       	breq	.+6      	; 0x43ca <LCD_PrintBinary+0x3e>
    43c4:	51 e3       	ldi	r21, 0x31	; 49
    43c6:	5b 83       	std	Y+3, r21	; 0x03
    43c8:	02 c0       	rjmp	.+4      	; 0x43ce <LCD_PrintBinary+0x42>
    43ca:	80 e3       	ldi	r24, 0x30	; 48
    43cc:	8b 83       	std	Y+3, r24	; 0x03
    43ce:	8b 81       	ldd	r24, Y+3	; 0x03
    43d0:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>
	    }
}

void LCD_PrintBinary(uint8 num)
{
	for (sint8 i=7; i>=0; i--)
    43d4:	89 81       	ldd	r24, Y+1	; 0x01
    43d6:	81 50       	subi	r24, 0x01	; 1
    43d8:	89 83       	std	Y+1, r24	; 0x01
    43da:	89 81       	ldd	r24, Y+1	; 0x01
    43dc:	88 23       	and	r24, r24
    43de:	04 f7       	brge	.-64     	; 0x43a0 <LCD_PrintBinary+0x14>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
	}

}
    43e0:	0f 90       	pop	r0
    43e2:	0f 90       	pop	r0
    43e4:	0f 90       	pop	r0
    43e6:	cf 91       	pop	r28
    43e8:	df 91       	pop	r29
    43ea:	08 95       	ret

000043ec <LCD_PrintHex>:

void LCD_PrintHex(uint8 num)
{
    43ec:	df 93       	push	r29
    43ee:	cf 93       	push	r28
    43f0:	00 d0       	rcall	.+0      	; 0x43f2 <LCD_PrintHex+0x6>
    43f2:	0f 92       	push	r0
    43f4:	cd b7       	in	r28, 0x3d	; 61
    43f6:	de b7       	in	r29, 0x3e	; 62
    43f8:	8b 83       	std	Y+3, r24	; 0x03
	uint8 Upper = 0, Lower = 0;
    43fa:	1a 82       	std	Y+2, r1	; 0x02
    43fc:	19 82       	std	Y+1, r1	; 0x01
	LCD_WriteString("0X");
    43fe:	80 e6       	ldi	r24, 0x60	; 96
    4400:	90 e0       	ldi	r25, 0x00	; 0
    4402:	0e 94 30 1d 	call	0x3a60	; 0x3a60 <LCD_WriteString>

	Upper = num >> 4;     //0b000 0010
    4406:	8b 81       	ldd	r24, Y+3	; 0x03
    4408:	82 95       	swap	r24
    440a:	8f 70       	andi	r24, 0x0F	; 15
    440c:	8a 83       	std	Y+2, r24	; 0x02
	Lower = num & 0X0f;   //0b000 0000
    440e:	8b 81       	ldd	r24, Y+3	; 0x03
    4410:	8f 70       	andi	r24, 0x0F	; 15
    4412:	89 83       	std	Y+1, r24	; 0x01

	if (Upper < 10){
    4414:	8a 81       	ldd	r24, Y+2	; 0x02
    4416:	8a 30       	cpi	r24, 0x0A	; 10
    4418:	28 f4       	brcc	.+10     	; 0x4424 <LCD_PrintHex+0x38>
		LCD_WriteData(Upper+'0');
    441a:	8a 81       	ldd	r24, Y+2	; 0x02
    441c:	80 5d       	subi	r24, 0xD0	; 208
    441e:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>
    4422:	04 c0       	rjmp	.+8      	; 0x442c <LCD_PrintHex+0x40>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    4424:	8a 81       	ldd	r24, Y+2	; 0x02
    4426:	89 5c       	subi	r24, 0xC9	; 201
    4428:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>
	}

	if (Lower < 10){
    442c:	89 81       	ldd	r24, Y+1	; 0x01
    442e:	8a 30       	cpi	r24, 0x0A	; 10
    4430:	28 f4       	brcc	.+10     	; 0x443c <LCD_PrintHex+0x50>

		LCD_WriteData(Lower+'0');
    4432:	89 81       	ldd	r24, Y+1	; 0x01
    4434:	80 5d       	subi	r24, 0xD0	; 208
    4436:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>
    443a:	04 c0       	rjmp	.+8      	; 0x4444 <LCD_PrintHex+0x58>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    443c:	8a 81       	ldd	r24, Y+2	; 0x02
    443e:	89 5c       	subi	r24, 0xC9	; 201
    4440:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>

	}
}
    4444:	0f 90       	pop	r0
    4446:	0f 90       	pop	r0
    4448:	0f 90       	pop	r0
    444a:	cf 91       	pop	r28
    444c:	df 91       	pop	r29
    444e:	08 95       	ret

00004450 <LCD_DrawCharInAdd>:
				0x07,
				0x00,
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
    4450:	df 93       	push	r29
    4452:	cf 93       	push	r28
    4454:	00 d0       	rcall	.+0      	; 0x4456 <LCD_DrawCharInAdd+0x6>
    4456:	cd b7       	in	r28, 0x3d	; 61
    4458:	de b7       	in	r29, 0x3e	; 62
    445a:	8a 83       	std	Y+2, r24	; 0x02
	LCD_WriteInst(0x40);
    445c:	80 e4       	ldi	r24, 0x40	; 64
    445e:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
	for(uint8 i=0; i<8;i++){
    4462:	19 82       	std	Y+1, r1	; 0x01
    4464:	0c c0       	rjmp	.+24     	; 0x447e <LCD_DrawCharInAdd+0x2e>
		LCD_WriteData(arr[i]);
    4466:	89 81       	ldd	r24, Y+1	; 0x01
    4468:	88 2f       	mov	r24, r24
    446a:	90 e0       	ldi	r25, 0x00	; 0
    446c:	fc 01       	movw	r30, r24
    446e:	e2 58       	subi	r30, 0x82	; 130
    4470:	fe 4f       	sbci	r31, 0xFE	; 254
    4472:	80 81       	ld	r24, Z
    4474:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
	LCD_WriteInst(0x40);
	for(uint8 i=0; i<8;i++){
    4478:	89 81       	ldd	r24, Y+1	; 0x01
    447a:	8f 5f       	subi	r24, 0xFF	; 255
    447c:	89 83       	std	Y+1, r24	; 0x01
    447e:	89 81       	ldd	r24, Y+1	; 0x01
    4480:	88 30       	cpi	r24, 0x08	; 8
    4482:	88 f3       	brcs	.-30     	; 0x4466 <LCD_DrawCharInAdd+0x16>
		LCD_WriteData(arr[i]);
	}

	LCD_WriteInst(0x80);
    4484:	80 e8       	ldi	r24, 0x80	; 128
    4486:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
	LCD_WriteData(Data);
    448a:	8a 81       	ldd	r24, Y+2	; 0x02
    448c:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>

}
    4490:	0f 90       	pop	r0
    4492:	0f 90       	pop	r0
    4494:	cf 91       	pop	r28
    4496:	df 91       	pop	r29
    4498:	08 95       	ret

0000449a <LCD_Draw_Char>:

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    449a:	df 93       	push	r29
    449c:	cf 93       	push	r28
    449e:	00 d0       	rcall	.+0      	; 0x44a0 <LCD_Draw_Char+0x6>
    44a0:	00 d0       	rcall	.+0      	; 0x44a2 <LCD_Draw_Char+0x8>
    44a2:	cd b7       	in	r28, 0x3d	; 61
    44a4:	de b7       	in	r29, 0x3e	; 62
    44a6:	8a 83       	std	Y+2, r24	; 0x02
    44a8:	7c 83       	std	Y+4, r23	; 0x04
    44aa:	6b 83       	std	Y+3, r22	; 0x03
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    44ac:	8a 81       	ldd	r24, Y+2	; 0x02
    44ae:	88 2f       	mov	r24, r24
    44b0:	90 e0       	ldi	r25, 0x00	; 0
    44b2:	88 0f       	add	r24, r24
    44b4:	99 1f       	adc	r25, r25
    44b6:	88 0f       	add	r24, r24
    44b8:	99 1f       	adc	r25, r25
    44ba:	88 0f       	add	r24, r24
    44bc:	99 1f       	adc	r25, r25
    44be:	80 64       	ori	r24, 0x40	; 64
    44c0:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
    for (uint8 j = 0; j < 8; j++) {
    44c4:	19 82       	std	Y+1, r1	; 0x01
    44c6:	0e c0       	rjmp	.+28     	; 0x44e4 <LCD_Draw_Char+0x4a>
        LCD_WriteData(charArray[j]);
    44c8:	89 81       	ldd	r24, Y+1	; 0x01
    44ca:	28 2f       	mov	r18, r24
    44cc:	30 e0       	ldi	r19, 0x00	; 0
    44ce:	8b 81       	ldd	r24, Y+3	; 0x03
    44d0:	9c 81       	ldd	r25, Y+4	; 0x04
    44d2:	fc 01       	movw	r30, r24
    44d4:	e2 0f       	add	r30, r18
    44d6:	f3 1f       	adc	r31, r19
    44d8:	80 81       	ld	r24, Z
    44da:	0e 94 25 1c 	call	0x384a	; 0x384a <LCD_WriteData>

}

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    for (uint8 j = 0; j < 8; j++) {
    44de:	89 81       	ldd	r24, Y+1	; 0x01
    44e0:	8f 5f       	subi	r24, 0xFF	; 255
    44e2:	89 83       	std	Y+1, r24	; 0x01
    44e4:	89 81       	ldd	r24, Y+1	; 0x01
    44e6:	88 30       	cpi	r24, 0x08	; 8
    44e8:	78 f3       	brcs	.-34     	; 0x44c8 <LCD_Draw_Char+0x2e>
        LCD_WriteData(charArray[j]);
    }
    LCD_WriteInst(0x80); // Set DDRAM address to return to the display area
    44ea:	80 e8       	ldi	r24, 0x80	; 128
    44ec:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
}
    44f0:	0f 90       	pop	r0
    44f2:	0f 90       	pop	r0
    44f4:	0f 90       	pop	r0
    44f6:	0f 90       	pop	r0
    44f8:	cf 91       	pop	r28
    44fa:	df 91       	pop	r29
    44fc:	08 95       	ret

000044fe <LCD_Clear>:

void LCD_Clear(void)
{
    44fe:	df 93       	push	r29
    4500:	cf 93       	push	r28
    4502:	cd b7       	in	r28, 0x3d	; 61
    4504:	de b7       	in	r29, 0x3e	; 62
	LCD_WriteInst(0x01);
    4506:	81 e0       	ldi	r24, 0x01	; 1
    4508:	0e 94 1a 1b 	call	0x3634	; 0x3634 <LCD_WriteInst>
}
    450c:	cf 91       	pop	r28
    450e:	df 91       	pop	r29
    4510:	08 95       	ret

00004512 <LCD_ReverseNumber>:
	return Input+0x30;
}
*/


sint32 LCD_ReverseNumber(sint32 NUM){
    4512:	ef 92       	push	r14
    4514:	ff 92       	push	r15
    4516:	0f 93       	push	r16
    4518:	1f 93       	push	r17
    451a:	df 93       	push	r29
    451c:	cf 93       	push	r28
    451e:	cd b7       	in	r28, 0x3d	; 61
    4520:	de b7       	in	r29, 0x3e	; 62
    4522:	28 97       	sbiw	r28, 0x08	; 8
    4524:	0f b6       	in	r0, 0x3f	; 63
    4526:	f8 94       	cli
    4528:	de bf       	out	0x3e, r29	; 62
    452a:	0f be       	out	0x3f, r0	; 63
    452c:	cd bf       	out	0x3d, r28	; 61
    452e:	6d 83       	std	Y+5, r22	; 0x05
    4530:	7e 83       	std	Y+6, r23	; 0x06
    4532:	8f 83       	std	Y+7, r24	; 0x07
    4534:	98 87       	std	Y+8, r25	; 0x08
	uint32 reverse =1;
    4536:	81 e0       	ldi	r24, 0x01	; 1
    4538:	90 e0       	ldi	r25, 0x00	; 0
    453a:	a0 e0       	ldi	r26, 0x00	; 0
    453c:	b0 e0       	ldi	r27, 0x00	; 0
    453e:	89 83       	std	Y+1, r24	; 0x01
    4540:	9a 83       	std	Y+2, r25	; 0x02
    4542:	ab 83       	std	Y+3, r26	; 0x03
    4544:	bc 83       	std	Y+4, r27	; 0x04
    4546:	36 c0       	rjmp	.+108    	; 0x45b4 <LCD_ReverseNumber+0xa2>
	while (NUM != 0){
		reverse = (reverse*10)+(NUM%10);
    4548:	89 81       	ldd	r24, Y+1	; 0x01
    454a:	9a 81       	ldd	r25, Y+2	; 0x02
    454c:	ab 81       	ldd	r26, Y+3	; 0x03
    454e:	bc 81       	ldd	r27, Y+4	; 0x04
    4550:	2a e0       	ldi	r18, 0x0A	; 10
    4552:	30 e0       	ldi	r19, 0x00	; 0
    4554:	40 e0       	ldi	r20, 0x00	; 0
    4556:	50 e0       	ldi	r21, 0x00	; 0
    4558:	bc 01       	movw	r22, r24
    455a:	cd 01       	movw	r24, r26
    455c:	0e 94 49 29 	call	0x5292	; 0x5292 <__mulsi3>
    4560:	7b 01       	movw	r14, r22
    4562:	8c 01       	movw	r16, r24
    4564:	8d 81       	ldd	r24, Y+5	; 0x05
    4566:	9e 81       	ldd	r25, Y+6	; 0x06
    4568:	af 81       	ldd	r26, Y+7	; 0x07
    456a:	b8 85       	ldd	r27, Y+8	; 0x08
    456c:	2a e0       	ldi	r18, 0x0A	; 10
    456e:	30 e0       	ldi	r19, 0x00	; 0
    4570:	40 e0       	ldi	r20, 0x00	; 0
    4572:	50 e0       	ldi	r21, 0x00	; 0
    4574:	bc 01       	movw	r22, r24
    4576:	cd 01       	movw	r24, r26
    4578:	0e 94 68 29 	call	0x52d0	; 0x52d0 <__divmodsi4>
    457c:	dc 01       	movw	r26, r24
    457e:	cb 01       	movw	r24, r22
    4580:	8e 0d       	add	r24, r14
    4582:	9f 1d       	adc	r25, r15
    4584:	a0 1f       	adc	r26, r16
    4586:	b1 1f       	adc	r27, r17
    4588:	89 83       	std	Y+1, r24	; 0x01
    458a:	9a 83       	std	Y+2, r25	; 0x02
    458c:	ab 83       	std	Y+3, r26	; 0x03
    458e:	bc 83       	std	Y+4, r27	; 0x04
		NUM = NUM / 10;
    4590:	8d 81       	ldd	r24, Y+5	; 0x05
    4592:	9e 81       	ldd	r25, Y+6	; 0x06
    4594:	af 81       	ldd	r26, Y+7	; 0x07
    4596:	b8 85       	ldd	r27, Y+8	; 0x08
    4598:	2a e0       	ldi	r18, 0x0A	; 10
    459a:	30 e0       	ldi	r19, 0x00	; 0
    459c:	40 e0       	ldi	r20, 0x00	; 0
    459e:	50 e0       	ldi	r21, 0x00	; 0
    45a0:	bc 01       	movw	r22, r24
    45a2:	cd 01       	movw	r24, r26
    45a4:	0e 94 68 29 	call	0x52d0	; 0x52d0 <__divmodsi4>
    45a8:	da 01       	movw	r26, r20
    45aa:	c9 01       	movw	r24, r18
    45ac:	8d 83       	std	Y+5, r24	; 0x05
    45ae:	9e 83       	std	Y+6, r25	; 0x06
    45b0:	af 83       	std	Y+7, r26	; 0x07
    45b2:	b8 87       	std	Y+8, r27	; 0x08
*/


sint32 LCD_ReverseNumber(sint32 NUM){
	uint32 reverse =1;
	while (NUM != 0){
    45b4:	8d 81       	ldd	r24, Y+5	; 0x05
    45b6:	9e 81       	ldd	r25, Y+6	; 0x06
    45b8:	af 81       	ldd	r26, Y+7	; 0x07
    45ba:	b8 85       	ldd	r27, Y+8	; 0x08
    45bc:	00 97       	sbiw	r24, 0x00	; 0
    45be:	a1 05       	cpc	r26, r1
    45c0:	b1 05       	cpc	r27, r1
    45c2:	11 f6       	brne	.-124    	; 0x4548 <LCD_ReverseNumber+0x36>
		reverse = (reverse*10)+(NUM%10);
		NUM = NUM / 10;
	}
	return reverse;
    45c4:	89 81       	ldd	r24, Y+1	; 0x01
    45c6:	9a 81       	ldd	r25, Y+2	; 0x02
    45c8:	ab 81       	ldd	r26, Y+3	; 0x03
    45ca:	bc 81       	ldd	r27, Y+4	; 0x04
}
    45cc:	bc 01       	movw	r22, r24
    45ce:	cd 01       	movw	r24, r26
    45d0:	28 96       	adiw	r28, 0x08	; 8
    45d2:	0f b6       	in	r0, 0x3f	; 63
    45d4:	f8 94       	cli
    45d6:	de bf       	out	0x3e, r29	; 62
    45d8:	0f be       	out	0x3f, r0	; 63
    45da:	cd bf       	out	0x3d, r28	; 61
    45dc:	cf 91       	pop	r28
    45de:	df 91       	pop	r29
    45e0:	1f 91       	pop	r17
    45e2:	0f 91       	pop	r16
    45e4:	ff 90       	pop	r15
    45e6:	ef 90       	pop	r14
    45e8:	08 95       	ret

000045ea <SSD_voidSetSSD>:
#include "SSD_config.h"
#include "SSD_private.h"


void SSD_voidSetSSD(uint8 Copy_u8PortNum ,uint8 Copy_u8NumValue)
{
    45ea:	df 93       	push	r29
    45ec:	cf 93       	push	r28
    45ee:	00 d0       	rcall	.+0      	; 0x45f0 <SSD_voidSetSSD+0x6>
    45f0:	cd b7       	in	r28, 0x3d	; 61
    45f2:	de b7       	in	r29, 0x3e	; 62
    45f4:	89 83       	std	Y+1, r24	; 0x01
    45f6:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidSetPortValue(Copy_u8PortNum  ,Copy_u8NumValue) ;
    45f8:	89 81       	ldd	r24, Y+1	; 0x01
    45fa:	6a 81       	ldd	r22, Y+2	; 0x02
    45fc:	0e 94 03 28 	call	0x5006	; 0x5006 <DIO_voidSetPortValue>
}
    4600:	0f 90       	pop	r0
    4602:	0f 90       	pop	r0
    4604:	cf 91       	pop	r28
    4606:	df 91       	pop	r29
    4608:	08 95       	ret

0000460a <LED_voidInit>:
#include "LED_interface.h"



void  LED_voidInit(uint8 Copy_u8PortNum ,uint8 Copy_u8PinNum )
{
    460a:	df 93       	push	r29
    460c:	cf 93       	push	r28
    460e:	00 d0       	rcall	.+0      	; 0x4610 <LED_voidInit+0x6>
    4610:	cd b7       	in	r28, 0x3d	; 61
    4612:	de b7       	in	r29, 0x3e	; 62
    4614:	89 83       	std	Y+1, r24	; 0x01
    4616:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidSetPinDirection(Copy_u8PortNum , Copy_u8PinNum , DIO_u8OUTPUT);
    4618:	89 81       	ldd	r24, Y+1	; 0x01
    461a:	6a 81       	ldd	r22, Y+2	; 0x02
    461c:	41 e0       	ldi	r20, 0x01	; 1
    461e:	0e 94 44 25 	call	0x4a88	; 0x4a88 <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(Copy_u8PortNum , Copy_u8PinNum , DIO_u8LOW);
    4622:	89 81       	ldd	r24, Y+1	; 0x01
    4624:	6a 81       	ldd	r22, Y+2	; 0x02
    4626:	40 e0       	ldi	r20, 0x00	; 0
    4628:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
}
    462c:	0f 90       	pop	r0
    462e:	0f 90       	pop	r0
    4630:	cf 91       	pop	r28
    4632:	df 91       	pop	r29
    4634:	08 95       	ret

00004636 <LED_voidLedMode>:

void  LED_voidLedMode(uint8 Copy_u8PortNum ,uint8 Copy_u8PinNum ,uint8 Copy_u8Mode )
{
    4636:	df 93       	push	r29
    4638:	cf 93       	push	r28
    463a:	00 d0       	rcall	.+0      	; 0x463c <LED_voidLedMode+0x6>
    463c:	00 d0       	rcall	.+0      	; 0x463e <LED_voidLedMode+0x8>
    463e:	0f 92       	push	r0
    4640:	cd b7       	in	r28, 0x3d	; 61
    4642:	de b7       	in	r29, 0x3e	; 62
    4644:	89 83       	std	Y+1, r24	; 0x01
    4646:	6a 83       	std	Y+2, r22	; 0x02
    4648:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8Mode)
    464a:	8b 81       	ldd	r24, Y+3	; 0x03
    464c:	28 2f       	mov	r18, r24
    464e:	30 e0       	ldi	r19, 0x00	; 0
    4650:	3d 83       	std	Y+5, r19	; 0x05
    4652:	2c 83       	std	Y+4, r18	; 0x04
    4654:	8c 81       	ldd	r24, Y+4	; 0x04
    4656:	9d 81       	ldd	r25, Y+5	; 0x05
    4658:	81 30       	cpi	r24, 0x01	; 1
    465a:	91 05       	cpc	r25, r1
    465c:	79 f0       	breq	.+30     	; 0x467c <LED_voidLedMode+0x46>
    465e:	2c 81       	ldd	r18, Y+4	; 0x04
    4660:	3d 81       	ldd	r19, Y+5	; 0x05
    4662:	22 30       	cpi	r18, 0x02	; 2
    4664:	31 05       	cpc	r19, r1
    4666:	81 f0       	breq	.+32     	; 0x4688 <LED_voidLedMode+0x52>
    4668:	8c 81       	ldd	r24, Y+4	; 0x04
    466a:	9d 81       	ldd	r25, Y+5	; 0x05
    466c:	00 97       	sbiw	r24, 0x00	; 0
    466e:	81 f4       	brne	.+32     	; 0x4690 <LED_voidLedMode+0x5a>
	{
		case LED_OFF  :

			DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8LOW);
    4670:	89 81       	ldd	r24, Y+1	; 0x01
    4672:	6a 81       	ldd	r22, Y+2	; 0x02
    4674:	40 e0       	ldi	r20, 0x00	; 0
    4676:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
    467a:	0a c0       	rjmp	.+20     	; 0x4690 <LED_voidLedMode+0x5a>

			break;

		case LED_ON   :

			DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8HIGH);
    467c:	89 81       	ldd	r24, Y+1	; 0x01
    467e:	6a 81       	ldd	r22, Y+2	; 0x02
    4680:	41 e0       	ldi	r20, 0x01	; 1
    4682:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <DIO_voidSetPinValue>
    4686:	04 c0       	rjmp	.+8      	; 0x4690 <LED_voidLedMode+0x5a>

			break;

		case LED_TOG  :

			DIO_voidSetTogglePin(Copy_u8PortNum ,Copy_u8PinNum);
    4688:	89 81       	ldd	r24, Y+1	; 0x01
    468a:	6a 81       	ldd	r22, Y+2	; 0x02
    468c:	0e 94 45 28 	call	0x508a	; 0x508a <DIO_voidSetTogglePin>

	}
}
    4690:	0f 90       	pop	r0
    4692:	0f 90       	pop	r0
    4694:	0f 90       	pop	r0
    4696:	0f 90       	pop	r0
    4698:	0f 90       	pop	r0
    469a:	cf 91       	pop	r28
    469c:	df 91       	pop	r29
    469e:	08 95       	ret

000046a0 <GIE_voidEnable>:
#include "GIE_interface.h"
#include "GIE_config.h"
#include "GIE_private.h"

void GIE_voidEnable ()
{
    46a0:	df 93       	push	r29
    46a2:	cf 93       	push	r28
    46a4:	cd b7       	in	r28, 0x3d	; 61
    46a6:	de b7       	in	r29, 0x3e	; 62
    SET_BIT(SREG, SREG_BIT7);
    46a8:	af e5       	ldi	r26, 0x5F	; 95
    46aa:	b0 e0       	ldi	r27, 0x00	; 0
    46ac:	ef e5       	ldi	r30, 0x5F	; 95
    46ae:	f0 e0       	ldi	r31, 0x00	; 0
    46b0:	80 81       	ld	r24, Z
    46b2:	80 68       	ori	r24, 0x80	; 128
    46b4:	8c 93       	st	X, r24
}
    46b6:	cf 91       	pop	r28
    46b8:	df 91       	pop	r29
    46ba:	08 95       	ret

000046bc <GIE_voidDisable>:

void GIE_voidDisable ()
{
    46bc:	df 93       	push	r29
    46be:	cf 93       	push	r28
    46c0:	cd b7       	in	r28, 0x3d	; 61
    46c2:	de b7       	in	r29, 0x3e	; 62
    CLR_BIT(SREG, SREG_BIT7);
    46c4:	af e5       	ldi	r26, 0x5F	; 95
    46c6:	b0 e0       	ldi	r27, 0x00	; 0
    46c8:	ef e5       	ldi	r30, 0x5F	; 95
    46ca:	f0 e0       	ldi	r31, 0x00	; 0
    46cc:	80 81       	ld	r24, Z
    46ce:	8f 77       	andi	r24, 0x7F	; 127
    46d0:	8c 93       	st	X, r24
}
    46d2:	cf 91       	pop	r28
    46d4:	df 91       	pop	r29
    46d6:	08 95       	ret

000046d8 <EXT_INT_voidInit>:
 #include "EXT_INT_config.h"
 #include "EXT_INT_private.h"

void (*GAPF[3])(void) = {NULL, NULL, NULL}; // Group of array of Pointers
void EXT_INT_voidInit(uint8 Copy_u8INT_Num, uint8 Copy_u8SenseControl)
{
    46d8:	df 93       	push	r29
    46da:	cf 93       	push	r28
    46dc:	cd b7       	in	r28, 0x3d	; 61
    46de:	de b7       	in	r29, 0x3e	; 62
    46e0:	28 97       	sbiw	r28, 0x08	; 8
    46e2:	0f b6       	in	r0, 0x3f	; 63
    46e4:	f8 94       	cli
    46e6:	de bf       	out	0x3e, r29	; 62
    46e8:	0f be       	out	0x3f, r0	; 63
    46ea:	cd bf       	out	0x3d, r28	; 61
    46ec:	89 83       	std	Y+1, r24	; 0x01
    46ee:	6a 83       	std	Y+2, r22	; 0x02
    if(Copy_u8INT_Num == INT0)
    46f0:	89 81       	ldd	r24, Y+1	; 0x01
    46f2:	88 23       	and	r24, r24
    46f4:	09 f0       	breq	.+2      	; 0x46f8 <EXT_INT_voidInit+0x20>
    46f6:	63 c0       	rjmp	.+198    	; 0x47be <EXT_INT_voidInit+0xe6>
    {
        switch(Copy_u8SenseControl)
    46f8:	8a 81       	ldd	r24, Y+2	; 0x02
    46fa:	28 2f       	mov	r18, r24
    46fc:	30 e0       	ldi	r19, 0x00	; 0
    46fe:	38 87       	std	Y+8, r19	; 0x08
    4700:	2f 83       	std	Y+7, r18	; 0x07
    4702:	8f 81       	ldd	r24, Y+7	; 0x07
    4704:	98 85       	ldd	r25, Y+8	; 0x08
    4706:	82 30       	cpi	r24, 0x02	; 2
    4708:	91 05       	cpc	r25, r1
    470a:	29 f1       	breq	.+74     	; 0x4756 <EXT_INT_voidInit+0x7e>
    470c:	2f 81       	ldd	r18, Y+7	; 0x07
    470e:	38 85       	ldd	r19, Y+8	; 0x08
    4710:	23 30       	cpi	r18, 0x03	; 3
    4712:	31 05       	cpc	r19, r1
    4714:	34 f4       	brge	.+12     	; 0x4722 <EXT_INT_voidInit+0x4a>
    4716:	8f 81       	ldd	r24, Y+7	; 0x07
    4718:	98 85       	ldd	r25, Y+8	; 0x08
    471a:	81 30       	cpi	r24, 0x01	; 1
    471c:	91 05       	cpc	r25, r1
    471e:	61 f0       	breq	.+24     	; 0x4738 <EXT_INT_voidInit+0x60>
    4720:	46 c0       	rjmp	.+140    	; 0x47ae <EXT_INT_voidInit+0xd6>
    4722:	2f 81       	ldd	r18, Y+7	; 0x07
    4724:	38 85       	ldd	r19, Y+8	; 0x08
    4726:	23 30       	cpi	r18, 0x03	; 3
    4728:	31 05       	cpc	r19, r1
    472a:	21 f1       	breq	.+72     	; 0x4774 <EXT_INT_voidInit+0x9c>
    472c:	8f 81       	ldd	r24, Y+7	; 0x07
    472e:	98 85       	ldd	r25, Y+8	; 0x08
    4730:	84 30       	cpi	r24, 0x04	; 4
    4732:	91 05       	cpc	r25, r1
    4734:	71 f1       	breq	.+92     	; 0x4792 <EXT_INT_voidInit+0xba>
    4736:	3b c0       	rjmp	.+118    	; 0x47ae <EXT_INT_voidInit+0xd6>
        {
            case INT_LOW_LEVEL:
             CLR_BIT(MCUCR, MCUCR_ISC00); 
    4738:	a5 e5       	ldi	r26, 0x55	; 85
    473a:	b0 e0       	ldi	r27, 0x00	; 0
    473c:	e5 e5       	ldi	r30, 0x55	; 85
    473e:	f0 e0       	ldi	r31, 0x00	; 0
    4740:	80 81       	ld	r24, Z
    4742:	8e 7f       	andi	r24, 0xFE	; 254
    4744:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC01); 
    4746:	a5 e5       	ldi	r26, 0x55	; 85
    4748:	b0 e0       	ldi	r27, 0x00	; 0
    474a:	e5 e5       	ldi	r30, 0x55	; 85
    474c:	f0 e0       	ldi	r31, 0x00	; 0
    474e:	80 81       	ld	r24, Z
    4750:	8d 7f       	andi	r24, 0xFD	; 253
    4752:	8c 93       	st	X, r24
    4754:	2c c0       	rjmp	.+88     	; 0x47ae <EXT_INT_voidInit+0xd6>
             break;
            
            case INT_ANY_CHANGE:
             SET_BIT(MCUCR, MCUCR_ISC00); 
    4756:	a5 e5       	ldi	r26, 0x55	; 85
    4758:	b0 e0       	ldi	r27, 0x00	; 0
    475a:	e5 e5       	ldi	r30, 0x55	; 85
    475c:	f0 e0       	ldi	r31, 0x00	; 0
    475e:	80 81       	ld	r24, Z
    4760:	81 60       	ori	r24, 0x01	; 1
    4762:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC01); 
    4764:	a5 e5       	ldi	r26, 0x55	; 85
    4766:	b0 e0       	ldi	r27, 0x00	; 0
    4768:	e5 e5       	ldi	r30, 0x55	; 85
    476a:	f0 e0       	ldi	r31, 0x00	; 0
    476c:	80 81       	ld	r24, Z
    476e:	8d 7f       	andi	r24, 0xFD	; 253
    4770:	8c 93       	st	X, r24
    4772:	1d c0       	rjmp	.+58     	; 0x47ae <EXT_INT_voidInit+0xd6>
             break;
            
            case INT_FALLING_EDGE:
             CLR_BIT(MCUCR, MCUCR_ISC00); 
    4774:	a5 e5       	ldi	r26, 0x55	; 85
    4776:	b0 e0       	ldi	r27, 0x00	; 0
    4778:	e5 e5       	ldi	r30, 0x55	; 85
    477a:	f0 e0       	ldi	r31, 0x00	; 0
    477c:	80 81       	ld	r24, Z
    477e:	8e 7f       	andi	r24, 0xFE	; 254
    4780:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC01); 
    4782:	a5 e5       	ldi	r26, 0x55	; 85
    4784:	b0 e0       	ldi	r27, 0x00	; 0
    4786:	e5 e5       	ldi	r30, 0x55	; 85
    4788:	f0 e0       	ldi	r31, 0x00	; 0
    478a:	80 81       	ld	r24, Z
    478c:	82 60       	ori	r24, 0x02	; 2
    478e:	8c 93       	st	X, r24
    4790:	0e c0       	rjmp	.+28     	; 0x47ae <EXT_INT_voidInit+0xd6>
             break;
            
            case INT_RISSING_EDGE:
             SET_BIT(MCUCR, MCUCR_ISC00); 
    4792:	a5 e5       	ldi	r26, 0x55	; 85
    4794:	b0 e0       	ldi	r27, 0x00	; 0
    4796:	e5 e5       	ldi	r30, 0x55	; 85
    4798:	f0 e0       	ldi	r31, 0x00	; 0
    479a:	80 81       	ld	r24, Z
    479c:	81 60       	ori	r24, 0x01	; 1
    479e:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC01); 
    47a0:	a5 e5       	ldi	r26, 0x55	; 85
    47a2:	b0 e0       	ldi	r27, 0x00	; 0
    47a4:	e5 e5       	ldi	r30, 0x55	; 85
    47a6:	f0 e0       	ldi	r31, 0x00	; 0
    47a8:	80 81       	ld	r24, Z
    47aa:	82 60       	ori	r24, 0x02	; 2
    47ac:	8c 93       	st	X, r24
             break;
        }

        SET_BIT(GICR, GICR_INT0);               
    47ae:	ab e5       	ldi	r26, 0x5B	; 91
    47b0:	b0 e0       	ldi	r27, 0x00	; 0
    47b2:	eb e5       	ldi	r30, 0x5B	; 91
    47b4:	f0 e0       	ldi	r31, 0x00	; 0
    47b6:	80 81       	ld	r24, Z
    47b8:	80 64       	ori	r24, 0x40	; 64
    47ba:	8c 93       	st	X, r24
    47bc:	90 c0       	rjmp	.+288    	; 0x48de <EXT_INT_voidInit+0x206>
    }
    
    else if(Copy_u8INT_Num == INT1)
    47be:	89 81       	ldd	r24, Y+1	; 0x01
    47c0:	81 30       	cpi	r24, 0x01	; 1
    47c2:	09 f0       	breq	.+2      	; 0x47c6 <EXT_INT_voidInit+0xee>
    47c4:	63 c0       	rjmp	.+198    	; 0x488c <EXT_INT_voidInit+0x1b4>
    {
        switch(Copy_u8SenseControl)
    47c6:	8a 81       	ldd	r24, Y+2	; 0x02
    47c8:	28 2f       	mov	r18, r24
    47ca:	30 e0       	ldi	r19, 0x00	; 0
    47cc:	3e 83       	std	Y+6, r19	; 0x06
    47ce:	2d 83       	std	Y+5, r18	; 0x05
    47d0:	8d 81       	ldd	r24, Y+5	; 0x05
    47d2:	9e 81       	ldd	r25, Y+6	; 0x06
    47d4:	82 30       	cpi	r24, 0x02	; 2
    47d6:	91 05       	cpc	r25, r1
    47d8:	29 f1       	breq	.+74     	; 0x4824 <EXT_INT_voidInit+0x14c>
    47da:	2d 81       	ldd	r18, Y+5	; 0x05
    47dc:	3e 81       	ldd	r19, Y+6	; 0x06
    47de:	23 30       	cpi	r18, 0x03	; 3
    47e0:	31 05       	cpc	r19, r1
    47e2:	34 f4       	brge	.+12     	; 0x47f0 <EXT_INT_voidInit+0x118>
    47e4:	8d 81       	ldd	r24, Y+5	; 0x05
    47e6:	9e 81       	ldd	r25, Y+6	; 0x06
    47e8:	81 30       	cpi	r24, 0x01	; 1
    47ea:	91 05       	cpc	r25, r1
    47ec:	61 f0       	breq	.+24     	; 0x4806 <EXT_INT_voidInit+0x12e>
    47ee:	46 c0       	rjmp	.+140    	; 0x487c <EXT_INT_voidInit+0x1a4>
    47f0:	2d 81       	ldd	r18, Y+5	; 0x05
    47f2:	3e 81       	ldd	r19, Y+6	; 0x06
    47f4:	23 30       	cpi	r18, 0x03	; 3
    47f6:	31 05       	cpc	r19, r1
    47f8:	21 f1       	breq	.+72     	; 0x4842 <EXT_INT_voidInit+0x16a>
    47fa:	8d 81       	ldd	r24, Y+5	; 0x05
    47fc:	9e 81       	ldd	r25, Y+6	; 0x06
    47fe:	84 30       	cpi	r24, 0x04	; 4
    4800:	91 05       	cpc	r25, r1
    4802:	71 f1       	breq	.+92     	; 0x4860 <EXT_INT_voidInit+0x188>
    4804:	3b c0       	rjmp	.+118    	; 0x487c <EXT_INT_voidInit+0x1a4>
        {
            case INT_LOW_LEVEL:
             CLR_BIT(MCUCR, MCUCR_ISC10); 
    4806:	a5 e5       	ldi	r26, 0x55	; 85
    4808:	b0 e0       	ldi	r27, 0x00	; 0
    480a:	e5 e5       	ldi	r30, 0x55	; 85
    480c:	f0 e0       	ldi	r31, 0x00	; 0
    480e:	80 81       	ld	r24, Z
    4810:	8b 7f       	andi	r24, 0xFB	; 251
    4812:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC11); 
    4814:	a5 e5       	ldi	r26, 0x55	; 85
    4816:	b0 e0       	ldi	r27, 0x00	; 0
    4818:	e5 e5       	ldi	r30, 0x55	; 85
    481a:	f0 e0       	ldi	r31, 0x00	; 0
    481c:	80 81       	ld	r24, Z
    481e:	87 7f       	andi	r24, 0xF7	; 247
    4820:	8c 93       	st	X, r24
    4822:	2c c0       	rjmp	.+88     	; 0x487c <EXT_INT_voidInit+0x1a4>
             break;
            
            case INT_ANY_CHANGE:
             SET_BIT(MCUCR, MCUCR_ISC10); 
    4824:	a5 e5       	ldi	r26, 0x55	; 85
    4826:	b0 e0       	ldi	r27, 0x00	; 0
    4828:	e5 e5       	ldi	r30, 0x55	; 85
    482a:	f0 e0       	ldi	r31, 0x00	; 0
    482c:	80 81       	ld	r24, Z
    482e:	84 60       	ori	r24, 0x04	; 4
    4830:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC11); 
    4832:	a5 e5       	ldi	r26, 0x55	; 85
    4834:	b0 e0       	ldi	r27, 0x00	; 0
    4836:	e5 e5       	ldi	r30, 0x55	; 85
    4838:	f0 e0       	ldi	r31, 0x00	; 0
    483a:	80 81       	ld	r24, Z
    483c:	87 7f       	andi	r24, 0xF7	; 247
    483e:	8c 93       	st	X, r24
    4840:	1d c0       	rjmp	.+58     	; 0x487c <EXT_INT_voidInit+0x1a4>
             break;
            
            case INT_FALLING_EDGE:
             CLR_BIT(MCUCR, MCUCR_ISC10); 
    4842:	a5 e5       	ldi	r26, 0x55	; 85
    4844:	b0 e0       	ldi	r27, 0x00	; 0
    4846:	e5 e5       	ldi	r30, 0x55	; 85
    4848:	f0 e0       	ldi	r31, 0x00	; 0
    484a:	80 81       	ld	r24, Z
    484c:	8b 7f       	andi	r24, 0xFB	; 251
    484e:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC11); 
    4850:	a5 e5       	ldi	r26, 0x55	; 85
    4852:	b0 e0       	ldi	r27, 0x00	; 0
    4854:	e5 e5       	ldi	r30, 0x55	; 85
    4856:	f0 e0       	ldi	r31, 0x00	; 0
    4858:	80 81       	ld	r24, Z
    485a:	88 60       	ori	r24, 0x08	; 8
    485c:	8c 93       	st	X, r24
    485e:	0e c0       	rjmp	.+28     	; 0x487c <EXT_INT_voidInit+0x1a4>
             break;
            
            case INT_RISSING_EDGE:
             SET_BIT(MCUCR, MCUCR_ISC10); 
    4860:	a5 e5       	ldi	r26, 0x55	; 85
    4862:	b0 e0       	ldi	r27, 0x00	; 0
    4864:	e5 e5       	ldi	r30, 0x55	; 85
    4866:	f0 e0       	ldi	r31, 0x00	; 0
    4868:	80 81       	ld	r24, Z
    486a:	84 60       	ori	r24, 0x04	; 4
    486c:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC11); 
    486e:	a5 e5       	ldi	r26, 0x55	; 85
    4870:	b0 e0       	ldi	r27, 0x00	; 0
    4872:	e5 e5       	ldi	r30, 0x55	; 85
    4874:	f0 e0       	ldi	r31, 0x00	; 0
    4876:	80 81       	ld	r24, Z
    4878:	88 60       	ori	r24, 0x08	; 8
    487a:	8c 93       	st	X, r24
             break;

        }
        SET_BIT(GICR, GICR_INT1);
    487c:	ab e5       	ldi	r26, 0x5B	; 91
    487e:	b0 e0       	ldi	r27, 0x00	; 0
    4880:	eb e5       	ldi	r30, 0x5B	; 91
    4882:	f0 e0       	ldi	r31, 0x00	; 0
    4884:	80 81       	ld	r24, Z
    4886:	80 68       	ori	r24, 0x80	; 128
    4888:	8c 93       	st	X, r24
    488a:	29 c0       	rjmp	.+82     	; 0x48de <EXT_INT_voidInit+0x206>
    }

    else if(Copy_u8INT_Num == INT2)
    488c:	89 81       	ldd	r24, Y+1	; 0x01
    488e:	82 30       	cpi	r24, 0x02	; 2
    4890:	31 f5       	brne	.+76     	; 0x48de <EXT_INT_voidInit+0x206>
    {
        switch(Copy_u8SenseControl)
    4892:	8a 81       	ldd	r24, Y+2	; 0x02
    4894:	28 2f       	mov	r18, r24
    4896:	30 e0       	ldi	r19, 0x00	; 0
    4898:	3c 83       	std	Y+4, r19	; 0x04
    489a:	2b 83       	std	Y+3, r18	; 0x03
    489c:	8b 81       	ldd	r24, Y+3	; 0x03
    489e:	9c 81       	ldd	r25, Y+4	; 0x04
    48a0:	83 30       	cpi	r24, 0x03	; 3
    48a2:	91 05       	cpc	r25, r1
    48a4:	31 f0       	breq	.+12     	; 0x48b2 <EXT_INT_voidInit+0x1da>
    48a6:	2b 81       	ldd	r18, Y+3	; 0x03
    48a8:	3c 81       	ldd	r19, Y+4	; 0x04
    48aa:	24 30       	cpi	r18, 0x04	; 4
    48ac:	31 05       	cpc	r19, r1
    48ae:	49 f0       	breq	.+18     	; 0x48c2 <EXT_INT_voidInit+0x1ea>
    48b0:	0f c0       	rjmp	.+30     	; 0x48d0 <EXT_INT_voidInit+0x1f8>
        {
            case INT_FALLING_EDGE: CLR_BIT(MCUCSR, MCUCSR_ISC2); break;
    48b2:	a4 e5       	ldi	r26, 0x54	; 84
    48b4:	b0 e0       	ldi	r27, 0x00	; 0
    48b6:	e4 e5       	ldi	r30, 0x54	; 84
    48b8:	f0 e0       	ldi	r31, 0x00	; 0
    48ba:	80 81       	ld	r24, Z
    48bc:	8f 7b       	andi	r24, 0xBF	; 191
    48be:	8c 93       	st	X, r24
    48c0:	07 c0       	rjmp	.+14     	; 0x48d0 <EXT_INT_voidInit+0x1f8>
            case INT_RISSING_EDGE: SET_BIT(MCUCSR, MCUCSR_ISC2); break;
    48c2:	a4 e5       	ldi	r26, 0x54	; 84
    48c4:	b0 e0       	ldi	r27, 0x00	; 0
    48c6:	e4 e5       	ldi	r30, 0x54	; 84
    48c8:	f0 e0       	ldi	r31, 0x00	; 0
    48ca:	80 81       	ld	r24, Z
    48cc:	80 64       	ori	r24, 0x40	; 64
    48ce:	8c 93       	st	X, r24
        }
        SET_BIT(GICR, GICR_INT2);
    48d0:	ab e5       	ldi	r26, 0x5B	; 91
    48d2:	b0 e0       	ldi	r27, 0x00	; 0
    48d4:	eb e5       	ldi	r30, 0x5B	; 91
    48d6:	f0 e0       	ldi	r31, 0x00	; 0
    48d8:	80 81       	ld	r24, Z
    48da:	80 62       	ori	r24, 0x20	; 32
    48dc:	8c 93       	st	X, r24
    }
}
    48de:	28 96       	adiw	r28, 0x08	; 8
    48e0:	0f b6       	in	r0, 0x3f	; 63
    48e2:	f8 94       	cli
    48e4:	de bf       	out	0x3e, r29	; 62
    48e6:	0f be       	out	0x3f, r0	; 63
    48e8:	cd bf       	out	0x3d, r28	; 61
    48ea:	cf 91       	pop	r28
    48ec:	df 91       	pop	r29
    48ee:	08 95       	ret

000048f0 <EXT_INT_voidSetCallBack>:

void EXT_INT_voidSetCallBack(void (*PF)(void), uint8 Copyu8EXT_INT_Num)  
{
    48f0:	df 93       	push	r29
    48f2:	cf 93       	push	r28
    48f4:	00 d0       	rcall	.+0      	; 0x48f6 <EXT_INT_voidSetCallBack+0x6>
    48f6:	0f 92       	push	r0
    48f8:	cd b7       	in	r28, 0x3d	; 61
    48fa:	de b7       	in	r29, 0x3e	; 62
    48fc:	9a 83       	std	Y+2, r25	; 0x02
    48fe:	89 83       	std	Y+1, r24	; 0x01
    4900:	6b 83       	std	Y+3, r22	; 0x03
    GAPF[Copyu8EXT_INT_Num] = PF; 
    4902:	8b 81       	ldd	r24, Y+3	; 0x03
    4904:	88 2f       	mov	r24, r24
    4906:	90 e0       	ldi	r25, 0x00	; 0
    4908:	88 0f       	add	r24, r24
    490a:	99 1f       	adc	r25, r25
    490c:	fc 01       	movw	r30, r24
    490e:	e2 57       	subi	r30, 0x72	; 114
    4910:	fe 4f       	sbci	r31, 0xFE	; 254
    4912:	89 81       	ldd	r24, Y+1	; 0x01
    4914:	9a 81       	ldd	r25, Y+2	; 0x02
    4916:	91 83       	std	Z+1, r25	; 0x01
    4918:	80 83       	st	Z, r24
}
    491a:	0f 90       	pop	r0
    491c:	0f 90       	pop	r0
    491e:	0f 90       	pop	r0
    4920:	cf 91       	pop	r28
    4922:	df 91       	pop	r29
    4924:	08 95       	ret

00004926 <__vector_1>:


void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
    4926:	1f 92       	push	r1
    4928:	0f 92       	push	r0
    492a:	0f b6       	in	r0, 0x3f	; 63
    492c:	0f 92       	push	r0
    492e:	11 24       	eor	r1, r1
    4930:	2f 93       	push	r18
    4932:	3f 93       	push	r19
    4934:	4f 93       	push	r20
    4936:	5f 93       	push	r21
    4938:	6f 93       	push	r22
    493a:	7f 93       	push	r23
    493c:	8f 93       	push	r24
    493e:	9f 93       	push	r25
    4940:	af 93       	push	r26
    4942:	bf 93       	push	r27
    4944:	ef 93       	push	r30
    4946:	ff 93       	push	r31
    4948:	df 93       	push	r29
    494a:	cf 93       	push	r28
    494c:	cd b7       	in	r28, 0x3d	; 61
    494e:	de b7       	in	r29, 0x3e	; 62
    GAPF[INT0]();
    4950:	e0 91 8e 01 	lds	r30, 0x018E
    4954:	f0 91 8f 01 	lds	r31, 0x018F
    4958:	09 95       	icall
}
    495a:	cf 91       	pop	r28
    495c:	df 91       	pop	r29
    495e:	ff 91       	pop	r31
    4960:	ef 91       	pop	r30
    4962:	bf 91       	pop	r27
    4964:	af 91       	pop	r26
    4966:	9f 91       	pop	r25
    4968:	8f 91       	pop	r24
    496a:	7f 91       	pop	r23
    496c:	6f 91       	pop	r22
    496e:	5f 91       	pop	r21
    4970:	4f 91       	pop	r20
    4972:	3f 91       	pop	r19
    4974:	2f 91       	pop	r18
    4976:	0f 90       	pop	r0
    4978:	0f be       	out	0x3f, r0	; 63
    497a:	0f 90       	pop	r0
    497c:	1f 90       	pop	r1
    497e:	18 95       	reti

00004980 <__vector_2>:

void __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
    4980:	1f 92       	push	r1
    4982:	0f 92       	push	r0
    4984:	0f b6       	in	r0, 0x3f	; 63
    4986:	0f 92       	push	r0
    4988:	11 24       	eor	r1, r1
    498a:	2f 93       	push	r18
    498c:	3f 93       	push	r19
    498e:	4f 93       	push	r20
    4990:	5f 93       	push	r21
    4992:	6f 93       	push	r22
    4994:	7f 93       	push	r23
    4996:	8f 93       	push	r24
    4998:	9f 93       	push	r25
    499a:	af 93       	push	r26
    499c:	bf 93       	push	r27
    499e:	ef 93       	push	r30
    49a0:	ff 93       	push	r31
    49a2:	df 93       	push	r29
    49a4:	cf 93       	push	r28
    49a6:	cd b7       	in	r28, 0x3d	; 61
    49a8:	de b7       	in	r29, 0x3e	; 62
    GAPF[INT1]();
    49aa:	e0 91 90 01 	lds	r30, 0x0190
    49ae:	f0 91 91 01 	lds	r31, 0x0191
    49b2:	09 95       	icall
}
    49b4:	cf 91       	pop	r28
    49b6:	df 91       	pop	r29
    49b8:	ff 91       	pop	r31
    49ba:	ef 91       	pop	r30
    49bc:	bf 91       	pop	r27
    49be:	af 91       	pop	r26
    49c0:	9f 91       	pop	r25
    49c2:	8f 91       	pop	r24
    49c4:	7f 91       	pop	r23
    49c6:	6f 91       	pop	r22
    49c8:	5f 91       	pop	r21
    49ca:	4f 91       	pop	r20
    49cc:	3f 91       	pop	r19
    49ce:	2f 91       	pop	r18
    49d0:	0f 90       	pop	r0
    49d2:	0f be       	out	0x3f, r0	; 63
    49d4:	0f 90       	pop	r0
    49d6:	1f 90       	pop	r1
    49d8:	18 95       	reti

000049da <__vector_3>:

void __vector_3(void) __attribute__((signal));
void __vector_3(void)
{
    49da:	1f 92       	push	r1
    49dc:	0f 92       	push	r0
    49de:	0f b6       	in	r0, 0x3f	; 63
    49e0:	0f 92       	push	r0
    49e2:	11 24       	eor	r1, r1
    49e4:	2f 93       	push	r18
    49e6:	3f 93       	push	r19
    49e8:	4f 93       	push	r20
    49ea:	5f 93       	push	r21
    49ec:	6f 93       	push	r22
    49ee:	7f 93       	push	r23
    49f0:	8f 93       	push	r24
    49f2:	9f 93       	push	r25
    49f4:	af 93       	push	r26
    49f6:	bf 93       	push	r27
    49f8:	ef 93       	push	r30
    49fa:	ff 93       	push	r31
    49fc:	df 93       	push	r29
    49fe:	cf 93       	push	r28
    4a00:	cd b7       	in	r28, 0x3d	; 61
    4a02:	de b7       	in	r29, 0x3e	; 62
    GAPF[INT2]();
    4a04:	e0 91 92 01 	lds	r30, 0x0192
    4a08:	f0 91 93 01 	lds	r31, 0x0193
    4a0c:	09 95       	icall
}
    4a0e:	cf 91       	pop	r28
    4a10:	df 91       	pop	r29
    4a12:	ff 91       	pop	r31
    4a14:	ef 91       	pop	r30
    4a16:	bf 91       	pop	r27
    4a18:	af 91       	pop	r26
    4a1a:	9f 91       	pop	r25
    4a1c:	8f 91       	pop	r24
    4a1e:	7f 91       	pop	r23
    4a20:	6f 91       	pop	r22
    4a22:	5f 91       	pop	r21
    4a24:	4f 91       	pop	r20
    4a26:	3f 91       	pop	r19
    4a28:	2f 91       	pop	r18
    4a2a:	0f 90       	pop	r0
    4a2c:	0f be       	out	0x3f, r0	; 63
    4a2e:	0f 90       	pop	r0
    4a30:	1f 90       	pop	r1
    4a32:	18 95       	reti

00004a34 <EXT_INT_voidClearFlag>:


void EXT_INT_voidClearFlag(uint8 Copy_u8INT_Num)
{
    4a34:	df 93       	push	r29
    4a36:	cf 93       	push	r28
    4a38:	0f 92       	push	r0
    4a3a:	cd b7       	in	r28, 0x3d	; 61
    4a3c:	de b7       	in	r29, 0x3e	; 62
    4a3e:	89 83       	std	Y+1, r24	; 0x01
    if(Copy_u8INT_Num == INT0)
    4a40:	89 81       	ldd	r24, Y+1	; 0x01
    4a42:	88 23       	and	r24, r24
    4a44:	41 f4       	brne	.+16     	; 0x4a56 <EXT_INT_voidClearFlag+0x22>
    {
        SET_BIT(GIFR, GIFR_INTF0);
    4a46:	aa e5       	ldi	r26, 0x5A	; 90
    4a48:	b0 e0       	ldi	r27, 0x00	; 0
    4a4a:	ea e5       	ldi	r30, 0x5A	; 90
    4a4c:	f0 e0       	ldi	r31, 0x00	; 0
    4a4e:	80 81       	ld	r24, Z
    4a50:	80 64       	ori	r24, 0x40	; 64
    4a52:	8c 93       	st	X, r24
    4a54:	15 c0       	rjmp	.+42     	; 0x4a80 <EXT_INT_voidClearFlag+0x4c>
    }

    else if(Copy_u8INT_Num == INT1)
    4a56:	89 81       	ldd	r24, Y+1	; 0x01
    4a58:	81 30       	cpi	r24, 0x01	; 1
    4a5a:	41 f4       	brne	.+16     	; 0x4a6c <EXT_INT_voidClearFlag+0x38>
    {
        SET_BIT(GIFR, GIFR_INTF1);
    4a5c:	aa e5       	ldi	r26, 0x5A	; 90
    4a5e:	b0 e0       	ldi	r27, 0x00	; 0
    4a60:	ea e5       	ldi	r30, 0x5A	; 90
    4a62:	f0 e0       	ldi	r31, 0x00	; 0
    4a64:	80 81       	ld	r24, Z
    4a66:	80 68       	ori	r24, 0x80	; 128
    4a68:	8c 93       	st	X, r24
    4a6a:	0a c0       	rjmp	.+20     	; 0x4a80 <EXT_INT_voidClearFlag+0x4c>
    }

    else if(Copy_u8INT_Num == INT2)
    4a6c:	89 81       	ldd	r24, Y+1	; 0x01
    4a6e:	82 30       	cpi	r24, 0x02	; 2
    4a70:	39 f4       	brne	.+14     	; 0x4a80 <EXT_INT_voidClearFlag+0x4c>
    {
        SET_BIT(GIFR, GIFR_INTF2);
    4a72:	aa e5       	ldi	r26, 0x5A	; 90
    4a74:	b0 e0       	ldi	r27, 0x00	; 0
    4a76:	ea e5       	ldi	r30, 0x5A	; 90
    4a78:	f0 e0       	ldi	r31, 0x00	; 0
    4a7a:	80 81       	ld	r24, Z
    4a7c:	80 62       	ori	r24, 0x20	; 32
    4a7e:	8c 93       	st	X, r24
    }
}
    4a80:	0f 90       	pop	r0
    4a82:	cf 91       	pop	r28
    4a84:	df 91       	pop	r29
    4a86:	08 95       	ret

00004a88 <DIO_voidSetPinDirection>:


/*************************************************/

void DIO_voidSetPinDirection(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Mode )
{
    4a88:	df 93       	push	r29
    4a8a:	cf 93       	push	r28
    4a8c:	cd b7       	in	r28, 0x3d	; 61
    4a8e:	de b7       	in	r29, 0x3e	; 62
    4a90:	27 97       	sbiw	r28, 0x07	; 7
    4a92:	0f b6       	in	r0, 0x3f	; 63
    4a94:	f8 94       	cli
    4a96:	de bf       	out	0x3e, r29	; 62
    4a98:	0f be       	out	0x3f, r0	; 63
    4a9a:	cd bf       	out	0x3d, r28	; 61
    4a9c:	89 83       	std	Y+1, r24	; 0x01
    4a9e:	6a 83       	std	Y+2, r22	; 0x02
    4aa0:	4b 83       	std	Y+3, r20	; 0x03
		if (DIO_u8OUTPUT == Copy_u8Mode)
    4aa2:	8b 81       	ldd	r24, Y+3	; 0x03
    4aa4:	81 30       	cpi	r24, 0x01	; 1
    4aa6:	09 f0       	breq	.+2      	; 0x4aaa <DIO_voidSetPinDirection+0x22>
    4aa8:	70 c0       	rjmp	.+224    	; 0x4b8a <DIO_voidSetPinDirection+0x102>
		{
			switch(Copy_u8PortNum)
    4aaa:	89 81       	ldd	r24, Y+1	; 0x01
    4aac:	28 2f       	mov	r18, r24
    4aae:	30 e0       	ldi	r19, 0x00	; 0
    4ab0:	3f 83       	std	Y+7, r19	; 0x07
    4ab2:	2e 83       	std	Y+6, r18	; 0x06
    4ab4:	8e 81       	ldd	r24, Y+6	; 0x06
    4ab6:	9f 81       	ldd	r25, Y+7	; 0x07
    4ab8:	82 30       	cpi	r24, 0x02	; 2
    4aba:	91 05       	cpc	r25, r1
    4abc:	51 f1       	breq	.+84     	; 0x4b12 <DIO_voidSetPinDirection+0x8a>
    4abe:	2e 81       	ldd	r18, Y+6	; 0x06
    4ac0:	3f 81       	ldd	r19, Y+7	; 0x07
    4ac2:	23 30       	cpi	r18, 0x03	; 3
    4ac4:	31 05       	cpc	r19, r1
    4ac6:	34 f4       	brge	.+12     	; 0x4ad4 <DIO_voidSetPinDirection+0x4c>
    4ac8:	8e 81       	ldd	r24, Y+6	; 0x06
    4aca:	9f 81       	ldd	r25, Y+7	; 0x07
    4acc:	81 30       	cpi	r24, 0x01	; 1
    4ace:	91 05       	cpc	r25, r1
    4ad0:	61 f0       	breq	.+24     	; 0x4aea <DIO_voidSetPinDirection+0x62>
    4ad2:	d3 c0       	rjmp	.+422    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
    4ad4:	2e 81       	ldd	r18, Y+6	; 0x06
    4ad6:	3f 81       	ldd	r19, Y+7	; 0x07
    4ad8:	23 30       	cpi	r18, 0x03	; 3
    4ada:	31 05       	cpc	r19, r1
    4adc:	71 f1       	breq	.+92     	; 0x4b3a <DIO_voidSetPinDirection+0xb2>
    4ade:	8e 81       	ldd	r24, Y+6	; 0x06
    4ae0:	9f 81       	ldd	r25, Y+7	; 0x07
    4ae2:	84 30       	cpi	r24, 0x04	; 4
    4ae4:	91 05       	cpc	r25, r1
    4ae6:	e9 f1       	breq	.+122    	; 0x4b62 <DIO_voidSetPinDirection+0xda>
    4ae8:	c8 c0       	rjmp	.+400    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(DDRA , Copy_u8PinNum);       break;
    4aea:	aa e3       	ldi	r26, 0x3A	; 58
    4aec:	b0 e0       	ldi	r27, 0x00	; 0
    4aee:	ea e3       	ldi	r30, 0x3A	; 58
    4af0:	f0 e0       	ldi	r31, 0x00	; 0
    4af2:	80 81       	ld	r24, Z
    4af4:	48 2f       	mov	r20, r24
    4af6:	8a 81       	ldd	r24, Y+2	; 0x02
    4af8:	28 2f       	mov	r18, r24
    4afa:	30 e0       	ldi	r19, 0x00	; 0
    4afc:	81 e0       	ldi	r24, 0x01	; 1
    4afe:	90 e0       	ldi	r25, 0x00	; 0
    4b00:	02 2e       	mov	r0, r18
    4b02:	02 c0       	rjmp	.+4      	; 0x4b08 <DIO_voidSetPinDirection+0x80>
    4b04:	88 0f       	add	r24, r24
    4b06:	99 1f       	adc	r25, r25
    4b08:	0a 94       	dec	r0
    4b0a:	e2 f7       	brpl	.-8      	; 0x4b04 <DIO_voidSetPinDirection+0x7c>
    4b0c:	84 2b       	or	r24, r20
    4b0e:	8c 93       	st	X, r24
    4b10:	b4 c0       	rjmp	.+360    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :         SET_BIT(DDRB , Copy_u8PinNum);       break;
    4b12:	a7 e3       	ldi	r26, 0x37	; 55
    4b14:	b0 e0       	ldi	r27, 0x00	; 0
    4b16:	e7 e3       	ldi	r30, 0x37	; 55
    4b18:	f0 e0       	ldi	r31, 0x00	; 0
    4b1a:	80 81       	ld	r24, Z
    4b1c:	48 2f       	mov	r20, r24
    4b1e:	8a 81       	ldd	r24, Y+2	; 0x02
    4b20:	28 2f       	mov	r18, r24
    4b22:	30 e0       	ldi	r19, 0x00	; 0
    4b24:	81 e0       	ldi	r24, 0x01	; 1
    4b26:	90 e0       	ldi	r25, 0x00	; 0
    4b28:	02 2e       	mov	r0, r18
    4b2a:	02 c0       	rjmp	.+4      	; 0x4b30 <DIO_voidSetPinDirection+0xa8>
    4b2c:	88 0f       	add	r24, r24
    4b2e:	99 1f       	adc	r25, r25
    4b30:	0a 94       	dec	r0
    4b32:	e2 f7       	brpl	.-8      	; 0x4b2c <DIO_voidSetPinDirection+0xa4>
    4b34:	84 2b       	or	r24, r20
    4b36:	8c 93       	st	X, r24
    4b38:	a0 c0       	rjmp	.+320    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :         SET_BIT(DDRC , Copy_u8PinNum);       break;
    4b3a:	a4 e3       	ldi	r26, 0x34	; 52
    4b3c:	b0 e0       	ldi	r27, 0x00	; 0
    4b3e:	e4 e3       	ldi	r30, 0x34	; 52
    4b40:	f0 e0       	ldi	r31, 0x00	; 0
    4b42:	80 81       	ld	r24, Z
    4b44:	48 2f       	mov	r20, r24
    4b46:	8a 81       	ldd	r24, Y+2	; 0x02
    4b48:	28 2f       	mov	r18, r24
    4b4a:	30 e0       	ldi	r19, 0x00	; 0
    4b4c:	81 e0       	ldi	r24, 0x01	; 1
    4b4e:	90 e0       	ldi	r25, 0x00	; 0
    4b50:	02 2e       	mov	r0, r18
    4b52:	02 c0       	rjmp	.+4      	; 0x4b58 <DIO_voidSetPinDirection+0xd0>
    4b54:	88 0f       	add	r24, r24
    4b56:	99 1f       	adc	r25, r25
    4b58:	0a 94       	dec	r0
    4b5a:	e2 f7       	brpl	.-8      	; 0x4b54 <DIO_voidSetPinDirection+0xcc>
    4b5c:	84 2b       	or	r24, r20
    4b5e:	8c 93       	st	X, r24
    4b60:	8c c0       	rjmp	.+280    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :         SET_BIT(DDRD , Copy_u8PinNum);       break;
    4b62:	a1 e3       	ldi	r26, 0x31	; 49
    4b64:	b0 e0       	ldi	r27, 0x00	; 0
    4b66:	e1 e3       	ldi	r30, 0x31	; 49
    4b68:	f0 e0       	ldi	r31, 0x00	; 0
    4b6a:	80 81       	ld	r24, Z
    4b6c:	48 2f       	mov	r20, r24
    4b6e:	8a 81       	ldd	r24, Y+2	; 0x02
    4b70:	28 2f       	mov	r18, r24
    4b72:	30 e0       	ldi	r19, 0x00	; 0
    4b74:	81 e0       	ldi	r24, 0x01	; 1
    4b76:	90 e0       	ldi	r25, 0x00	; 0
    4b78:	02 2e       	mov	r0, r18
    4b7a:	02 c0       	rjmp	.+4      	; 0x4b80 <DIO_voidSetPinDirection+0xf8>
    4b7c:	88 0f       	add	r24, r24
    4b7e:	99 1f       	adc	r25, r25
    4b80:	0a 94       	dec	r0
    4b82:	e2 f7       	brpl	.-8      	; 0x4b7c <DIO_voidSetPinDirection+0xf4>
    4b84:	84 2b       	or	r24, r20
    4b86:	8c 93       	st	X, r24
    4b88:	78 c0       	rjmp	.+240    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
			}
		}
		else if (DIO_u8INPUT == Copy_u8Mode)
    4b8a:	8b 81       	ldd	r24, Y+3	; 0x03
    4b8c:	88 23       	and	r24, r24
    4b8e:	09 f0       	breq	.+2      	; 0x4b92 <DIO_voidSetPinDirection+0x10a>
    4b90:	74 c0       	rjmp	.+232    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
		{
			switch(Copy_u8PortNum)
    4b92:	89 81       	ldd	r24, Y+1	; 0x01
    4b94:	28 2f       	mov	r18, r24
    4b96:	30 e0       	ldi	r19, 0x00	; 0
    4b98:	3d 83       	std	Y+5, r19	; 0x05
    4b9a:	2c 83       	std	Y+4, r18	; 0x04
    4b9c:	8c 81       	ldd	r24, Y+4	; 0x04
    4b9e:	9d 81       	ldd	r25, Y+5	; 0x05
    4ba0:	82 30       	cpi	r24, 0x02	; 2
    4ba2:	91 05       	cpc	r25, r1
    4ba4:	61 f1       	breq	.+88     	; 0x4bfe <DIO_voidSetPinDirection+0x176>
    4ba6:	2c 81       	ldd	r18, Y+4	; 0x04
    4ba8:	3d 81       	ldd	r19, Y+5	; 0x05
    4baa:	23 30       	cpi	r18, 0x03	; 3
    4bac:	31 05       	cpc	r19, r1
    4bae:	34 f4       	brge	.+12     	; 0x4bbc <DIO_voidSetPinDirection+0x134>
    4bb0:	8c 81       	ldd	r24, Y+4	; 0x04
    4bb2:	9d 81       	ldd	r25, Y+5	; 0x05
    4bb4:	81 30       	cpi	r24, 0x01	; 1
    4bb6:	91 05       	cpc	r25, r1
    4bb8:	69 f0       	breq	.+26     	; 0x4bd4 <DIO_voidSetPinDirection+0x14c>
    4bba:	5f c0       	rjmp	.+190    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
    4bbc:	2c 81       	ldd	r18, Y+4	; 0x04
    4bbe:	3d 81       	ldd	r19, Y+5	; 0x05
    4bc0:	23 30       	cpi	r18, 0x03	; 3
    4bc2:	31 05       	cpc	r19, r1
    4bc4:	89 f1       	breq	.+98     	; 0x4c28 <DIO_voidSetPinDirection+0x1a0>
    4bc6:	8c 81       	ldd	r24, Y+4	; 0x04
    4bc8:	9d 81       	ldd	r25, Y+5	; 0x05
    4bca:	84 30       	cpi	r24, 0x04	; 4
    4bcc:	91 05       	cpc	r25, r1
    4bce:	09 f4       	brne	.+2      	; 0x4bd2 <DIO_voidSetPinDirection+0x14a>
    4bd0:	40 c0       	rjmp	.+128    	; 0x4c52 <DIO_voidSetPinDirection+0x1ca>
    4bd2:	53 c0       	rjmp	.+166    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :      CLR_BIT( DDRA, Copy_u8PinNum);    break;
    4bd4:	aa e3       	ldi	r26, 0x3A	; 58
    4bd6:	b0 e0       	ldi	r27, 0x00	; 0
    4bd8:	ea e3       	ldi	r30, 0x3A	; 58
    4bda:	f0 e0       	ldi	r31, 0x00	; 0
    4bdc:	80 81       	ld	r24, Z
    4bde:	48 2f       	mov	r20, r24
    4be0:	8a 81       	ldd	r24, Y+2	; 0x02
    4be2:	28 2f       	mov	r18, r24
    4be4:	30 e0       	ldi	r19, 0x00	; 0
    4be6:	81 e0       	ldi	r24, 0x01	; 1
    4be8:	90 e0       	ldi	r25, 0x00	; 0
    4bea:	02 2e       	mov	r0, r18
    4bec:	02 c0       	rjmp	.+4      	; 0x4bf2 <DIO_voidSetPinDirection+0x16a>
    4bee:	88 0f       	add	r24, r24
    4bf0:	99 1f       	adc	r25, r25
    4bf2:	0a 94       	dec	r0
    4bf4:	e2 f7       	brpl	.-8      	; 0x4bee <DIO_voidSetPinDirection+0x166>
    4bf6:	80 95       	com	r24
    4bf8:	84 23       	and	r24, r20
    4bfa:	8c 93       	st	X, r24
    4bfc:	3e c0       	rjmp	.+124    	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :      CLR_BIT( DDRB, Copy_u8PinNum);    break;
    4bfe:	a7 e3       	ldi	r26, 0x37	; 55
    4c00:	b0 e0       	ldi	r27, 0x00	; 0
    4c02:	e7 e3       	ldi	r30, 0x37	; 55
    4c04:	f0 e0       	ldi	r31, 0x00	; 0
    4c06:	80 81       	ld	r24, Z
    4c08:	48 2f       	mov	r20, r24
    4c0a:	8a 81       	ldd	r24, Y+2	; 0x02
    4c0c:	28 2f       	mov	r18, r24
    4c0e:	30 e0       	ldi	r19, 0x00	; 0
    4c10:	81 e0       	ldi	r24, 0x01	; 1
    4c12:	90 e0       	ldi	r25, 0x00	; 0
    4c14:	02 2e       	mov	r0, r18
    4c16:	02 c0       	rjmp	.+4      	; 0x4c1c <DIO_voidSetPinDirection+0x194>
    4c18:	88 0f       	add	r24, r24
    4c1a:	99 1f       	adc	r25, r25
    4c1c:	0a 94       	dec	r0
    4c1e:	e2 f7       	brpl	.-8      	; 0x4c18 <DIO_voidSetPinDirection+0x190>
    4c20:	80 95       	com	r24
    4c22:	84 23       	and	r24, r20
    4c24:	8c 93       	st	X, r24
    4c26:	29 c0       	rjmp	.+82     	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :      CLR_BIT( DDRC, Copy_u8PinNum);    break;
    4c28:	a4 e3       	ldi	r26, 0x34	; 52
    4c2a:	b0 e0       	ldi	r27, 0x00	; 0
    4c2c:	e4 e3       	ldi	r30, 0x34	; 52
    4c2e:	f0 e0       	ldi	r31, 0x00	; 0
    4c30:	80 81       	ld	r24, Z
    4c32:	48 2f       	mov	r20, r24
    4c34:	8a 81       	ldd	r24, Y+2	; 0x02
    4c36:	28 2f       	mov	r18, r24
    4c38:	30 e0       	ldi	r19, 0x00	; 0
    4c3a:	81 e0       	ldi	r24, 0x01	; 1
    4c3c:	90 e0       	ldi	r25, 0x00	; 0
    4c3e:	02 2e       	mov	r0, r18
    4c40:	02 c0       	rjmp	.+4      	; 0x4c46 <DIO_voidSetPinDirection+0x1be>
    4c42:	88 0f       	add	r24, r24
    4c44:	99 1f       	adc	r25, r25
    4c46:	0a 94       	dec	r0
    4c48:	e2 f7       	brpl	.-8      	; 0x4c42 <DIO_voidSetPinDirection+0x1ba>
    4c4a:	80 95       	com	r24
    4c4c:	84 23       	and	r24, r20
    4c4e:	8c 93       	st	X, r24
    4c50:	14 c0       	rjmp	.+40     	; 0x4c7a <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :      CLR_BIT( DDRD, Copy_u8PinNum);    break;
    4c52:	a1 e3       	ldi	r26, 0x31	; 49
    4c54:	b0 e0       	ldi	r27, 0x00	; 0
    4c56:	e1 e3       	ldi	r30, 0x31	; 49
    4c58:	f0 e0       	ldi	r31, 0x00	; 0
    4c5a:	80 81       	ld	r24, Z
    4c5c:	48 2f       	mov	r20, r24
    4c5e:	8a 81       	ldd	r24, Y+2	; 0x02
    4c60:	28 2f       	mov	r18, r24
    4c62:	30 e0       	ldi	r19, 0x00	; 0
    4c64:	81 e0       	ldi	r24, 0x01	; 1
    4c66:	90 e0       	ldi	r25, 0x00	; 0
    4c68:	02 2e       	mov	r0, r18
    4c6a:	02 c0       	rjmp	.+4      	; 0x4c70 <DIO_voidSetPinDirection+0x1e8>
    4c6c:	88 0f       	add	r24, r24
    4c6e:	99 1f       	adc	r25, r25
    4c70:	0a 94       	dec	r0
    4c72:	e2 f7       	brpl	.-8      	; 0x4c6c <DIO_voidSetPinDirection+0x1e4>
    4c74:	80 95       	com	r24
    4c76:	84 23       	and	r24, r20
    4c78:	8c 93       	st	X, r24
				default :             /* return error */                  break;
			}
		}
}
    4c7a:	27 96       	adiw	r28, 0x07	; 7
    4c7c:	0f b6       	in	r0, 0x3f	; 63
    4c7e:	f8 94       	cli
    4c80:	de bf       	out	0x3e, r29	; 62
    4c82:	0f be       	out	0x3f, r0	; 63
    4c84:	cd bf       	out	0x3d, r28	; 61
    4c86:	cf 91       	pop	r28
    4c88:	df 91       	pop	r29
    4c8a:	08 95       	ret

00004c8c <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Value )
{
    4c8c:	df 93       	push	r29
    4c8e:	cf 93       	push	r28
    4c90:	cd b7       	in	r28, 0x3d	; 61
    4c92:	de b7       	in	r29, 0x3e	; 62
    4c94:	27 97       	sbiw	r28, 0x07	; 7
    4c96:	0f b6       	in	r0, 0x3f	; 63
    4c98:	f8 94       	cli
    4c9a:	de bf       	out	0x3e, r29	; 62
    4c9c:	0f be       	out	0x3f, r0	; 63
    4c9e:	cd bf       	out	0x3d, r28	; 61
    4ca0:	89 83       	std	Y+1, r24	; 0x01
    4ca2:	6a 83       	std	Y+2, r22	; 0x02
    4ca4:	4b 83       	std	Y+3, r20	; 0x03
	if (DIO_u8HIGH == Copy_u8Value)
    4ca6:	8b 81       	ldd	r24, Y+3	; 0x03
    4ca8:	81 30       	cpi	r24, 0x01	; 1
    4caa:	09 f0       	breq	.+2      	; 0x4cae <DIO_voidSetPinValue+0x22>
    4cac:	70 c0       	rjmp	.+224    	; 0x4d8e <DIO_voidSetPinValue+0x102>
		{
			switch(Copy_u8PortNum)
    4cae:	89 81       	ldd	r24, Y+1	; 0x01
    4cb0:	28 2f       	mov	r18, r24
    4cb2:	30 e0       	ldi	r19, 0x00	; 0
    4cb4:	3f 83       	std	Y+7, r19	; 0x07
    4cb6:	2e 83       	std	Y+6, r18	; 0x06
    4cb8:	8e 81       	ldd	r24, Y+6	; 0x06
    4cba:	9f 81       	ldd	r25, Y+7	; 0x07
    4cbc:	82 30       	cpi	r24, 0x02	; 2
    4cbe:	91 05       	cpc	r25, r1
    4cc0:	51 f1       	breq	.+84     	; 0x4d16 <DIO_voidSetPinValue+0x8a>
    4cc2:	2e 81       	ldd	r18, Y+6	; 0x06
    4cc4:	3f 81       	ldd	r19, Y+7	; 0x07
    4cc6:	23 30       	cpi	r18, 0x03	; 3
    4cc8:	31 05       	cpc	r19, r1
    4cca:	34 f4       	brge	.+12     	; 0x4cd8 <DIO_voidSetPinValue+0x4c>
    4ccc:	8e 81       	ldd	r24, Y+6	; 0x06
    4cce:	9f 81       	ldd	r25, Y+7	; 0x07
    4cd0:	81 30       	cpi	r24, 0x01	; 1
    4cd2:	91 05       	cpc	r25, r1
    4cd4:	61 f0       	breq	.+24     	; 0x4cee <DIO_voidSetPinValue+0x62>
    4cd6:	d3 c0       	rjmp	.+422    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
    4cd8:	2e 81       	ldd	r18, Y+6	; 0x06
    4cda:	3f 81       	ldd	r19, Y+7	; 0x07
    4cdc:	23 30       	cpi	r18, 0x03	; 3
    4cde:	31 05       	cpc	r19, r1
    4ce0:	71 f1       	breq	.+92     	; 0x4d3e <DIO_voidSetPinValue+0xb2>
    4ce2:	8e 81       	ldd	r24, Y+6	; 0x06
    4ce4:	9f 81       	ldd	r25, Y+7	; 0x07
    4ce6:	84 30       	cpi	r24, 0x04	; 4
    4ce8:	91 05       	cpc	r25, r1
    4cea:	e9 f1       	breq	.+122    	; 0x4d66 <DIO_voidSetPinValue+0xda>
    4cec:	c8 c0       	rjmp	.+400    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(PORTA , Copy_u8PinNum);       break;
    4cee:	ab e3       	ldi	r26, 0x3B	; 59
    4cf0:	b0 e0       	ldi	r27, 0x00	; 0
    4cf2:	eb e3       	ldi	r30, 0x3B	; 59
    4cf4:	f0 e0       	ldi	r31, 0x00	; 0
    4cf6:	80 81       	ld	r24, Z
    4cf8:	48 2f       	mov	r20, r24
    4cfa:	8a 81       	ldd	r24, Y+2	; 0x02
    4cfc:	28 2f       	mov	r18, r24
    4cfe:	30 e0       	ldi	r19, 0x00	; 0
    4d00:	81 e0       	ldi	r24, 0x01	; 1
    4d02:	90 e0       	ldi	r25, 0x00	; 0
    4d04:	02 2e       	mov	r0, r18
    4d06:	02 c0       	rjmp	.+4      	; 0x4d0c <DIO_voidSetPinValue+0x80>
    4d08:	88 0f       	add	r24, r24
    4d0a:	99 1f       	adc	r25, r25
    4d0c:	0a 94       	dec	r0
    4d0e:	e2 f7       	brpl	.-8      	; 0x4d08 <DIO_voidSetPinValue+0x7c>
    4d10:	84 2b       	or	r24, r20
    4d12:	8c 93       	st	X, r24
    4d14:	b4 c0       	rjmp	.+360    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         SET_BIT(PORTB , Copy_u8PinNum);       break;
    4d16:	a8 e3       	ldi	r26, 0x38	; 56
    4d18:	b0 e0       	ldi	r27, 0x00	; 0
    4d1a:	e8 e3       	ldi	r30, 0x38	; 56
    4d1c:	f0 e0       	ldi	r31, 0x00	; 0
    4d1e:	80 81       	ld	r24, Z
    4d20:	48 2f       	mov	r20, r24
    4d22:	8a 81       	ldd	r24, Y+2	; 0x02
    4d24:	28 2f       	mov	r18, r24
    4d26:	30 e0       	ldi	r19, 0x00	; 0
    4d28:	81 e0       	ldi	r24, 0x01	; 1
    4d2a:	90 e0       	ldi	r25, 0x00	; 0
    4d2c:	02 2e       	mov	r0, r18
    4d2e:	02 c0       	rjmp	.+4      	; 0x4d34 <DIO_voidSetPinValue+0xa8>
    4d30:	88 0f       	add	r24, r24
    4d32:	99 1f       	adc	r25, r25
    4d34:	0a 94       	dec	r0
    4d36:	e2 f7       	brpl	.-8      	; 0x4d30 <DIO_voidSetPinValue+0xa4>
    4d38:	84 2b       	or	r24, r20
    4d3a:	8c 93       	st	X, r24
    4d3c:	a0 c0       	rjmp	.+320    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         SET_BIT(PORTC , Copy_u8PinNum);       break;
    4d3e:	a5 e3       	ldi	r26, 0x35	; 53
    4d40:	b0 e0       	ldi	r27, 0x00	; 0
    4d42:	e5 e3       	ldi	r30, 0x35	; 53
    4d44:	f0 e0       	ldi	r31, 0x00	; 0
    4d46:	80 81       	ld	r24, Z
    4d48:	48 2f       	mov	r20, r24
    4d4a:	8a 81       	ldd	r24, Y+2	; 0x02
    4d4c:	28 2f       	mov	r18, r24
    4d4e:	30 e0       	ldi	r19, 0x00	; 0
    4d50:	81 e0       	ldi	r24, 0x01	; 1
    4d52:	90 e0       	ldi	r25, 0x00	; 0
    4d54:	02 2e       	mov	r0, r18
    4d56:	02 c0       	rjmp	.+4      	; 0x4d5c <DIO_voidSetPinValue+0xd0>
    4d58:	88 0f       	add	r24, r24
    4d5a:	99 1f       	adc	r25, r25
    4d5c:	0a 94       	dec	r0
    4d5e:	e2 f7       	brpl	.-8      	; 0x4d58 <DIO_voidSetPinValue+0xcc>
    4d60:	84 2b       	or	r24, r20
    4d62:	8c 93       	st	X, r24
    4d64:	8c c0       	rjmp	.+280    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         SET_BIT(PORTD , Copy_u8PinNum);       break;
    4d66:	a2 e3       	ldi	r26, 0x32	; 50
    4d68:	b0 e0       	ldi	r27, 0x00	; 0
    4d6a:	e2 e3       	ldi	r30, 0x32	; 50
    4d6c:	f0 e0       	ldi	r31, 0x00	; 0
    4d6e:	80 81       	ld	r24, Z
    4d70:	48 2f       	mov	r20, r24
    4d72:	8a 81       	ldd	r24, Y+2	; 0x02
    4d74:	28 2f       	mov	r18, r24
    4d76:	30 e0       	ldi	r19, 0x00	; 0
    4d78:	81 e0       	ldi	r24, 0x01	; 1
    4d7a:	90 e0       	ldi	r25, 0x00	; 0
    4d7c:	02 2e       	mov	r0, r18
    4d7e:	02 c0       	rjmp	.+4      	; 0x4d84 <DIO_voidSetPinValue+0xf8>
    4d80:	88 0f       	add	r24, r24
    4d82:	99 1f       	adc	r25, r25
    4d84:	0a 94       	dec	r0
    4d86:	e2 f7       	brpl	.-8      	; 0x4d80 <DIO_voidSetPinValue+0xf4>
    4d88:	84 2b       	or	r24, r20
    4d8a:	8c 93       	st	X, r24
    4d8c:	78 c0       	rjmp	.+240    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
				default :                  /* return error */                    break;
			}
		}
		else if (DIO_u8LOW == Copy_u8Value)
    4d8e:	8b 81       	ldd	r24, Y+3	; 0x03
    4d90:	88 23       	and	r24, r24
    4d92:	09 f0       	breq	.+2      	; 0x4d96 <DIO_voidSetPinValue+0x10a>
    4d94:	74 c0       	rjmp	.+232    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
		{
			switch(Copy_u8PortNum){
    4d96:	89 81       	ldd	r24, Y+1	; 0x01
    4d98:	28 2f       	mov	r18, r24
    4d9a:	30 e0       	ldi	r19, 0x00	; 0
    4d9c:	3d 83       	std	Y+5, r19	; 0x05
    4d9e:	2c 83       	std	Y+4, r18	; 0x04
    4da0:	8c 81       	ldd	r24, Y+4	; 0x04
    4da2:	9d 81       	ldd	r25, Y+5	; 0x05
    4da4:	82 30       	cpi	r24, 0x02	; 2
    4da6:	91 05       	cpc	r25, r1
    4da8:	61 f1       	breq	.+88     	; 0x4e02 <DIO_voidSetPinValue+0x176>
    4daa:	2c 81       	ldd	r18, Y+4	; 0x04
    4dac:	3d 81       	ldd	r19, Y+5	; 0x05
    4dae:	23 30       	cpi	r18, 0x03	; 3
    4db0:	31 05       	cpc	r19, r1
    4db2:	34 f4       	brge	.+12     	; 0x4dc0 <DIO_voidSetPinValue+0x134>
    4db4:	8c 81       	ldd	r24, Y+4	; 0x04
    4db6:	9d 81       	ldd	r25, Y+5	; 0x05
    4db8:	81 30       	cpi	r24, 0x01	; 1
    4dba:	91 05       	cpc	r25, r1
    4dbc:	69 f0       	breq	.+26     	; 0x4dd8 <DIO_voidSetPinValue+0x14c>
    4dbe:	5f c0       	rjmp	.+190    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
    4dc0:	2c 81       	ldd	r18, Y+4	; 0x04
    4dc2:	3d 81       	ldd	r19, Y+5	; 0x05
    4dc4:	23 30       	cpi	r18, 0x03	; 3
    4dc6:	31 05       	cpc	r19, r1
    4dc8:	89 f1       	breq	.+98     	; 0x4e2c <DIO_voidSetPinValue+0x1a0>
    4dca:	8c 81       	ldd	r24, Y+4	; 0x04
    4dcc:	9d 81       	ldd	r25, Y+5	; 0x05
    4dce:	84 30       	cpi	r24, 0x04	; 4
    4dd0:	91 05       	cpc	r25, r1
    4dd2:	09 f4       	brne	.+2      	; 0x4dd6 <DIO_voidSetPinValue+0x14a>
    4dd4:	40 c0       	rjmp	.+128    	; 0x4e56 <DIO_voidSetPinValue+0x1ca>
    4dd6:	53 c0       	rjmp	.+166    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>

				case DIO_u8PORTA :         CLR_BIT( PORTA , Copy_u8PinNum);        break;
    4dd8:	ab e3       	ldi	r26, 0x3B	; 59
    4dda:	b0 e0       	ldi	r27, 0x00	; 0
    4ddc:	eb e3       	ldi	r30, 0x3B	; 59
    4dde:	f0 e0       	ldi	r31, 0x00	; 0
    4de0:	80 81       	ld	r24, Z
    4de2:	48 2f       	mov	r20, r24
    4de4:	8a 81       	ldd	r24, Y+2	; 0x02
    4de6:	28 2f       	mov	r18, r24
    4de8:	30 e0       	ldi	r19, 0x00	; 0
    4dea:	81 e0       	ldi	r24, 0x01	; 1
    4dec:	90 e0       	ldi	r25, 0x00	; 0
    4dee:	02 2e       	mov	r0, r18
    4df0:	02 c0       	rjmp	.+4      	; 0x4df6 <DIO_voidSetPinValue+0x16a>
    4df2:	88 0f       	add	r24, r24
    4df4:	99 1f       	adc	r25, r25
    4df6:	0a 94       	dec	r0
    4df8:	e2 f7       	brpl	.-8      	; 0x4df2 <DIO_voidSetPinValue+0x166>
    4dfa:	80 95       	com	r24
    4dfc:	84 23       	and	r24, r20
    4dfe:	8c 93       	st	X, r24
    4e00:	3e c0       	rjmp	.+124    	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         CLR_BIT( PORTB , Copy_u8PinNum);        break;
    4e02:	a8 e3       	ldi	r26, 0x38	; 56
    4e04:	b0 e0       	ldi	r27, 0x00	; 0
    4e06:	e8 e3       	ldi	r30, 0x38	; 56
    4e08:	f0 e0       	ldi	r31, 0x00	; 0
    4e0a:	80 81       	ld	r24, Z
    4e0c:	48 2f       	mov	r20, r24
    4e0e:	8a 81       	ldd	r24, Y+2	; 0x02
    4e10:	28 2f       	mov	r18, r24
    4e12:	30 e0       	ldi	r19, 0x00	; 0
    4e14:	81 e0       	ldi	r24, 0x01	; 1
    4e16:	90 e0       	ldi	r25, 0x00	; 0
    4e18:	02 2e       	mov	r0, r18
    4e1a:	02 c0       	rjmp	.+4      	; 0x4e20 <DIO_voidSetPinValue+0x194>
    4e1c:	88 0f       	add	r24, r24
    4e1e:	99 1f       	adc	r25, r25
    4e20:	0a 94       	dec	r0
    4e22:	e2 f7       	brpl	.-8      	; 0x4e1c <DIO_voidSetPinValue+0x190>
    4e24:	80 95       	com	r24
    4e26:	84 23       	and	r24, r20
    4e28:	8c 93       	st	X, r24
    4e2a:	29 c0       	rjmp	.+82     	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         CLR_BIT( PORTC , Copy_u8PinNum);        break;
    4e2c:	a5 e3       	ldi	r26, 0x35	; 53
    4e2e:	b0 e0       	ldi	r27, 0x00	; 0
    4e30:	e5 e3       	ldi	r30, 0x35	; 53
    4e32:	f0 e0       	ldi	r31, 0x00	; 0
    4e34:	80 81       	ld	r24, Z
    4e36:	48 2f       	mov	r20, r24
    4e38:	8a 81       	ldd	r24, Y+2	; 0x02
    4e3a:	28 2f       	mov	r18, r24
    4e3c:	30 e0       	ldi	r19, 0x00	; 0
    4e3e:	81 e0       	ldi	r24, 0x01	; 1
    4e40:	90 e0       	ldi	r25, 0x00	; 0
    4e42:	02 2e       	mov	r0, r18
    4e44:	02 c0       	rjmp	.+4      	; 0x4e4a <DIO_voidSetPinValue+0x1be>
    4e46:	88 0f       	add	r24, r24
    4e48:	99 1f       	adc	r25, r25
    4e4a:	0a 94       	dec	r0
    4e4c:	e2 f7       	brpl	.-8      	; 0x4e46 <DIO_voidSetPinValue+0x1ba>
    4e4e:	80 95       	com	r24
    4e50:	84 23       	and	r24, r20
    4e52:	8c 93       	st	X, r24
    4e54:	14 c0       	rjmp	.+40     	; 0x4e7e <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         CLR_BIT( PORTD , Copy_u8PinNum);        break;
    4e56:	a2 e3       	ldi	r26, 0x32	; 50
    4e58:	b0 e0       	ldi	r27, 0x00	; 0
    4e5a:	e2 e3       	ldi	r30, 0x32	; 50
    4e5c:	f0 e0       	ldi	r31, 0x00	; 0
    4e5e:	80 81       	ld	r24, Z
    4e60:	48 2f       	mov	r20, r24
    4e62:	8a 81       	ldd	r24, Y+2	; 0x02
    4e64:	28 2f       	mov	r18, r24
    4e66:	30 e0       	ldi	r19, 0x00	; 0
    4e68:	81 e0       	ldi	r24, 0x01	; 1
    4e6a:	90 e0       	ldi	r25, 0x00	; 0
    4e6c:	02 2e       	mov	r0, r18
    4e6e:	02 c0       	rjmp	.+4      	; 0x4e74 <DIO_voidSetPinValue+0x1e8>
    4e70:	88 0f       	add	r24, r24
    4e72:	99 1f       	adc	r25, r25
    4e74:	0a 94       	dec	r0
    4e76:	e2 f7       	brpl	.-8      	; 0x4e70 <DIO_voidSetPinValue+0x1e4>
    4e78:	80 95       	com	r24
    4e7a:	84 23       	and	r24, r20
    4e7c:	8c 93       	st	X, r24
				default :                     /* return error */                   break;
				}
		}
		else {/*   return error  */}
}
    4e7e:	27 96       	adiw	r28, 0x07	; 7
    4e80:	0f b6       	in	r0, 0x3f	; 63
    4e82:	f8 94       	cli
    4e84:	de bf       	out	0x3e, r29	; 62
    4e86:	0f be       	out	0x3f, r0	; 63
    4e88:	cd bf       	out	0x3d, r28	; 61
    4e8a:	cf 91       	pop	r28
    4e8c:	df 91       	pop	r29
    4e8e:	08 95       	ret

00004e90 <DIO_u8GetPinValue>:

uint8 DIO_u8GetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum )
{
    4e90:	df 93       	push	r29
    4e92:	cf 93       	push	r28
    4e94:	00 d0       	rcall	.+0      	; 0x4e96 <DIO_u8GetPinValue+0x6>
    4e96:	00 d0       	rcall	.+0      	; 0x4e98 <DIO_u8GetPinValue+0x8>
    4e98:	0f 92       	push	r0
    4e9a:	cd b7       	in	r28, 0x3d	; 61
    4e9c:	de b7       	in	r29, 0x3e	; 62
    4e9e:	8a 83       	std	Y+2, r24	; 0x02
    4ea0:	6b 83       	std	Y+3, r22	; 0x03
	uint8 BIT;
	switch(Copy_u8PortNum)
    4ea2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ea4:	28 2f       	mov	r18, r24
    4ea6:	30 e0       	ldi	r19, 0x00	; 0
    4ea8:	3d 83       	std	Y+5, r19	; 0x05
    4eaa:	2c 83       	std	Y+4, r18	; 0x04
    4eac:	4c 81       	ldd	r20, Y+4	; 0x04
    4eae:	5d 81       	ldd	r21, Y+5	; 0x05
    4eb0:	42 30       	cpi	r20, 0x02	; 2
    4eb2:	51 05       	cpc	r21, r1
    4eb4:	41 f1       	breq	.+80     	; 0x4f06 <DIO_u8GetPinValue+0x76>
    4eb6:	8c 81       	ldd	r24, Y+4	; 0x04
    4eb8:	9d 81       	ldd	r25, Y+5	; 0x05
    4eba:	83 30       	cpi	r24, 0x03	; 3
    4ebc:	91 05       	cpc	r25, r1
    4ebe:	34 f4       	brge	.+12     	; 0x4ecc <DIO_u8GetPinValue+0x3c>
    4ec0:	2c 81       	ldd	r18, Y+4	; 0x04
    4ec2:	3d 81       	ldd	r19, Y+5	; 0x05
    4ec4:	21 30       	cpi	r18, 0x01	; 1
    4ec6:	31 05       	cpc	r19, r1
    4ec8:	61 f0       	breq	.+24     	; 0x4ee2 <DIO_u8GetPinValue+0x52>
    4eca:	52 c0       	rjmp	.+164    	; 0x4f70 <DIO_u8GetPinValue+0xe0>
    4ecc:	4c 81       	ldd	r20, Y+4	; 0x04
    4ece:	5d 81       	ldd	r21, Y+5	; 0x05
    4ed0:	43 30       	cpi	r20, 0x03	; 3
    4ed2:	51 05       	cpc	r21, r1
    4ed4:	51 f1       	breq	.+84     	; 0x4f2a <DIO_u8GetPinValue+0x9a>
    4ed6:	8c 81       	ldd	r24, Y+4	; 0x04
    4ed8:	9d 81       	ldd	r25, Y+5	; 0x05
    4eda:	84 30       	cpi	r24, 0x04	; 4
    4edc:	91 05       	cpc	r25, r1
    4ede:	b9 f1       	breq	.+110    	; 0x4f4e <DIO_u8GetPinValue+0xbe>
    4ee0:	47 c0       	rjmp	.+142    	; 0x4f70 <DIO_u8GetPinValue+0xe0>
		{
				case DIO_u8PORTA :         BIT = GET_BIT(PINA , Copy_u8PinNum);       break;
    4ee2:	e9 e3       	ldi	r30, 0x39	; 57
    4ee4:	f0 e0       	ldi	r31, 0x00	; 0
    4ee6:	80 81       	ld	r24, Z
    4ee8:	28 2f       	mov	r18, r24
    4eea:	30 e0       	ldi	r19, 0x00	; 0
    4eec:	8b 81       	ldd	r24, Y+3	; 0x03
    4eee:	88 2f       	mov	r24, r24
    4ef0:	90 e0       	ldi	r25, 0x00	; 0
    4ef2:	a9 01       	movw	r20, r18
    4ef4:	02 c0       	rjmp	.+4      	; 0x4efa <DIO_u8GetPinValue+0x6a>
    4ef6:	55 95       	asr	r21
    4ef8:	47 95       	ror	r20
    4efa:	8a 95       	dec	r24
    4efc:	e2 f7       	brpl	.-8      	; 0x4ef6 <DIO_u8GetPinValue+0x66>
    4efe:	ca 01       	movw	r24, r20
    4f00:	81 70       	andi	r24, 0x01	; 1
    4f02:	89 83       	std	Y+1, r24	; 0x01
    4f04:	35 c0       	rjmp	.+106    	; 0x4f70 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTB :         BIT = GET_BIT(PINB , Copy_u8PinNum);       break;
    4f06:	e6 e3       	ldi	r30, 0x36	; 54
    4f08:	f0 e0       	ldi	r31, 0x00	; 0
    4f0a:	80 81       	ld	r24, Z
    4f0c:	28 2f       	mov	r18, r24
    4f0e:	30 e0       	ldi	r19, 0x00	; 0
    4f10:	8b 81       	ldd	r24, Y+3	; 0x03
    4f12:	88 2f       	mov	r24, r24
    4f14:	90 e0       	ldi	r25, 0x00	; 0
    4f16:	a9 01       	movw	r20, r18
    4f18:	02 c0       	rjmp	.+4      	; 0x4f1e <DIO_u8GetPinValue+0x8e>
    4f1a:	55 95       	asr	r21
    4f1c:	47 95       	ror	r20
    4f1e:	8a 95       	dec	r24
    4f20:	e2 f7       	brpl	.-8      	; 0x4f1a <DIO_u8GetPinValue+0x8a>
    4f22:	ca 01       	movw	r24, r20
    4f24:	81 70       	andi	r24, 0x01	; 1
    4f26:	89 83       	std	Y+1, r24	; 0x01
    4f28:	23 c0       	rjmp	.+70     	; 0x4f70 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTC :         BIT = GET_BIT(PINC , Copy_u8PinNum);       break;
    4f2a:	e3 e3       	ldi	r30, 0x33	; 51
    4f2c:	f0 e0       	ldi	r31, 0x00	; 0
    4f2e:	80 81       	ld	r24, Z
    4f30:	28 2f       	mov	r18, r24
    4f32:	30 e0       	ldi	r19, 0x00	; 0
    4f34:	8b 81       	ldd	r24, Y+3	; 0x03
    4f36:	88 2f       	mov	r24, r24
    4f38:	90 e0       	ldi	r25, 0x00	; 0
    4f3a:	a9 01       	movw	r20, r18
    4f3c:	02 c0       	rjmp	.+4      	; 0x4f42 <DIO_u8GetPinValue+0xb2>
    4f3e:	55 95       	asr	r21
    4f40:	47 95       	ror	r20
    4f42:	8a 95       	dec	r24
    4f44:	e2 f7       	brpl	.-8      	; 0x4f3e <DIO_u8GetPinValue+0xae>
    4f46:	ca 01       	movw	r24, r20
    4f48:	81 70       	andi	r24, 0x01	; 1
    4f4a:	89 83       	std	Y+1, r24	; 0x01
    4f4c:	11 c0       	rjmp	.+34     	; 0x4f70 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTD :         BIT = GET_BIT(PIND , Copy_u8PinNum);       break;
    4f4e:	e0 e3       	ldi	r30, 0x30	; 48
    4f50:	f0 e0       	ldi	r31, 0x00	; 0
    4f52:	80 81       	ld	r24, Z
    4f54:	28 2f       	mov	r18, r24
    4f56:	30 e0       	ldi	r19, 0x00	; 0
    4f58:	8b 81       	ldd	r24, Y+3	; 0x03
    4f5a:	88 2f       	mov	r24, r24
    4f5c:	90 e0       	ldi	r25, 0x00	; 0
    4f5e:	a9 01       	movw	r20, r18
    4f60:	02 c0       	rjmp	.+4      	; 0x4f66 <DIO_u8GetPinValue+0xd6>
    4f62:	55 95       	asr	r21
    4f64:	47 95       	ror	r20
    4f66:	8a 95       	dec	r24
    4f68:	e2 f7       	brpl	.-8      	; 0x4f62 <DIO_u8GetPinValue+0xd2>
    4f6a:	ca 01       	movw	r24, r20
    4f6c:	81 70       	andi	r24, 0x01	; 1
    4f6e:	89 83       	std	Y+1, r24	; 0x01
		}
	return BIT;
    4f70:	89 81       	ldd	r24, Y+1	; 0x01
}
    4f72:	0f 90       	pop	r0
    4f74:	0f 90       	pop	r0
    4f76:	0f 90       	pop	r0
    4f78:	0f 90       	pop	r0
    4f7a:	0f 90       	pop	r0
    4f7c:	cf 91       	pop	r28
    4f7e:	df 91       	pop	r29
    4f80:	08 95       	ret

00004f82 <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(uint8 Copy_u8PortNum, uint8 Copy_u8Mode )
{
    4f82:	df 93       	push	r29
    4f84:	cf 93       	push	r28
    4f86:	00 d0       	rcall	.+0      	; 0x4f88 <DIO_voidSetPortDirection+0x6>
    4f88:	00 d0       	rcall	.+0      	; 0x4f8a <DIO_voidSetPortDirection+0x8>
    4f8a:	cd b7       	in	r28, 0x3d	; 61
    4f8c:	de b7       	in	r29, 0x3e	; 62
    4f8e:	89 83       	std	Y+1, r24	; 0x01
    4f90:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    4f92:	89 81       	ldd	r24, Y+1	; 0x01
    4f94:	28 2f       	mov	r18, r24
    4f96:	30 e0       	ldi	r19, 0x00	; 0
    4f98:	3c 83       	std	Y+4, r19	; 0x04
    4f9a:	2b 83       	std	Y+3, r18	; 0x03
    4f9c:	8b 81       	ldd	r24, Y+3	; 0x03
    4f9e:	9c 81       	ldd	r25, Y+4	; 0x04
    4fa0:	82 30       	cpi	r24, 0x02	; 2
    4fa2:	91 05       	cpc	r25, r1
    4fa4:	d9 f0       	breq	.+54     	; 0x4fdc <DIO_voidSetPortDirection+0x5a>
    4fa6:	2b 81       	ldd	r18, Y+3	; 0x03
    4fa8:	3c 81       	ldd	r19, Y+4	; 0x04
    4faa:	23 30       	cpi	r18, 0x03	; 3
    4fac:	31 05       	cpc	r19, r1
    4fae:	34 f4       	brge	.+12     	; 0x4fbc <DIO_voidSetPortDirection+0x3a>
    4fb0:	8b 81       	ldd	r24, Y+3	; 0x03
    4fb2:	9c 81       	ldd	r25, Y+4	; 0x04
    4fb4:	81 30       	cpi	r24, 0x01	; 1
    4fb6:	91 05       	cpc	r25, r1
    4fb8:	61 f0       	breq	.+24     	; 0x4fd2 <DIO_voidSetPortDirection+0x50>
    4fba:	1e c0       	rjmp	.+60     	; 0x4ff8 <DIO_voidSetPortDirection+0x76>
    4fbc:	2b 81       	ldd	r18, Y+3	; 0x03
    4fbe:	3c 81       	ldd	r19, Y+4	; 0x04
    4fc0:	23 30       	cpi	r18, 0x03	; 3
    4fc2:	31 05       	cpc	r19, r1
    4fc4:	81 f0       	breq	.+32     	; 0x4fe6 <DIO_voidSetPortDirection+0x64>
    4fc6:	8b 81       	ldd	r24, Y+3	; 0x03
    4fc8:	9c 81       	ldd	r25, Y+4	; 0x04
    4fca:	84 30       	cpi	r24, 0x04	; 4
    4fcc:	91 05       	cpc	r25, r1
    4fce:	81 f0       	breq	.+32     	; 0x4ff0 <DIO_voidSetPortDirection+0x6e>
    4fd0:	13 c0       	rjmp	.+38     	; 0x4ff8 <DIO_voidSetPortDirection+0x76>
		{
			case DIO_u8PORTA :         DDRA  = Copy_u8Mode;       break;
    4fd2:	ea e3       	ldi	r30, 0x3A	; 58
    4fd4:	f0 e0       	ldi	r31, 0x00	; 0
    4fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    4fd8:	80 83       	st	Z, r24
    4fda:	0e c0       	rjmp	.+28     	; 0x4ff8 <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTB :         DDRB  = Copy_u8Mode;       break;
    4fdc:	e7 e3       	ldi	r30, 0x37	; 55
    4fde:	f0 e0       	ldi	r31, 0x00	; 0
    4fe0:	8a 81       	ldd	r24, Y+2	; 0x02
    4fe2:	80 83       	st	Z, r24
    4fe4:	09 c0       	rjmp	.+18     	; 0x4ff8 <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTC :         DDRC  = Copy_u8Mode;       break;
    4fe6:	e4 e3       	ldi	r30, 0x34	; 52
    4fe8:	f0 e0       	ldi	r31, 0x00	; 0
    4fea:	8a 81       	ldd	r24, Y+2	; 0x02
    4fec:	80 83       	st	Z, r24
    4fee:	04 c0       	rjmp	.+8      	; 0x4ff8 <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTD :         DDRD  = Copy_u8Mode;       break;
    4ff0:	e1 e3       	ldi	r30, 0x31	; 49
    4ff2:	f0 e0       	ldi	r31, 0x00	; 0
    4ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    4ff6:	80 83       	st	Z, r24
		}
}
    4ff8:	0f 90       	pop	r0
    4ffa:	0f 90       	pop	r0
    4ffc:	0f 90       	pop	r0
    4ffe:	0f 90       	pop	r0
    5000:	cf 91       	pop	r28
    5002:	df 91       	pop	r29
    5004:	08 95       	ret

00005006 <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(uint8 Copy_u8PortNum, uint8 Copy_u8Value )
{
    5006:	df 93       	push	r29
    5008:	cf 93       	push	r28
    500a:	00 d0       	rcall	.+0      	; 0x500c <DIO_voidSetPortValue+0x6>
    500c:	00 d0       	rcall	.+0      	; 0x500e <DIO_voidSetPortValue+0x8>
    500e:	cd b7       	in	r28, 0x3d	; 61
    5010:	de b7       	in	r29, 0x3e	; 62
    5012:	89 83       	std	Y+1, r24	; 0x01
    5014:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    5016:	89 81       	ldd	r24, Y+1	; 0x01
    5018:	28 2f       	mov	r18, r24
    501a:	30 e0       	ldi	r19, 0x00	; 0
    501c:	3c 83       	std	Y+4, r19	; 0x04
    501e:	2b 83       	std	Y+3, r18	; 0x03
    5020:	8b 81       	ldd	r24, Y+3	; 0x03
    5022:	9c 81       	ldd	r25, Y+4	; 0x04
    5024:	82 30       	cpi	r24, 0x02	; 2
    5026:	91 05       	cpc	r25, r1
    5028:	d9 f0       	breq	.+54     	; 0x5060 <DIO_voidSetPortValue+0x5a>
    502a:	2b 81       	ldd	r18, Y+3	; 0x03
    502c:	3c 81       	ldd	r19, Y+4	; 0x04
    502e:	23 30       	cpi	r18, 0x03	; 3
    5030:	31 05       	cpc	r19, r1
    5032:	34 f4       	brge	.+12     	; 0x5040 <DIO_voidSetPortValue+0x3a>
    5034:	8b 81       	ldd	r24, Y+3	; 0x03
    5036:	9c 81       	ldd	r25, Y+4	; 0x04
    5038:	81 30       	cpi	r24, 0x01	; 1
    503a:	91 05       	cpc	r25, r1
    503c:	61 f0       	breq	.+24     	; 0x5056 <DIO_voidSetPortValue+0x50>
    503e:	1e c0       	rjmp	.+60     	; 0x507c <DIO_voidSetPortValue+0x76>
    5040:	2b 81       	ldd	r18, Y+3	; 0x03
    5042:	3c 81       	ldd	r19, Y+4	; 0x04
    5044:	23 30       	cpi	r18, 0x03	; 3
    5046:	31 05       	cpc	r19, r1
    5048:	81 f0       	breq	.+32     	; 0x506a <DIO_voidSetPortValue+0x64>
    504a:	8b 81       	ldd	r24, Y+3	; 0x03
    504c:	9c 81       	ldd	r25, Y+4	; 0x04
    504e:	84 30       	cpi	r24, 0x04	; 4
    5050:	91 05       	cpc	r25, r1
    5052:	81 f0       	breq	.+32     	; 0x5074 <DIO_voidSetPortValue+0x6e>
    5054:	13 c0       	rjmp	.+38     	; 0x507c <DIO_voidSetPortValue+0x76>
		{
			case DIO_u8PORTA :         PORTA  = Copy_u8Value;       break;
    5056:	eb e3       	ldi	r30, 0x3B	; 59
    5058:	f0 e0       	ldi	r31, 0x00	; 0
    505a:	8a 81       	ldd	r24, Y+2	; 0x02
    505c:	80 83       	st	Z, r24
    505e:	0e c0       	rjmp	.+28     	; 0x507c <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTB :         PORTB  = Copy_u8Value;       break;
    5060:	e8 e3       	ldi	r30, 0x38	; 56
    5062:	f0 e0       	ldi	r31, 0x00	; 0
    5064:	8a 81       	ldd	r24, Y+2	; 0x02
    5066:	80 83       	st	Z, r24
    5068:	09 c0       	rjmp	.+18     	; 0x507c <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTC :         PORTC  = Copy_u8Value;       break;
    506a:	e5 e3       	ldi	r30, 0x35	; 53
    506c:	f0 e0       	ldi	r31, 0x00	; 0
    506e:	8a 81       	ldd	r24, Y+2	; 0x02
    5070:	80 83       	st	Z, r24
    5072:	04 c0       	rjmp	.+8      	; 0x507c <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTD :         PORTD  = Copy_u8Value;       break;
    5074:	e2 e3       	ldi	r30, 0x32	; 50
    5076:	f0 e0       	ldi	r31, 0x00	; 0
    5078:	8a 81       	ldd	r24, Y+2	; 0x02
    507a:	80 83       	st	Z, r24
		}
}
    507c:	0f 90       	pop	r0
    507e:	0f 90       	pop	r0
    5080:	0f 90       	pop	r0
    5082:	0f 90       	pop	r0
    5084:	cf 91       	pop	r28
    5086:	df 91       	pop	r29
    5088:	08 95       	ret

0000508a <DIO_voidSetTogglePin>:

void DIO_voidSetTogglePin(uint8 Copy_u8PortNum , uint8 Copy_u8PinNum)
{
    508a:	df 93       	push	r29
    508c:	cf 93       	push	r28
    508e:	00 d0       	rcall	.+0      	; 0x5090 <DIO_voidSetTogglePin+0x6>
    5090:	00 d0       	rcall	.+0      	; 0x5092 <DIO_voidSetTogglePin+0x8>
    5092:	cd b7       	in	r28, 0x3d	; 61
    5094:	de b7       	in	r29, 0x3e	; 62
    5096:	89 83       	std	Y+1, r24	; 0x01
    5098:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    509a:	89 81       	ldd	r24, Y+1	; 0x01
    509c:	28 2f       	mov	r18, r24
    509e:	30 e0       	ldi	r19, 0x00	; 0
    50a0:	3c 83       	std	Y+4, r19	; 0x04
    50a2:	2b 83       	std	Y+3, r18	; 0x03
    50a4:	8b 81       	ldd	r24, Y+3	; 0x03
    50a6:	9c 81       	ldd	r25, Y+4	; 0x04
    50a8:	82 30       	cpi	r24, 0x02	; 2
    50aa:	91 05       	cpc	r25, r1
    50ac:	51 f1       	breq	.+84     	; 0x5102 <DIO_voidSetTogglePin+0x78>
    50ae:	2b 81       	ldd	r18, Y+3	; 0x03
    50b0:	3c 81       	ldd	r19, Y+4	; 0x04
    50b2:	23 30       	cpi	r18, 0x03	; 3
    50b4:	31 05       	cpc	r19, r1
    50b6:	34 f4       	brge	.+12     	; 0x50c4 <DIO_voidSetTogglePin+0x3a>
    50b8:	8b 81       	ldd	r24, Y+3	; 0x03
    50ba:	9c 81       	ldd	r25, Y+4	; 0x04
    50bc:	81 30       	cpi	r24, 0x01	; 1
    50be:	91 05       	cpc	r25, r1
    50c0:	61 f0       	breq	.+24     	; 0x50da <DIO_voidSetTogglePin+0x50>
    50c2:	5a c0       	rjmp	.+180    	; 0x5178 <DIO_voidSetTogglePin+0xee>
    50c4:	2b 81       	ldd	r18, Y+3	; 0x03
    50c6:	3c 81       	ldd	r19, Y+4	; 0x04
    50c8:	23 30       	cpi	r18, 0x03	; 3
    50ca:	31 05       	cpc	r19, r1
    50cc:	71 f1       	breq	.+92     	; 0x512a <DIO_voidSetTogglePin+0xa0>
    50ce:	8b 81       	ldd	r24, Y+3	; 0x03
    50d0:	9c 81       	ldd	r25, Y+4	; 0x04
    50d2:	84 30       	cpi	r24, 0x04	; 4
    50d4:	91 05       	cpc	r25, r1
    50d6:	e9 f1       	breq	.+122    	; 0x5152 <DIO_voidSetTogglePin+0xc8>
    50d8:	4f c0       	rjmp	.+158    	; 0x5178 <DIO_voidSetTogglePin+0xee>
		{
			case DIO_u8PORTA :        TOG_BIT(PORTA , Copy_u8PinNum);       break;
    50da:	ab e3       	ldi	r26, 0x3B	; 59
    50dc:	b0 e0       	ldi	r27, 0x00	; 0
    50de:	eb e3       	ldi	r30, 0x3B	; 59
    50e0:	f0 e0       	ldi	r31, 0x00	; 0
    50e2:	80 81       	ld	r24, Z
    50e4:	48 2f       	mov	r20, r24
    50e6:	8a 81       	ldd	r24, Y+2	; 0x02
    50e8:	28 2f       	mov	r18, r24
    50ea:	30 e0       	ldi	r19, 0x00	; 0
    50ec:	81 e0       	ldi	r24, 0x01	; 1
    50ee:	90 e0       	ldi	r25, 0x00	; 0
    50f0:	02 2e       	mov	r0, r18
    50f2:	02 c0       	rjmp	.+4      	; 0x50f8 <DIO_voidSetTogglePin+0x6e>
    50f4:	88 0f       	add	r24, r24
    50f6:	99 1f       	adc	r25, r25
    50f8:	0a 94       	dec	r0
    50fa:	e2 f7       	brpl	.-8      	; 0x50f4 <DIO_voidSetTogglePin+0x6a>
    50fc:	84 27       	eor	r24, r20
    50fe:	8c 93       	st	X, r24
    5100:	3b c0       	rjmp	.+118    	; 0x5178 <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTB :        TOG_BIT(PORTB , Copy_u8PinNum);       break;
    5102:	a8 e3       	ldi	r26, 0x38	; 56
    5104:	b0 e0       	ldi	r27, 0x00	; 0
    5106:	e8 e3       	ldi	r30, 0x38	; 56
    5108:	f0 e0       	ldi	r31, 0x00	; 0
    510a:	80 81       	ld	r24, Z
    510c:	48 2f       	mov	r20, r24
    510e:	8a 81       	ldd	r24, Y+2	; 0x02
    5110:	28 2f       	mov	r18, r24
    5112:	30 e0       	ldi	r19, 0x00	; 0
    5114:	81 e0       	ldi	r24, 0x01	; 1
    5116:	90 e0       	ldi	r25, 0x00	; 0
    5118:	02 2e       	mov	r0, r18
    511a:	02 c0       	rjmp	.+4      	; 0x5120 <DIO_voidSetTogglePin+0x96>
    511c:	88 0f       	add	r24, r24
    511e:	99 1f       	adc	r25, r25
    5120:	0a 94       	dec	r0
    5122:	e2 f7       	brpl	.-8      	; 0x511c <DIO_voidSetTogglePin+0x92>
    5124:	84 27       	eor	r24, r20
    5126:	8c 93       	st	X, r24
    5128:	27 c0       	rjmp	.+78     	; 0x5178 <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTC :        TOG_BIT(PORTC , Copy_u8PinNum);       break;
    512a:	a5 e3       	ldi	r26, 0x35	; 53
    512c:	b0 e0       	ldi	r27, 0x00	; 0
    512e:	e5 e3       	ldi	r30, 0x35	; 53
    5130:	f0 e0       	ldi	r31, 0x00	; 0
    5132:	80 81       	ld	r24, Z
    5134:	48 2f       	mov	r20, r24
    5136:	8a 81       	ldd	r24, Y+2	; 0x02
    5138:	28 2f       	mov	r18, r24
    513a:	30 e0       	ldi	r19, 0x00	; 0
    513c:	81 e0       	ldi	r24, 0x01	; 1
    513e:	90 e0       	ldi	r25, 0x00	; 0
    5140:	02 2e       	mov	r0, r18
    5142:	02 c0       	rjmp	.+4      	; 0x5148 <DIO_voidSetTogglePin+0xbe>
    5144:	88 0f       	add	r24, r24
    5146:	99 1f       	adc	r25, r25
    5148:	0a 94       	dec	r0
    514a:	e2 f7       	brpl	.-8      	; 0x5144 <DIO_voidSetTogglePin+0xba>
    514c:	84 27       	eor	r24, r20
    514e:	8c 93       	st	X, r24
    5150:	13 c0       	rjmp	.+38     	; 0x5178 <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTD :        TOG_BIT(PORTD, Copy_u8PinNum);       break;
    5152:	a2 e3       	ldi	r26, 0x32	; 50
    5154:	b0 e0       	ldi	r27, 0x00	; 0
    5156:	e2 e3       	ldi	r30, 0x32	; 50
    5158:	f0 e0       	ldi	r31, 0x00	; 0
    515a:	80 81       	ld	r24, Z
    515c:	48 2f       	mov	r20, r24
    515e:	8a 81       	ldd	r24, Y+2	; 0x02
    5160:	28 2f       	mov	r18, r24
    5162:	30 e0       	ldi	r19, 0x00	; 0
    5164:	81 e0       	ldi	r24, 0x01	; 1
    5166:	90 e0       	ldi	r25, 0x00	; 0
    5168:	02 2e       	mov	r0, r18
    516a:	02 c0       	rjmp	.+4      	; 0x5170 <DIO_voidSetTogglePin+0xe6>
    516c:	88 0f       	add	r24, r24
    516e:	99 1f       	adc	r25, r25
    5170:	0a 94       	dec	r0
    5172:	e2 f7       	brpl	.-8      	; 0x516c <DIO_voidSetTogglePin+0xe2>
    5174:	84 27       	eor	r24, r20
    5176:	8c 93       	st	X, r24
		}
}
    5178:	0f 90       	pop	r0
    517a:	0f 90       	pop	r0
    517c:	0f 90       	pop	r0
    517e:	0f 90       	pop	r0
    5180:	cf 91       	pop	r28
    5182:	df 91       	pop	r29
    5184:	08 95       	ret

00005186 <DIO_u8GetPinValue_Store>:
uint8 DIO_u8GetPinValue_Store(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8* BIT)
{
    5186:	df 93       	push	r29
    5188:	cf 93       	push	r28
    518a:	00 d0       	rcall	.+0      	; 0x518c <DIO_u8GetPinValue_Store+0x6>
    518c:	00 d0       	rcall	.+0      	; 0x518e <DIO_u8GetPinValue_Store+0x8>
    518e:	00 d0       	rcall	.+0      	; 0x5190 <DIO_u8GetPinValue_Store+0xa>
    5190:	cd b7       	in	r28, 0x3d	; 61
    5192:	de b7       	in	r29, 0x3e	; 62
    5194:	89 83       	std	Y+1, r24	; 0x01
    5196:	6a 83       	std	Y+2, r22	; 0x02
    5198:	5c 83       	std	Y+4, r21	; 0x04
    519a:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8PortNum)
    519c:	89 81       	ldd	r24, Y+1	; 0x01
    519e:	28 2f       	mov	r18, r24
    51a0:	30 e0       	ldi	r19, 0x00	; 0
    51a2:	3e 83       	std	Y+6, r19	; 0x06
    51a4:	2d 83       	std	Y+5, r18	; 0x05
    51a6:	4d 81       	ldd	r20, Y+5	; 0x05
    51a8:	5e 81       	ldd	r21, Y+6	; 0x06
    51aa:	42 30       	cpi	r20, 0x02	; 2
    51ac:	51 05       	cpc	r21, r1
    51ae:	59 f1       	breq	.+86     	; 0x5206 <DIO_u8GetPinValue_Store+0x80>
    51b0:	8d 81       	ldd	r24, Y+5	; 0x05
    51b2:	9e 81       	ldd	r25, Y+6	; 0x06
    51b4:	83 30       	cpi	r24, 0x03	; 3
    51b6:	91 05       	cpc	r25, r1
    51b8:	34 f4       	brge	.+12     	; 0x51c6 <DIO_u8GetPinValue_Store+0x40>
    51ba:	2d 81       	ldd	r18, Y+5	; 0x05
    51bc:	3e 81       	ldd	r19, Y+6	; 0x06
    51be:	21 30       	cpi	r18, 0x01	; 1
    51c0:	31 05       	cpc	r19, r1
    51c2:	69 f0       	breq	.+26     	; 0x51de <DIO_u8GetPinValue_Store+0x58>
    51c4:	5b c0       	rjmp	.+182    	; 0x527c <DIO_u8GetPinValue_Store+0xf6>
    51c6:	4d 81       	ldd	r20, Y+5	; 0x05
    51c8:	5e 81       	ldd	r21, Y+6	; 0x06
    51ca:	43 30       	cpi	r20, 0x03	; 3
    51cc:	51 05       	cpc	r21, r1
    51ce:	79 f1       	breq	.+94     	; 0x522e <DIO_u8GetPinValue_Store+0xa8>
    51d0:	8d 81       	ldd	r24, Y+5	; 0x05
    51d2:	9e 81       	ldd	r25, Y+6	; 0x06
    51d4:	84 30       	cpi	r24, 0x04	; 4
    51d6:	91 05       	cpc	r25, r1
    51d8:	09 f4       	brne	.+2      	; 0x51dc <DIO_u8GetPinValue_Store+0x56>
    51da:	3d c0       	rjmp	.+122    	; 0x5256 <DIO_u8GetPinValue_Store+0xd0>
    51dc:	4f c0       	rjmp	.+158    	; 0x527c <DIO_u8GetPinValue_Store+0xf6>
		{
				case DIO_u8PORTA :         *BIT = GET_BIT(PINA , Copy_u8PinNum);       break;
    51de:	e9 e3       	ldi	r30, 0x39	; 57
    51e0:	f0 e0       	ldi	r31, 0x00	; 0
    51e2:	80 81       	ld	r24, Z
    51e4:	28 2f       	mov	r18, r24
    51e6:	30 e0       	ldi	r19, 0x00	; 0
    51e8:	8a 81       	ldd	r24, Y+2	; 0x02
    51ea:	88 2f       	mov	r24, r24
    51ec:	90 e0       	ldi	r25, 0x00	; 0
    51ee:	a9 01       	movw	r20, r18
    51f0:	02 c0       	rjmp	.+4      	; 0x51f6 <DIO_u8GetPinValue_Store+0x70>
    51f2:	55 95       	asr	r21
    51f4:	47 95       	ror	r20
    51f6:	8a 95       	dec	r24
    51f8:	e2 f7       	brpl	.-8      	; 0x51f2 <DIO_u8GetPinValue_Store+0x6c>
    51fa:	ca 01       	movw	r24, r20
    51fc:	81 70       	andi	r24, 0x01	; 1
    51fe:	eb 81       	ldd	r30, Y+3	; 0x03
    5200:	fc 81       	ldd	r31, Y+4	; 0x04
    5202:	80 83       	st	Z, r24
    5204:	3b c0       	rjmp	.+118    	; 0x527c <DIO_u8GetPinValue_Store+0xf6>
				case DIO_u8PORTB :         *BIT = GET_BIT(PINB , Copy_u8PinNum);       break;
    5206:	e6 e3       	ldi	r30, 0x36	; 54
    5208:	f0 e0       	ldi	r31, 0x00	; 0
    520a:	80 81       	ld	r24, Z
    520c:	28 2f       	mov	r18, r24
    520e:	30 e0       	ldi	r19, 0x00	; 0
    5210:	8a 81       	ldd	r24, Y+2	; 0x02
    5212:	88 2f       	mov	r24, r24
    5214:	90 e0       	ldi	r25, 0x00	; 0
    5216:	a9 01       	movw	r20, r18
    5218:	02 c0       	rjmp	.+4      	; 0x521e <DIO_u8GetPinValue_Store+0x98>
    521a:	55 95       	asr	r21
    521c:	47 95       	ror	r20
    521e:	8a 95       	dec	r24
    5220:	e2 f7       	brpl	.-8      	; 0x521a <DIO_u8GetPinValue_Store+0x94>
    5222:	ca 01       	movw	r24, r20
    5224:	81 70       	andi	r24, 0x01	; 1
    5226:	eb 81       	ldd	r30, Y+3	; 0x03
    5228:	fc 81       	ldd	r31, Y+4	; 0x04
    522a:	80 83       	st	Z, r24
    522c:	27 c0       	rjmp	.+78     	; 0x527c <DIO_u8GetPinValue_Store+0xf6>
				case DIO_u8PORTC :         *BIT = GET_BIT(PINC , Copy_u8PinNum);       break;
    522e:	e3 e3       	ldi	r30, 0x33	; 51
    5230:	f0 e0       	ldi	r31, 0x00	; 0
    5232:	80 81       	ld	r24, Z
    5234:	28 2f       	mov	r18, r24
    5236:	30 e0       	ldi	r19, 0x00	; 0
    5238:	8a 81       	ldd	r24, Y+2	; 0x02
    523a:	88 2f       	mov	r24, r24
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	a9 01       	movw	r20, r18
    5240:	02 c0       	rjmp	.+4      	; 0x5246 <DIO_u8GetPinValue_Store+0xc0>
    5242:	55 95       	asr	r21
    5244:	47 95       	ror	r20
    5246:	8a 95       	dec	r24
    5248:	e2 f7       	brpl	.-8      	; 0x5242 <DIO_u8GetPinValue_Store+0xbc>
    524a:	ca 01       	movw	r24, r20
    524c:	81 70       	andi	r24, 0x01	; 1
    524e:	eb 81       	ldd	r30, Y+3	; 0x03
    5250:	fc 81       	ldd	r31, Y+4	; 0x04
    5252:	80 83       	st	Z, r24
    5254:	13 c0       	rjmp	.+38     	; 0x527c <DIO_u8GetPinValue_Store+0xf6>
				case DIO_u8PORTD :         *BIT = GET_BIT(PIND , Copy_u8PinNum);       break;
    5256:	e0 e3       	ldi	r30, 0x30	; 48
    5258:	f0 e0       	ldi	r31, 0x00	; 0
    525a:	80 81       	ld	r24, Z
    525c:	28 2f       	mov	r18, r24
    525e:	30 e0       	ldi	r19, 0x00	; 0
    5260:	8a 81       	ldd	r24, Y+2	; 0x02
    5262:	88 2f       	mov	r24, r24
    5264:	90 e0       	ldi	r25, 0x00	; 0
    5266:	a9 01       	movw	r20, r18
    5268:	02 c0       	rjmp	.+4      	; 0x526e <DIO_u8GetPinValue_Store+0xe8>
    526a:	55 95       	asr	r21
    526c:	47 95       	ror	r20
    526e:	8a 95       	dec	r24
    5270:	e2 f7       	brpl	.-8      	; 0x526a <DIO_u8GetPinValue_Store+0xe4>
    5272:	ca 01       	movw	r24, r20
    5274:	81 70       	andi	r24, 0x01	; 1
    5276:	eb 81       	ldd	r30, Y+3	; 0x03
    5278:	fc 81       	ldd	r31, Y+4	; 0x04
    527a:	80 83       	st	Z, r24
		}
	return BIT;
    527c:	8b 81       	ldd	r24, Y+3	; 0x03
    527e:	9c 81       	ldd	r25, Y+4	; 0x04
}
    5280:	26 96       	adiw	r28, 0x06	; 6
    5282:	0f b6       	in	r0, 0x3f	; 63
    5284:	f8 94       	cli
    5286:	de bf       	out	0x3e, r29	; 62
    5288:	0f be       	out	0x3f, r0	; 63
    528a:	cd bf       	out	0x3d, r28	; 61
    528c:	cf 91       	pop	r28
    528e:	df 91       	pop	r29
    5290:	08 95       	ret

00005292 <__mulsi3>:
    5292:	62 9f       	mul	r22, r18
    5294:	d0 01       	movw	r26, r0
    5296:	73 9f       	mul	r23, r19
    5298:	f0 01       	movw	r30, r0
    529a:	82 9f       	mul	r24, r18
    529c:	e0 0d       	add	r30, r0
    529e:	f1 1d       	adc	r31, r1
    52a0:	64 9f       	mul	r22, r20
    52a2:	e0 0d       	add	r30, r0
    52a4:	f1 1d       	adc	r31, r1
    52a6:	92 9f       	mul	r25, r18
    52a8:	f0 0d       	add	r31, r0
    52aa:	83 9f       	mul	r24, r19
    52ac:	f0 0d       	add	r31, r0
    52ae:	74 9f       	mul	r23, r20
    52b0:	f0 0d       	add	r31, r0
    52b2:	65 9f       	mul	r22, r21
    52b4:	f0 0d       	add	r31, r0
    52b6:	99 27       	eor	r25, r25
    52b8:	72 9f       	mul	r23, r18
    52ba:	b0 0d       	add	r27, r0
    52bc:	e1 1d       	adc	r30, r1
    52be:	f9 1f       	adc	r31, r25
    52c0:	63 9f       	mul	r22, r19
    52c2:	b0 0d       	add	r27, r0
    52c4:	e1 1d       	adc	r30, r1
    52c6:	f9 1f       	adc	r31, r25
    52c8:	bd 01       	movw	r22, r26
    52ca:	cf 01       	movw	r24, r30
    52cc:	11 24       	eor	r1, r1
    52ce:	08 95       	ret

000052d0 <__divmodsi4>:
    52d0:	97 fb       	bst	r25, 7
    52d2:	09 2e       	mov	r0, r25
    52d4:	05 26       	eor	r0, r21
    52d6:	0e d0       	rcall	.+28     	; 0x52f4 <__divmodsi4_neg1>
    52d8:	57 fd       	sbrc	r21, 7
    52da:	04 d0       	rcall	.+8      	; 0x52e4 <__divmodsi4_neg2>
    52dc:	14 d0       	rcall	.+40     	; 0x5306 <__udivmodsi4>
    52de:	0a d0       	rcall	.+20     	; 0x52f4 <__divmodsi4_neg1>
    52e0:	00 1c       	adc	r0, r0
    52e2:	38 f4       	brcc	.+14     	; 0x52f2 <__divmodsi4_exit>

000052e4 <__divmodsi4_neg2>:
    52e4:	50 95       	com	r21
    52e6:	40 95       	com	r20
    52e8:	30 95       	com	r19
    52ea:	21 95       	neg	r18
    52ec:	3f 4f       	sbci	r19, 0xFF	; 255
    52ee:	4f 4f       	sbci	r20, 0xFF	; 255
    52f0:	5f 4f       	sbci	r21, 0xFF	; 255

000052f2 <__divmodsi4_exit>:
    52f2:	08 95       	ret

000052f4 <__divmodsi4_neg1>:
    52f4:	f6 f7       	brtc	.-4      	; 0x52f2 <__divmodsi4_exit>
    52f6:	90 95       	com	r25
    52f8:	80 95       	com	r24
    52fa:	70 95       	com	r23
    52fc:	61 95       	neg	r22
    52fe:	7f 4f       	sbci	r23, 0xFF	; 255
    5300:	8f 4f       	sbci	r24, 0xFF	; 255
    5302:	9f 4f       	sbci	r25, 0xFF	; 255
    5304:	08 95       	ret

00005306 <__udivmodsi4>:
    5306:	a1 e2       	ldi	r26, 0x21	; 33
    5308:	1a 2e       	mov	r1, r26
    530a:	aa 1b       	sub	r26, r26
    530c:	bb 1b       	sub	r27, r27
    530e:	fd 01       	movw	r30, r26
    5310:	0d c0       	rjmp	.+26     	; 0x532c <__udivmodsi4_ep>

00005312 <__udivmodsi4_loop>:
    5312:	aa 1f       	adc	r26, r26
    5314:	bb 1f       	adc	r27, r27
    5316:	ee 1f       	adc	r30, r30
    5318:	ff 1f       	adc	r31, r31
    531a:	a2 17       	cp	r26, r18
    531c:	b3 07       	cpc	r27, r19
    531e:	e4 07       	cpc	r30, r20
    5320:	f5 07       	cpc	r31, r21
    5322:	20 f0       	brcs	.+8      	; 0x532c <__udivmodsi4_ep>
    5324:	a2 1b       	sub	r26, r18
    5326:	b3 0b       	sbc	r27, r19
    5328:	e4 0b       	sbc	r30, r20
    532a:	f5 0b       	sbc	r31, r21

0000532c <__udivmodsi4_ep>:
    532c:	66 1f       	adc	r22, r22
    532e:	77 1f       	adc	r23, r23
    5330:	88 1f       	adc	r24, r24
    5332:	99 1f       	adc	r25, r25
    5334:	1a 94       	dec	r1
    5336:	69 f7       	brne	.-38     	; 0x5312 <__udivmodsi4_loop>
    5338:	60 95       	com	r22
    533a:	70 95       	com	r23
    533c:	80 95       	com	r24
    533e:	90 95       	com	r25
    5340:	9b 01       	movw	r18, r22
    5342:	ac 01       	movw	r20, r24
    5344:	bd 01       	movw	r22, r26
    5346:	cf 01       	movw	r24, r30
    5348:	08 95       	ret

0000534a <__prologue_saves__>:
    534a:	2f 92       	push	r2
    534c:	3f 92       	push	r3
    534e:	4f 92       	push	r4
    5350:	5f 92       	push	r5
    5352:	6f 92       	push	r6
    5354:	7f 92       	push	r7
    5356:	8f 92       	push	r8
    5358:	9f 92       	push	r9
    535a:	af 92       	push	r10
    535c:	bf 92       	push	r11
    535e:	cf 92       	push	r12
    5360:	df 92       	push	r13
    5362:	ef 92       	push	r14
    5364:	ff 92       	push	r15
    5366:	0f 93       	push	r16
    5368:	1f 93       	push	r17
    536a:	cf 93       	push	r28
    536c:	df 93       	push	r29
    536e:	cd b7       	in	r28, 0x3d	; 61
    5370:	de b7       	in	r29, 0x3e	; 62
    5372:	ca 1b       	sub	r28, r26
    5374:	db 0b       	sbc	r29, r27
    5376:	0f b6       	in	r0, 0x3f	; 63
    5378:	f8 94       	cli
    537a:	de bf       	out	0x3e, r29	; 62
    537c:	0f be       	out	0x3f, r0	; 63
    537e:	cd bf       	out	0x3d, r28	; 61
    5380:	09 94       	ijmp

00005382 <__epilogue_restores__>:
    5382:	2a 88       	ldd	r2, Y+18	; 0x12
    5384:	39 88       	ldd	r3, Y+17	; 0x11
    5386:	48 88       	ldd	r4, Y+16	; 0x10
    5388:	5f 84       	ldd	r5, Y+15	; 0x0f
    538a:	6e 84       	ldd	r6, Y+14	; 0x0e
    538c:	7d 84       	ldd	r7, Y+13	; 0x0d
    538e:	8c 84       	ldd	r8, Y+12	; 0x0c
    5390:	9b 84       	ldd	r9, Y+11	; 0x0b
    5392:	aa 84       	ldd	r10, Y+10	; 0x0a
    5394:	b9 84       	ldd	r11, Y+9	; 0x09
    5396:	c8 84       	ldd	r12, Y+8	; 0x08
    5398:	df 80       	ldd	r13, Y+7	; 0x07
    539a:	ee 80       	ldd	r14, Y+6	; 0x06
    539c:	fd 80       	ldd	r15, Y+5	; 0x05
    539e:	0c 81       	ldd	r16, Y+4	; 0x04
    53a0:	1b 81       	ldd	r17, Y+3	; 0x03
    53a2:	aa 81       	ldd	r26, Y+2	; 0x02
    53a4:	b9 81       	ldd	r27, Y+1	; 0x01
    53a6:	ce 0f       	add	r28, r30
    53a8:	d1 1d       	adc	r29, r1
    53aa:	0f b6       	in	r0, 0x3f	; 63
    53ac:	f8 94       	cli
    53ae:	de bf       	out	0x3e, r29	; 62
    53b0:	0f be       	out	0x3f, r0	; 63
    53b2:	cd bf       	out	0x3d, r28	; 61
    53b4:	ed 01       	movw	r28, r26
    53b6:	08 95       	ret

000053b8 <strlen>:
    53b8:	fc 01       	movw	r30, r24
    53ba:	01 90       	ld	r0, Z+
    53bc:	00 20       	and	r0, r0
    53be:	e9 f7       	brne	.-6      	; 0x53ba <strlen+0x2>
    53c0:	80 95       	com	r24
    53c2:	90 95       	com	r25
    53c4:	8e 0f       	add	r24, r30
    53c6:	9f 1f       	adc	r25, r31
    53c8:	08 95       	ret

000053ca <_exit>:
    53ca:	f8 94       	cli

000053cc <__stop_program>:
    53cc:	ff cf       	rjmp	.-2      	; 0x53cc <__stop_program>
