
FOOTBALL_TASK.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000079d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001b8  00800060  000079d8  00007a6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800218  00800218  00007c24  2**0
                  ALLOC
  3 .stab         00003f00  00000000  00000000  00007c24  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001678  00000000  00000000  0000bb24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  0000d19c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f0  00000000  00000000  0000d33c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002ce6  00000000  00000000  0000d52c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001354  00000000  00000000  00010212  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001308  00000000  00000000  00011566  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00012870  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000340  00000000  00000000  00012a30  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000021ec  00000000  00000000  00012d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00014f5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ed       	ldi	r30, 0xD8	; 216
      68:	f9 e7       	ldi	r31, 0x79	; 121
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 31       	cpi	r26, 0x18	; 24
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a8 e1       	ldi	r26, 0x18	; 24
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 32       	cpi	r26, 0x20	; 32
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 84 20 	call	0x4108	; 0x4108 <main>
      8a:	0c 94 ea 3c 	jmp	0x79d4	; 0x79d4 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 ad 10 	call	0x215a	; 0x215a <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <__subsf3>
     1bc:	0e 94 0d 11 	call	0x221a	; 0x221a <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 0d 11 	call	0x221a	; 0x221a <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__udivdi3>:
     1e8:	ae e5       	ldi	r26, 0x5E	; 94
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 aa 3c 	jmp	0x7954	; 0x7954 <__prologue_saves__>
     1f4:	a8 e0       	ldi	r26, 0x08	; 8
     1f6:	4e 01       	movw	r8, r28
     1f8:	08 94       	sec
     1fa:	81 1c       	adc	r8, r1
     1fc:	91 1c       	adc	r9, r1
     1fe:	f4 01       	movw	r30, r8
     200:	6a 2e       	mov	r6, r26
     202:	11 92       	st	Z+, r1
     204:	6a 94       	dec	r6
     206:	e9 f7       	brne	.-6      	; 0x202 <__udivdi3+0x1a>
     208:	29 83       	std	Y+1, r18	; 0x01
     20a:	3a 83       	std	Y+2, r19	; 0x02
     20c:	4b 83       	std	Y+3, r20	; 0x03
     20e:	5c 83       	std	Y+4, r21	; 0x04
     210:	6d 83       	std	Y+5, r22	; 0x05
     212:	7e 83       	std	Y+6, r23	; 0x06
     214:	8f 83       	std	Y+7, r24	; 0x07
     216:	98 87       	std	Y+8, r25	; 0x08
     218:	ce 01       	movw	r24, r28
     21a:	09 96       	adiw	r24, 0x09	; 9
     21c:	fc 01       	movw	r30, r24
     21e:	11 92       	st	Z+, r1
     220:	aa 95       	dec	r26
     222:	e9 f7       	brne	.-6      	; 0x21e <__udivdi3+0x36>
     224:	a9 86       	std	Y+9, r10	; 0x09
     226:	ba 86       	std	Y+10, r11	; 0x0a
     228:	cb 86       	std	Y+11, r12	; 0x0b
     22a:	dc 86       	std	Y+12, r13	; 0x0c
     22c:	ed 86       	std	Y+13, r14	; 0x0d
     22e:	fe 86       	std	Y+14, r15	; 0x0e
     230:	0f 87       	std	Y+15, r16	; 0x0f
     232:	18 8b       	std	Y+16, r17	; 0x10
     234:	29 84       	ldd	r2, Y+9	; 0x09
     236:	3a 84       	ldd	r3, Y+10	; 0x0a
     238:	4b 84       	ldd	r4, Y+11	; 0x0b
     23a:	5c 84       	ldd	r5, Y+12	; 0x0c
     23c:	ed 84       	ldd	r14, Y+13	; 0x0d
     23e:	fe 84       	ldd	r15, Y+14	; 0x0e
     240:	0f 85       	ldd	r16, Y+15	; 0x0f
     242:	18 89       	ldd	r17, Y+16	; 0x10
     244:	69 80       	ldd	r6, Y+1	; 0x01
     246:	7a 80       	ldd	r7, Y+2	; 0x02
     248:	8b 80       	ldd	r8, Y+3	; 0x03
     24a:	9c 80       	ldd	r9, Y+4	; 0x04
     24c:	6d a6       	std	Y+45, r6	; 0x2d
     24e:	7e a6       	std	Y+46, r7	; 0x2e
     250:	8f a6       	std	Y+47, r8	; 0x2f
     252:	98 aa       	std	Y+48, r9	; 0x30
     254:	6d 80       	ldd	r6, Y+5	; 0x05
     256:	7e 80       	ldd	r7, Y+6	; 0x06
     258:	8f 80       	ldd	r8, Y+7	; 0x07
     25a:	98 84       	ldd	r9, Y+8	; 0x08
     25c:	e1 14       	cp	r14, r1
     25e:	f1 04       	cpc	r15, r1
     260:	01 05       	cpc	r16, r1
     262:	11 05       	cpc	r17, r1
     264:	09 f0       	breq	.+2      	; 0x268 <__udivdi3+0x80>
     266:	b3 c3       	rjmp	.+1894   	; 0x9ce <__stack+0x16f>
     268:	62 14       	cp	r6, r2
     26a:	73 04       	cpc	r7, r3
     26c:	84 04       	cpc	r8, r4
     26e:	95 04       	cpc	r9, r5
     270:	08 f0       	brcs	.+2      	; 0x274 <__udivdi3+0x8c>
     272:	3d c1       	rjmp	.+634    	; 0x4ee <__udivdi3+0x306>
     274:	00 e0       	ldi	r16, 0x00	; 0
     276:	20 16       	cp	r2, r16
     278:	00 e0       	ldi	r16, 0x00	; 0
     27a:	30 06       	cpc	r3, r16
     27c:	01 e0       	ldi	r16, 0x01	; 1
     27e:	40 06       	cpc	r4, r16
     280:	00 e0       	ldi	r16, 0x00	; 0
     282:	50 06       	cpc	r5, r16
     284:	88 f4       	brcc	.+34     	; 0x2a8 <__udivdi3+0xc0>
     286:	1f ef       	ldi	r17, 0xFF	; 255
     288:	21 16       	cp	r2, r17
     28a:	31 04       	cpc	r3, r1
     28c:	41 04       	cpc	r4, r1
     28e:	51 04       	cpc	r5, r1
     290:	39 f0       	breq	.+14     	; 0x2a0 <__udivdi3+0xb8>
     292:	30 f0       	brcs	.+12     	; 0x2a0 <__udivdi3+0xb8>
     294:	48 e0       	ldi	r20, 0x08	; 8
     296:	e4 2e       	mov	r14, r20
     298:	f1 2c       	mov	r15, r1
     29a:	01 2d       	mov	r16, r1
     29c:	11 2d       	mov	r17, r1
     29e:	18 c0       	rjmp	.+48     	; 0x2d0 <__udivdi3+0xe8>
     2a0:	ee 24       	eor	r14, r14
     2a2:	ff 24       	eor	r15, r15
     2a4:	87 01       	movw	r16, r14
     2a6:	14 c0       	rjmp	.+40     	; 0x2d0 <__udivdi3+0xe8>
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	22 16       	cp	r2, r18
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	32 06       	cpc	r3, r18
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	42 06       	cpc	r4, r18
     2b4:	21 e0       	ldi	r18, 0x01	; 1
     2b6:	52 06       	cpc	r5, r18
     2b8:	30 f0       	brcs	.+12     	; 0x2c6 <__udivdi3+0xde>
     2ba:	38 e1       	ldi	r19, 0x18	; 24
     2bc:	e3 2e       	mov	r14, r19
     2be:	f1 2c       	mov	r15, r1
     2c0:	01 2d       	mov	r16, r1
     2c2:	11 2d       	mov	r17, r1
     2c4:	05 c0       	rjmp	.+10     	; 0x2d0 <__udivdi3+0xe8>
     2c6:	20 e1       	ldi	r18, 0x10	; 16
     2c8:	e2 2e       	mov	r14, r18
     2ca:	f1 2c       	mov	r15, r1
     2cc:	01 2d       	mov	r16, r1
     2ce:	11 2d       	mov	r17, r1
     2d0:	d2 01       	movw	r26, r4
     2d2:	c1 01       	movw	r24, r2
     2d4:	0e 2c       	mov	r0, r14
     2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <__udivdi3+0xf8>
     2d8:	b6 95       	lsr	r27
     2da:	a7 95       	ror	r26
     2dc:	97 95       	ror	r25
     2de:	87 95       	ror	r24
     2e0:	0a 94       	dec	r0
     2e2:	d2 f7       	brpl	.-12     	; 0x2d8 <__udivdi3+0xf0>
     2e4:	8a 58       	subi	r24, 0x8A	; 138
     2e6:	9f 4f       	sbci	r25, 0xFF	; 255
     2e8:	dc 01       	movw	r26, r24
     2ea:	2c 91       	ld	r18, X
     2ec:	80 e2       	ldi	r24, 0x20	; 32
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	a0 e0       	ldi	r26, 0x00	; 0
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	8e 19       	sub	r24, r14
     2f6:	9f 09       	sbc	r25, r15
     2f8:	a0 0b       	sbc	r26, r16
     2fa:	b1 0b       	sbc	r27, r17
     2fc:	7c 01       	movw	r14, r24
     2fe:	8d 01       	movw	r16, r26
     300:	e2 1a       	sub	r14, r18
     302:	f1 08       	sbc	r15, r1
     304:	01 09       	sbc	r16, r1
     306:	11 09       	sbc	r17, r1
     308:	e1 14       	cp	r14, r1
     30a:	f1 04       	cpc	r15, r1
     30c:	01 05       	cpc	r16, r1
     30e:	11 05       	cpc	r17, r1
     310:	a1 f1       	breq	.+104    	; 0x37a <__udivdi3+0x192>
     312:	0e 2c       	mov	r0, r14
     314:	04 c0       	rjmp	.+8      	; 0x31e <__udivdi3+0x136>
     316:	22 0c       	add	r2, r2
     318:	33 1c       	adc	r3, r3
     31a:	44 1c       	adc	r4, r4
     31c:	55 1c       	adc	r5, r5
     31e:	0a 94       	dec	r0
     320:	d2 f7       	brpl	.-12     	; 0x316 <__udivdi3+0x12e>
     322:	a4 01       	movw	r20, r8
     324:	93 01       	movw	r18, r6
     326:	0e 2c       	mov	r0, r14
     328:	04 c0       	rjmp	.+8      	; 0x332 <__udivdi3+0x14a>
     32a:	22 0f       	add	r18, r18
     32c:	33 1f       	adc	r19, r19
     32e:	44 1f       	adc	r20, r20
     330:	55 1f       	adc	r21, r21
     332:	0a 94       	dec	r0
     334:	d2 f7       	brpl	.-12     	; 0x32a <__udivdi3+0x142>
     336:	80 e2       	ldi	r24, 0x20	; 32
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	8e 19       	sub	r24, r14
     33c:	9f 09       	sbc	r25, r15
     33e:	6d a4       	ldd	r6, Y+45	; 0x2d
     340:	7e a4       	ldd	r7, Y+46	; 0x2e
     342:	8f a4       	ldd	r8, Y+47	; 0x2f
     344:	98 a8       	ldd	r9, Y+48	; 0x30
     346:	04 c0       	rjmp	.+8      	; 0x350 <__udivdi3+0x168>
     348:	96 94       	lsr	r9
     34a:	87 94       	ror	r8
     34c:	77 94       	ror	r7
     34e:	67 94       	ror	r6
     350:	8a 95       	dec	r24
     352:	d2 f7       	brpl	.-12     	; 0x348 <__udivdi3+0x160>
     354:	62 2a       	or	r6, r18
     356:	73 2a       	or	r7, r19
     358:	84 2a       	or	r8, r20
     35a:	95 2a       	or	r9, r21
     35c:	ad a4       	ldd	r10, Y+45	; 0x2d
     35e:	be a4       	ldd	r11, Y+46	; 0x2e
     360:	cf a4       	ldd	r12, Y+47	; 0x2f
     362:	d8 a8       	ldd	r13, Y+48	; 0x30
     364:	04 c0       	rjmp	.+8      	; 0x36e <__udivdi3+0x186>
     366:	aa 0c       	add	r10, r10
     368:	bb 1c       	adc	r11, r11
     36a:	cc 1c       	adc	r12, r12
     36c:	dd 1c       	adc	r13, r13
     36e:	ea 94       	dec	r14
     370:	d2 f7       	brpl	.-12     	; 0x366 <__udivdi3+0x17e>
     372:	ad a6       	std	Y+45, r10	; 0x2d
     374:	be a6       	std	Y+46, r11	; 0x2e
     376:	cf a6       	std	Y+47, r12	; 0x2f
     378:	d8 aa       	std	Y+48, r13	; 0x30
     37a:	62 01       	movw	r12, r4
     37c:	ee 24       	eor	r14, r14
     37e:	ff 24       	eor	r15, r15
     380:	cd aa       	std	Y+53, r12	; 0x35
     382:	de aa       	std	Y+54, r13	; 0x36
     384:	ef aa       	std	Y+55, r14	; 0x37
     386:	f8 ae       	std	Y+56, r15	; 0x38
     388:	92 01       	movw	r18, r4
     38a:	81 01       	movw	r16, r2
     38c:	20 70       	andi	r18, 0x00	; 0
     38e:	30 70       	andi	r19, 0x00	; 0
     390:	09 af       	std	Y+57, r16	; 0x39
     392:	1a af       	std	Y+58, r17	; 0x3a
     394:	2b af       	std	Y+59, r18	; 0x3b
     396:	3c af       	std	Y+60, r19	; 0x3c
     398:	c4 01       	movw	r24, r8
     39a:	b3 01       	movw	r22, r6
     39c:	a7 01       	movw	r20, r14
     39e:	96 01       	movw	r18, r12
     3a0:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     3a4:	7b 01       	movw	r14, r22
     3a6:	8c 01       	movw	r16, r24
     3a8:	c4 01       	movw	r24, r8
     3aa:	b3 01       	movw	r22, r6
     3ac:	2d a9       	ldd	r18, Y+53	; 0x35
     3ae:	3e a9       	ldd	r19, Y+54	; 0x36
     3b0:	4f a9       	ldd	r20, Y+55	; 0x37
     3b2:	58 ad       	ldd	r21, Y+56	; 0x38
     3b4:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     3b8:	c9 01       	movw	r24, r18
     3ba:	da 01       	movw	r26, r20
     3bc:	3c 01       	movw	r6, r24
     3be:	4d 01       	movw	r8, r26
     3c0:	c4 01       	movw	r24, r8
     3c2:	b3 01       	movw	r22, r6
     3c4:	29 ad       	ldd	r18, Y+57	; 0x39
     3c6:	3a ad       	ldd	r19, Y+58	; 0x3a
     3c8:	4b ad       	ldd	r20, Y+59	; 0x3b
     3ca:	5c ad       	ldd	r21, Y+60	; 0x3c
     3cc:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     3d0:	9b 01       	movw	r18, r22
     3d2:	ac 01       	movw	r20, r24
     3d4:	87 01       	movw	r16, r14
     3d6:	ff 24       	eor	r15, r15
     3d8:	ee 24       	eor	r14, r14
     3da:	ad a4       	ldd	r10, Y+45	; 0x2d
     3dc:	be a4       	ldd	r11, Y+46	; 0x2e
     3de:	cf a4       	ldd	r12, Y+47	; 0x2f
     3e0:	d8 a8       	ldd	r13, Y+48	; 0x30
     3e2:	c6 01       	movw	r24, r12
     3e4:	aa 27       	eor	r26, r26
     3e6:	bb 27       	eor	r27, r27
     3e8:	57 01       	movw	r10, r14
     3ea:	68 01       	movw	r12, r16
     3ec:	a8 2a       	or	r10, r24
     3ee:	b9 2a       	or	r11, r25
     3f0:	ca 2a       	or	r12, r26
     3f2:	db 2a       	or	r13, r27
     3f4:	a2 16       	cp	r10, r18
     3f6:	b3 06       	cpc	r11, r19
     3f8:	c4 06       	cpc	r12, r20
     3fa:	d5 06       	cpc	r13, r21
     3fc:	e0 f4       	brcc	.+56     	; 0x436 <__udivdi3+0x24e>
     3fe:	08 94       	sec
     400:	61 08       	sbc	r6, r1
     402:	71 08       	sbc	r7, r1
     404:	81 08       	sbc	r8, r1
     406:	91 08       	sbc	r9, r1
     408:	a2 0c       	add	r10, r2
     40a:	b3 1c       	adc	r11, r3
     40c:	c4 1c       	adc	r12, r4
     40e:	d5 1c       	adc	r13, r5
     410:	a2 14       	cp	r10, r2
     412:	b3 04       	cpc	r11, r3
     414:	c4 04       	cpc	r12, r4
     416:	d5 04       	cpc	r13, r5
     418:	70 f0       	brcs	.+28     	; 0x436 <__udivdi3+0x24e>
     41a:	a2 16       	cp	r10, r18
     41c:	b3 06       	cpc	r11, r19
     41e:	c4 06       	cpc	r12, r20
     420:	d5 06       	cpc	r13, r21
     422:	48 f4       	brcc	.+18     	; 0x436 <__udivdi3+0x24e>
     424:	08 94       	sec
     426:	61 08       	sbc	r6, r1
     428:	71 08       	sbc	r7, r1
     42a:	81 08       	sbc	r8, r1
     42c:	91 08       	sbc	r9, r1
     42e:	a2 0c       	add	r10, r2
     430:	b3 1c       	adc	r11, r3
     432:	c4 1c       	adc	r12, r4
     434:	d5 1c       	adc	r13, r5
     436:	a2 1a       	sub	r10, r18
     438:	b3 0a       	sbc	r11, r19
     43a:	c4 0a       	sbc	r12, r20
     43c:	d5 0a       	sbc	r13, r21
     43e:	c6 01       	movw	r24, r12
     440:	b5 01       	movw	r22, r10
     442:	2d a9       	ldd	r18, Y+53	; 0x35
     444:	3e a9       	ldd	r19, Y+54	; 0x36
     446:	4f a9       	ldd	r20, Y+55	; 0x37
     448:	58 ad       	ldd	r21, Y+56	; 0x38
     44a:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     44e:	7b 01       	movw	r14, r22
     450:	8c 01       	movw	r16, r24
     452:	c6 01       	movw	r24, r12
     454:	b5 01       	movw	r22, r10
     456:	2d a9       	ldd	r18, Y+53	; 0x35
     458:	3e a9       	ldd	r19, Y+54	; 0x36
     45a:	4f a9       	ldd	r20, Y+55	; 0x37
     45c:	58 ad       	ldd	r21, Y+56	; 0x38
     45e:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     462:	c9 01       	movw	r24, r18
     464:	da 01       	movw	r26, r20
     466:	5c 01       	movw	r10, r24
     468:	6d 01       	movw	r12, r26
     46a:	c6 01       	movw	r24, r12
     46c:	b5 01       	movw	r22, r10
     46e:	29 ad       	ldd	r18, Y+57	; 0x39
     470:	3a ad       	ldd	r19, Y+58	; 0x3a
     472:	4b ad       	ldd	r20, Y+59	; 0x3b
     474:	5c ad       	ldd	r21, Y+60	; 0x3c
     476:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     47a:	9b 01       	movw	r18, r22
     47c:	ac 01       	movw	r20, r24
     47e:	87 01       	movw	r16, r14
     480:	ff 24       	eor	r15, r15
     482:	ee 24       	eor	r14, r14
     484:	8d a5       	ldd	r24, Y+45	; 0x2d
     486:	9e a5       	ldd	r25, Y+46	; 0x2e
     488:	af a5       	ldd	r26, Y+47	; 0x2f
     48a:	b8 a9       	ldd	r27, Y+48	; 0x30
     48c:	a0 70       	andi	r26, 0x00	; 0
     48e:	b0 70       	andi	r27, 0x00	; 0
     490:	e8 2a       	or	r14, r24
     492:	f9 2a       	or	r15, r25
     494:	0a 2b       	or	r16, r26
     496:	1b 2b       	or	r17, r27
     498:	e2 16       	cp	r14, r18
     49a:	f3 06       	cpc	r15, r19
     49c:	04 07       	cpc	r16, r20
     49e:	15 07       	cpc	r17, r21
     4a0:	c0 f4       	brcc	.+48     	; 0x4d2 <__udivdi3+0x2ea>
     4a2:	08 94       	sec
     4a4:	a1 08       	sbc	r10, r1
     4a6:	b1 08       	sbc	r11, r1
     4a8:	c1 08       	sbc	r12, r1
     4aa:	d1 08       	sbc	r13, r1
     4ac:	e2 0c       	add	r14, r2
     4ae:	f3 1c       	adc	r15, r3
     4b0:	04 1d       	adc	r16, r4
     4b2:	15 1d       	adc	r17, r5
     4b4:	e2 14       	cp	r14, r2
     4b6:	f3 04       	cpc	r15, r3
     4b8:	04 05       	cpc	r16, r4
     4ba:	15 05       	cpc	r17, r5
     4bc:	50 f0       	brcs	.+20     	; 0x4d2 <__udivdi3+0x2ea>
     4be:	e2 16       	cp	r14, r18
     4c0:	f3 06       	cpc	r15, r19
     4c2:	04 07       	cpc	r16, r20
     4c4:	15 07       	cpc	r17, r21
     4c6:	28 f4       	brcc	.+10     	; 0x4d2 <__udivdi3+0x2ea>
     4c8:	08 94       	sec
     4ca:	a1 08       	sbc	r10, r1
     4cc:	b1 08       	sbc	r11, r1
     4ce:	c1 08       	sbc	r12, r1
     4d0:	d1 08       	sbc	r13, r1
     4d2:	d3 01       	movw	r26, r6
     4d4:	99 27       	eor	r25, r25
     4d6:	88 27       	eor	r24, r24
     4d8:	86 01       	movw	r16, r12
     4da:	75 01       	movw	r14, r10
     4dc:	e8 2a       	or	r14, r24
     4de:	f9 2a       	or	r15, r25
     4e0:	0a 2b       	or	r16, r26
     4e2:	1b 2b       	or	r17, r27
     4e4:	e9 aa       	std	Y+49, r14	; 0x31
     4e6:	fa aa       	std	Y+50, r15	; 0x32
     4e8:	0b ab       	std	Y+51, r16	; 0x33
     4ea:	1c ab       	std	Y+52, r17	; 0x34
     4ec:	cf c4       	rjmp	.+2462   	; 0xe8c <__stack+0x62d>
     4ee:	21 14       	cp	r2, r1
     4f0:	31 04       	cpc	r3, r1
     4f2:	41 04       	cpc	r4, r1
     4f4:	51 04       	cpc	r5, r1
     4f6:	71 f4       	brne	.+28     	; 0x514 <__udivdi3+0x32c>
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 e0       	ldi	r20, 0x00	; 0
     506:	50 e0       	ldi	r21, 0x00	; 0
     508:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     50c:	c9 01       	movw	r24, r18
     50e:	da 01       	movw	r26, r20
     510:	1c 01       	movw	r2, r24
     512:	2d 01       	movw	r4, r26
     514:	00 e0       	ldi	r16, 0x00	; 0
     516:	20 16       	cp	r2, r16
     518:	00 e0       	ldi	r16, 0x00	; 0
     51a:	30 06       	cpc	r3, r16
     51c:	01 e0       	ldi	r16, 0x01	; 1
     51e:	40 06       	cpc	r4, r16
     520:	00 e0       	ldi	r16, 0x00	; 0
     522:	50 06       	cpc	r5, r16
     524:	88 f4       	brcc	.+34     	; 0x548 <__udivdi3+0x360>
     526:	1f ef       	ldi	r17, 0xFF	; 255
     528:	21 16       	cp	r2, r17
     52a:	31 04       	cpc	r3, r1
     52c:	41 04       	cpc	r4, r1
     52e:	51 04       	cpc	r5, r1
     530:	31 f0       	breq	.+12     	; 0x53e <__udivdi3+0x356>
     532:	28 f0       	brcs	.+10     	; 0x53e <__udivdi3+0x356>
     534:	48 e0       	ldi	r20, 0x08	; 8
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	17 c0       	rjmp	.+46     	; 0x56c <__udivdi3+0x384>
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	50 e0       	ldi	r21, 0x00	; 0
     542:	60 e0       	ldi	r22, 0x00	; 0
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	12 c0       	rjmp	.+36     	; 0x56c <__udivdi3+0x384>
     548:	20 e0       	ldi	r18, 0x00	; 0
     54a:	22 16       	cp	r2, r18
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	32 06       	cpc	r3, r18
     550:	20 e0       	ldi	r18, 0x00	; 0
     552:	42 06       	cpc	r4, r18
     554:	21 e0       	ldi	r18, 0x01	; 1
     556:	52 06       	cpc	r5, r18
     558:	28 f0       	brcs	.+10     	; 0x564 <__udivdi3+0x37c>
     55a:	48 e1       	ldi	r20, 0x18	; 24
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	04 c0       	rjmp	.+8      	; 0x56c <__udivdi3+0x384>
     564:	40 e1       	ldi	r20, 0x10	; 16
     566:	50 e0       	ldi	r21, 0x00	; 0
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	d2 01       	movw	r26, r4
     56e:	c1 01       	movw	r24, r2
     570:	04 2e       	mov	r0, r20
     572:	04 c0       	rjmp	.+8      	; 0x57c <__udivdi3+0x394>
     574:	b6 95       	lsr	r27
     576:	a7 95       	ror	r26
     578:	97 95       	ror	r25
     57a:	87 95       	ror	r24
     57c:	0a 94       	dec	r0
     57e:	d2 f7       	brpl	.-12     	; 0x574 <__udivdi3+0x38c>
     580:	8a 58       	subi	r24, 0x8A	; 138
     582:	9f 4f       	sbci	r25, 0xFF	; 255
     584:	dc 01       	movw	r26, r24
     586:	2c 91       	ld	r18, X
     588:	e0 e2       	ldi	r30, 0x20	; 32
     58a:	ee 2e       	mov	r14, r30
     58c:	f1 2c       	mov	r15, r1
     58e:	01 2d       	mov	r16, r1
     590:	11 2d       	mov	r17, r1
     592:	d8 01       	movw	r26, r16
     594:	c7 01       	movw	r24, r14
     596:	84 1b       	sub	r24, r20
     598:	95 0b       	sbc	r25, r21
     59a:	a6 0b       	sbc	r26, r22
     59c:	b7 0b       	sbc	r27, r23
     59e:	82 1b       	sub	r24, r18
     5a0:	91 09       	sbc	r25, r1
     5a2:	a1 09       	sbc	r26, r1
     5a4:	b1 09       	sbc	r27, r1
     5a6:	00 97       	sbiw	r24, 0x00	; 0
     5a8:	a1 05       	cpc	r26, r1
     5aa:	b1 05       	cpc	r27, r1
     5ac:	61 f4       	brne	.+24     	; 0x5c6 <__udivdi3+0x3de>
     5ae:	64 01       	movw	r12, r8
     5b0:	53 01       	movw	r10, r6
     5b2:	a2 18       	sub	r10, r2
     5b4:	b3 08       	sbc	r11, r3
     5b6:	c4 08       	sbc	r12, r4
     5b8:	d5 08       	sbc	r13, r5
     5ba:	31 e0       	ldi	r19, 0x01	; 1
     5bc:	63 2e       	mov	r6, r19
     5be:	71 2c       	mov	r7, r1
     5c0:	81 2c       	mov	r8, r1
     5c2:	91 2c       	mov	r9, r1
     5c4:	1e c1       	rjmp	.+572    	; 0x802 <__udivdi3+0x61a>
     5c6:	6f 96       	adiw	r28, 0x1f	; 31
     5c8:	8f af       	std	Y+63, r24	; 0x3f
     5ca:	6f 97       	sbiw	r28, 0x1f	; 31
     5cc:	08 2e       	mov	r0, r24
     5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <__udivdi3+0x3f0>
     5d0:	22 0c       	add	r2, r2
     5d2:	33 1c       	adc	r3, r3
     5d4:	44 1c       	adc	r4, r4
     5d6:	55 1c       	adc	r5, r5
     5d8:	0a 94       	dec	r0
     5da:	d2 f7       	brpl	.-12     	; 0x5d0 <__udivdi3+0x3e8>
     5dc:	ee 2d       	mov	r30, r14
     5de:	e8 1b       	sub	r30, r24
     5e0:	64 01       	movw	r12, r8
     5e2:	53 01       	movw	r10, r6
     5e4:	0e 2e       	mov	r0, r30
     5e6:	04 c0       	rjmp	.+8      	; 0x5f0 <__udivdi3+0x408>
     5e8:	d6 94       	lsr	r13
     5ea:	c7 94       	ror	r12
     5ec:	b7 94       	ror	r11
     5ee:	a7 94       	ror	r10
     5f0:	0a 94       	dec	r0
     5f2:	d2 f7       	brpl	.-12     	; 0x5e8 <__udivdi3+0x400>
     5f4:	a4 01       	movw	r20, r8
     5f6:	93 01       	movw	r18, r6
     5f8:	6f 96       	adiw	r28, 0x1f	; 31
     5fa:	0f ac       	ldd	r0, Y+63	; 0x3f
     5fc:	6f 97       	sbiw	r28, 0x1f	; 31
     5fe:	04 c0       	rjmp	.+8      	; 0x608 <__udivdi3+0x420>
     600:	22 0f       	add	r18, r18
     602:	33 1f       	adc	r19, r19
     604:	44 1f       	adc	r20, r20
     606:	55 1f       	adc	r21, r21
     608:	0a 94       	dec	r0
     60a:	d2 f7       	brpl	.-12     	; 0x600 <__udivdi3+0x418>
     60c:	6d a4       	ldd	r6, Y+45	; 0x2d
     60e:	7e a4       	ldd	r7, Y+46	; 0x2e
     610:	8f a4       	ldd	r8, Y+47	; 0x2f
     612:	98 a8       	ldd	r9, Y+48	; 0x30
     614:	0e 2e       	mov	r0, r30
     616:	04 c0       	rjmp	.+8      	; 0x620 <__udivdi3+0x438>
     618:	96 94       	lsr	r9
     61a:	87 94       	ror	r8
     61c:	77 94       	ror	r7
     61e:	67 94       	ror	r6
     620:	0a 94       	dec	r0
     622:	d2 f7       	brpl	.-12     	; 0x618 <__udivdi3+0x430>
     624:	84 01       	movw	r16, r8
     626:	73 01       	movw	r14, r6
     628:	e2 2a       	or	r14, r18
     62a:	f3 2a       	or	r15, r19
     62c:	04 2b       	or	r16, r20
     62e:	15 2b       	or	r17, r21
     630:	e9 a6       	std	Y+41, r14	; 0x29
     632:	fa a6       	std	Y+42, r15	; 0x2a
     634:	0b a7       	std	Y+43, r16	; 0x2b
     636:	1c a7       	std	Y+44, r17	; 0x2c
     638:	32 01       	movw	r6, r4
     63a:	88 24       	eor	r8, r8
     63c:	99 24       	eor	r9, r9
     63e:	92 01       	movw	r18, r4
     640:	81 01       	movw	r16, r2
     642:	20 70       	andi	r18, 0x00	; 0
     644:	30 70       	andi	r19, 0x00	; 0
     646:	21 96       	adiw	r28, 0x01	; 1
     648:	0c af       	std	Y+60, r16	; 0x3c
     64a:	1d af       	std	Y+61, r17	; 0x3d
     64c:	2e af       	std	Y+62, r18	; 0x3e
     64e:	3f af       	std	Y+63, r19	; 0x3f
     650:	21 97       	sbiw	r28, 0x01	; 1
     652:	c6 01       	movw	r24, r12
     654:	b5 01       	movw	r22, r10
     656:	a4 01       	movw	r20, r8
     658:	93 01       	movw	r18, r6
     65a:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     65e:	7b 01       	movw	r14, r22
     660:	8c 01       	movw	r16, r24
     662:	c6 01       	movw	r24, r12
     664:	b5 01       	movw	r22, r10
     666:	a4 01       	movw	r20, r8
     668:	93 01       	movw	r18, r6
     66a:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     66e:	c9 01       	movw	r24, r18
     670:	da 01       	movw	r26, r20
     672:	25 96       	adiw	r28, 0x05	; 5
     674:	8c af       	std	Y+60, r24	; 0x3c
     676:	9d af       	std	Y+61, r25	; 0x3d
     678:	ae af       	std	Y+62, r26	; 0x3e
     67a:	bf af       	std	Y+63, r27	; 0x3f
     67c:	25 97       	sbiw	r28, 0x05	; 5
     67e:	bc 01       	movw	r22, r24
     680:	cd 01       	movw	r24, r26
     682:	21 96       	adiw	r28, 0x01	; 1
     684:	2c ad       	ldd	r18, Y+60	; 0x3c
     686:	3d ad       	ldd	r19, Y+61	; 0x3d
     688:	4e ad       	ldd	r20, Y+62	; 0x3e
     68a:	5f ad       	ldd	r21, Y+63	; 0x3f
     68c:	21 97       	sbiw	r28, 0x01	; 1
     68e:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     692:	9b 01       	movw	r18, r22
     694:	ac 01       	movw	r20, r24
     696:	87 01       	movw	r16, r14
     698:	ff 24       	eor	r15, r15
     69a:	ee 24       	eor	r14, r14
     69c:	a9 a4       	ldd	r10, Y+41	; 0x29
     69e:	ba a4       	ldd	r11, Y+42	; 0x2a
     6a0:	cb a4       	ldd	r12, Y+43	; 0x2b
     6a2:	dc a4       	ldd	r13, Y+44	; 0x2c
     6a4:	c6 01       	movw	r24, r12
     6a6:	aa 27       	eor	r26, r26
     6a8:	bb 27       	eor	r27, r27
     6aa:	5c 01       	movw	r10, r24
     6ac:	6d 01       	movw	r12, r26
     6ae:	ae 28       	or	r10, r14
     6b0:	bf 28       	or	r11, r15
     6b2:	c0 2a       	or	r12, r16
     6b4:	d1 2a       	or	r13, r17
     6b6:	a2 16       	cp	r10, r18
     6b8:	b3 06       	cpc	r11, r19
     6ba:	c4 06       	cpc	r12, r20
     6bc:	d5 06       	cpc	r13, r21
     6be:	60 f5       	brcc	.+88     	; 0x718 <__udivdi3+0x530>
     6c0:	25 96       	adiw	r28, 0x05	; 5
     6c2:	6c ad       	ldd	r22, Y+60	; 0x3c
     6c4:	7d ad       	ldd	r23, Y+61	; 0x3d
     6c6:	8e ad       	ldd	r24, Y+62	; 0x3e
     6c8:	9f ad       	ldd	r25, Y+63	; 0x3f
     6ca:	25 97       	sbiw	r28, 0x05	; 5
     6cc:	61 50       	subi	r22, 0x01	; 1
     6ce:	70 40       	sbci	r23, 0x00	; 0
     6d0:	80 40       	sbci	r24, 0x00	; 0
     6d2:	90 40       	sbci	r25, 0x00	; 0
     6d4:	25 96       	adiw	r28, 0x05	; 5
     6d6:	6c af       	std	Y+60, r22	; 0x3c
     6d8:	7d af       	std	Y+61, r23	; 0x3d
     6da:	8e af       	std	Y+62, r24	; 0x3e
     6dc:	9f af       	std	Y+63, r25	; 0x3f
     6de:	25 97       	sbiw	r28, 0x05	; 5
     6e0:	a2 0c       	add	r10, r2
     6e2:	b3 1c       	adc	r11, r3
     6e4:	c4 1c       	adc	r12, r4
     6e6:	d5 1c       	adc	r13, r5
     6e8:	a2 14       	cp	r10, r2
     6ea:	b3 04       	cpc	r11, r3
     6ec:	c4 04       	cpc	r12, r4
     6ee:	d5 04       	cpc	r13, r5
     6f0:	98 f0       	brcs	.+38     	; 0x718 <__udivdi3+0x530>
     6f2:	a2 16       	cp	r10, r18
     6f4:	b3 06       	cpc	r11, r19
     6f6:	c4 06       	cpc	r12, r20
     6f8:	d5 06       	cpc	r13, r21
     6fa:	70 f4       	brcc	.+28     	; 0x718 <__udivdi3+0x530>
     6fc:	61 50       	subi	r22, 0x01	; 1
     6fe:	70 40       	sbci	r23, 0x00	; 0
     700:	80 40       	sbci	r24, 0x00	; 0
     702:	90 40       	sbci	r25, 0x00	; 0
     704:	25 96       	adiw	r28, 0x05	; 5
     706:	6c af       	std	Y+60, r22	; 0x3c
     708:	7d af       	std	Y+61, r23	; 0x3d
     70a:	8e af       	std	Y+62, r24	; 0x3e
     70c:	9f af       	std	Y+63, r25	; 0x3f
     70e:	25 97       	sbiw	r28, 0x05	; 5
     710:	a2 0c       	add	r10, r2
     712:	b3 1c       	adc	r11, r3
     714:	c4 1c       	adc	r12, r4
     716:	d5 1c       	adc	r13, r5
     718:	a2 1a       	sub	r10, r18
     71a:	b3 0a       	sbc	r11, r19
     71c:	c4 0a       	sbc	r12, r20
     71e:	d5 0a       	sbc	r13, r21
     720:	c6 01       	movw	r24, r12
     722:	b5 01       	movw	r22, r10
     724:	a4 01       	movw	r20, r8
     726:	93 01       	movw	r18, r6
     728:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     72c:	7b 01       	movw	r14, r22
     72e:	8c 01       	movw	r16, r24
     730:	c6 01       	movw	r24, r12
     732:	b5 01       	movw	r22, r10
     734:	a4 01       	movw	r20, r8
     736:	93 01       	movw	r18, r6
     738:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     73c:	c9 01       	movw	r24, r18
     73e:	da 01       	movw	r26, r20
     740:	3c 01       	movw	r6, r24
     742:	4d 01       	movw	r8, r26
     744:	c4 01       	movw	r24, r8
     746:	b3 01       	movw	r22, r6
     748:	21 96       	adiw	r28, 0x01	; 1
     74a:	2c ad       	ldd	r18, Y+60	; 0x3c
     74c:	3d ad       	ldd	r19, Y+61	; 0x3d
     74e:	4e ad       	ldd	r20, Y+62	; 0x3e
     750:	5f ad       	ldd	r21, Y+63	; 0x3f
     752:	21 97       	sbiw	r28, 0x01	; 1
     754:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     758:	9b 01       	movw	r18, r22
     75a:	ac 01       	movw	r20, r24
     75c:	87 01       	movw	r16, r14
     75e:	ff 24       	eor	r15, r15
     760:	ee 24       	eor	r14, r14
     762:	89 a5       	ldd	r24, Y+41	; 0x29
     764:	9a a5       	ldd	r25, Y+42	; 0x2a
     766:	ab a5       	ldd	r26, Y+43	; 0x2b
     768:	bc a5       	ldd	r27, Y+44	; 0x2c
     76a:	a0 70       	andi	r26, 0x00	; 0
     76c:	b0 70       	andi	r27, 0x00	; 0
     76e:	57 01       	movw	r10, r14
     770:	68 01       	movw	r12, r16
     772:	a8 2a       	or	r10, r24
     774:	b9 2a       	or	r11, r25
     776:	ca 2a       	or	r12, r26
     778:	db 2a       	or	r13, r27
     77a:	a2 16       	cp	r10, r18
     77c:	b3 06       	cpc	r11, r19
     77e:	c4 06       	cpc	r12, r20
     780:	d5 06       	cpc	r13, r21
     782:	e0 f4       	brcc	.+56     	; 0x7bc <__udivdi3+0x5d4>
     784:	08 94       	sec
     786:	61 08       	sbc	r6, r1
     788:	71 08       	sbc	r7, r1
     78a:	81 08       	sbc	r8, r1
     78c:	91 08       	sbc	r9, r1
     78e:	a2 0c       	add	r10, r2
     790:	b3 1c       	adc	r11, r3
     792:	c4 1c       	adc	r12, r4
     794:	d5 1c       	adc	r13, r5
     796:	a2 14       	cp	r10, r2
     798:	b3 04       	cpc	r11, r3
     79a:	c4 04       	cpc	r12, r4
     79c:	d5 04       	cpc	r13, r5
     79e:	70 f0       	brcs	.+28     	; 0x7bc <__udivdi3+0x5d4>
     7a0:	a2 16       	cp	r10, r18
     7a2:	b3 06       	cpc	r11, r19
     7a4:	c4 06       	cpc	r12, r20
     7a6:	d5 06       	cpc	r13, r21
     7a8:	48 f4       	brcc	.+18     	; 0x7bc <__udivdi3+0x5d4>
     7aa:	08 94       	sec
     7ac:	61 08       	sbc	r6, r1
     7ae:	71 08       	sbc	r7, r1
     7b0:	81 08       	sbc	r8, r1
     7b2:	91 08       	sbc	r9, r1
     7b4:	a2 0c       	add	r10, r2
     7b6:	b3 1c       	adc	r11, r3
     7b8:	c4 1c       	adc	r12, r4
     7ba:	d5 1c       	adc	r13, r5
     7bc:	8d a5       	ldd	r24, Y+45	; 0x2d
     7be:	9e a5       	ldd	r25, Y+46	; 0x2e
     7c0:	af a5       	ldd	r26, Y+47	; 0x2f
     7c2:	b8 a9       	ldd	r27, Y+48	; 0x30
     7c4:	6f 96       	adiw	r28, 0x1f	; 31
     7c6:	0f ac       	ldd	r0, Y+63	; 0x3f
     7c8:	6f 97       	sbiw	r28, 0x1f	; 31
     7ca:	04 c0       	rjmp	.+8      	; 0x7d4 <__udivdi3+0x5ec>
     7cc:	88 0f       	add	r24, r24
     7ce:	99 1f       	adc	r25, r25
     7d0:	aa 1f       	adc	r26, r26
     7d2:	bb 1f       	adc	r27, r27
     7d4:	0a 94       	dec	r0
     7d6:	d2 f7       	brpl	.-12     	; 0x7cc <__udivdi3+0x5e4>
     7d8:	8d a7       	std	Y+45, r24	; 0x2d
     7da:	9e a7       	std	Y+46, r25	; 0x2e
     7dc:	af a7       	std	Y+47, r26	; 0x2f
     7de:	b8 ab       	std	Y+48, r27	; 0x30
     7e0:	a2 1a       	sub	r10, r18
     7e2:	b3 0a       	sbc	r11, r19
     7e4:	c4 0a       	sbc	r12, r20
     7e6:	d5 0a       	sbc	r13, r21
     7e8:	25 96       	adiw	r28, 0x05	; 5
     7ea:	ec ac       	ldd	r14, Y+60	; 0x3c
     7ec:	fd ac       	ldd	r15, Y+61	; 0x3d
     7ee:	0e ad       	ldd	r16, Y+62	; 0x3e
     7f0:	1f ad       	ldd	r17, Y+63	; 0x3f
     7f2:	25 97       	sbiw	r28, 0x05	; 5
     7f4:	d7 01       	movw	r26, r14
     7f6:	99 27       	eor	r25, r25
     7f8:	88 27       	eor	r24, r24
     7fa:	68 2a       	or	r6, r24
     7fc:	79 2a       	or	r7, r25
     7fe:	8a 2a       	or	r8, r26
     800:	9b 2a       	or	r9, r27
     802:	82 01       	movw	r16, r4
     804:	22 27       	eor	r18, r18
     806:	33 27       	eor	r19, r19
     808:	29 96       	adiw	r28, 0x09	; 9
     80a:	0c af       	std	Y+60, r16	; 0x3c
     80c:	1d af       	std	Y+61, r17	; 0x3d
     80e:	2e af       	std	Y+62, r18	; 0x3e
     810:	3f af       	std	Y+63, r19	; 0x3f
     812:	29 97       	sbiw	r28, 0x09	; 9
     814:	a2 01       	movw	r20, r4
     816:	91 01       	movw	r18, r2
     818:	40 70       	andi	r20, 0x00	; 0
     81a:	50 70       	andi	r21, 0x00	; 0
     81c:	2d 96       	adiw	r28, 0x0d	; 13
     81e:	2c af       	std	Y+60, r18	; 0x3c
     820:	3d af       	std	Y+61, r19	; 0x3d
     822:	4e af       	std	Y+62, r20	; 0x3e
     824:	5f af       	std	Y+63, r21	; 0x3f
     826:	2d 97       	sbiw	r28, 0x0d	; 13
     828:	c6 01       	movw	r24, r12
     82a:	b5 01       	movw	r22, r10
     82c:	29 96       	adiw	r28, 0x09	; 9
     82e:	2c ad       	ldd	r18, Y+60	; 0x3c
     830:	3d ad       	ldd	r19, Y+61	; 0x3d
     832:	4e ad       	ldd	r20, Y+62	; 0x3e
     834:	5f ad       	ldd	r21, Y+63	; 0x3f
     836:	29 97       	sbiw	r28, 0x09	; 9
     838:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     83c:	7b 01       	movw	r14, r22
     83e:	8c 01       	movw	r16, r24
     840:	c6 01       	movw	r24, r12
     842:	b5 01       	movw	r22, r10
     844:	29 96       	adiw	r28, 0x09	; 9
     846:	2c ad       	ldd	r18, Y+60	; 0x3c
     848:	3d ad       	ldd	r19, Y+61	; 0x3d
     84a:	4e ad       	ldd	r20, Y+62	; 0x3e
     84c:	5f ad       	ldd	r21, Y+63	; 0x3f
     84e:	29 97       	sbiw	r28, 0x09	; 9
     850:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     854:	c9 01       	movw	r24, r18
     856:	da 01       	movw	r26, r20
     858:	61 96       	adiw	r28, 0x11	; 17
     85a:	8c af       	std	Y+60, r24	; 0x3c
     85c:	9d af       	std	Y+61, r25	; 0x3d
     85e:	ae af       	std	Y+62, r26	; 0x3e
     860:	bf af       	std	Y+63, r27	; 0x3f
     862:	61 97       	sbiw	r28, 0x11	; 17
     864:	bc 01       	movw	r22, r24
     866:	cd 01       	movw	r24, r26
     868:	2d 96       	adiw	r28, 0x0d	; 13
     86a:	2c ad       	ldd	r18, Y+60	; 0x3c
     86c:	3d ad       	ldd	r19, Y+61	; 0x3d
     86e:	4e ad       	ldd	r20, Y+62	; 0x3e
     870:	5f ad       	ldd	r21, Y+63	; 0x3f
     872:	2d 97       	sbiw	r28, 0x0d	; 13
     874:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     878:	9b 01       	movw	r18, r22
     87a:	ac 01       	movw	r20, r24
     87c:	87 01       	movw	r16, r14
     87e:	ff 24       	eor	r15, r15
     880:	ee 24       	eor	r14, r14
     882:	ad a4       	ldd	r10, Y+45	; 0x2d
     884:	be a4       	ldd	r11, Y+46	; 0x2e
     886:	cf a4       	ldd	r12, Y+47	; 0x2f
     888:	d8 a8       	ldd	r13, Y+48	; 0x30
     88a:	c6 01       	movw	r24, r12
     88c:	aa 27       	eor	r26, r26
     88e:	bb 27       	eor	r27, r27
     890:	57 01       	movw	r10, r14
     892:	68 01       	movw	r12, r16
     894:	a8 2a       	or	r10, r24
     896:	b9 2a       	or	r11, r25
     898:	ca 2a       	or	r12, r26
     89a:	db 2a       	or	r13, r27
     89c:	a2 16       	cp	r10, r18
     89e:	b3 06       	cpc	r11, r19
     8a0:	c4 06       	cpc	r12, r20
     8a2:	d5 06       	cpc	r13, r21
     8a4:	60 f5       	brcc	.+88     	; 0x8fe <__stack+0x9f>
     8a6:	61 96       	adiw	r28, 0x11	; 17
     8a8:	6c ad       	ldd	r22, Y+60	; 0x3c
     8aa:	7d ad       	ldd	r23, Y+61	; 0x3d
     8ac:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ae:	9f ad       	ldd	r25, Y+63	; 0x3f
     8b0:	61 97       	sbiw	r28, 0x11	; 17
     8b2:	61 50       	subi	r22, 0x01	; 1
     8b4:	70 40       	sbci	r23, 0x00	; 0
     8b6:	80 40       	sbci	r24, 0x00	; 0
     8b8:	90 40       	sbci	r25, 0x00	; 0
     8ba:	61 96       	adiw	r28, 0x11	; 17
     8bc:	6c af       	std	Y+60, r22	; 0x3c
     8be:	7d af       	std	Y+61, r23	; 0x3d
     8c0:	8e af       	std	Y+62, r24	; 0x3e
     8c2:	9f af       	std	Y+63, r25	; 0x3f
     8c4:	61 97       	sbiw	r28, 0x11	; 17
     8c6:	a2 0c       	add	r10, r2
     8c8:	b3 1c       	adc	r11, r3
     8ca:	c4 1c       	adc	r12, r4
     8cc:	d5 1c       	adc	r13, r5
     8ce:	a2 14       	cp	r10, r2
     8d0:	b3 04       	cpc	r11, r3
     8d2:	c4 04       	cpc	r12, r4
     8d4:	d5 04       	cpc	r13, r5
     8d6:	98 f0       	brcs	.+38     	; 0x8fe <__stack+0x9f>
     8d8:	a2 16       	cp	r10, r18
     8da:	b3 06       	cpc	r11, r19
     8dc:	c4 06       	cpc	r12, r20
     8de:	d5 06       	cpc	r13, r21
     8e0:	70 f4       	brcc	.+28     	; 0x8fe <__stack+0x9f>
     8e2:	61 50       	subi	r22, 0x01	; 1
     8e4:	70 40       	sbci	r23, 0x00	; 0
     8e6:	80 40       	sbci	r24, 0x00	; 0
     8e8:	90 40       	sbci	r25, 0x00	; 0
     8ea:	61 96       	adiw	r28, 0x11	; 17
     8ec:	6c af       	std	Y+60, r22	; 0x3c
     8ee:	7d af       	std	Y+61, r23	; 0x3d
     8f0:	8e af       	std	Y+62, r24	; 0x3e
     8f2:	9f af       	std	Y+63, r25	; 0x3f
     8f4:	61 97       	sbiw	r28, 0x11	; 17
     8f6:	a2 0c       	add	r10, r2
     8f8:	b3 1c       	adc	r11, r3
     8fa:	c4 1c       	adc	r12, r4
     8fc:	d5 1c       	adc	r13, r5
     8fe:	a2 1a       	sub	r10, r18
     900:	b3 0a       	sbc	r11, r19
     902:	c4 0a       	sbc	r12, r20
     904:	d5 0a       	sbc	r13, r21
     906:	c6 01       	movw	r24, r12
     908:	b5 01       	movw	r22, r10
     90a:	29 96       	adiw	r28, 0x09	; 9
     90c:	2c ad       	ldd	r18, Y+60	; 0x3c
     90e:	3d ad       	ldd	r19, Y+61	; 0x3d
     910:	4e ad       	ldd	r20, Y+62	; 0x3e
     912:	5f ad       	ldd	r21, Y+63	; 0x3f
     914:	29 97       	sbiw	r28, 0x09	; 9
     916:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     91a:	7b 01       	movw	r14, r22
     91c:	8c 01       	movw	r16, r24
     91e:	c6 01       	movw	r24, r12
     920:	b5 01       	movw	r22, r10
     922:	29 96       	adiw	r28, 0x09	; 9
     924:	2c ad       	ldd	r18, Y+60	; 0x3c
     926:	3d ad       	ldd	r19, Y+61	; 0x3d
     928:	4e ad       	ldd	r20, Y+62	; 0x3e
     92a:	5f ad       	ldd	r21, Y+63	; 0x3f
     92c:	29 97       	sbiw	r28, 0x09	; 9
     92e:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     932:	c9 01       	movw	r24, r18
     934:	da 01       	movw	r26, r20
     936:	5c 01       	movw	r10, r24
     938:	6d 01       	movw	r12, r26
     93a:	c6 01       	movw	r24, r12
     93c:	b5 01       	movw	r22, r10
     93e:	2d 96       	adiw	r28, 0x0d	; 13
     940:	2c ad       	ldd	r18, Y+60	; 0x3c
     942:	3d ad       	ldd	r19, Y+61	; 0x3d
     944:	4e ad       	ldd	r20, Y+62	; 0x3e
     946:	5f ad       	ldd	r21, Y+63	; 0x3f
     948:	2d 97       	sbiw	r28, 0x0d	; 13
     94a:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     94e:	9b 01       	movw	r18, r22
     950:	ac 01       	movw	r20, r24
     952:	87 01       	movw	r16, r14
     954:	ff 24       	eor	r15, r15
     956:	ee 24       	eor	r14, r14
     958:	8d a5       	ldd	r24, Y+45	; 0x2d
     95a:	9e a5       	ldd	r25, Y+46	; 0x2e
     95c:	af a5       	ldd	r26, Y+47	; 0x2f
     95e:	b8 a9       	ldd	r27, Y+48	; 0x30
     960:	a0 70       	andi	r26, 0x00	; 0
     962:	b0 70       	andi	r27, 0x00	; 0
     964:	e8 2a       	or	r14, r24
     966:	f9 2a       	or	r15, r25
     968:	0a 2b       	or	r16, r26
     96a:	1b 2b       	or	r17, r27
     96c:	e2 16       	cp	r14, r18
     96e:	f3 06       	cpc	r15, r19
     970:	04 07       	cpc	r16, r20
     972:	15 07       	cpc	r17, r21
     974:	c0 f4       	brcc	.+48     	; 0x9a6 <__stack+0x147>
     976:	08 94       	sec
     978:	a1 08       	sbc	r10, r1
     97a:	b1 08       	sbc	r11, r1
     97c:	c1 08       	sbc	r12, r1
     97e:	d1 08       	sbc	r13, r1
     980:	e2 0c       	add	r14, r2
     982:	f3 1c       	adc	r15, r3
     984:	04 1d       	adc	r16, r4
     986:	15 1d       	adc	r17, r5
     988:	e2 14       	cp	r14, r2
     98a:	f3 04       	cpc	r15, r3
     98c:	04 05       	cpc	r16, r4
     98e:	15 05       	cpc	r17, r5
     990:	50 f0       	brcs	.+20     	; 0x9a6 <__stack+0x147>
     992:	e2 16       	cp	r14, r18
     994:	f3 06       	cpc	r15, r19
     996:	04 07       	cpc	r16, r20
     998:	15 07       	cpc	r17, r21
     99a:	28 f4       	brcc	.+10     	; 0x9a6 <__stack+0x147>
     99c:	08 94       	sec
     99e:	a1 08       	sbc	r10, r1
     9a0:	b1 08       	sbc	r11, r1
     9a2:	c1 08       	sbc	r12, r1
     9a4:	d1 08       	sbc	r13, r1
     9a6:	61 96       	adiw	r28, 0x11	; 17
     9a8:	ec ac       	ldd	r14, Y+60	; 0x3c
     9aa:	fd ac       	ldd	r15, Y+61	; 0x3d
     9ac:	0e ad       	ldd	r16, Y+62	; 0x3e
     9ae:	1f ad       	ldd	r17, Y+63	; 0x3f
     9b0:	61 97       	sbiw	r28, 0x11	; 17
     9b2:	d7 01       	movw	r26, r14
     9b4:	99 27       	eor	r25, r25
     9b6:	88 27       	eor	r24, r24
     9b8:	96 01       	movw	r18, r12
     9ba:	85 01       	movw	r16, r10
     9bc:	08 2b       	or	r16, r24
     9be:	19 2b       	or	r17, r25
     9c0:	2a 2b       	or	r18, r26
     9c2:	3b 2b       	or	r19, r27
     9c4:	09 ab       	std	Y+49, r16	; 0x31
     9c6:	1a ab       	std	Y+50, r17	; 0x32
     9c8:	2b ab       	std	Y+51, r18	; 0x33
     9ca:	3c ab       	std	Y+52, r19	; 0x34
     9cc:	62 c2       	rjmp	.+1220   	; 0xe92 <__stack+0x633>
     9ce:	6e 14       	cp	r6, r14
     9d0:	7f 04       	cpc	r7, r15
     9d2:	80 06       	cpc	r8, r16
     9d4:	91 06       	cpc	r9, r17
     9d6:	08 f4       	brcc	.+2      	; 0x9da <__stack+0x17b>
     9d8:	51 c2       	rjmp	.+1186   	; 0xe7c <__stack+0x61d>
     9da:	20 e0       	ldi	r18, 0x00	; 0
     9dc:	e2 16       	cp	r14, r18
     9de:	20 e0       	ldi	r18, 0x00	; 0
     9e0:	f2 06       	cpc	r15, r18
     9e2:	21 e0       	ldi	r18, 0x01	; 1
     9e4:	02 07       	cpc	r16, r18
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	12 07       	cpc	r17, r18
     9ea:	88 f4       	brcc	.+34     	; 0xa0e <__stack+0x1af>
     9ec:	3f ef       	ldi	r19, 0xFF	; 255
     9ee:	e3 16       	cp	r14, r19
     9f0:	f1 04       	cpc	r15, r1
     9f2:	01 05       	cpc	r16, r1
     9f4:	11 05       	cpc	r17, r1
     9f6:	31 f0       	breq	.+12     	; 0xa04 <__stack+0x1a5>
     9f8:	28 f0       	brcs	.+10     	; 0xa04 <__stack+0x1a5>
     9fa:	48 e0       	ldi	r20, 0x08	; 8
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	17 c0       	rjmp	.+46     	; 0xa32 <__stack+0x1d3>
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	60 e0       	ldi	r22, 0x00	; 0
     a0a:	70 e0       	ldi	r23, 0x00	; 0
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__stack+0x1d3>
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	e4 16       	cp	r14, r20
     a12:	40 e0       	ldi	r20, 0x00	; 0
     a14:	f4 06       	cpc	r15, r20
     a16:	40 e0       	ldi	r20, 0x00	; 0
     a18:	04 07       	cpc	r16, r20
     a1a:	41 e0       	ldi	r20, 0x01	; 1
     a1c:	14 07       	cpc	r17, r20
     a1e:	28 f0       	brcs	.+10     	; 0xa2a <__stack+0x1cb>
     a20:	48 e1       	ldi	r20, 0x18	; 24
     a22:	50 e0       	ldi	r21, 0x00	; 0
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <__stack+0x1d3>
     a2a:	40 e1       	ldi	r20, 0x10	; 16
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	d8 01       	movw	r26, r16
     a34:	c7 01       	movw	r24, r14
     a36:	04 2e       	mov	r0, r20
     a38:	04 c0       	rjmp	.+8      	; 0xa42 <__stack+0x1e3>
     a3a:	b6 95       	lsr	r27
     a3c:	a7 95       	ror	r26
     a3e:	97 95       	ror	r25
     a40:	87 95       	ror	r24
     a42:	0a 94       	dec	r0
     a44:	d2 f7       	brpl	.-12     	; 0xa3a <__stack+0x1db>
     a46:	8a 58       	subi	r24, 0x8A	; 138
     a48:	9f 4f       	sbci	r25, 0xFF	; 255
     a4a:	dc 01       	movw	r26, r24
     a4c:	2c 91       	ld	r18, X
     a4e:	30 e2       	ldi	r19, 0x20	; 32
     a50:	a3 2e       	mov	r10, r19
     a52:	b1 2c       	mov	r11, r1
     a54:	c1 2c       	mov	r12, r1
     a56:	d1 2c       	mov	r13, r1
     a58:	d6 01       	movw	r26, r12
     a5a:	c5 01       	movw	r24, r10
     a5c:	84 1b       	sub	r24, r20
     a5e:	95 0b       	sbc	r25, r21
     a60:	a6 0b       	sbc	r26, r22
     a62:	b7 0b       	sbc	r27, r23
     a64:	82 1b       	sub	r24, r18
     a66:	91 09       	sbc	r25, r1
     a68:	a1 09       	sbc	r26, r1
     a6a:	b1 09       	sbc	r27, r1
     a6c:	00 97       	sbiw	r24, 0x00	; 0
     a6e:	a1 05       	cpc	r26, r1
     a70:	b1 05       	cpc	r27, r1
     a72:	89 f4       	brne	.+34     	; 0xa96 <__stack+0x237>
     a74:	e6 14       	cp	r14, r6
     a76:	f7 04       	cpc	r15, r7
     a78:	08 05       	cpc	r16, r8
     a7a:	19 05       	cpc	r17, r9
     a7c:	08 f4       	brcc	.+2      	; 0xa80 <__stack+0x221>
     a7e:	f2 c1       	rjmp	.+996    	; 0xe64 <__stack+0x605>
     a80:	6d a4       	ldd	r6, Y+45	; 0x2d
     a82:	7e a4       	ldd	r7, Y+46	; 0x2e
     a84:	8f a4       	ldd	r8, Y+47	; 0x2f
     a86:	98 a8       	ldd	r9, Y+48	; 0x30
     a88:	62 14       	cp	r6, r2
     a8a:	73 04       	cpc	r7, r3
     a8c:	84 04       	cpc	r8, r4
     a8e:	95 04       	cpc	r9, r5
     a90:	08 f0       	brcs	.+2      	; 0xa94 <__stack+0x235>
     a92:	e8 c1       	rjmp	.+976    	; 0xe64 <__stack+0x605>
     a94:	f3 c1       	rjmp	.+998    	; 0xe7c <__stack+0x61d>
     a96:	6e 96       	adiw	r28, 0x1e	; 30
     a98:	8f af       	std	Y+63, r24	; 0x3f
     a9a:	6e 97       	sbiw	r28, 0x1e	; 30
     a9c:	08 2e       	mov	r0, r24
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__stack+0x249>
     aa0:	ee 0c       	add	r14, r14
     aa2:	ff 1c       	adc	r15, r15
     aa4:	00 1f       	adc	r16, r16
     aa6:	11 1f       	adc	r17, r17
     aa8:	0a 94       	dec	r0
     aaa:	d2 f7       	brpl	.-12     	; 0xaa0 <__stack+0x241>
     aac:	6a 2d       	mov	r22, r10
     aae:	68 1b       	sub	r22, r24
     ab0:	d2 01       	movw	r26, r4
     ab2:	c1 01       	movw	r24, r2
     ab4:	06 2e       	mov	r0, r22
     ab6:	04 c0       	rjmp	.+8      	; 0xac0 <__stack+0x261>
     ab8:	b6 95       	lsr	r27
     aba:	a7 95       	ror	r26
     abc:	97 95       	ror	r25
     abe:	87 95       	ror	r24
     ac0:	0a 94       	dec	r0
     ac2:	d2 f7       	brpl	.-12     	; 0xab8 <__stack+0x259>
     ac4:	5c 01       	movw	r10, r24
     ac6:	6d 01       	movw	r12, r26
     ac8:	ae 28       	or	r10, r14
     aca:	bf 28       	or	r11, r15
     acc:	c0 2a       	or	r12, r16
     ace:	d1 2a       	or	r13, r17
     ad0:	ad a2       	std	Y+37, r10	; 0x25
     ad2:	be a2       	std	Y+38, r11	; 0x26
     ad4:	cf a2       	std	Y+39, r12	; 0x27
     ad6:	d8 a6       	std	Y+40, r13	; 0x28
     ad8:	72 01       	movw	r14, r4
     ada:	61 01       	movw	r12, r2
     adc:	6e 96       	adiw	r28, 0x1e	; 30
     ade:	0f ac       	ldd	r0, Y+63	; 0x3f
     ae0:	6e 97       	sbiw	r28, 0x1e	; 30
     ae2:	04 c0       	rjmp	.+8      	; 0xaec <__stack+0x28d>
     ae4:	cc 0c       	add	r12, r12
     ae6:	dd 1c       	adc	r13, r13
     ae8:	ee 1c       	adc	r14, r14
     aea:	ff 1c       	adc	r15, r15
     aec:	0a 94       	dec	r0
     aee:	d2 f7       	brpl	.-12     	; 0xae4 <__stack+0x285>
     af0:	c9 a2       	std	Y+33, r12	; 0x21
     af2:	da a2       	std	Y+34, r13	; 0x22
     af4:	eb a2       	std	Y+35, r14	; 0x23
     af6:	fc a2       	std	Y+36, r15	; 0x24
     af8:	64 01       	movw	r12, r8
     afa:	53 01       	movw	r10, r6
     afc:	06 2e       	mov	r0, r22
     afe:	04 c0       	rjmp	.+8      	; 0xb08 <__stack+0x2a9>
     b00:	d6 94       	lsr	r13
     b02:	c7 94       	ror	r12
     b04:	b7 94       	ror	r11
     b06:	a7 94       	ror	r10
     b08:	0a 94       	dec	r0
     b0a:	d2 f7       	brpl	.-12     	; 0xb00 <__stack+0x2a1>
     b0c:	d4 01       	movw	r26, r8
     b0e:	c3 01       	movw	r24, r6
     b10:	6e 96       	adiw	r28, 0x1e	; 30
     b12:	0f ac       	ldd	r0, Y+63	; 0x3f
     b14:	6e 97       	sbiw	r28, 0x1e	; 30
     b16:	04 c0       	rjmp	.+8      	; 0xb20 <__stack+0x2c1>
     b18:	88 0f       	add	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	aa 1f       	adc	r26, r26
     b1e:	bb 1f       	adc	r27, r27
     b20:	0a 94       	dec	r0
     b22:	d2 f7       	brpl	.-12     	; 0xb18 <__stack+0x2b9>
     b24:	ed a4       	ldd	r14, Y+45	; 0x2d
     b26:	fe a4       	ldd	r15, Y+46	; 0x2e
     b28:	0f a5       	ldd	r16, Y+47	; 0x2f
     b2a:	18 a9       	ldd	r17, Y+48	; 0x30
     b2c:	04 c0       	rjmp	.+8      	; 0xb36 <__stack+0x2d7>
     b2e:	16 95       	lsr	r17
     b30:	07 95       	ror	r16
     b32:	f7 94       	ror	r15
     b34:	e7 94       	ror	r14
     b36:	6a 95       	dec	r22
     b38:	d2 f7       	brpl	.-12     	; 0xb2e <__stack+0x2cf>
     b3a:	37 01       	movw	r6, r14
     b3c:	48 01       	movw	r8, r16
     b3e:	68 2a       	or	r6, r24
     b40:	79 2a       	or	r7, r25
     b42:	8a 2a       	or	r8, r26
     b44:	9b 2a       	or	r9, r27
     b46:	6d 8e       	std	Y+29, r6	; 0x1d
     b48:	7e 8e       	std	Y+30, r7	; 0x1e
     b4a:	8f 8e       	std	Y+31, r8	; 0x1f
     b4c:	98 a2       	std	Y+32, r9	; 0x20
     b4e:	ed a0       	ldd	r14, Y+37	; 0x25
     b50:	fe a0       	ldd	r15, Y+38	; 0x26
     b52:	0f a1       	ldd	r16, Y+39	; 0x27
     b54:	18 a5       	ldd	r17, Y+40	; 0x28
     b56:	38 01       	movw	r6, r16
     b58:	88 24       	eor	r8, r8
     b5a:	99 24       	eor	r9, r9
     b5c:	98 01       	movw	r18, r16
     b5e:	87 01       	movw	r16, r14
     b60:	20 70       	andi	r18, 0x00	; 0
     b62:	30 70       	andi	r19, 0x00	; 0
     b64:	65 96       	adiw	r28, 0x15	; 21
     b66:	0c af       	std	Y+60, r16	; 0x3c
     b68:	1d af       	std	Y+61, r17	; 0x3d
     b6a:	2e af       	std	Y+62, r18	; 0x3e
     b6c:	3f af       	std	Y+63, r19	; 0x3f
     b6e:	65 97       	sbiw	r28, 0x15	; 21
     b70:	c6 01       	movw	r24, r12
     b72:	b5 01       	movw	r22, r10
     b74:	a4 01       	movw	r20, r8
     b76:	93 01       	movw	r18, r6
     b78:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     b7c:	7b 01       	movw	r14, r22
     b7e:	8c 01       	movw	r16, r24
     b80:	c6 01       	movw	r24, r12
     b82:	b5 01       	movw	r22, r10
     b84:	a4 01       	movw	r20, r8
     b86:	93 01       	movw	r18, r6
     b88:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     b8c:	c9 01       	movw	r24, r18
     b8e:	da 01       	movw	r26, r20
     b90:	1c 01       	movw	r2, r24
     b92:	2d 01       	movw	r4, r26
     b94:	c2 01       	movw	r24, r4
     b96:	b1 01       	movw	r22, r2
     b98:	65 96       	adiw	r28, 0x15	; 21
     b9a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b9c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b9e:	4e ad       	ldd	r20, Y+62	; 0x3e
     ba0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ba2:	65 97       	sbiw	r28, 0x15	; 21
     ba4:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     ba8:	9b 01       	movw	r18, r22
     baa:	ac 01       	movw	r20, r24
     bac:	87 01       	movw	r16, r14
     bae:	ff 24       	eor	r15, r15
     bb0:	ee 24       	eor	r14, r14
     bb2:	ad 8c       	ldd	r10, Y+29	; 0x1d
     bb4:	be 8c       	ldd	r11, Y+30	; 0x1e
     bb6:	cf 8c       	ldd	r12, Y+31	; 0x1f
     bb8:	d8 a0       	ldd	r13, Y+32	; 0x20
     bba:	c6 01       	movw	r24, r12
     bbc:	aa 27       	eor	r26, r26
     bbe:	bb 27       	eor	r27, r27
     bc0:	57 01       	movw	r10, r14
     bc2:	68 01       	movw	r12, r16
     bc4:	a8 2a       	or	r10, r24
     bc6:	b9 2a       	or	r11, r25
     bc8:	ca 2a       	or	r12, r26
     bca:	db 2a       	or	r13, r27
     bcc:	a2 16       	cp	r10, r18
     bce:	b3 06       	cpc	r11, r19
     bd0:	c4 06       	cpc	r12, r20
     bd2:	d5 06       	cpc	r13, r21
     bd4:	00 f5       	brcc	.+64     	; 0xc16 <__stack+0x3b7>
     bd6:	08 94       	sec
     bd8:	21 08       	sbc	r2, r1
     bda:	31 08       	sbc	r3, r1
     bdc:	41 08       	sbc	r4, r1
     bde:	51 08       	sbc	r5, r1
     be0:	ed a0       	ldd	r14, Y+37	; 0x25
     be2:	fe a0       	ldd	r15, Y+38	; 0x26
     be4:	0f a1       	ldd	r16, Y+39	; 0x27
     be6:	18 a5       	ldd	r17, Y+40	; 0x28
     be8:	ae 0c       	add	r10, r14
     bea:	bf 1c       	adc	r11, r15
     bec:	c0 1e       	adc	r12, r16
     bee:	d1 1e       	adc	r13, r17
     bf0:	ae 14       	cp	r10, r14
     bf2:	bf 04       	cpc	r11, r15
     bf4:	c0 06       	cpc	r12, r16
     bf6:	d1 06       	cpc	r13, r17
     bf8:	70 f0       	brcs	.+28     	; 0xc16 <__stack+0x3b7>
     bfa:	a2 16       	cp	r10, r18
     bfc:	b3 06       	cpc	r11, r19
     bfe:	c4 06       	cpc	r12, r20
     c00:	d5 06       	cpc	r13, r21
     c02:	48 f4       	brcc	.+18     	; 0xc16 <__stack+0x3b7>
     c04:	08 94       	sec
     c06:	21 08       	sbc	r2, r1
     c08:	31 08       	sbc	r3, r1
     c0a:	41 08       	sbc	r4, r1
     c0c:	51 08       	sbc	r5, r1
     c0e:	ae 0c       	add	r10, r14
     c10:	bf 1c       	adc	r11, r15
     c12:	c0 1e       	adc	r12, r16
     c14:	d1 1e       	adc	r13, r17
     c16:	a2 1a       	sub	r10, r18
     c18:	b3 0a       	sbc	r11, r19
     c1a:	c4 0a       	sbc	r12, r20
     c1c:	d5 0a       	sbc	r13, r21
     c1e:	c6 01       	movw	r24, r12
     c20:	b5 01       	movw	r22, r10
     c22:	a4 01       	movw	r20, r8
     c24:	93 01       	movw	r18, r6
     c26:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     c2a:	7b 01       	movw	r14, r22
     c2c:	8c 01       	movw	r16, r24
     c2e:	c6 01       	movw	r24, r12
     c30:	b5 01       	movw	r22, r10
     c32:	a4 01       	movw	r20, r8
     c34:	93 01       	movw	r18, r6
     c36:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
     c3a:	c9 01       	movw	r24, r18
     c3c:	da 01       	movw	r26, r20
     c3e:	3c 01       	movw	r6, r24
     c40:	4d 01       	movw	r8, r26
     c42:	c4 01       	movw	r24, r8
     c44:	b3 01       	movw	r22, r6
     c46:	65 96       	adiw	r28, 0x15	; 21
     c48:	2c ad       	ldd	r18, Y+60	; 0x3c
     c4a:	3d ad       	ldd	r19, Y+61	; 0x3d
     c4c:	4e ad       	ldd	r20, Y+62	; 0x3e
     c4e:	5f ad       	ldd	r21, Y+63	; 0x3f
     c50:	65 97       	sbiw	r28, 0x15	; 21
     c52:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     c56:	9b 01       	movw	r18, r22
     c58:	ac 01       	movw	r20, r24
     c5a:	87 01       	movw	r16, r14
     c5c:	ff 24       	eor	r15, r15
     c5e:	ee 24       	eor	r14, r14
     c60:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c62:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c64:	af 8d       	ldd	r26, Y+31	; 0x1f
     c66:	b8 a1       	ldd	r27, Y+32	; 0x20
     c68:	a0 70       	andi	r26, 0x00	; 0
     c6a:	b0 70       	andi	r27, 0x00	; 0
     c6c:	57 01       	movw	r10, r14
     c6e:	68 01       	movw	r12, r16
     c70:	a8 2a       	or	r10, r24
     c72:	b9 2a       	or	r11, r25
     c74:	ca 2a       	or	r12, r26
     c76:	db 2a       	or	r13, r27
     c78:	a2 16       	cp	r10, r18
     c7a:	b3 06       	cpc	r11, r19
     c7c:	c4 06       	cpc	r12, r20
     c7e:	d5 06       	cpc	r13, r21
     c80:	00 f5       	brcc	.+64     	; 0xcc2 <__stack+0x463>
     c82:	08 94       	sec
     c84:	61 08       	sbc	r6, r1
     c86:	71 08       	sbc	r7, r1
     c88:	81 08       	sbc	r8, r1
     c8a:	91 08       	sbc	r9, r1
     c8c:	6d a1       	ldd	r22, Y+37	; 0x25
     c8e:	7e a1       	ldd	r23, Y+38	; 0x26
     c90:	8f a1       	ldd	r24, Y+39	; 0x27
     c92:	98 a5       	ldd	r25, Y+40	; 0x28
     c94:	a6 0e       	add	r10, r22
     c96:	b7 1e       	adc	r11, r23
     c98:	c8 1e       	adc	r12, r24
     c9a:	d9 1e       	adc	r13, r25
     c9c:	a6 16       	cp	r10, r22
     c9e:	b7 06       	cpc	r11, r23
     ca0:	c8 06       	cpc	r12, r24
     ca2:	d9 06       	cpc	r13, r25
     ca4:	70 f0       	brcs	.+28     	; 0xcc2 <__stack+0x463>
     ca6:	a2 16       	cp	r10, r18
     ca8:	b3 06       	cpc	r11, r19
     caa:	c4 06       	cpc	r12, r20
     cac:	d5 06       	cpc	r13, r21
     cae:	48 f4       	brcc	.+18     	; 0xcc2 <__stack+0x463>
     cb0:	08 94       	sec
     cb2:	61 08       	sbc	r6, r1
     cb4:	71 08       	sbc	r7, r1
     cb6:	81 08       	sbc	r8, r1
     cb8:	91 08       	sbc	r9, r1
     cba:	a6 0e       	add	r10, r22
     cbc:	b7 1e       	adc	r11, r23
     cbe:	c8 1e       	adc	r12, r24
     cc0:	d9 1e       	adc	r13, r25
     cc2:	d6 01       	movw	r26, r12
     cc4:	c5 01       	movw	r24, r10
     cc6:	82 1b       	sub	r24, r18
     cc8:	93 0b       	sbc	r25, r19
     cca:	a4 0b       	sbc	r26, r20
     ccc:	b5 0b       	sbc	r27, r21
     cce:	89 8f       	std	Y+25, r24	; 0x19
     cd0:	9a 8f       	std	Y+26, r25	; 0x1a
     cd2:	ab 8f       	std	Y+27, r26	; 0x1b
     cd4:	bc 8f       	std	Y+28, r27	; 0x1c
     cd6:	d1 01       	movw	r26, r2
     cd8:	99 27       	eor	r25, r25
     cda:	88 27       	eor	r24, r24
     cdc:	64 01       	movw	r12, r8
     cde:	53 01       	movw	r10, r6
     ce0:	a8 2a       	or	r10, r24
     ce2:	b9 2a       	or	r11, r25
     ce4:	ca 2a       	or	r12, r26
     ce6:	db 2a       	or	r13, r27
     ce8:	a9 aa       	std	Y+49, r10	; 0x31
     cea:	ba aa       	std	Y+50, r11	; 0x32
     cec:	cb aa       	std	Y+51, r12	; 0x33
     cee:	dc aa       	std	Y+52, r13	; 0x34
     cf0:	86 01       	movw	r16, r12
     cf2:	75 01       	movw	r14, r10
     cf4:	2f ef       	ldi	r18, 0xFF	; 255
     cf6:	3f ef       	ldi	r19, 0xFF	; 255
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	e2 22       	and	r14, r18
     cfe:	f3 22       	and	r15, r19
     d00:	04 23       	and	r16, r20
     d02:	15 23       	and	r17, r21
     d04:	a6 01       	movw	r20, r12
     d06:	66 27       	eor	r22, r22
     d08:	77 27       	eor	r23, r23
     d0a:	6d 96       	adiw	r28, 0x1d	; 29
     d0c:	4c af       	std	Y+60, r20	; 0x3c
     d0e:	5d af       	std	Y+61, r21	; 0x3d
     d10:	6e af       	std	Y+62, r22	; 0x3e
     d12:	7f af       	std	Y+63, r23	; 0x3f
     d14:	6d 97       	sbiw	r28, 0x1d	; 29
     d16:	a9 a0       	ldd	r10, Y+33	; 0x21
     d18:	ba a0       	ldd	r11, Y+34	; 0x22
     d1a:	cb a0       	ldd	r12, Y+35	; 0x23
     d1c:	dc a0       	ldd	r13, Y+36	; 0x24
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	7f ef       	ldi	r23, 0xFF	; 255
     d22:	80 e0       	ldi	r24, 0x00	; 0
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	a6 22       	and	r10, r22
     d28:	b7 22       	and	r11, r23
     d2a:	c8 22       	and	r12, r24
     d2c:	d9 22       	and	r13, r25
     d2e:	89 a1       	ldd	r24, Y+33	; 0x21
     d30:	9a a1       	ldd	r25, Y+34	; 0x22
     d32:	ab a1       	ldd	r26, Y+35	; 0x23
     d34:	bc a1       	ldd	r27, Y+36	; 0x24
     d36:	1d 01       	movw	r2, r26
     d38:	44 24       	eor	r4, r4
     d3a:	55 24       	eor	r5, r5
     d3c:	c8 01       	movw	r24, r16
     d3e:	b7 01       	movw	r22, r14
     d40:	a6 01       	movw	r20, r12
     d42:	95 01       	movw	r18, r10
     d44:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     d48:	69 96       	adiw	r28, 0x19	; 25
     d4a:	6c af       	std	Y+60, r22	; 0x3c
     d4c:	7d af       	std	Y+61, r23	; 0x3d
     d4e:	8e af       	std	Y+62, r24	; 0x3e
     d50:	9f af       	std	Y+63, r25	; 0x3f
     d52:	69 97       	sbiw	r28, 0x19	; 25
     d54:	c8 01       	movw	r24, r16
     d56:	b7 01       	movw	r22, r14
     d58:	a2 01       	movw	r20, r4
     d5a:	91 01       	movw	r18, r2
     d5c:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     d60:	3b 01       	movw	r6, r22
     d62:	4c 01       	movw	r8, r24
     d64:	6d 96       	adiw	r28, 0x1d	; 29
     d66:	6c ad       	ldd	r22, Y+60	; 0x3c
     d68:	7d ad       	ldd	r23, Y+61	; 0x3d
     d6a:	8e ad       	ldd	r24, Y+62	; 0x3e
     d6c:	9f ad       	ldd	r25, Y+63	; 0x3f
     d6e:	6d 97       	sbiw	r28, 0x1d	; 29
     d70:	a6 01       	movw	r20, r12
     d72:	95 01       	movw	r18, r10
     d74:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     d78:	7b 01       	movw	r14, r22
     d7a:	8c 01       	movw	r16, r24
     d7c:	6d 96       	adiw	r28, 0x1d	; 29
     d7e:	6c ad       	ldd	r22, Y+60	; 0x3c
     d80:	7d ad       	ldd	r23, Y+61	; 0x3d
     d82:	8e ad       	ldd	r24, Y+62	; 0x3e
     d84:	9f ad       	ldd	r25, Y+63	; 0x3f
     d86:	6d 97       	sbiw	r28, 0x1d	; 29
     d88:	a2 01       	movw	r20, r4
     d8a:	91 01       	movw	r18, r2
     d8c:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
     d90:	5b 01       	movw	r10, r22
     d92:	6c 01       	movw	r12, r24
     d94:	a8 01       	movw	r20, r16
     d96:	97 01       	movw	r18, r14
     d98:	26 0d       	add	r18, r6
     d9a:	37 1d       	adc	r19, r7
     d9c:	48 1d       	adc	r20, r8
     d9e:	59 1d       	adc	r21, r9
     da0:	69 96       	adiw	r28, 0x19	; 25
     da2:	6c ac       	ldd	r6, Y+60	; 0x3c
     da4:	7d ac       	ldd	r7, Y+61	; 0x3d
     da6:	8e ac       	ldd	r8, Y+62	; 0x3e
     da8:	9f ac       	ldd	r9, Y+63	; 0x3f
     daa:	69 97       	sbiw	r28, 0x19	; 25
     dac:	c4 01       	movw	r24, r8
     dae:	aa 27       	eor	r26, r26
     db0:	bb 27       	eor	r27, r27
     db2:	28 0f       	add	r18, r24
     db4:	39 1f       	adc	r19, r25
     db6:	4a 1f       	adc	r20, r26
     db8:	5b 1f       	adc	r21, r27
     dba:	2e 15       	cp	r18, r14
     dbc:	3f 05       	cpc	r19, r15
     dbe:	40 07       	cpc	r20, r16
     dc0:	51 07       	cpc	r21, r17
     dc2:	48 f4       	brcc	.+18     	; 0xdd6 <__stack+0x577>
     dc4:	e1 2c       	mov	r14, r1
     dc6:	f1 2c       	mov	r15, r1
     dc8:	61 e0       	ldi	r22, 0x01	; 1
     dca:	06 2f       	mov	r16, r22
     dcc:	11 2d       	mov	r17, r1
     dce:	ae 0c       	add	r10, r14
     dd0:	bf 1c       	adc	r11, r15
     dd2:	c0 1e       	adc	r12, r16
     dd4:	d1 1e       	adc	r13, r17
     dd6:	ca 01       	movw	r24, r20
     dd8:	aa 27       	eor	r26, r26
     dda:	bb 27       	eor	r27, r27
     ddc:	bc 01       	movw	r22, r24
     dde:	cd 01       	movw	r24, r26
     de0:	6a 0d       	add	r22, r10
     de2:	7b 1d       	adc	r23, r11
     de4:	8c 1d       	adc	r24, r12
     de6:	9d 1d       	adc	r25, r13
     de8:	69 8c       	ldd	r6, Y+25	; 0x19
     dea:	7a 8c       	ldd	r7, Y+26	; 0x1a
     dec:	8b 8c       	ldd	r8, Y+27	; 0x1b
     dee:	9c 8c       	ldd	r9, Y+28	; 0x1c
     df0:	66 16       	cp	r6, r22
     df2:	77 06       	cpc	r7, r23
     df4:	88 06       	cpc	r8, r24
     df6:	99 06       	cpc	r9, r25
     df8:	40 f1       	brcs	.+80     	; 0xe4a <__stack+0x5eb>
     dfa:	66 15       	cp	r22, r6
     dfc:	77 05       	cpc	r23, r7
     dfe:	88 05       	cpc	r24, r8
     e00:	99 05       	cpc	r25, r9
     e02:	09 f0       	breq	.+2      	; 0xe06 <__stack+0x5a7>
     e04:	43 c0       	rjmp	.+134    	; 0xe8c <__stack+0x62d>
     e06:	d9 01       	movw	r26, r18
     e08:	99 27       	eor	r25, r25
     e0a:	88 27       	eor	r24, r24
     e0c:	69 96       	adiw	r28, 0x19	; 25
     e0e:	2c ad       	ldd	r18, Y+60	; 0x3c
     e10:	3d ad       	ldd	r19, Y+61	; 0x3d
     e12:	4e ad       	ldd	r20, Y+62	; 0x3e
     e14:	5f ad       	ldd	r21, Y+63	; 0x3f
     e16:	69 97       	sbiw	r28, 0x19	; 25
     e18:	40 70       	andi	r20, 0x00	; 0
     e1a:	50 70       	andi	r21, 0x00	; 0
     e1c:	82 0f       	add	r24, r18
     e1e:	93 1f       	adc	r25, r19
     e20:	a4 1f       	adc	r26, r20
     e22:	b5 1f       	adc	r27, r21
     e24:	2d a5       	ldd	r18, Y+45	; 0x2d
     e26:	3e a5       	ldd	r19, Y+46	; 0x2e
     e28:	4f a5       	ldd	r20, Y+47	; 0x2f
     e2a:	58 a9       	ldd	r21, Y+48	; 0x30
     e2c:	6e 96       	adiw	r28, 0x1e	; 30
     e2e:	0f ac       	ldd	r0, Y+63	; 0x3f
     e30:	6e 97       	sbiw	r28, 0x1e	; 30
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <__stack+0x5dd>
     e34:	22 0f       	add	r18, r18
     e36:	33 1f       	adc	r19, r19
     e38:	44 1f       	adc	r20, r20
     e3a:	55 1f       	adc	r21, r21
     e3c:	0a 94       	dec	r0
     e3e:	d2 f7       	brpl	.-12     	; 0xe34 <__stack+0x5d5>
     e40:	28 17       	cp	r18, r24
     e42:	39 07       	cpc	r19, r25
     e44:	4a 07       	cpc	r20, r26
     e46:	5b 07       	cpc	r21, r27
     e48:	08 f5       	brcc	.+66     	; 0xe8c <__stack+0x62d>
     e4a:	09 a9       	ldd	r16, Y+49	; 0x31
     e4c:	1a a9       	ldd	r17, Y+50	; 0x32
     e4e:	2b a9       	ldd	r18, Y+51	; 0x33
     e50:	3c a9       	ldd	r19, Y+52	; 0x34
     e52:	01 50       	subi	r16, 0x01	; 1
     e54:	10 40       	sbci	r17, 0x00	; 0
     e56:	20 40       	sbci	r18, 0x00	; 0
     e58:	30 40       	sbci	r19, 0x00	; 0
     e5a:	09 ab       	std	Y+49, r16	; 0x31
     e5c:	1a ab       	std	Y+50, r17	; 0x32
     e5e:	2b ab       	std	Y+51, r18	; 0x33
     e60:	3c ab       	std	Y+52, r19	; 0x34
     e62:	14 c0       	rjmp	.+40     	; 0xe8c <__stack+0x62d>
     e64:	66 24       	eor	r6, r6
     e66:	77 24       	eor	r7, r7
     e68:	43 01       	movw	r8, r6
     e6a:	21 e0       	ldi	r18, 0x01	; 1
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	40 e0       	ldi	r20, 0x00	; 0
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	29 ab       	std	Y+49, r18	; 0x31
     e74:	3a ab       	std	Y+50, r19	; 0x32
     e76:	4b ab       	std	Y+51, r20	; 0x33
     e78:	5c ab       	std	Y+52, r21	; 0x34
     e7a:	0b c0       	rjmp	.+22     	; 0xe92 <__stack+0x633>
     e7c:	66 24       	eor	r6, r6
     e7e:	77 24       	eor	r7, r7
     e80:	43 01       	movw	r8, r6
     e82:	19 aa       	std	Y+49, r1	; 0x31
     e84:	1a aa       	std	Y+50, r1	; 0x32
     e86:	1b aa       	std	Y+51, r1	; 0x33
     e88:	1c aa       	std	Y+52, r1	; 0x34
     e8a:	03 c0       	rjmp	.+6      	; 0xe92 <__stack+0x633>
     e8c:	66 24       	eor	r6, r6
     e8e:	77 24       	eor	r7, r7
     e90:	43 01       	movw	r8, r6
     e92:	fe 01       	movw	r30, r28
     e94:	71 96       	adiw	r30, 0x11	; 17
     e96:	88 e0       	ldi	r24, 0x08	; 8
     e98:	df 01       	movw	r26, r30
     e9a:	1d 92       	st	X+, r1
     e9c:	8a 95       	dec	r24
     e9e:	e9 f7       	brne	.-6      	; 0xe9a <__stack+0x63b>
     ea0:	a9 a8       	ldd	r10, Y+49	; 0x31
     ea2:	ba a8       	ldd	r11, Y+50	; 0x32
     ea4:	cb a8       	ldd	r12, Y+51	; 0x33
     ea6:	dc a8       	ldd	r13, Y+52	; 0x34
     ea8:	a9 8a       	std	Y+17, r10	; 0x11
     eaa:	ba 8a       	std	Y+18, r11	; 0x12
     eac:	cb 8a       	std	Y+19, r12	; 0x13
     eae:	dc 8a       	std	Y+20, r13	; 0x14
     eb0:	6d 8a       	std	Y+21, r6	; 0x15
     eb2:	7e 8a       	std	Y+22, r7	; 0x16
     eb4:	8f 8a       	std	Y+23, r8	; 0x17
     eb6:	98 8e       	std	Y+24, r9	; 0x18
     eb8:	29 a9       	ldd	r18, Y+49	; 0x31
     eba:	3a 89       	ldd	r19, Y+18	; 0x12
     ebc:	4b 89       	ldd	r20, Y+19	; 0x13
     ebe:	5c 89       	ldd	r21, Y+20	; 0x14
     ec0:	66 2d       	mov	r22, r6
     ec2:	7e 89       	ldd	r23, Y+22	; 0x16
     ec4:	8f 89       	ldd	r24, Y+23	; 0x17
     ec6:	98 8d       	ldd	r25, Y+24	; 0x18
     ec8:	c2 5a       	subi	r28, 0xA2	; 162
     eca:	df 4f       	sbci	r29, 0xFF	; 255
     ecc:	e2 e1       	ldi	r30, 0x12	; 18
     ece:	0c 94 c6 3c 	jmp	0x798c	; 0x798c <__epilogue_restores__>

00000ed2 <__umoddi3>:
     ed2:	ab e5       	ldi	r26, 0x5B	; 91
     ed4:	b0 e0       	ldi	r27, 0x00	; 0
     ed6:	ef e6       	ldi	r30, 0x6F	; 111
     ed8:	f7 e0       	ldi	r31, 0x07	; 7
     eda:	0c 94 aa 3c 	jmp	0x7954	; 0x7954 <__prologue_saves__>
     ede:	a8 e0       	ldi	r26, 0x08	; 8
     ee0:	4e 01       	movw	r8, r28
     ee2:	08 94       	sec
     ee4:	81 1c       	adc	r8, r1
     ee6:	91 1c       	adc	r9, r1
     ee8:	f4 01       	movw	r30, r8
     eea:	6a 2e       	mov	r6, r26
     eec:	11 92       	st	Z+, r1
     eee:	6a 94       	dec	r6
     ef0:	e9 f7       	brne	.-6      	; 0xeec <__umoddi3+0x1a>
     ef2:	29 83       	std	Y+1, r18	; 0x01
     ef4:	3a 83       	std	Y+2, r19	; 0x02
     ef6:	4b 83       	std	Y+3, r20	; 0x03
     ef8:	5c 83       	std	Y+4, r21	; 0x04
     efa:	6d 83       	std	Y+5, r22	; 0x05
     efc:	7e 83       	std	Y+6, r23	; 0x06
     efe:	8f 83       	std	Y+7, r24	; 0x07
     f00:	98 87       	std	Y+8, r25	; 0x08
     f02:	ce 01       	movw	r24, r28
     f04:	09 96       	adiw	r24, 0x09	; 9
     f06:	fc 01       	movw	r30, r24
     f08:	11 92       	st	Z+, r1
     f0a:	aa 95       	dec	r26
     f0c:	e9 f7       	brne	.-6      	; 0xf08 <__umoddi3+0x36>
     f0e:	a9 86       	std	Y+9, r10	; 0x09
     f10:	ba 86       	std	Y+10, r11	; 0x0a
     f12:	cb 86       	std	Y+11, r12	; 0x0b
     f14:	dc 86       	std	Y+12, r13	; 0x0c
     f16:	ed 86       	std	Y+13, r14	; 0x0d
     f18:	fe 86       	std	Y+14, r15	; 0x0e
     f1a:	0f 87       	std	Y+15, r16	; 0x0f
     f1c:	18 8b       	std	Y+16, r17	; 0x10
     f1e:	29 84       	ldd	r2, Y+9	; 0x09
     f20:	3a 84       	ldd	r3, Y+10	; 0x0a
     f22:	4b 84       	ldd	r4, Y+11	; 0x0b
     f24:	5c 84       	ldd	r5, Y+12	; 0x0c
     f26:	ad 84       	ldd	r10, Y+13	; 0x0d
     f28:	be 84       	ldd	r11, Y+14	; 0x0e
     f2a:	cf 84       	ldd	r12, Y+15	; 0x0f
     f2c:	d8 88       	ldd	r13, Y+16	; 0x10
     f2e:	29 81       	ldd	r18, Y+1	; 0x01
     f30:	3a 81       	ldd	r19, Y+2	; 0x02
     f32:	4b 81       	ldd	r20, Y+3	; 0x03
     f34:	5c 81       	ldd	r21, Y+4	; 0x04
     f36:	69 96       	adiw	r28, 0x19	; 25
     f38:	2f af       	std	Y+63, r18	; 0x3f
     f3a:	69 97       	sbiw	r28, 0x19	; 25
     f3c:	6a 96       	adiw	r28, 0x1a	; 26
     f3e:	3f af       	std	Y+63, r19	; 0x3f
     f40:	6a 97       	sbiw	r28, 0x1a	; 26
     f42:	6b 96       	adiw	r28, 0x1b	; 27
     f44:	4f af       	std	Y+63, r20	; 0x3f
     f46:	6b 97       	sbiw	r28, 0x1b	; 27
     f48:	6c 96       	adiw	r28, 0x1c	; 28
     f4a:	5f af       	std	Y+63, r21	; 0x3f
     f4c:	6c 97       	sbiw	r28, 0x1c	; 28
     f4e:	6c 96       	adiw	r28, 0x1c	; 28
     f50:	6c ac       	ldd	r6, Y+60	; 0x3c
     f52:	7d ac       	ldd	r7, Y+61	; 0x3d
     f54:	8e ac       	ldd	r8, Y+62	; 0x3e
     f56:	9f ac       	ldd	r9, Y+63	; 0x3f
     f58:	6c 97       	sbiw	r28, 0x1c	; 28
     f5a:	69 aa       	std	Y+49, r6	; 0x31
     f5c:	7a aa       	std	Y+50, r7	; 0x32
     f5e:	8b aa       	std	Y+51, r8	; 0x33
     f60:	9c aa       	std	Y+52, r9	; 0x34
     f62:	6d 81       	ldd	r22, Y+5	; 0x05
     f64:	7e 81       	ldd	r23, Y+6	; 0x06
     f66:	8f 81       	ldd	r24, Y+7	; 0x07
     f68:	98 85       	ldd	r25, Y+8	; 0x08
     f6a:	3b 01       	movw	r6, r22
     f6c:	4c 01       	movw	r8, r24
     f6e:	6d aa       	std	Y+53, r6	; 0x35
     f70:	7e aa       	std	Y+54, r7	; 0x36
     f72:	8f aa       	std	Y+55, r8	; 0x37
     f74:	98 ae       	std	Y+56, r9	; 0x38
     f76:	a1 14       	cp	r10, r1
     f78:	b1 04       	cpc	r11, r1
     f7a:	c1 04       	cpc	r12, r1
     f7c:	d1 04       	cpc	r13, r1
     f7e:	09 f0       	breq	.+2      	; 0xf82 <__umoddi3+0xb0>
     f80:	04 c3       	rjmp	.+1544   	; 0x158a <__umoddi3+0x6b8>
     f82:	62 14       	cp	r6, r2
     f84:	73 04       	cpc	r7, r3
     f86:	84 04       	cpc	r8, r4
     f88:	95 04       	cpc	r9, r5
     f8a:	08 f0       	brcs	.+2      	; 0xf8e <__umoddi3+0xbc>
     f8c:	00 c1       	rjmp	.+512    	; 0x118e <__umoddi3+0x2bc>
     f8e:	00 e0       	ldi	r16, 0x00	; 0
     f90:	20 16       	cp	r2, r16
     f92:	00 e0       	ldi	r16, 0x00	; 0
     f94:	30 06       	cpc	r3, r16
     f96:	01 e0       	ldi	r16, 0x01	; 1
     f98:	40 06       	cpc	r4, r16
     f9a:	00 e0       	ldi	r16, 0x00	; 0
     f9c:	50 06       	cpc	r5, r16
     f9e:	88 f4       	brcc	.+34     	; 0xfc2 <__umoddi3+0xf0>
     fa0:	1f ef       	ldi	r17, 0xFF	; 255
     fa2:	21 16       	cp	r2, r17
     fa4:	31 04       	cpc	r3, r1
     fa6:	41 04       	cpc	r4, r1
     fa8:	51 04       	cpc	r5, r1
     faa:	39 f0       	breq	.+14     	; 0xfba <__umoddi3+0xe8>
     fac:	30 f0       	brcs	.+12     	; 0xfba <__umoddi3+0xe8>
     fae:	88 e0       	ldi	r24, 0x08	; 8
     fb0:	e8 2e       	mov	r14, r24
     fb2:	f1 2c       	mov	r15, r1
     fb4:	01 2d       	mov	r16, r1
     fb6:	11 2d       	mov	r17, r1
     fb8:	18 c0       	rjmp	.+48     	; 0xfea <__umoddi3+0x118>
     fba:	ee 24       	eor	r14, r14
     fbc:	ff 24       	eor	r15, r15
     fbe:	87 01       	movw	r16, r14
     fc0:	14 c0       	rjmp	.+40     	; 0xfea <__umoddi3+0x118>
     fc2:	40 e0       	ldi	r20, 0x00	; 0
     fc4:	24 16       	cp	r2, r20
     fc6:	40 e0       	ldi	r20, 0x00	; 0
     fc8:	34 06       	cpc	r3, r20
     fca:	40 e0       	ldi	r20, 0x00	; 0
     fcc:	44 06       	cpc	r4, r20
     fce:	41 e0       	ldi	r20, 0x01	; 1
     fd0:	54 06       	cpc	r5, r20
     fd2:	30 f0       	brcs	.+12     	; 0xfe0 <__umoddi3+0x10e>
     fd4:	b8 e1       	ldi	r27, 0x18	; 24
     fd6:	eb 2e       	mov	r14, r27
     fd8:	f1 2c       	mov	r15, r1
     fda:	01 2d       	mov	r16, r1
     fdc:	11 2d       	mov	r17, r1
     fde:	05 c0       	rjmp	.+10     	; 0xfea <__umoddi3+0x118>
     fe0:	a0 e1       	ldi	r26, 0x10	; 16
     fe2:	ea 2e       	mov	r14, r26
     fe4:	f1 2c       	mov	r15, r1
     fe6:	01 2d       	mov	r16, r1
     fe8:	11 2d       	mov	r17, r1
     fea:	d2 01       	movw	r26, r4
     fec:	c1 01       	movw	r24, r2
     fee:	0e 2c       	mov	r0, r14
     ff0:	04 c0       	rjmp	.+8      	; 0xffa <__umoddi3+0x128>
     ff2:	b6 95       	lsr	r27
     ff4:	a7 95       	ror	r26
     ff6:	97 95       	ror	r25
     ff8:	87 95       	ror	r24
     ffa:	0a 94       	dec	r0
     ffc:	d2 f7       	brpl	.-12     	; 0xff2 <__umoddi3+0x120>
     ffe:	8a 58       	subi	r24, 0x8A	; 138
    1000:	9f 4f       	sbci	r25, 0xFF	; 255
    1002:	dc 01       	movw	r26, r24
    1004:	2c 91       	ld	r18, X
    1006:	80 e2       	ldi	r24, 0x20	; 32
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	a0 e0       	ldi	r26, 0x00	; 0
    100c:	b0 e0       	ldi	r27, 0x00	; 0
    100e:	8e 19       	sub	r24, r14
    1010:	9f 09       	sbc	r25, r15
    1012:	a0 0b       	sbc	r26, r16
    1014:	b1 0b       	sbc	r27, r17
    1016:	5c 01       	movw	r10, r24
    1018:	6d 01       	movw	r12, r26
    101a:	a2 1a       	sub	r10, r18
    101c:	b1 08       	sbc	r11, r1
    101e:	c1 08       	sbc	r12, r1
    1020:	d1 08       	sbc	r13, r1
    1022:	a9 ae       	std	Y+57, r10	; 0x39
    1024:	ba ae       	std	Y+58, r11	; 0x3a
    1026:	cb ae       	std	Y+59, r12	; 0x3b
    1028:	dc ae       	std	Y+60, r13	; 0x3c
    102a:	a1 14       	cp	r10, r1
    102c:	b1 04       	cpc	r11, r1
    102e:	c1 04       	cpc	r12, r1
    1030:	d1 04       	cpc	r13, r1
    1032:	09 f4       	brne	.+2      	; 0x1036 <__umoddi3+0x164>
    1034:	3f c0       	rjmp	.+126    	; 0x10b4 <__umoddi3+0x1e2>
    1036:	69 ad       	ldd	r22, Y+57	; 0x39
    1038:	06 2e       	mov	r0, r22
    103a:	04 c0       	rjmp	.+8      	; 0x1044 <__umoddi3+0x172>
    103c:	22 0c       	add	r2, r2
    103e:	33 1c       	adc	r3, r3
    1040:	44 1c       	adc	r4, r4
    1042:	55 1c       	adc	r5, r5
    1044:	0a 94       	dec	r0
    1046:	d2 f7       	brpl	.-12     	; 0x103c <__umoddi3+0x16a>
    1048:	a4 01       	movw	r20, r8
    104a:	93 01       	movw	r18, r6
    104c:	06 2e       	mov	r0, r22
    104e:	04 c0       	rjmp	.+8      	; 0x1058 <__umoddi3+0x186>
    1050:	22 0f       	add	r18, r18
    1052:	33 1f       	adc	r19, r19
    1054:	44 1f       	adc	r20, r20
    1056:	55 1f       	adc	r21, r21
    1058:	0a 94       	dec	r0
    105a:	d2 f7       	brpl	.-12     	; 0x1050 <__umoddi3+0x17e>
    105c:	80 e2       	ldi	r24, 0x20	; 32
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	8a 19       	sub	r24, r10
    1062:	9b 09       	sbc	r25, r11
    1064:	6c 96       	adiw	r28, 0x1c	; 28
    1066:	cc ac       	ldd	r12, Y+60	; 0x3c
    1068:	dd ac       	ldd	r13, Y+61	; 0x3d
    106a:	ee ac       	ldd	r14, Y+62	; 0x3e
    106c:	ff ac       	ldd	r15, Y+63	; 0x3f
    106e:	6c 97       	sbiw	r28, 0x1c	; 28
    1070:	04 c0       	rjmp	.+8      	; 0x107a <__umoddi3+0x1a8>
    1072:	f6 94       	lsr	r15
    1074:	e7 94       	ror	r14
    1076:	d7 94       	ror	r13
    1078:	c7 94       	ror	r12
    107a:	8a 95       	dec	r24
    107c:	d2 f7       	brpl	.-12     	; 0x1072 <__umoddi3+0x1a0>
    107e:	87 01       	movw	r16, r14
    1080:	76 01       	movw	r14, r12
    1082:	e2 2a       	or	r14, r18
    1084:	f3 2a       	or	r15, r19
    1086:	04 2b       	or	r16, r20
    1088:	15 2b       	or	r17, r21
    108a:	ed aa       	std	Y+53, r14	; 0x35
    108c:	fe aa       	std	Y+54, r15	; 0x36
    108e:	0f ab       	std	Y+55, r16	; 0x37
    1090:	18 af       	std	Y+56, r17	; 0x38
    1092:	6c 96       	adiw	r28, 0x1c	; 28
    1094:	8c ad       	ldd	r24, Y+60	; 0x3c
    1096:	9d ad       	ldd	r25, Y+61	; 0x3d
    1098:	ae ad       	ldd	r26, Y+62	; 0x3e
    109a:	bf ad       	ldd	r27, Y+63	; 0x3f
    109c:	6c 97       	sbiw	r28, 0x1c	; 28
    109e:	04 c0       	rjmp	.+8      	; 0x10a8 <__umoddi3+0x1d6>
    10a0:	88 0f       	add	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	aa 1f       	adc	r26, r26
    10a6:	bb 1f       	adc	r27, r27
    10a8:	6a 95       	dec	r22
    10aa:	d2 f7       	brpl	.-12     	; 0x10a0 <__umoddi3+0x1ce>
    10ac:	89 ab       	std	Y+49, r24	; 0x31
    10ae:	9a ab       	std	Y+50, r25	; 0x32
    10b0:	ab ab       	std	Y+51, r26	; 0x33
    10b2:	bc ab       	std	Y+52, r27	; 0x34
    10b4:	32 01       	movw	r6, r4
    10b6:	88 24       	eor	r8, r8
    10b8:	99 24       	eor	r9, r9
    10ba:	b2 01       	movw	r22, r4
    10bc:	a1 01       	movw	r20, r2
    10be:	60 70       	andi	r22, 0x00	; 0
    10c0:	70 70       	andi	r23, 0x00	; 0
    10c2:	21 96       	adiw	r28, 0x01	; 1
    10c4:	4c af       	std	Y+60, r20	; 0x3c
    10c6:	5d af       	std	Y+61, r21	; 0x3d
    10c8:	6e af       	std	Y+62, r22	; 0x3e
    10ca:	7f af       	std	Y+63, r23	; 0x3f
    10cc:	21 97       	sbiw	r28, 0x01	; 1
    10ce:	6d a9       	ldd	r22, Y+53	; 0x35
    10d0:	7e a9       	ldd	r23, Y+54	; 0x36
    10d2:	8f a9       	ldd	r24, Y+55	; 0x37
    10d4:	98 ad       	ldd	r25, Y+56	; 0x38
    10d6:	a4 01       	movw	r20, r8
    10d8:	93 01       	movw	r18, r6
    10da:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    10de:	7b 01       	movw	r14, r22
    10e0:	8c 01       	movw	r16, r24
    10e2:	6d a9       	ldd	r22, Y+53	; 0x35
    10e4:	7e a9       	ldd	r23, Y+54	; 0x36
    10e6:	8f a9       	ldd	r24, Y+55	; 0x37
    10e8:	98 ad       	ldd	r25, Y+56	; 0x38
    10ea:	a4 01       	movw	r20, r8
    10ec:	93 01       	movw	r18, r6
    10ee:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    10f2:	ca 01       	movw	r24, r20
    10f4:	b9 01       	movw	r22, r18
    10f6:	21 96       	adiw	r28, 0x01	; 1
    10f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    10fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    10fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    10fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1100:	21 97       	sbiw	r28, 0x01	; 1
    1102:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    1106:	9b 01       	movw	r18, r22
    1108:	ac 01       	movw	r20, r24
    110a:	87 01       	movw	r16, r14
    110c:	ff 24       	eor	r15, r15
    110e:	ee 24       	eor	r14, r14
    1110:	a9 a8       	ldd	r10, Y+49	; 0x31
    1112:	ba a8       	ldd	r11, Y+50	; 0x32
    1114:	cb a8       	ldd	r12, Y+51	; 0x33
    1116:	dc a8       	ldd	r13, Y+52	; 0x34
    1118:	c6 01       	movw	r24, r12
    111a:	aa 27       	eor	r26, r26
    111c:	bb 27       	eor	r27, r27
    111e:	57 01       	movw	r10, r14
    1120:	68 01       	movw	r12, r16
    1122:	a8 2a       	or	r10, r24
    1124:	b9 2a       	or	r11, r25
    1126:	ca 2a       	or	r12, r26
    1128:	db 2a       	or	r13, r27
    112a:	a2 16       	cp	r10, r18
    112c:	b3 06       	cpc	r11, r19
    112e:	c4 06       	cpc	r12, r20
    1130:	d5 06       	cpc	r13, r21
    1132:	90 f4       	brcc	.+36     	; 0x1158 <__umoddi3+0x286>
    1134:	a2 0c       	add	r10, r2
    1136:	b3 1c       	adc	r11, r3
    1138:	c4 1c       	adc	r12, r4
    113a:	d5 1c       	adc	r13, r5
    113c:	a2 14       	cp	r10, r2
    113e:	b3 04       	cpc	r11, r3
    1140:	c4 04       	cpc	r12, r4
    1142:	d5 04       	cpc	r13, r5
    1144:	48 f0       	brcs	.+18     	; 0x1158 <__umoddi3+0x286>
    1146:	a2 16       	cp	r10, r18
    1148:	b3 06       	cpc	r11, r19
    114a:	c4 06       	cpc	r12, r20
    114c:	d5 06       	cpc	r13, r21
    114e:	20 f4       	brcc	.+8      	; 0x1158 <__umoddi3+0x286>
    1150:	a2 0c       	add	r10, r2
    1152:	b3 1c       	adc	r11, r3
    1154:	c4 1c       	adc	r12, r4
    1156:	d5 1c       	adc	r13, r5
    1158:	a2 1a       	sub	r10, r18
    115a:	b3 0a       	sbc	r11, r19
    115c:	c4 0a       	sbc	r12, r20
    115e:	d5 0a       	sbc	r13, r21
    1160:	c6 01       	movw	r24, r12
    1162:	b5 01       	movw	r22, r10
    1164:	a4 01       	movw	r20, r8
    1166:	93 01       	movw	r18, r6
    1168:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    116c:	7b 01       	movw	r14, r22
    116e:	8c 01       	movw	r16, r24
    1170:	c6 01       	movw	r24, r12
    1172:	b5 01       	movw	r22, r10
    1174:	a4 01       	movw	r20, r8
    1176:	93 01       	movw	r18, r6
    1178:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    117c:	ca 01       	movw	r24, r20
    117e:	b9 01       	movw	r22, r18
    1180:	21 96       	adiw	r28, 0x01	; 1
    1182:	2c ad       	ldd	r18, Y+60	; 0x3c
    1184:	3d ad       	ldd	r19, Y+61	; 0x3d
    1186:	4e ad       	ldd	r20, Y+62	; 0x3e
    1188:	5f ad       	ldd	r21, Y+63	; 0x3f
    118a:	21 97       	sbiw	r28, 0x01	; 1
    118c:	ba c1       	rjmp	.+884    	; 0x1502 <__umoddi3+0x630>
    118e:	21 14       	cp	r2, r1
    1190:	31 04       	cpc	r3, r1
    1192:	41 04       	cpc	r4, r1
    1194:	51 04       	cpc	r5, r1
    1196:	71 f4       	brne	.+28     	; 0x11b4 <__umoddi3+0x2e2>
    1198:	61 e0       	ldi	r22, 0x01	; 1
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	20 e0       	ldi	r18, 0x00	; 0
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	50 e0       	ldi	r21, 0x00	; 0
    11a8:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    11ac:	c9 01       	movw	r24, r18
    11ae:	da 01       	movw	r26, r20
    11b0:	1c 01       	movw	r2, r24
    11b2:	2d 01       	movw	r4, r26
    11b4:	00 e0       	ldi	r16, 0x00	; 0
    11b6:	20 16       	cp	r2, r16
    11b8:	00 e0       	ldi	r16, 0x00	; 0
    11ba:	30 06       	cpc	r3, r16
    11bc:	01 e0       	ldi	r16, 0x01	; 1
    11be:	40 06       	cpc	r4, r16
    11c0:	00 e0       	ldi	r16, 0x00	; 0
    11c2:	50 06       	cpc	r5, r16
    11c4:	88 f4       	brcc	.+34     	; 0x11e8 <__umoddi3+0x316>
    11c6:	1f ef       	ldi	r17, 0xFF	; 255
    11c8:	21 16       	cp	r2, r17
    11ca:	31 04       	cpc	r3, r1
    11cc:	41 04       	cpc	r4, r1
    11ce:	51 04       	cpc	r5, r1
    11d0:	39 f0       	breq	.+14     	; 0x11e0 <__umoddi3+0x30e>
    11d2:	30 f0       	brcs	.+12     	; 0x11e0 <__umoddi3+0x30e>
    11d4:	68 e0       	ldi	r22, 0x08	; 8
    11d6:	e6 2e       	mov	r14, r22
    11d8:	f1 2c       	mov	r15, r1
    11da:	01 2d       	mov	r16, r1
    11dc:	11 2d       	mov	r17, r1
    11de:	18 c0       	rjmp	.+48     	; 0x1210 <__umoddi3+0x33e>
    11e0:	ee 24       	eor	r14, r14
    11e2:	ff 24       	eor	r15, r15
    11e4:	87 01       	movw	r16, r14
    11e6:	14 c0       	rjmp	.+40     	; 0x1210 <__umoddi3+0x33e>
    11e8:	40 e0       	ldi	r20, 0x00	; 0
    11ea:	24 16       	cp	r2, r20
    11ec:	40 e0       	ldi	r20, 0x00	; 0
    11ee:	34 06       	cpc	r3, r20
    11f0:	40 e0       	ldi	r20, 0x00	; 0
    11f2:	44 06       	cpc	r4, r20
    11f4:	41 e0       	ldi	r20, 0x01	; 1
    11f6:	54 06       	cpc	r5, r20
    11f8:	30 f0       	brcs	.+12     	; 0x1206 <__umoddi3+0x334>
    11fa:	58 e1       	ldi	r21, 0x18	; 24
    11fc:	e5 2e       	mov	r14, r21
    11fe:	f1 2c       	mov	r15, r1
    1200:	01 2d       	mov	r16, r1
    1202:	11 2d       	mov	r17, r1
    1204:	05 c0       	rjmp	.+10     	; 0x1210 <__umoddi3+0x33e>
    1206:	40 e1       	ldi	r20, 0x10	; 16
    1208:	e4 2e       	mov	r14, r20
    120a:	f1 2c       	mov	r15, r1
    120c:	01 2d       	mov	r16, r1
    120e:	11 2d       	mov	r17, r1
    1210:	d2 01       	movw	r26, r4
    1212:	c1 01       	movw	r24, r2
    1214:	0e 2c       	mov	r0, r14
    1216:	04 c0       	rjmp	.+8      	; 0x1220 <__umoddi3+0x34e>
    1218:	b6 95       	lsr	r27
    121a:	a7 95       	ror	r26
    121c:	97 95       	ror	r25
    121e:	87 95       	ror	r24
    1220:	0a 94       	dec	r0
    1222:	d2 f7       	brpl	.-12     	; 0x1218 <__umoddi3+0x346>
    1224:	8a 58       	subi	r24, 0x8A	; 138
    1226:	9f 4f       	sbci	r25, 0xFF	; 255
    1228:	dc 01       	movw	r26, r24
    122a:	2c 91       	ld	r18, X
    122c:	30 e2       	ldi	r19, 0x20	; 32
    122e:	a3 2e       	mov	r10, r19
    1230:	b1 2c       	mov	r11, r1
    1232:	c1 2c       	mov	r12, r1
    1234:	d1 2c       	mov	r13, r1
    1236:	d6 01       	movw	r26, r12
    1238:	c5 01       	movw	r24, r10
    123a:	8e 19       	sub	r24, r14
    123c:	9f 09       	sbc	r25, r15
    123e:	a0 0b       	sbc	r26, r16
    1240:	b1 0b       	sbc	r27, r17
    1242:	7c 01       	movw	r14, r24
    1244:	8d 01       	movw	r16, r26
    1246:	e2 1a       	sub	r14, r18
    1248:	f1 08       	sbc	r15, r1
    124a:	01 09       	sbc	r16, r1
    124c:	11 09       	sbc	r17, r1
    124e:	e9 ae       	std	Y+57, r14	; 0x39
    1250:	fa ae       	std	Y+58, r15	; 0x3a
    1252:	0b af       	std	Y+59, r16	; 0x3b
    1254:	1c af       	std	Y+60, r17	; 0x3c
    1256:	e1 14       	cp	r14, r1
    1258:	f1 04       	cpc	r15, r1
    125a:	01 05       	cpc	r16, r1
    125c:	11 05       	cpc	r17, r1
    125e:	39 f4       	brne	.+14     	; 0x126e <__umoddi3+0x39c>
    1260:	64 01       	movw	r12, r8
    1262:	53 01       	movw	r10, r6
    1264:	a2 18       	sub	r10, r2
    1266:	b3 08       	sbc	r11, r3
    1268:	c4 08       	sbc	r12, r4
    126a:	d5 08       	sbc	r13, r5
    126c:	e2 c0       	rjmp	.+452    	; 0x1432 <__umoddi3+0x560>
    126e:	f9 ac       	ldd	r15, Y+57	; 0x39
    1270:	68 96       	adiw	r28, 0x18	; 24
    1272:	ff ae       	std	Y+63, r15	; 0x3f
    1274:	68 97       	sbiw	r28, 0x18	; 24
    1276:	0f 2c       	mov	r0, r15
    1278:	04 c0       	rjmp	.+8      	; 0x1282 <__umoddi3+0x3b0>
    127a:	22 0c       	add	r2, r2
    127c:	33 1c       	adc	r3, r3
    127e:	44 1c       	adc	r4, r4
    1280:	55 1c       	adc	r5, r5
    1282:	0a 94       	dec	r0
    1284:	d2 f7       	brpl	.-12     	; 0x127a <__umoddi3+0x3a8>
    1286:	8a 2d       	mov	r24, r10
    1288:	8f 19       	sub	r24, r15
    128a:	64 01       	movw	r12, r8
    128c:	53 01       	movw	r10, r6
    128e:	08 2e       	mov	r0, r24
    1290:	04 c0       	rjmp	.+8      	; 0x129a <__umoddi3+0x3c8>
    1292:	d6 94       	lsr	r13
    1294:	c7 94       	ror	r12
    1296:	b7 94       	ror	r11
    1298:	a7 94       	ror	r10
    129a:	0a 94       	dec	r0
    129c:	d2 f7       	brpl	.-12     	; 0x1292 <__umoddi3+0x3c0>
    129e:	a4 01       	movw	r20, r8
    12a0:	93 01       	movw	r18, r6
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <__umoddi3+0x3da>
    12a4:	22 0f       	add	r18, r18
    12a6:	33 1f       	adc	r19, r19
    12a8:	44 1f       	adc	r20, r20
    12aa:	55 1f       	adc	r21, r21
    12ac:	fa 94       	dec	r15
    12ae:	d2 f7       	brpl	.-12     	; 0x12a4 <__umoddi3+0x3d2>
    12b0:	6c 96       	adiw	r28, 0x1c	; 28
    12b2:	6c ac       	ldd	r6, Y+60	; 0x3c
    12b4:	7d ac       	ldd	r7, Y+61	; 0x3d
    12b6:	8e ac       	ldd	r8, Y+62	; 0x3e
    12b8:	9f ac       	ldd	r9, Y+63	; 0x3f
    12ba:	6c 97       	sbiw	r28, 0x1c	; 28
    12bc:	04 c0       	rjmp	.+8      	; 0x12c6 <__umoddi3+0x3f4>
    12be:	96 94       	lsr	r9
    12c0:	87 94       	ror	r8
    12c2:	77 94       	ror	r7
    12c4:	67 94       	ror	r6
    12c6:	8a 95       	dec	r24
    12c8:	d2 f7       	brpl	.-12     	; 0x12be <__umoddi3+0x3ec>
    12ca:	84 01       	movw	r16, r8
    12cc:	73 01       	movw	r14, r6
    12ce:	e2 2a       	or	r14, r18
    12d0:	f3 2a       	or	r15, r19
    12d2:	04 2b       	or	r16, r20
    12d4:	15 2b       	or	r17, r21
    12d6:	ed a6       	std	Y+45, r14	; 0x2d
    12d8:	fe a6       	std	Y+46, r15	; 0x2e
    12da:	0f a7       	std	Y+47, r16	; 0x2f
    12dc:	18 ab       	std	Y+48, r17	; 0x30
    12de:	32 01       	movw	r6, r4
    12e0:	88 24       	eor	r8, r8
    12e2:	99 24       	eor	r9, r9
    12e4:	b2 01       	movw	r22, r4
    12e6:	a1 01       	movw	r20, r2
    12e8:	60 70       	andi	r22, 0x00	; 0
    12ea:	70 70       	andi	r23, 0x00	; 0
    12ec:	25 96       	adiw	r28, 0x05	; 5
    12ee:	4c af       	std	Y+60, r20	; 0x3c
    12f0:	5d af       	std	Y+61, r21	; 0x3d
    12f2:	6e af       	std	Y+62, r22	; 0x3e
    12f4:	7f af       	std	Y+63, r23	; 0x3f
    12f6:	25 97       	sbiw	r28, 0x05	; 5
    12f8:	c6 01       	movw	r24, r12
    12fa:	b5 01       	movw	r22, r10
    12fc:	a4 01       	movw	r20, r8
    12fe:	93 01       	movw	r18, r6
    1300:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    1304:	7b 01       	movw	r14, r22
    1306:	8c 01       	movw	r16, r24
    1308:	c6 01       	movw	r24, r12
    130a:	b5 01       	movw	r22, r10
    130c:	a4 01       	movw	r20, r8
    130e:	93 01       	movw	r18, r6
    1310:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    1314:	ca 01       	movw	r24, r20
    1316:	b9 01       	movw	r22, r18
    1318:	25 96       	adiw	r28, 0x05	; 5
    131a:	2c ad       	ldd	r18, Y+60	; 0x3c
    131c:	3d ad       	ldd	r19, Y+61	; 0x3d
    131e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1320:	5f ad       	ldd	r21, Y+63	; 0x3f
    1322:	25 97       	sbiw	r28, 0x05	; 5
    1324:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    1328:	9b 01       	movw	r18, r22
    132a:	ac 01       	movw	r20, r24
    132c:	87 01       	movw	r16, r14
    132e:	ff 24       	eor	r15, r15
    1330:	ee 24       	eor	r14, r14
    1332:	ad a4       	ldd	r10, Y+45	; 0x2d
    1334:	be a4       	ldd	r11, Y+46	; 0x2e
    1336:	cf a4       	ldd	r12, Y+47	; 0x2f
    1338:	d8 a8       	ldd	r13, Y+48	; 0x30
    133a:	c6 01       	movw	r24, r12
    133c:	aa 27       	eor	r26, r26
    133e:	bb 27       	eor	r27, r27
    1340:	5c 01       	movw	r10, r24
    1342:	6d 01       	movw	r12, r26
    1344:	ae 28       	or	r10, r14
    1346:	bf 28       	or	r11, r15
    1348:	c0 2a       	or	r12, r16
    134a:	d1 2a       	or	r13, r17
    134c:	a2 16       	cp	r10, r18
    134e:	b3 06       	cpc	r11, r19
    1350:	c4 06       	cpc	r12, r20
    1352:	d5 06       	cpc	r13, r21
    1354:	90 f4       	brcc	.+36     	; 0x137a <__umoddi3+0x4a8>
    1356:	a2 0c       	add	r10, r2
    1358:	b3 1c       	adc	r11, r3
    135a:	c4 1c       	adc	r12, r4
    135c:	d5 1c       	adc	r13, r5
    135e:	a2 14       	cp	r10, r2
    1360:	b3 04       	cpc	r11, r3
    1362:	c4 04       	cpc	r12, r4
    1364:	d5 04       	cpc	r13, r5
    1366:	48 f0       	brcs	.+18     	; 0x137a <__umoddi3+0x4a8>
    1368:	a2 16       	cp	r10, r18
    136a:	b3 06       	cpc	r11, r19
    136c:	c4 06       	cpc	r12, r20
    136e:	d5 06       	cpc	r13, r21
    1370:	20 f4       	brcc	.+8      	; 0x137a <__umoddi3+0x4a8>
    1372:	a2 0c       	add	r10, r2
    1374:	b3 1c       	adc	r11, r3
    1376:	c4 1c       	adc	r12, r4
    1378:	d5 1c       	adc	r13, r5
    137a:	a2 1a       	sub	r10, r18
    137c:	b3 0a       	sbc	r11, r19
    137e:	c4 0a       	sbc	r12, r20
    1380:	d5 0a       	sbc	r13, r21
    1382:	c6 01       	movw	r24, r12
    1384:	b5 01       	movw	r22, r10
    1386:	a4 01       	movw	r20, r8
    1388:	93 01       	movw	r18, r6
    138a:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    138e:	7b 01       	movw	r14, r22
    1390:	8c 01       	movw	r16, r24
    1392:	c6 01       	movw	r24, r12
    1394:	b5 01       	movw	r22, r10
    1396:	a4 01       	movw	r20, r8
    1398:	93 01       	movw	r18, r6
    139a:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    139e:	ca 01       	movw	r24, r20
    13a0:	b9 01       	movw	r22, r18
    13a2:	25 96       	adiw	r28, 0x05	; 5
    13a4:	2c ad       	ldd	r18, Y+60	; 0x3c
    13a6:	3d ad       	ldd	r19, Y+61	; 0x3d
    13a8:	4e ad       	ldd	r20, Y+62	; 0x3e
    13aa:	5f ad       	ldd	r21, Y+63	; 0x3f
    13ac:	25 97       	sbiw	r28, 0x05	; 5
    13ae:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    13b2:	9b 01       	movw	r18, r22
    13b4:	ac 01       	movw	r20, r24
    13b6:	87 01       	movw	r16, r14
    13b8:	ff 24       	eor	r15, r15
    13ba:	ee 24       	eor	r14, r14
    13bc:	8d a5       	ldd	r24, Y+45	; 0x2d
    13be:	9e a5       	ldd	r25, Y+46	; 0x2e
    13c0:	af a5       	ldd	r26, Y+47	; 0x2f
    13c2:	b8 a9       	ldd	r27, Y+48	; 0x30
    13c4:	a0 70       	andi	r26, 0x00	; 0
    13c6:	b0 70       	andi	r27, 0x00	; 0
    13c8:	57 01       	movw	r10, r14
    13ca:	68 01       	movw	r12, r16
    13cc:	a8 2a       	or	r10, r24
    13ce:	b9 2a       	or	r11, r25
    13d0:	ca 2a       	or	r12, r26
    13d2:	db 2a       	or	r13, r27
    13d4:	a2 16       	cp	r10, r18
    13d6:	b3 06       	cpc	r11, r19
    13d8:	c4 06       	cpc	r12, r20
    13da:	d5 06       	cpc	r13, r21
    13dc:	90 f4       	brcc	.+36     	; 0x1402 <__umoddi3+0x530>
    13de:	a2 0c       	add	r10, r2
    13e0:	b3 1c       	adc	r11, r3
    13e2:	c4 1c       	adc	r12, r4
    13e4:	d5 1c       	adc	r13, r5
    13e6:	a2 14       	cp	r10, r2
    13e8:	b3 04       	cpc	r11, r3
    13ea:	c4 04       	cpc	r12, r4
    13ec:	d5 04       	cpc	r13, r5
    13ee:	48 f0       	brcs	.+18     	; 0x1402 <__umoddi3+0x530>
    13f0:	a2 16       	cp	r10, r18
    13f2:	b3 06       	cpc	r11, r19
    13f4:	c4 06       	cpc	r12, r20
    13f6:	d5 06       	cpc	r13, r21
    13f8:	20 f4       	brcc	.+8      	; 0x1402 <__umoddi3+0x530>
    13fa:	a2 0c       	add	r10, r2
    13fc:	b3 1c       	adc	r11, r3
    13fe:	c4 1c       	adc	r12, r4
    1400:	d5 1c       	adc	r13, r5
    1402:	6c 96       	adiw	r28, 0x1c	; 28
    1404:	ec ac       	ldd	r14, Y+60	; 0x3c
    1406:	fd ac       	ldd	r15, Y+61	; 0x3d
    1408:	0e ad       	ldd	r16, Y+62	; 0x3e
    140a:	1f ad       	ldd	r17, Y+63	; 0x3f
    140c:	6c 97       	sbiw	r28, 0x1c	; 28
    140e:	68 96       	adiw	r28, 0x18	; 24
    1410:	0f ac       	ldd	r0, Y+63	; 0x3f
    1412:	68 97       	sbiw	r28, 0x18	; 24
    1414:	04 c0       	rjmp	.+8      	; 0x141e <__umoddi3+0x54c>
    1416:	ee 0c       	add	r14, r14
    1418:	ff 1c       	adc	r15, r15
    141a:	00 1f       	adc	r16, r16
    141c:	11 1f       	adc	r17, r17
    141e:	0a 94       	dec	r0
    1420:	d2 f7       	brpl	.-12     	; 0x1416 <__umoddi3+0x544>
    1422:	e9 aa       	std	Y+49, r14	; 0x31
    1424:	fa aa       	std	Y+50, r15	; 0x32
    1426:	0b ab       	std	Y+51, r16	; 0x33
    1428:	1c ab       	std	Y+52, r17	; 0x34
    142a:	a2 1a       	sub	r10, r18
    142c:	b3 0a       	sbc	r11, r19
    142e:	c4 0a       	sbc	r12, r20
    1430:	d5 0a       	sbc	r13, r21
    1432:	32 01       	movw	r6, r4
    1434:	88 24       	eor	r8, r8
    1436:	99 24       	eor	r9, r9
    1438:	b2 01       	movw	r22, r4
    143a:	a1 01       	movw	r20, r2
    143c:	60 70       	andi	r22, 0x00	; 0
    143e:	70 70       	andi	r23, 0x00	; 0
    1440:	29 96       	adiw	r28, 0x09	; 9
    1442:	4c af       	std	Y+60, r20	; 0x3c
    1444:	5d af       	std	Y+61, r21	; 0x3d
    1446:	6e af       	std	Y+62, r22	; 0x3e
    1448:	7f af       	std	Y+63, r23	; 0x3f
    144a:	29 97       	sbiw	r28, 0x09	; 9
    144c:	c6 01       	movw	r24, r12
    144e:	b5 01       	movw	r22, r10
    1450:	a4 01       	movw	r20, r8
    1452:	93 01       	movw	r18, r6
    1454:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    1458:	7b 01       	movw	r14, r22
    145a:	8c 01       	movw	r16, r24
    145c:	c6 01       	movw	r24, r12
    145e:	b5 01       	movw	r22, r10
    1460:	a4 01       	movw	r20, r8
    1462:	93 01       	movw	r18, r6
    1464:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    1468:	ca 01       	movw	r24, r20
    146a:	b9 01       	movw	r22, r18
    146c:	29 96       	adiw	r28, 0x09	; 9
    146e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1470:	3d ad       	ldd	r19, Y+61	; 0x3d
    1472:	4e ad       	ldd	r20, Y+62	; 0x3e
    1474:	5f ad       	ldd	r21, Y+63	; 0x3f
    1476:	29 97       	sbiw	r28, 0x09	; 9
    1478:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    147c:	9b 01       	movw	r18, r22
    147e:	ac 01       	movw	r20, r24
    1480:	87 01       	movw	r16, r14
    1482:	ff 24       	eor	r15, r15
    1484:	ee 24       	eor	r14, r14
    1486:	a9 a8       	ldd	r10, Y+49	; 0x31
    1488:	ba a8       	ldd	r11, Y+50	; 0x32
    148a:	cb a8       	ldd	r12, Y+51	; 0x33
    148c:	dc a8       	ldd	r13, Y+52	; 0x34
    148e:	c6 01       	movw	r24, r12
    1490:	aa 27       	eor	r26, r26
    1492:	bb 27       	eor	r27, r27
    1494:	57 01       	movw	r10, r14
    1496:	68 01       	movw	r12, r16
    1498:	a8 2a       	or	r10, r24
    149a:	b9 2a       	or	r11, r25
    149c:	ca 2a       	or	r12, r26
    149e:	db 2a       	or	r13, r27
    14a0:	a2 16       	cp	r10, r18
    14a2:	b3 06       	cpc	r11, r19
    14a4:	c4 06       	cpc	r12, r20
    14a6:	d5 06       	cpc	r13, r21
    14a8:	90 f4       	brcc	.+36     	; 0x14ce <__umoddi3+0x5fc>
    14aa:	a2 0c       	add	r10, r2
    14ac:	b3 1c       	adc	r11, r3
    14ae:	c4 1c       	adc	r12, r4
    14b0:	d5 1c       	adc	r13, r5
    14b2:	a2 14       	cp	r10, r2
    14b4:	b3 04       	cpc	r11, r3
    14b6:	c4 04       	cpc	r12, r4
    14b8:	d5 04       	cpc	r13, r5
    14ba:	48 f0       	brcs	.+18     	; 0x14ce <__umoddi3+0x5fc>
    14bc:	a2 16       	cp	r10, r18
    14be:	b3 06       	cpc	r11, r19
    14c0:	c4 06       	cpc	r12, r20
    14c2:	d5 06       	cpc	r13, r21
    14c4:	20 f4       	brcc	.+8      	; 0x14ce <__umoddi3+0x5fc>
    14c6:	a2 0c       	add	r10, r2
    14c8:	b3 1c       	adc	r11, r3
    14ca:	c4 1c       	adc	r12, r4
    14cc:	d5 1c       	adc	r13, r5
    14ce:	a2 1a       	sub	r10, r18
    14d0:	b3 0a       	sbc	r11, r19
    14d2:	c4 0a       	sbc	r12, r20
    14d4:	d5 0a       	sbc	r13, r21
    14d6:	c6 01       	movw	r24, r12
    14d8:	b5 01       	movw	r22, r10
    14da:	a4 01       	movw	r20, r8
    14dc:	93 01       	movw	r18, r6
    14de:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    14e2:	7b 01       	movw	r14, r22
    14e4:	8c 01       	movw	r16, r24
    14e6:	c6 01       	movw	r24, r12
    14e8:	b5 01       	movw	r22, r10
    14ea:	a4 01       	movw	r20, r8
    14ec:	93 01       	movw	r18, r6
    14ee:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    14f2:	ca 01       	movw	r24, r20
    14f4:	b9 01       	movw	r22, r18
    14f6:	29 96       	adiw	r28, 0x09	; 9
    14f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    14fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    14fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    14fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1500:	29 97       	sbiw	r28, 0x09	; 9
    1502:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    1506:	9b 01       	movw	r18, r22
    1508:	ac 01       	movw	r20, r24
    150a:	87 01       	movw	r16, r14
    150c:	ff 24       	eor	r15, r15
    150e:	ee 24       	eor	r14, r14
    1510:	89 a9       	ldd	r24, Y+49	; 0x31
    1512:	9a a9       	ldd	r25, Y+50	; 0x32
    1514:	ab a9       	ldd	r26, Y+51	; 0x33
    1516:	bc a9       	ldd	r27, Y+52	; 0x34
    1518:	a0 70       	andi	r26, 0x00	; 0
    151a:	b0 70       	andi	r27, 0x00	; 0
    151c:	e8 2a       	or	r14, r24
    151e:	f9 2a       	or	r15, r25
    1520:	0a 2b       	or	r16, r26
    1522:	1b 2b       	or	r17, r27
    1524:	e2 16       	cp	r14, r18
    1526:	f3 06       	cpc	r15, r19
    1528:	04 07       	cpc	r16, r20
    152a:	15 07       	cpc	r17, r21
    152c:	90 f4       	brcc	.+36     	; 0x1552 <__umoddi3+0x680>
    152e:	e2 0c       	add	r14, r2
    1530:	f3 1c       	adc	r15, r3
    1532:	04 1d       	adc	r16, r4
    1534:	15 1d       	adc	r17, r5
    1536:	e2 14       	cp	r14, r2
    1538:	f3 04       	cpc	r15, r3
    153a:	04 05       	cpc	r16, r4
    153c:	15 05       	cpc	r17, r5
    153e:	48 f0       	brcs	.+18     	; 0x1552 <__umoddi3+0x680>
    1540:	e2 16       	cp	r14, r18
    1542:	f3 06       	cpc	r15, r19
    1544:	04 07       	cpc	r16, r20
    1546:	15 07       	cpc	r17, r21
    1548:	20 f4       	brcc	.+8      	; 0x1552 <__umoddi3+0x680>
    154a:	e2 0c       	add	r14, r2
    154c:	f3 1c       	adc	r15, r3
    154e:	04 1d       	adc	r16, r4
    1550:	15 1d       	adc	r17, r5
    1552:	e2 1a       	sub	r14, r18
    1554:	f3 0a       	sbc	r15, r19
    1556:	04 0b       	sbc	r16, r20
    1558:	15 0b       	sbc	r17, r21
    155a:	d8 01       	movw	r26, r16
    155c:	c7 01       	movw	r24, r14
    155e:	09 ac       	ldd	r0, Y+57	; 0x39
    1560:	04 c0       	rjmp	.+8      	; 0x156a <__umoddi3+0x698>
    1562:	b6 95       	lsr	r27
    1564:	a7 95       	ror	r26
    1566:	97 95       	ror	r25
    1568:	87 95       	ror	r24
    156a:	0a 94       	dec	r0
    156c:	d2 f7       	brpl	.-12     	; 0x1562 <__umoddi3+0x690>
    156e:	89 8b       	std	Y+17, r24	; 0x11
    1570:	9a 8b       	std	Y+18, r25	; 0x12
    1572:	ab 8b       	std	Y+19, r26	; 0x13
    1574:	bc 8b       	std	Y+20, r27	; 0x14
    1576:	1d 8a       	std	Y+21, r1	; 0x15
    1578:	1e 8a       	std	Y+22, r1	; 0x16
    157a:	1f 8a       	std	Y+23, r1	; 0x17
    157c:	18 8e       	std	Y+24, r1	; 0x18
    157e:	28 2f       	mov	r18, r24
    1580:	3a 89       	ldd	r19, Y+18	; 0x12
    1582:	4b 89       	ldd	r20, Y+19	; 0x13
    1584:	5c 89       	ldd	r21, Y+20	; 0x14
    1586:	6d 89       	ldd	r22, Y+21	; 0x15
    1588:	0c c3       	rjmp	.+1560   	; 0x1ba2 <__umoddi3+0xcd0>
    158a:	6a 14       	cp	r6, r10
    158c:	7b 04       	cpc	r7, r11
    158e:	8c 04       	cpc	r8, r12
    1590:	9d 04       	cpc	r9, r13
    1592:	08 f4       	brcc	.+2      	; 0x1596 <__umoddi3+0x6c4>
    1594:	09 c3       	rjmp	.+1554   	; 0x1ba8 <__umoddi3+0xcd6>
    1596:	00 e0       	ldi	r16, 0x00	; 0
    1598:	a0 16       	cp	r10, r16
    159a:	00 e0       	ldi	r16, 0x00	; 0
    159c:	b0 06       	cpc	r11, r16
    159e:	01 e0       	ldi	r16, 0x01	; 1
    15a0:	c0 06       	cpc	r12, r16
    15a2:	00 e0       	ldi	r16, 0x00	; 0
    15a4:	d0 06       	cpc	r13, r16
    15a6:	88 f4       	brcc	.+34     	; 0x15ca <__umoddi3+0x6f8>
    15a8:	1f ef       	ldi	r17, 0xFF	; 255
    15aa:	a1 16       	cp	r10, r17
    15ac:	b1 04       	cpc	r11, r1
    15ae:	c1 04       	cpc	r12, r1
    15b0:	d1 04       	cpc	r13, r1
    15b2:	39 f0       	breq	.+14     	; 0x15c2 <__umoddi3+0x6f0>
    15b4:	30 f0       	brcs	.+12     	; 0x15c2 <__umoddi3+0x6f0>
    15b6:	28 e0       	ldi	r18, 0x08	; 8
    15b8:	e2 2e       	mov	r14, r18
    15ba:	f1 2c       	mov	r15, r1
    15bc:	01 2d       	mov	r16, r1
    15be:	11 2d       	mov	r17, r1
    15c0:	18 c0       	rjmp	.+48     	; 0x15f2 <__umoddi3+0x720>
    15c2:	ee 24       	eor	r14, r14
    15c4:	ff 24       	eor	r15, r15
    15c6:	87 01       	movw	r16, r14
    15c8:	14 c0       	rjmp	.+40     	; 0x15f2 <__umoddi3+0x720>
    15ca:	40 e0       	ldi	r20, 0x00	; 0
    15cc:	a4 16       	cp	r10, r20
    15ce:	40 e0       	ldi	r20, 0x00	; 0
    15d0:	b4 06       	cpc	r11, r20
    15d2:	40 e0       	ldi	r20, 0x00	; 0
    15d4:	c4 06       	cpc	r12, r20
    15d6:	41 e0       	ldi	r20, 0x01	; 1
    15d8:	d4 06       	cpc	r13, r20
    15da:	30 f0       	brcs	.+12     	; 0x15e8 <__umoddi3+0x716>
    15dc:	98 e1       	ldi	r25, 0x18	; 24
    15de:	e9 2e       	mov	r14, r25
    15e0:	f1 2c       	mov	r15, r1
    15e2:	01 2d       	mov	r16, r1
    15e4:	11 2d       	mov	r17, r1
    15e6:	05 c0       	rjmp	.+10     	; 0x15f2 <__umoddi3+0x720>
    15e8:	80 e1       	ldi	r24, 0x10	; 16
    15ea:	e8 2e       	mov	r14, r24
    15ec:	f1 2c       	mov	r15, r1
    15ee:	01 2d       	mov	r16, r1
    15f0:	11 2d       	mov	r17, r1
    15f2:	d6 01       	movw	r26, r12
    15f4:	c5 01       	movw	r24, r10
    15f6:	0e 2c       	mov	r0, r14
    15f8:	04 c0       	rjmp	.+8      	; 0x1602 <__umoddi3+0x730>
    15fa:	b6 95       	lsr	r27
    15fc:	a7 95       	ror	r26
    15fe:	97 95       	ror	r25
    1600:	87 95       	ror	r24
    1602:	0a 94       	dec	r0
    1604:	d2 f7       	brpl	.-12     	; 0x15fa <__umoddi3+0x728>
    1606:	8a 58       	subi	r24, 0x8A	; 138
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	dc 01       	movw	r26, r24
    160c:	2c 91       	ld	r18, X
    160e:	80 e2       	ldi	r24, 0x20	; 32
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	a0 e0       	ldi	r26, 0x00	; 0
    1614:	b0 e0       	ldi	r27, 0x00	; 0
    1616:	8e 19       	sub	r24, r14
    1618:	9f 09       	sbc	r25, r15
    161a:	a0 0b       	sbc	r26, r16
    161c:	b1 0b       	sbc	r27, r17
    161e:	82 1b       	sub	r24, r18
    1620:	91 09       	sbc	r25, r1
    1622:	a1 09       	sbc	r26, r1
    1624:	b1 09       	sbc	r27, r1
    1626:	00 97       	sbiw	r24, 0x00	; 0
    1628:	a1 05       	cpc	r26, r1
    162a:	b1 05       	cpc	r27, r1
    162c:	09 f0       	breq	.+2      	; 0x1630 <__umoddi3+0x75e>
    162e:	4f c0       	rjmp	.+158    	; 0x16ce <__umoddi3+0x7fc>
    1630:	a6 14       	cp	r10, r6
    1632:	b7 04       	cpc	r11, r7
    1634:	c8 04       	cpc	r12, r8
    1636:	d9 04       	cpc	r13, r9
    1638:	58 f0       	brcs	.+22     	; 0x1650 <__umoddi3+0x77e>
    163a:	6c 96       	adiw	r28, 0x1c	; 28
    163c:	ec ac       	ldd	r14, Y+60	; 0x3c
    163e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1640:	0e ad       	ldd	r16, Y+62	; 0x3e
    1642:	1f ad       	ldd	r17, Y+63	; 0x3f
    1644:	6c 97       	sbiw	r28, 0x1c	; 28
    1646:	e2 14       	cp	r14, r2
    1648:	f3 04       	cpc	r15, r3
    164a:	04 05       	cpc	r16, r4
    164c:	15 05       	cpc	r17, r5
    164e:	68 f1       	brcs	.+90     	; 0x16aa <__umoddi3+0x7d8>
    1650:	6c 96       	adiw	r28, 0x1c	; 28
    1652:	ec ac       	ldd	r14, Y+60	; 0x3c
    1654:	fd ac       	ldd	r15, Y+61	; 0x3d
    1656:	0e ad       	ldd	r16, Y+62	; 0x3e
    1658:	1f ad       	ldd	r17, Y+63	; 0x3f
    165a:	6c 97       	sbiw	r28, 0x1c	; 28
    165c:	e2 18       	sub	r14, r2
    165e:	f3 08       	sbc	r15, r3
    1660:	04 09       	sbc	r16, r4
    1662:	15 09       	sbc	r17, r5
    1664:	a4 01       	movw	r20, r8
    1666:	93 01       	movw	r18, r6
    1668:	2a 19       	sub	r18, r10
    166a:	3b 09       	sbc	r19, r11
    166c:	4c 09       	sbc	r20, r12
    166e:	5d 09       	sbc	r21, r13
    1670:	aa 24       	eor	r10, r10
    1672:	bb 24       	eor	r11, r11
    1674:	65 01       	movw	r12, r10
    1676:	6c 96       	adiw	r28, 0x1c	; 28
    1678:	6c ad       	ldd	r22, Y+60	; 0x3c
    167a:	7d ad       	ldd	r23, Y+61	; 0x3d
    167c:	8e ad       	ldd	r24, Y+62	; 0x3e
    167e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1680:	6c 97       	sbiw	r28, 0x1c	; 28
    1682:	6e 15       	cp	r22, r14
    1684:	7f 05       	cpc	r23, r15
    1686:	80 07       	cpc	r24, r16
    1688:	91 07       	cpc	r25, r17
    168a:	28 f4       	brcc	.+10     	; 0x1696 <__umoddi3+0x7c4>
    168c:	b1 e0       	ldi	r27, 0x01	; 1
    168e:	ab 2e       	mov	r10, r27
    1690:	b1 2c       	mov	r11, r1
    1692:	c1 2c       	mov	r12, r1
    1694:	d1 2c       	mov	r13, r1
    1696:	da 01       	movw	r26, r20
    1698:	c9 01       	movw	r24, r18
    169a:	8a 19       	sub	r24, r10
    169c:	9b 09       	sbc	r25, r11
    169e:	ac 09       	sbc	r26, r12
    16a0:	bd 09       	sbc	r27, r13
    16a2:	8d ab       	std	Y+53, r24	; 0x35
    16a4:	9e ab       	std	Y+54, r25	; 0x36
    16a6:	af ab       	std	Y+55, r26	; 0x37
    16a8:	b8 af       	std	Y+56, r27	; 0x38
    16aa:	e9 8a       	std	Y+17, r14	; 0x11
    16ac:	fa 8a       	std	Y+18, r15	; 0x12
    16ae:	0b 8b       	std	Y+19, r16	; 0x13
    16b0:	1c 8b       	std	Y+20, r17	; 0x14
    16b2:	6d a8       	ldd	r6, Y+53	; 0x35
    16b4:	7e a8       	ldd	r7, Y+54	; 0x36
    16b6:	8f a8       	ldd	r8, Y+55	; 0x37
    16b8:	98 ac       	ldd	r9, Y+56	; 0x38
    16ba:	6d 8a       	std	Y+21, r6	; 0x15
    16bc:	7e 8a       	std	Y+22, r7	; 0x16
    16be:	8f 8a       	std	Y+23, r8	; 0x17
    16c0:	98 8e       	std	Y+24, r9	; 0x18
    16c2:	2e 2d       	mov	r18, r14
    16c4:	3a 89       	ldd	r19, Y+18	; 0x12
    16c6:	4b 89       	ldd	r20, Y+19	; 0x13
    16c8:	5c 89       	ldd	r21, Y+20	; 0x14
    16ca:	6d a9       	ldd	r22, Y+53	; 0x35
    16cc:	6a c2       	rjmp	.+1236   	; 0x1ba2 <__umoddi3+0xcd0>
    16ce:	67 96       	adiw	r28, 0x17	; 23
    16d0:	8f af       	std	Y+63, r24	; 0x3f
    16d2:	67 97       	sbiw	r28, 0x17	; 23
    16d4:	a6 01       	movw	r20, r12
    16d6:	95 01       	movw	r18, r10
    16d8:	08 2e       	mov	r0, r24
    16da:	04 c0       	rjmp	.+8      	; 0x16e4 <__umoddi3+0x812>
    16dc:	22 0f       	add	r18, r18
    16de:	33 1f       	adc	r19, r19
    16e0:	44 1f       	adc	r20, r20
    16e2:	55 1f       	adc	r21, r21
    16e4:	0a 94       	dec	r0
    16e6:	d2 f7       	brpl	.-12     	; 0x16dc <__umoddi3+0x80a>
    16e8:	a0 e2       	ldi	r26, 0x20	; 32
    16ea:	aa 2e       	mov	r10, r26
    16ec:	a8 1a       	sub	r10, r24
    16ee:	66 96       	adiw	r28, 0x16	; 22
    16f0:	af ae       	std	Y+63, r10	; 0x3f
    16f2:	66 97       	sbiw	r28, 0x16	; 22
    16f4:	d2 01       	movw	r26, r4
    16f6:	c1 01       	movw	r24, r2
    16f8:	04 c0       	rjmp	.+8      	; 0x1702 <__umoddi3+0x830>
    16fa:	b6 95       	lsr	r27
    16fc:	a7 95       	ror	r26
    16fe:	97 95       	ror	r25
    1700:	87 95       	ror	r24
    1702:	aa 94       	dec	r10
    1704:	d2 f7       	brpl	.-12     	; 0x16fa <__umoddi3+0x828>
    1706:	6c 01       	movw	r12, r24
    1708:	7d 01       	movw	r14, r26
    170a:	c2 2a       	or	r12, r18
    170c:	d3 2a       	or	r13, r19
    170e:	e4 2a       	or	r14, r20
    1710:	f5 2a       	or	r15, r21
    1712:	c9 a6       	std	Y+41, r12	; 0x29
    1714:	da a6       	std	Y+42, r13	; 0x2a
    1716:	eb a6       	std	Y+43, r14	; 0x2b
    1718:	fc a6       	std	Y+44, r15	; 0x2c
    171a:	82 01       	movw	r16, r4
    171c:	71 01       	movw	r14, r2
    171e:	67 96       	adiw	r28, 0x17	; 23
    1720:	0f ac       	ldd	r0, Y+63	; 0x3f
    1722:	67 97       	sbiw	r28, 0x17	; 23
    1724:	04 c0       	rjmp	.+8      	; 0x172e <__umoddi3+0x85c>
    1726:	ee 0c       	add	r14, r14
    1728:	ff 1c       	adc	r15, r15
    172a:	00 1f       	adc	r16, r16
    172c:	11 1f       	adc	r17, r17
    172e:	0a 94       	dec	r0
    1730:	d2 f7       	brpl	.-12     	; 0x1726 <__umoddi3+0x854>
    1732:	ed a2       	std	Y+37, r14	; 0x25
    1734:	fe a2       	std	Y+38, r15	; 0x26
    1736:	0f a3       	std	Y+39, r16	; 0x27
    1738:	18 a7       	std	Y+40, r17	; 0x28
    173a:	64 01       	movw	r12, r8
    173c:	53 01       	movw	r10, r6
    173e:	66 96       	adiw	r28, 0x16	; 22
    1740:	0f ac       	ldd	r0, Y+63	; 0x3f
    1742:	66 97       	sbiw	r28, 0x16	; 22
    1744:	04 c0       	rjmp	.+8      	; 0x174e <__umoddi3+0x87c>
    1746:	d6 94       	lsr	r13
    1748:	c7 94       	ror	r12
    174a:	b7 94       	ror	r11
    174c:	a7 94       	ror	r10
    174e:	0a 94       	dec	r0
    1750:	d2 f7       	brpl	.-12     	; 0x1746 <__umoddi3+0x874>
    1752:	a4 01       	movw	r20, r8
    1754:	93 01       	movw	r18, r6
    1756:	67 96       	adiw	r28, 0x17	; 23
    1758:	0f ac       	ldd	r0, Y+63	; 0x3f
    175a:	67 97       	sbiw	r28, 0x17	; 23
    175c:	04 c0       	rjmp	.+8      	; 0x1766 <__umoddi3+0x894>
    175e:	22 0f       	add	r18, r18
    1760:	33 1f       	adc	r19, r19
    1762:	44 1f       	adc	r20, r20
    1764:	55 1f       	adc	r21, r21
    1766:	0a 94       	dec	r0
    1768:	d2 f7       	brpl	.-12     	; 0x175e <__umoddi3+0x88c>
    176a:	6c 96       	adiw	r28, 0x1c	; 28
    176c:	8c ad       	ldd	r24, Y+60	; 0x3c
    176e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1770:	ae ad       	ldd	r26, Y+62	; 0x3e
    1772:	bf ad       	ldd	r27, Y+63	; 0x3f
    1774:	6c 97       	sbiw	r28, 0x1c	; 28
    1776:	66 96       	adiw	r28, 0x16	; 22
    1778:	0f ac       	ldd	r0, Y+63	; 0x3f
    177a:	66 97       	sbiw	r28, 0x16	; 22
    177c:	04 c0       	rjmp	.+8      	; 0x1786 <__umoddi3+0x8b4>
    177e:	b6 95       	lsr	r27
    1780:	a7 95       	ror	r26
    1782:	97 95       	ror	r25
    1784:	87 95       	ror	r24
    1786:	0a 94       	dec	r0
    1788:	d2 f7       	brpl	.-12     	; 0x177e <__umoddi3+0x8ac>
    178a:	3c 01       	movw	r6, r24
    178c:	4d 01       	movw	r8, r26
    178e:	62 2a       	or	r6, r18
    1790:	73 2a       	or	r7, r19
    1792:	84 2a       	or	r8, r20
    1794:	95 2a       	or	r9, r21
    1796:	69 a2       	std	Y+33, r6	; 0x21
    1798:	7a a2       	std	Y+34, r7	; 0x22
    179a:	8b a2       	std	Y+35, r8	; 0x23
    179c:	9c a2       	std	Y+36, r9	; 0x24
    179e:	6c 96       	adiw	r28, 0x1c	; 28
    17a0:	ec ac       	ldd	r14, Y+60	; 0x3c
    17a2:	fd ac       	ldd	r15, Y+61	; 0x3d
    17a4:	0e ad       	ldd	r16, Y+62	; 0x3e
    17a6:	1f ad       	ldd	r17, Y+63	; 0x3f
    17a8:	6c 97       	sbiw	r28, 0x1c	; 28
    17aa:	67 96       	adiw	r28, 0x17	; 23
    17ac:	0f ac       	ldd	r0, Y+63	; 0x3f
    17ae:	67 97       	sbiw	r28, 0x17	; 23
    17b0:	04 c0       	rjmp	.+8      	; 0x17ba <__umoddi3+0x8e8>
    17b2:	ee 0c       	add	r14, r14
    17b4:	ff 1c       	adc	r15, r15
    17b6:	00 1f       	adc	r16, r16
    17b8:	11 1f       	adc	r17, r17
    17ba:	0a 94       	dec	r0
    17bc:	d2 f7       	brpl	.-12     	; 0x17b2 <__umoddi3+0x8e0>
    17be:	ed 8e       	std	Y+29, r14	; 0x1d
    17c0:	fe 8e       	std	Y+30, r15	; 0x1e
    17c2:	0f 8f       	std	Y+31, r16	; 0x1f
    17c4:	18 a3       	std	Y+32, r17	; 0x20
    17c6:	49 a5       	ldd	r20, Y+41	; 0x29
    17c8:	5a a5       	ldd	r21, Y+42	; 0x2a
    17ca:	6b a5       	ldd	r22, Y+43	; 0x2b
    17cc:	7c a5       	ldd	r23, Y+44	; 0x2c
    17ce:	3b 01       	movw	r6, r22
    17d0:	88 24       	eor	r8, r8
    17d2:	99 24       	eor	r9, r9
    17d4:	60 70       	andi	r22, 0x00	; 0
    17d6:	70 70       	andi	r23, 0x00	; 0
    17d8:	2d 96       	adiw	r28, 0x0d	; 13
    17da:	4c af       	std	Y+60, r20	; 0x3c
    17dc:	5d af       	std	Y+61, r21	; 0x3d
    17de:	6e af       	std	Y+62, r22	; 0x3e
    17e0:	7f af       	std	Y+63, r23	; 0x3f
    17e2:	2d 97       	sbiw	r28, 0x0d	; 13
    17e4:	c6 01       	movw	r24, r12
    17e6:	b5 01       	movw	r22, r10
    17e8:	a4 01       	movw	r20, r8
    17ea:	93 01       	movw	r18, r6
    17ec:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    17f0:	7b 01       	movw	r14, r22
    17f2:	8c 01       	movw	r16, r24
    17f4:	c6 01       	movw	r24, r12
    17f6:	b5 01       	movw	r22, r10
    17f8:	a4 01       	movw	r20, r8
    17fa:	93 01       	movw	r18, r6
    17fc:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    1800:	c9 01       	movw	r24, r18
    1802:	da 01       	movw	r26, r20
    1804:	1c 01       	movw	r2, r24
    1806:	2d 01       	movw	r4, r26
    1808:	c2 01       	movw	r24, r4
    180a:	b1 01       	movw	r22, r2
    180c:	2d 96       	adiw	r28, 0x0d	; 13
    180e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1810:	3d ad       	ldd	r19, Y+61	; 0x3d
    1812:	4e ad       	ldd	r20, Y+62	; 0x3e
    1814:	5f ad       	ldd	r21, Y+63	; 0x3f
    1816:	2d 97       	sbiw	r28, 0x0d	; 13
    1818:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    181c:	9b 01       	movw	r18, r22
    181e:	ac 01       	movw	r20, r24
    1820:	87 01       	movw	r16, r14
    1822:	ff 24       	eor	r15, r15
    1824:	ee 24       	eor	r14, r14
    1826:	a9 a0       	ldd	r10, Y+33	; 0x21
    1828:	ba a0       	ldd	r11, Y+34	; 0x22
    182a:	cb a0       	ldd	r12, Y+35	; 0x23
    182c:	dc a0       	ldd	r13, Y+36	; 0x24
    182e:	c6 01       	movw	r24, r12
    1830:	aa 27       	eor	r26, r26
    1832:	bb 27       	eor	r27, r27
    1834:	57 01       	movw	r10, r14
    1836:	68 01       	movw	r12, r16
    1838:	a8 2a       	or	r10, r24
    183a:	b9 2a       	or	r11, r25
    183c:	ca 2a       	or	r12, r26
    183e:	db 2a       	or	r13, r27
    1840:	a2 16       	cp	r10, r18
    1842:	b3 06       	cpc	r11, r19
    1844:	c4 06       	cpc	r12, r20
    1846:	d5 06       	cpc	r13, r21
    1848:	00 f5       	brcc	.+64     	; 0x188a <__umoddi3+0x9b8>
    184a:	08 94       	sec
    184c:	21 08       	sbc	r2, r1
    184e:	31 08       	sbc	r3, r1
    1850:	41 08       	sbc	r4, r1
    1852:	51 08       	sbc	r5, r1
    1854:	e9 a4       	ldd	r14, Y+41	; 0x29
    1856:	fa a4       	ldd	r15, Y+42	; 0x2a
    1858:	0b a5       	ldd	r16, Y+43	; 0x2b
    185a:	1c a5       	ldd	r17, Y+44	; 0x2c
    185c:	ae 0c       	add	r10, r14
    185e:	bf 1c       	adc	r11, r15
    1860:	c0 1e       	adc	r12, r16
    1862:	d1 1e       	adc	r13, r17
    1864:	ae 14       	cp	r10, r14
    1866:	bf 04       	cpc	r11, r15
    1868:	c0 06       	cpc	r12, r16
    186a:	d1 06       	cpc	r13, r17
    186c:	70 f0       	brcs	.+28     	; 0x188a <__umoddi3+0x9b8>
    186e:	a2 16       	cp	r10, r18
    1870:	b3 06       	cpc	r11, r19
    1872:	c4 06       	cpc	r12, r20
    1874:	d5 06       	cpc	r13, r21
    1876:	48 f4       	brcc	.+18     	; 0x188a <__umoddi3+0x9b8>
    1878:	08 94       	sec
    187a:	21 08       	sbc	r2, r1
    187c:	31 08       	sbc	r3, r1
    187e:	41 08       	sbc	r4, r1
    1880:	51 08       	sbc	r5, r1
    1882:	ae 0c       	add	r10, r14
    1884:	bf 1c       	adc	r11, r15
    1886:	c0 1e       	adc	r12, r16
    1888:	d1 1e       	adc	r13, r17
    188a:	a2 1a       	sub	r10, r18
    188c:	b3 0a       	sbc	r11, r19
    188e:	c4 0a       	sbc	r12, r20
    1890:	d5 0a       	sbc	r13, r21
    1892:	c6 01       	movw	r24, r12
    1894:	b5 01       	movw	r22, r10
    1896:	a4 01       	movw	r20, r8
    1898:	93 01       	movw	r18, r6
    189a:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    189e:	7b 01       	movw	r14, r22
    18a0:	8c 01       	movw	r16, r24
    18a2:	c6 01       	movw	r24, r12
    18a4:	b5 01       	movw	r22, r10
    18a6:	a4 01       	movw	r20, r8
    18a8:	93 01       	movw	r18, r6
    18aa:	0e 94 88 3c 	call	0x7910	; 0x7910 <__udivmodsi4>
    18ae:	c9 01       	movw	r24, r18
    18b0:	da 01       	movw	r26, r20
    18b2:	3c 01       	movw	r6, r24
    18b4:	4d 01       	movw	r8, r26
    18b6:	c4 01       	movw	r24, r8
    18b8:	b3 01       	movw	r22, r6
    18ba:	2d 96       	adiw	r28, 0x0d	; 13
    18bc:	2c ad       	ldd	r18, Y+60	; 0x3c
    18be:	3d ad       	ldd	r19, Y+61	; 0x3d
    18c0:	4e ad       	ldd	r20, Y+62	; 0x3e
    18c2:	5f ad       	ldd	r21, Y+63	; 0x3f
    18c4:	2d 97       	sbiw	r28, 0x0d	; 13
    18c6:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    18ca:	9b 01       	movw	r18, r22
    18cc:	ac 01       	movw	r20, r24
    18ce:	87 01       	movw	r16, r14
    18d0:	ff 24       	eor	r15, r15
    18d2:	ee 24       	eor	r14, r14
    18d4:	89 a1       	ldd	r24, Y+33	; 0x21
    18d6:	9a a1       	ldd	r25, Y+34	; 0x22
    18d8:	ab a1       	ldd	r26, Y+35	; 0x23
    18da:	bc a1       	ldd	r27, Y+36	; 0x24
    18dc:	a0 70       	andi	r26, 0x00	; 0
    18de:	b0 70       	andi	r27, 0x00	; 0
    18e0:	57 01       	movw	r10, r14
    18e2:	68 01       	movw	r12, r16
    18e4:	a8 2a       	or	r10, r24
    18e6:	b9 2a       	or	r11, r25
    18e8:	ca 2a       	or	r12, r26
    18ea:	db 2a       	or	r13, r27
    18ec:	a2 16       	cp	r10, r18
    18ee:	b3 06       	cpc	r11, r19
    18f0:	c4 06       	cpc	r12, r20
    18f2:	d5 06       	cpc	r13, r21
    18f4:	00 f5       	brcc	.+64     	; 0x1936 <__umoddi3+0xa64>
    18f6:	08 94       	sec
    18f8:	61 08       	sbc	r6, r1
    18fa:	71 08       	sbc	r7, r1
    18fc:	81 08       	sbc	r8, r1
    18fe:	91 08       	sbc	r9, r1
    1900:	69 a5       	ldd	r22, Y+41	; 0x29
    1902:	7a a5       	ldd	r23, Y+42	; 0x2a
    1904:	8b a5       	ldd	r24, Y+43	; 0x2b
    1906:	9c a5       	ldd	r25, Y+44	; 0x2c
    1908:	a6 0e       	add	r10, r22
    190a:	b7 1e       	adc	r11, r23
    190c:	c8 1e       	adc	r12, r24
    190e:	d9 1e       	adc	r13, r25
    1910:	a6 16       	cp	r10, r22
    1912:	b7 06       	cpc	r11, r23
    1914:	c8 06       	cpc	r12, r24
    1916:	d9 06       	cpc	r13, r25
    1918:	70 f0       	brcs	.+28     	; 0x1936 <__umoddi3+0xa64>
    191a:	a2 16       	cp	r10, r18
    191c:	b3 06       	cpc	r11, r19
    191e:	c4 06       	cpc	r12, r20
    1920:	d5 06       	cpc	r13, r21
    1922:	48 f4       	brcc	.+18     	; 0x1936 <__umoddi3+0xa64>
    1924:	08 94       	sec
    1926:	61 08       	sbc	r6, r1
    1928:	71 08       	sbc	r7, r1
    192a:	81 08       	sbc	r8, r1
    192c:	91 08       	sbc	r9, r1
    192e:	a6 0e       	add	r10, r22
    1930:	b7 1e       	adc	r11, r23
    1932:	c8 1e       	adc	r12, r24
    1934:	d9 1e       	adc	r13, r25
    1936:	d6 01       	movw	r26, r12
    1938:	c5 01       	movw	r24, r10
    193a:	82 1b       	sub	r24, r18
    193c:	93 0b       	sbc	r25, r19
    193e:	a4 0b       	sbc	r26, r20
    1940:	b5 0b       	sbc	r27, r21
    1942:	89 8f       	std	Y+25, r24	; 0x19
    1944:	9a 8f       	std	Y+26, r25	; 0x1a
    1946:	ab 8f       	std	Y+27, r26	; 0x1b
    1948:	bc 8f       	std	Y+28, r27	; 0x1c
    194a:	d1 01       	movw	r26, r2
    194c:	99 27       	eor	r25, r25
    194e:	88 27       	eor	r24, r24
    1950:	84 01       	movw	r16, r8
    1952:	73 01       	movw	r14, r6
    1954:	e8 2a       	or	r14, r24
    1956:	f9 2a       	or	r15, r25
    1958:	0a 2b       	or	r16, r26
    195a:	1b 2b       	or	r17, r27
    195c:	4f ef       	ldi	r20, 0xFF	; 255
    195e:	a4 2e       	mov	r10, r20
    1960:	4f ef       	ldi	r20, 0xFF	; 255
    1962:	b4 2e       	mov	r11, r20
    1964:	c1 2c       	mov	r12, r1
    1966:	d1 2c       	mov	r13, r1
    1968:	ae 20       	and	r10, r14
    196a:	bf 20       	and	r11, r15
    196c:	c0 22       	and	r12, r16
    196e:	d1 22       	and	r13, r17
    1970:	78 01       	movw	r14, r16
    1972:	00 27       	eor	r16, r16
    1974:	11 27       	eor	r17, r17
    1976:	6d a0       	ldd	r6, Y+37	; 0x25
    1978:	7e a0       	ldd	r7, Y+38	; 0x26
    197a:	8f a0       	ldd	r8, Y+39	; 0x27
    197c:	98 a4       	ldd	r9, Y+40	; 0x28
    197e:	4f ef       	ldi	r20, 0xFF	; 255
    1980:	5f ef       	ldi	r21, 0xFF	; 255
    1982:	60 e0       	ldi	r22, 0x00	; 0
    1984:	70 e0       	ldi	r23, 0x00	; 0
    1986:	64 22       	and	r6, r20
    1988:	75 22       	and	r7, r21
    198a:	86 22       	and	r8, r22
    198c:	97 22       	and	r9, r23
    198e:	8d a1       	ldd	r24, Y+37	; 0x25
    1990:	9e a1       	ldd	r25, Y+38	; 0x26
    1992:	af a1       	ldd	r26, Y+39	; 0x27
    1994:	b8 a5       	ldd	r27, Y+40	; 0x28
    1996:	bd 01       	movw	r22, r26
    1998:	88 27       	eor	r24, r24
    199a:	99 27       	eor	r25, r25
    199c:	65 96       	adiw	r28, 0x15	; 21
    199e:	6c af       	std	Y+60, r22	; 0x3c
    19a0:	7d af       	std	Y+61, r23	; 0x3d
    19a2:	8e af       	std	Y+62, r24	; 0x3e
    19a4:	9f af       	std	Y+63, r25	; 0x3f
    19a6:	65 97       	sbiw	r28, 0x15	; 21
    19a8:	c6 01       	movw	r24, r12
    19aa:	b5 01       	movw	r22, r10
    19ac:	a4 01       	movw	r20, r8
    19ae:	93 01       	movw	r18, r6
    19b0:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    19b4:	61 96       	adiw	r28, 0x11	; 17
    19b6:	6c af       	std	Y+60, r22	; 0x3c
    19b8:	7d af       	std	Y+61, r23	; 0x3d
    19ba:	8e af       	std	Y+62, r24	; 0x3e
    19bc:	9f af       	std	Y+63, r25	; 0x3f
    19be:	61 97       	sbiw	r28, 0x11	; 17
    19c0:	c6 01       	movw	r24, r12
    19c2:	b5 01       	movw	r22, r10
    19c4:	65 96       	adiw	r28, 0x15	; 21
    19c6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19c8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ca:	4e ad       	ldd	r20, Y+62	; 0x3e
    19cc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19ce:	65 97       	sbiw	r28, 0x15	; 21
    19d0:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    19d4:	1b 01       	movw	r2, r22
    19d6:	2c 01       	movw	r4, r24
    19d8:	c8 01       	movw	r24, r16
    19da:	b7 01       	movw	r22, r14
    19dc:	a4 01       	movw	r20, r8
    19de:	93 01       	movw	r18, r6
    19e0:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    19e4:	5b 01       	movw	r10, r22
    19e6:	6c 01       	movw	r12, r24
    19e8:	c8 01       	movw	r24, r16
    19ea:	b7 01       	movw	r22, r14
    19ec:	65 96       	adiw	r28, 0x15	; 21
    19ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    19f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    19f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    19f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    19f6:	65 97       	sbiw	r28, 0x15	; 21
    19f8:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    19fc:	7b 01       	movw	r14, r22
    19fe:	8c 01       	movw	r16, r24
    1a00:	a6 01       	movw	r20, r12
    1a02:	95 01       	movw	r18, r10
    1a04:	22 0d       	add	r18, r2
    1a06:	33 1d       	adc	r19, r3
    1a08:	44 1d       	adc	r20, r4
    1a0a:	55 1d       	adc	r21, r5
    1a0c:	61 96       	adiw	r28, 0x11	; 17
    1a0e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a10:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a12:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a14:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a16:	61 97       	sbiw	r28, 0x11	; 17
    1a18:	c4 01       	movw	r24, r8
    1a1a:	aa 27       	eor	r26, r26
    1a1c:	bb 27       	eor	r27, r27
    1a1e:	28 0f       	add	r18, r24
    1a20:	39 1f       	adc	r19, r25
    1a22:	4a 1f       	adc	r20, r26
    1a24:	5b 1f       	adc	r21, r27
    1a26:	2a 15       	cp	r18, r10
    1a28:	3b 05       	cpc	r19, r11
    1a2a:	4c 05       	cpc	r20, r12
    1a2c:	5d 05       	cpc	r21, r13
    1a2e:	48 f4       	brcc	.+18     	; 0x1a42 <__umoddi3+0xb70>
    1a30:	81 2c       	mov	r8, r1
    1a32:	91 2c       	mov	r9, r1
    1a34:	e1 e0       	ldi	r30, 0x01	; 1
    1a36:	ae 2e       	mov	r10, r30
    1a38:	b1 2c       	mov	r11, r1
    1a3a:	e8 0c       	add	r14, r8
    1a3c:	f9 1c       	adc	r15, r9
    1a3e:	0a 1d       	adc	r16, r10
    1a40:	1b 1d       	adc	r17, r11
    1a42:	ca 01       	movw	r24, r20
    1a44:	aa 27       	eor	r26, r26
    1a46:	bb 27       	eor	r27, r27
    1a48:	57 01       	movw	r10, r14
    1a4a:	68 01       	movw	r12, r16
    1a4c:	a8 0e       	add	r10, r24
    1a4e:	b9 1e       	adc	r11, r25
    1a50:	ca 1e       	adc	r12, r26
    1a52:	db 1e       	adc	r13, r27
    1a54:	a9 01       	movw	r20, r18
    1a56:	33 27       	eor	r19, r19
    1a58:	22 27       	eor	r18, r18
    1a5a:	61 96       	adiw	r28, 0x11	; 17
    1a5c:	8c ad       	ldd	r24, Y+60	; 0x3c
    1a5e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1a60:	ae ad       	ldd	r26, Y+62	; 0x3e
    1a62:	bf ad       	ldd	r27, Y+63	; 0x3f
    1a64:	61 97       	sbiw	r28, 0x11	; 17
    1a66:	a0 70       	andi	r26, 0x00	; 0
    1a68:	b0 70       	andi	r27, 0x00	; 0
    1a6a:	28 0f       	add	r18, r24
    1a6c:	39 1f       	adc	r19, r25
    1a6e:	4a 1f       	adc	r20, r26
    1a70:	5b 1f       	adc	r21, r27
    1a72:	e9 8c       	ldd	r14, Y+25	; 0x19
    1a74:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1a76:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1a78:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1a7a:	ea 14       	cp	r14, r10
    1a7c:	fb 04       	cpc	r15, r11
    1a7e:	0c 05       	cpc	r16, r12
    1a80:	1d 05       	cpc	r17, r13
    1a82:	70 f0       	brcs	.+28     	; 0x1aa0 <__umoddi3+0xbce>
    1a84:	ae 14       	cp	r10, r14
    1a86:	bf 04       	cpc	r11, r15
    1a88:	c0 06       	cpc	r12, r16
    1a8a:	d1 06       	cpc	r13, r17
    1a8c:	69 f5       	brne	.+90     	; 0x1ae8 <__umoddi3+0xc16>
    1a8e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a90:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a92:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a94:	98 a1       	ldd	r25, Y+32	; 0x20
    1a96:	62 17       	cp	r22, r18
    1a98:	73 07       	cpc	r23, r19
    1a9a:	84 07       	cpc	r24, r20
    1a9c:	95 07       	cpc	r25, r21
    1a9e:	20 f5       	brcc	.+72     	; 0x1ae8 <__umoddi3+0xc16>
    1aa0:	da 01       	movw	r26, r20
    1aa2:	c9 01       	movw	r24, r18
    1aa4:	6d a0       	ldd	r6, Y+37	; 0x25
    1aa6:	7e a0       	ldd	r7, Y+38	; 0x26
    1aa8:	8f a0       	ldd	r8, Y+39	; 0x27
    1aaa:	98 a4       	ldd	r9, Y+40	; 0x28
    1aac:	86 19       	sub	r24, r6
    1aae:	97 09       	sbc	r25, r7
    1ab0:	a8 09       	sbc	r26, r8
    1ab2:	b9 09       	sbc	r27, r9
    1ab4:	e9 a4       	ldd	r14, Y+41	; 0x29
    1ab6:	fa a4       	ldd	r15, Y+42	; 0x2a
    1ab8:	0b a5       	ldd	r16, Y+43	; 0x2b
    1aba:	1c a5       	ldd	r17, Y+44	; 0x2c
    1abc:	ae 18       	sub	r10, r14
    1abe:	bf 08       	sbc	r11, r15
    1ac0:	c0 0a       	sbc	r12, r16
    1ac2:	d1 0a       	sbc	r13, r17
    1ac4:	ee 24       	eor	r14, r14
    1ac6:	ff 24       	eor	r15, r15
    1ac8:	87 01       	movw	r16, r14
    1aca:	28 17       	cp	r18, r24
    1acc:	39 07       	cpc	r19, r25
    1ace:	4a 07       	cpc	r20, r26
    1ad0:	5b 07       	cpc	r21, r27
    1ad2:	28 f4       	brcc	.+10     	; 0x1ade <__umoddi3+0xc0c>
    1ad4:	21 e0       	ldi	r18, 0x01	; 1
    1ad6:	e2 2e       	mov	r14, r18
    1ad8:	f1 2c       	mov	r15, r1
    1ada:	01 2d       	mov	r16, r1
    1adc:	11 2d       	mov	r17, r1
    1ade:	ae 18       	sub	r10, r14
    1ae0:	bf 08       	sbc	r11, r15
    1ae2:	c0 0a       	sbc	r12, r16
    1ae4:	d1 0a       	sbc	r13, r17
    1ae6:	02 c0       	rjmp	.+4      	; 0x1aec <__umoddi3+0xc1a>
    1ae8:	da 01       	movw	r26, r20
    1aea:	c9 01       	movw	r24, r18
    1aec:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1aee:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1af0:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1af2:	98 a0       	ldd	r9, Y+32	; 0x20
    1af4:	68 1a       	sub	r6, r24
    1af6:	79 0a       	sbc	r7, r25
    1af8:	8a 0a       	sbc	r8, r26
    1afa:	9b 0a       	sbc	r9, r27
    1afc:	49 8d       	ldd	r20, Y+25	; 0x19
    1afe:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b00:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b02:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b04:	4a 19       	sub	r20, r10
    1b06:	5b 09       	sbc	r21, r11
    1b08:	6c 09       	sbc	r22, r12
    1b0a:	7d 09       	sbc	r23, r13
    1b0c:	5a 01       	movw	r10, r20
    1b0e:	6b 01       	movw	r12, r22
    1b10:	22 24       	eor	r2, r2
    1b12:	33 24       	eor	r3, r3
    1b14:	21 01       	movw	r4, r2
    1b16:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b18:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b1a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b1c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b1e:	66 15       	cp	r22, r6
    1b20:	77 05       	cpc	r23, r7
    1b22:	88 05       	cpc	r24, r8
    1b24:	99 05       	cpc	r25, r9
    1b26:	28 f4       	brcc	.+10     	; 0x1b32 <__umoddi3+0xc60>
    1b28:	81 e0       	ldi	r24, 0x01	; 1
    1b2a:	28 2e       	mov	r2, r24
    1b2c:	31 2c       	mov	r3, r1
    1b2e:	41 2c       	mov	r4, r1
    1b30:	51 2c       	mov	r5, r1
    1b32:	86 01       	movw	r16, r12
    1b34:	75 01       	movw	r14, r10
    1b36:	e2 18       	sub	r14, r2
    1b38:	f3 08       	sbc	r15, r3
    1b3a:	04 09       	sbc	r16, r4
    1b3c:	15 09       	sbc	r17, r5
    1b3e:	a8 01       	movw	r20, r16
    1b40:	97 01       	movw	r18, r14
    1b42:	66 96       	adiw	r28, 0x16	; 22
    1b44:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b46:	66 97       	sbiw	r28, 0x16	; 22
    1b48:	04 c0       	rjmp	.+8      	; 0x1b52 <__umoddi3+0xc80>
    1b4a:	22 0f       	add	r18, r18
    1b4c:	33 1f       	adc	r19, r19
    1b4e:	44 1f       	adc	r20, r20
    1b50:	55 1f       	adc	r21, r21
    1b52:	0a 94       	dec	r0
    1b54:	d2 f7       	brpl	.-12     	; 0x1b4a <__umoddi3+0xc78>
    1b56:	d4 01       	movw	r26, r8
    1b58:	c3 01       	movw	r24, r6
    1b5a:	67 96       	adiw	r28, 0x17	; 23
    1b5c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b5e:	67 97       	sbiw	r28, 0x17	; 23
    1b60:	04 c0       	rjmp	.+8      	; 0x1b6a <__umoddi3+0xc98>
    1b62:	b6 95       	lsr	r27
    1b64:	a7 95       	ror	r26
    1b66:	97 95       	ror	r25
    1b68:	87 95       	ror	r24
    1b6a:	0a 94       	dec	r0
    1b6c:	d2 f7       	brpl	.-12     	; 0x1b62 <__umoddi3+0xc90>
    1b6e:	28 2b       	or	r18, r24
    1b70:	39 2b       	or	r19, r25
    1b72:	4a 2b       	or	r20, r26
    1b74:	5b 2b       	or	r21, r27
    1b76:	29 8b       	std	Y+17, r18	; 0x11
    1b78:	3a 8b       	std	Y+18, r19	; 0x12
    1b7a:	4b 8b       	std	Y+19, r20	; 0x13
    1b7c:	5c 8b       	std	Y+20, r21	; 0x14
    1b7e:	67 96       	adiw	r28, 0x17	; 23
    1b80:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b82:	67 97       	sbiw	r28, 0x17	; 23
    1b84:	04 c0       	rjmp	.+8      	; 0x1b8e <__umoddi3+0xcbc>
    1b86:	16 95       	lsr	r17
    1b88:	07 95       	ror	r16
    1b8a:	f7 94       	ror	r15
    1b8c:	e7 94       	ror	r14
    1b8e:	0a 94       	dec	r0
    1b90:	d2 f7       	brpl	.-12     	; 0x1b86 <__umoddi3+0xcb4>
    1b92:	ed 8a       	std	Y+21, r14	; 0x15
    1b94:	fe 8a       	std	Y+22, r15	; 0x16
    1b96:	0f 8b       	std	Y+23, r16	; 0x17
    1b98:	18 8f       	std	Y+24, r17	; 0x18
    1b9a:	3a 89       	ldd	r19, Y+18	; 0x12
    1b9c:	4b 89       	ldd	r20, Y+19	; 0x13
    1b9e:	5c 89       	ldd	r21, Y+20	; 0x14
    1ba0:	6e 2d       	mov	r22, r14
    1ba2:	7e 89       	ldd	r23, Y+22	; 0x16
    1ba4:	8f 89       	ldd	r24, Y+23	; 0x17
    1ba6:	98 8d       	ldd	r25, Y+24	; 0x18
    1ba8:	c5 5a       	subi	r28, 0xA5	; 165
    1baa:	df 4f       	sbci	r29, 0xFF	; 255
    1bac:	e2 e1       	ldi	r30, 0x12	; 18
    1bae:	0c 94 c6 3c 	jmp	0x798c	; 0x798c <__epilogue_restores__>

00001bb2 <_fpadd_parts>:
    1bb2:	a0 e0       	ldi	r26, 0x00	; 0
    1bb4:	b0 e0       	ldi	r27, 0x00	; 0
    1bb6:	ef ed       	ldi	r30, 0xDF	; 223
    1bb8:	fd e0       	ldi	r31, 0x0D	; 13
    1bba:	0c 94 aa 3c 	jmp	0x7954	; 0x7954 <__prologue_saves__>
    1bbe:	dc 01       	movw	r26, r24
    1bc0:	2b 01       	movw	r4, r22
    1bc2:	fa 01       	movw	r30, r20
    1bc4:	9c 91       	ld	r25, X
    1bc6:	92 30       	cpi	r25, 0x02	; 2
    1bc8:	08 f4       	brcc	.+2      	; 0x1bcc <_fpadd_parts+0x1a>
    1bca:	39 c1       	rjmp	.+626    	; 0x1e3e <_fpadd_parts+0x28c>
    1bcc:	eb 01       	movw	r28, r22
    1bce:	88 81       	ld	r24, Y
    1bd0:	82 30       	cpi	r24, 0x02	; 2
    1bd2:	08 f4       	brcc	.+2      	; 0x1bd6 <_fpadd_parts+0x24>
    1bd4:	33 c1       	rjmp	.+614    	; 0x1e3c <_fpadd_parts+0x28a>
    1bd6:	94 30       	cpi	r25, 0x04	; 4
    1bd8:	69 f4       	brne	.+26     	; 0x1bf4 <_fpadd_parts+0x42>
    1bda:	84 30       	cpi	r24, 0x04	; 4
    1bdc:	09 f0       	breq	.+2      	; 0x1be0 <_fpadd_parts+0x2e>
    1bde:	2f c1       	rjmp	.+606    	; 0x1e3e <_fpadd_parts+0x28c>
    1be0:	11 96       	adiw	r26, 0x01	; 1
    1be2:	9c 91       	ld	r25, X
    1be4:	11 97       	sbiw	r26, 0x01	; 1
    1be6:	89 81       	ldd	r24, Y+1	; 0x01
    1be8:	98 17       	cp	r25, r24
    1bea:	09 f4       	brne	.+2      	; 0x1bee <_fpadd_parts+0x3c>
    1bec:	28 c1       	rjmp	.+592    	; 0x1e3e <_fpadd_parts+0x28c>
    1bee:	ae e6       	ldi	r26, 0x6E	; 110
    1bf0:	b0 e0       	ldi	r27, 0x00	; 0
    1bf2:	25 c1       	rjmp	.+586    	; 0x1e3e <_fpadd_parts+0x28c>
    1bf4:	84 30       	cpi	r24, 0x04	; 4
    1bf6:	09 f4       	brne	.+2      	; 0x1bfa <_fpadd_parts+0x48>
    1bf8:	21 c1       	rjmp	.+578    	; 0x1e3c <_fpadd_parts+0x28a>
    1bfa:	82 30       	cpi	r24, 0x02	; 2
    1bfc:	a9 f4       	brne	.+42     	; 0x1c28 <_fpadd_parts+0x76>
    1bfe:	92 30       	cpi	r25, 0x02	; 2
    1c00:	09 f0       	breq	.+2      	; 0x1c04 <_fpadd_parts+0x52>
    1c02:	1d c1       	rjmp	.+570    	; 0x1e3e <_fpadd_parts+0x28c>
    1c04:	9a 01       	movw	r18, r20
    1c06:	ad 01       	movw	r20, r26
    1c08:	88 e0       	ldi	r24, 0x08	; 8
    1c0a:	ea 01       	movw	r28, r20
    1c0c:	09 90       	ld	r0, Y+
    1c0e:	ae 01       	movw	r20, r28
    1c10:	e9 01       	movw	r28, r18
    1c12:	09 92       	st	Y+, r0
    1c14:	9e 01       	movw	r18, r28
    1c16:	81 50       	subi	r24, 0x01	; 1
    1c18:	c1 f7       	brne	.-16     	; 0x1c0a <_fpadd_parts+0x58>
    1c1a:	e2 01       	movw	r28, r4
    1c1c:	89 81       	ldd	r24, Y+1	; 0x01
    1c1e:	11 96       	adiw	r26, 0x01	; 1
    1c20:	9c 91       	ld	r25, X
    1c22:	89 23       	and	r24, r25
    1c24:	81 83       	std	Z+1, r24	; 0x01
    1c26:	08 c1       	rjmp	.+528    	; 0x1e38 <_fpadd_parts+0x286>
    1c28:	92 30       	cpi	r25, 0x02	; 2
    1c2a:	09 f4       	brne	.+2      	; 0x1c2e <_fpadd_parts+0x7c>
    1c2c:	07 c1       	rjmp	.+526    	; 0x1e3c <_fpadd_parts+0x28a>
    1c2e:	12 96       	adiw	r26, 0x02	; 2
    1c30:	2d 90       	ld	r2, X+
    1c32:	3c 90       	ld	r3, X
    1c34:	13 97       	sbiw	r26, 0x03	; 3
    1c36:	eb 01       	movw	r28, r22
    1c38:	8a 81       	ldd	r24, Y+2	; 0x02
    1c3a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c3c:	14 96       	adiw	r26, 0x04	; 4
    1c3e:	ad 90       	ld	r10, X+
    1c40:	bd 90       	ld	r11, X+
    1c42:	cd 90       	ld	r12, X+
    1c44:	dc 90       	ld	r13, X
    1c46:	17 97       	sbiw	r26, 0x07	; 7
    1c48:	ec 80       	ldd	r14, Y+4	; 0x04
    1c4a:	fd 80       	ldd	r15, Y+5	; 0x05
    1c4c:	0e 81       	ldd	r16, Y+6	; 0x06
    1c4e:	1f 81       	ldd	r17, Y+7	; 0x07
    1c50:	91 01       	movw	r18, r2
    1c52:	28 1b       	sub	r18, r24
    1c54:	39 0b       	sbc	r19, r25
    1c56:	b9 01       	movw	r22, r18
    1c58:	37 ff       	sbrs	r19, 7
    1c5a:	04 c0       	rjmp	.+8      	; 0x1c64 <_fpadd_parts+0xb2>
    1c5c:	66 27       	eor	r22, r22
    1c5e:	77 27       	eor	r23, r23
    1c60:	62 1b       	sub	r22, r18
    1c62:	73 0b       	sbc	r23, r19
    1c64:	60 32       	cpi	r22, 0x20	; 32
    1c66:	71 05       	cpc	r23, r1
    1c68:	0c f0       	brlt	.+2      	; 0x1c6c <_fpadd_parts+0xba>
    1c6a:	61 c0       	rjmp	.+194    	; 0x1d2e <_fpadd_parts+0x17c>
    1c6c:	12 16       	cp	r1, r18
    1c6e:	13 06       	cpc	r1, r19
    1c70:	6c f5       	brge	.+90     	; 0x1ccc <_fpadd_parts+0x11a>
    1c72:	37 01       	movw	r6, r14
    1c74:	48 01       	movw	r8, r16
    1c76:	06 2e       	mov	r0, r22
    1c78:	04 c0       	rjmp	.+8      	; 0x1c82 <_fpadd_parts+0xd0>
    1c7a:	96 94       	lsr	r9
    1c7c:	87 94       	ror	r8
    1c7e:	77 94       	ror	r7
    1c80:	67 94       	ror	r6
    1c82:	0a 94       	dec	r0
    1c84:	d2 f7       	brpl	.-12     	; 0x1c7a <_fpadd_parts+0xc8>
    1c86:	21 e0       	ldi	r18, 0x01	; 1
    1c88:	30 e0       	ldi	r19, 0x00	; 0
    1c8a:	40 e0       	ldi	r20, 0x00	; 0
    1c8c:	50 e0       	ldi	r21, 0x00	; 0
    1c8e:	04 c0       	rjmp	.+8      	; 0x1c98 <_fpadd_parts+0xe6>
    1c90:	22 0f       	add	r18, r18
    1c92:	33 1f       	adc	r19, r19
    1c94:	44 1f       	adc	r20, r20
    1c96:	55 1f       	adc	r21, r21
    1c98:	6a 95       	dec	r22
    1c9a:	d2 f7       	brpl	.-12     	; 0x1c90 <_fpadd_parts+0xde>
    1c9c:	21 50       	subi	r18, 0x01	; 1
    1c9e:	30 40       	sbci	r19, 0x00	; 0
    1ca0:	40 40       	sbci	r20, 0x00	; 0
    1ca2:	50 40       	sbci	r21, 0x00	; 0
    1ca4:	2e 21       	and	r18, r14
    1ca6:	3f 21       	and	r19, r15
    1ca8:	40 23       	and	r20, r16
    1caa:	51 23       	and	r21, r17
    1cac:	21 15       	cp	r18, r1
    1cae:	31 05       	cpc	r19, r1
    1cb0:	41 05       	cpc	r20, r1
    1cb2:	51 05       	cpc	r21, r1
    1cb4:	21 f0       	breq	.+8      	; 0x1cbe <_fpadd_parts+0x10c>
    1cb6:	21 e0       	ldi	r18, 0x01	; 1
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	40 e0       	ldi	r20, 0x00	; 0
    1cbc:	50 e0       	ldi	r21, 0x00	; 0
    1cbe:	79 01       	movw	r14, r18
    1cc0:	8a 01       	movw	r16, r20
    1cc2:	e6 28       	or	r14, r6
    1cc4:	f7 28       	or	r15, r7
    1cc6:	08 29       	or	r16, r8
    1cc8:	19 29       	or	r17, r9
    1cca:	3c c0       	rjmp	.+120    	; 0x1d44 <_fpadd_parts+0x192>
    1ccc:	23 2b       	or	r18, r19
    1cce:	d1 f1       	breq	.+116    	; 0x1d44 <_fpadd_parts+0x192>
    1cd0:	26 0e       	add	r2, r22
    1cd2:	37 1e       	adc	r3, r23
    1cd4:	35 01       	movw	r6, r10
    1cd6:	46 01       	movw	r8, r12
    1cd8:	06 2e       	mov	r0, r22
    1cda:	04 c0       	rjmp	.+8      	; 0x1ce4 <_fpadd_parts+0x132>
    1cdc:	96 94       	lsr	r9
    1cde:	87 94       	ror	r8
    1ce0:	77 94       	ror	r7
    1ce2:	67 94       	ror	r6
    1ce4:	0a 94       	dec	r0
    1ce6:	d2 f7       	brpl	.-12     	; 0x1cdc <_fpadd_parts+0x12a>
    1ce8:	21 e0       	ldi	r18, 0x01	; 1
    1cea:	30 e0       	ldi	r19, 0x00	; 0
    1cec:	40 e0       	ldi	r20, 0x00	; 0
    1cee:	50 e0       	ldi	r21, 0x00	; 0
    1cf0:	04 c0       	rjmp	.+8      	; 0x1cfa <_fpadd_parts+0x148>
    1cf2:	22 0f       	add	r18, r18
    1cf4:	33 1f       	adc	r19, r19
    1cf6:	44 1f       	adc	r20, r20
    1cf8:	55 1f       	adc	r21, r21
    1cfa:	6a 95       	dec	r22
    1cfc:	d2 f7       	brpl	.-12     	; 0x1cf2 <_fpadd_parts+0x140>
    1cfe:	21 50       	subi	r18, 0x01	; 1
    1d00:	30 40       	sbci	r19, 0x00	; 0
    1d02:	40 40       	sbci	r20, 0x00	; 0
    1d04:	50 40       	sbci	r21, 0x00	; 0
    1d06:	2a 21       	and	r18, r10
    1d08:	3b 21       	and	r19, r11
    1d0a:	4c 21       	and	r20, r12
    1d0c:	5d 21       	and	r21, r13
    1d0e:	21 15       	cp	r18, r1
    1d10:	31 05       	cpc	r19, r1
    1d12:	41 05       	cpc	r20, r1
    1d14:	51 05       	cpc	r21, r1
    1d16:	21 f0       	breq	.+8      	; 0x1d20 <_fpadd_parts+0x16e>
    1d18:	21 e0       	ldi	r18, 0x01	; 1
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	40 e0       	ldi	r20, 0x00	; 0
    1d1e:	50 e0       	ldi	r21, 0x00	; 0
    1d20:	59 01       	movw	r10, r18
    1d22:	6a 01       	movw	r12, r20
    1d24:	a6 28       	or	r10, r6
    1d26:	b7 28       	or	r11, r7
    1d28:	c8 28       	or	r12, r8
    1d2a:	d9 28       	or	r13, r9
    1d2c:	0b c0       	rjmp	.+22     	; 0x1d44 <_fpadd_parts+0x192>
    1d2e:	82 15       	cp	r24, r2
    1d30:	93 05       	cpc	r25, r3
    1d32:	2c f0       	brlt	.+10     	; 0x1d3e <_fpadd_parts+0x18c>
    1d34:	1c 01       	movw	r2, r24
    1d36:	aa 24       	eor	r10, r10
    1d38:	bb 24       	eor	r11, r11
    1d3a:	65 01       	movw	r12, r10
    1d3c:	03 c0       	rjmp	.+6      	; 0x1d44 <_fpadd_parts+0x192>
    1d3e:	ee 24       	eor	r14, r14
    1d40:	ff 24       	eor	r15, r15
    1d42:	87 01       	movw	r16, r14
    1d44:	11 96       	adiw	r26, 0x01	; 1
    1d46:	9c 91       	ld	r25, X
    1d48:	d2 01       	movw	r26, r4
    1d4a:	11 96       	adiw	r26, 0x01	; 1
    1d4c:	8c 91       	ld	r24, X
    1d4e:	98 17       	cp	r25, r24
    1d50:	09 f4       	brne	.+2      	; 0x1d54 <_fpadd_parts+0x1a2>
    1d52:	45 c0       	rjmp	.+138    	; 0x1dde <_fpadd_parts+0x22c>
    1d54:	99 23       	and	r25, r25
    1d56:	39 f0       	breq	.+14     	; 0x1d66 <_fpadd_parts+0x1b4>
    1d58:	a8 01       	movw	r20, r16
    1d5a:	97 01       	movw	r18, r14
    1d5c:	2a 19       	sub	r18, r10
    1d5e:	3b 09       	sbc	r19, r11
    1d60:	4c 09       	sbc	r20, r12
    1d62:	5d 09       	sbc	r21, r13
    1d64:	06 c0       	rjmp	.+12     	; 0x1d72 <_fpadd_parts+0x1c0>
    1d66:	a6 01       	movw	r20, r12
    1d68:	95 01       	movw	r18, r10
    1d6a:	2e 19       	sub	r18, r14
    1d6c:	3f 09       	sbc	r19, r15
    1d6e:	40 0b       	sbc	r20, r16
    1d70:	51 0b       	sbc	r21, r17
    1d72:	57 fd       	sbrc	r21, 7
    1d74:	08 c0       	rjmp	.+16     	; 0x1d86 <_fpadd_parts+0x1d4>
    1d76:	11 82       	std	Z+1, r1	; 0x01
    1d78:	33 82       	std	Z+3, r3	; 0x03
    1d7a:	22 82       	std	Z+2, r2	; 0x02
    1d7c:	24 83       	std	Z+4, r18	; 0x04
    1d7e:	35 83       	std	Z+5, r19	; 0x05
    1d80:	46 83       	std	Z+6, r20	; 0x06
    1d82:	57 83       	std	Z+7, r21	; 0x07
    1d84:	1d c0       	rjmp	.+58     	; 0x1dc0 <_fpadd_parts+0x20e>
    1d86:	81 e0       	ldi	r24, 0x01	; 1
    1d88:	81 83       	std	Z+1, r24	; 0x01
    1d8a:	33 82       	std	Z+3, r3	; 0x03
    1d8c:	22 82       	std	Z+2, r2	; 0x02
    1d8e:	88 27       	eor	r24, r24
    1d90:	99 27       	eor	r25, r25
    1d92:	dc 01       	movw	r26, r24
    1d94:	82 1b       	sub	r24, r18
    1d96:	93 0b       	sbc	r25, r19
    1d98:	a4 0b       	sbc	r26, r20
    1d9a:	b5 0b       	sbc	r27, r21
    1d9c:	84 83       	std	Z+4, r24	; 0x04
    1d9e:	95 83       	std	Z+5, r25	; 0x05
    1da0:	a6 83       	std	Z+6, r26	; 0x06
    1da2:	b7 83       	std	Z+7, r27	; 0x07
    1da4:	0d c0       	rjmp	.+26     	; 0x1dc0 <_fpadd_parts+0x20e>
    1da6:	22 0f       	add	r18, r18
    1da8:	33 1f       	adc	r19, r19
    1daa:	44 1f       	adc	r20, r20
    1dac:	55 1f       	adc	r21, r21
    1dae:	24 83       	std	Z+4, r18	; 0x04
    1db0:	35 83       	std	Z+5, r19	; 0x05
    1db2:	46 83       	std	Z+6, r20	; 0x06
    1db4:	57 83       	std	Z+7, r21	; 0x07
    1db6:	82 81       	ldd	r24, Z+2	; 0x02
    1db8:	93 81       	ldd	r25, Z+3	; 0x03
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	93 83       	std	Z+3, r25	; 0x03
    1dbe:	82 83       	std	Z+2, r24	; 0x02
    1dc0:	24 81       	ldd	r18, Z+4	; 0x04
    1dc2:	35 81       	ldd	r19, Z+5	; 0x05
    1dc4:	46 81       	ldd	r20, Z+6	; 0x06
    1dc6:	57 81       	ldd	r21, Z+7	; 0x07
    1dc8:	da 01       	movw	r26, r20
    1dca:	c9 01       	movw	r24, r18
    1dcc:	01 97       	sbiw	r24, 0x01	; 1
    1dce:	a1 09       	sbc	r26, r1
    1dd0:	b1 09       	sbc	r27, r1
    1dd2:	8f 5f       	subi	r24, 0xFF	; 255
    1dd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd6:	af 4f       	sbci	r26, 0xFF	; 255
    1dd8:	bf 43       	sbci	r27, 0x3F	; 63
    1dda:	28 f3       	brcs	.-54     	; 0x1da6 <_fpadd_parts+0x1f4>
    1ddc:	0b c0       	rjmp	.+22     	; 0x1df4 <_fpadd_parts+0x242>
    1dde:	91 83       	std	Z+1, r25	; 0x01
    1de0:	33 82       	std	Z+3, r3	; 0x03
    1de2:	22 82       	std	Z+2, r2	; 0x02
    1de4:	ea 0c       	add	r14, r10
    1de6:	fb 1c       	adc	r15, r11
    1de8:	0c 1d       	adc	r16, r12
    1dea:	1d 1d       	adc	r17, r13
    1dec:	e4 82       	std	Z+4, r14	; 0x04
    1dee:	f5 82       	std	Z+5, r15	; 0x05
    1df0:	06 83       	std	Z+6, r16	; 0x06
    1df2:	17 83       	std	Z+7, r17	; 0x07
    1df4:	83 e0       	ldi	r24, 0x03	; 3
    1df6:	80 83       	st	Z, r24
    1df8:	24 81       	ldd	r18, Z+4	; 0x04
    1dfa:	35 81       	ldd	r19, Z+5	; 0x05
    1dfc:	46 81       	ldd	r20, Z+6	; 0x06
    1dfe:	57 81       	ldd	r21, Z+7	; 0x07
    1e00:	57 ff       	sbrs	r21, 7
    1e02:	1a c0       	rjmp	.+52     	; 0x1e38 <_fpadd_parts+0x286>
    1e04:	c9 01       	movw	r24, r18
    1e06:	aa 27       	eor	r26, r26
    1e08:	97 fd       	sbrc	r25, 7
    1e0a:	a0 95       	com	r26
    1e0c:	ba 2f       	mov	r27, r26
    1e0e:	81 70       	andi	r24, 0x01	; 1
    1e10:	90 70       	andi	r25, 0x00	; 0
    1e12:	a0 70       	andi	r26, 0x00	; 0
    1e14:	b0 70       	andi	r27, 0x00	; 0
    1e16:	56 95       	lsr	r21
    1e18:	47 95       	ror	r20
    1e1a:	37 95       	ror	r19
    1e1c:	27 95       	ror	r18
    1e1e:	82 2b       	or	r24, r18
    1e20:	93 2b       	or	r25, r19
    1e22:	a4 2b       	or	r26, r20
    1e24:	b5 2b       	or	r27, r21
    1e26:	84 83       	std	Z+4, r24	; 0x04
    1e28:	95 83       	std	Z+5, r25	; 0x05
    1e2a:	a6 83       	std	Z+6, r26	; 0x06
    1e2c:	b7 83       	std	Z+7, r27	; 0x07
    1e2e:	82 81       	ldd	r24, Z+2	; 0x02
    1e30:	93 81       	ldd	r25, Z+3	; 0x03
    1e32:	01 96       	adiw	r24, 0x01	; 1
    1e34:	93 83       	std	Z+3, r25	; 0x03
    1e36:	82 83       	std	Z+2, r24	; 0x02
    1e38:	df 01       	movw	r26, r30
    1e3a:	01 c0       	rjmp	.+2      	; 0x1e3e <_fpadd_parts+0x28c>
    1e3c:	d2 01       	movw	r26, r4
    1e3e:	cd 01       	movw	r24, r26
    1e40:	cd b7       	in	r28, 0x3d	; 61
    1e42:	de b7       	in	r29, 0x3e	; 62
    1e44:	e2 e1       	ldi	r30, 0x12	; 18
    1e46:	0c 94 c6 3c 	jmp	0x798c	; 0x798c <__epilogue_restores__>

00001e4a <__subsf3>:
    1e4a:	a0 e2       	ldi	r26, 0x20	; 32
    1e4c:	b0 e0       	ldi	r27, 0x00	; 0
    1e4e:	eb e2       	ldi	r30, 0x2B	; 43
    1e50:	ff e0       	ldi	r31, 0x0F	; 15
    1e52:	0c 94 b6 3c 	jmp	0x796c	; 0x796c <__prologue_saves__+0x18>
    1e56:	69 83       	std	Y+1, r22	; 0x01
    1e58:	7a 83       	std	Y+2, r23	; 0x02
    1e5a:	8b 83       	std	Y+3, r24	; 0x03
    1e5c:	9c 83       	std	Y+4, r25	; 0x04
    1e5e:	2d 83       	std	Y+5, r18	; 0x05
    1e60:	3e 83       	std	Y+6, r19	; 0x06
    1e62:	4f 83       	std	Y+7, r20	; 0x07
    1e64:	58 87       	std	Y+8, r21	; 0x08
    1e66:	e9 e0       	ldi	r30, 0x09	; 9
    1e68:	ee 2e       	mov	r14, r30
    1e6a:	f1 2c       	mov	r15, r1
    1e6c:	ec 0e       	add	r14, r28
    1e6e:	fd 1e       	adc	r15, r29
    1e70:	ce 01       	movw	r24, r28
    1e72:	01 96       	adiw	r24, 0x01	; 1
    1e74:	b7 01       	movw	r22, r14
    1e76:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    1e7a:	8e 01       	movw	r16, r28
    1e7c:	0f 5e       	subi	r16, 0xEF	; 239
    1e7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e80:	ce 01       	movw	r24, r28
    1e82:	05 96       	adiw	r24, 0x05	; 5
    1e84:	b8 01       	movw	r22, r16
    1e86:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    1e8a:	8a 89       	ldd	r24, Y+18	; 0x12
    1e8c:	91 e0       	ldi	r25, 0x01	; 1
    1e8e:	89 27       	eor	r24, r25
    1e90:	8a 8b       	std	Y+18, r24	; 0x12
    1e92:	c7 01       	movw	r24, r14
    1e94:	b8 01       	movw	r22, r16
    1e96:	ae 01       	movw	r20, r28
    1e98:	47 5e       	subi	r20, 0xE7	; 231
    1e9a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e9c:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_fpadd_parts>
    1ea0:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__pack_f>
    1ea4:	a0 96       	adiw	r28, 0x20	; 32
    1ea6:	e6 e0       	ldi	r30, 0x06	; 6
    1ea8:	0c 94 d2 3c 	jmp	0x79a4	; 0x79a4 <__epilogue_restores__+0x18>

00001eac <__addsf3>:
    1eac:	a0 e2       	ldi	r26, 0x20	; 32
    1eae:	b0 e0       	ldi	r27, 0x00	; 0
    1eb0:	ec e5       	ldi	r30, 0x5C	; 92
    1eb2:	ff e0       	ldi	r31, 0x0F	; 15
    1eb4:	0c 94 b6 3c 	jmp	0x796c	; 0x796c <__prologue_saves__+0x18>
    1eb8:	69 83       	std	Y+1, r22	; 0x01
    1eba:	7a 83       	std	Y+2, r23	; 0x02
    1ebc:	8b 83       	std	Y+3, r24	; 0x03
    1ebe:	9c 83       	std	Y+4, r25	; 0x04
    1ec0:	2d 83       	std	Y+5, r18	; 0x05
    1ec2:	3e 83       	std	Y+6, r19	; 0x06
    1ec4:	4f 83       	std	Y+7, r20	; 0x07
    1ec6:	58 87       	std	Y+8, r21	; 0x08
    1ec8:	f9 e0       	ldi	r31, 0x09	; 9
    1eca:	ef 2e       	mov	r14, r31
    1ecc:	f1 2c       	mov	r15, r1
    1ece:	ec 0e       	add	r14, r28
    1ed0:	fd 1e       	adc	r15, r29
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	01 96       	adiw	r24, 0x01	; 1
    1ed6:	b7 01       	movw	r22, r14
    1ed8:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    1edc:	8e 01       	movw	r16, r28
    1ede:	0f 5e       	subi	r16, 0xEF	; 239
    1ee0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ee2:	ce 01       	movw	r24, r28
    1ee4:	05 96       	adiw	r24, 0x05	; 5
    1ee6:	b8 01       	movw	r22, r16
    1ee8:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    1eec:	c7 01       	movw	r24, r14
    1eee:	b8 01       	movw	r22, r16
    1ef0:	ae 01       	movw	r20, r28
    1ef2:	47 5e       	subi	r20, 0xE7	; 231
    1ef4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ef6:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_fpadd_parts>
    1efa:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__pack_f>
    1efe:	a0 96       	adiw	r28, 0x20	; 32
    1f00:	e6 e0       	ldi	r30, 0x06	; 6
    1f02:	0c 94 d2 3c 	jmp	0x79a4	; 0x79a4 <__epilogue_restores__+0x18>

00001f06 <__mulsf3>:
    1f06:	a0 e2       	ldi	r26, 0x20	; 32
    1f08:	b0 e0       	ldi	r27, 0x00	; 0
    1f0a:	e9 e8       	ldi	r30, 0x89	; 137
    1f0c:	ff e0       	ldi	r31, 0x0F	; 15
    1f0e:	0c 94 aa 3c 	jmp	0x7954	; 0x7954 <__prologue_saves__>
    1f12:	69 83       	std	Y+1, r22	; 0x01
    1f14:	7a 83       	std	Y+2, r23	; 0x02
    1f16:	8b 83       	std	Y+3, r24	; 0x03
    1f18:	9c 83       	std	Y+4, r25	; 0x04
    1f1a:	2d 83       	std	Y+5, r18	; 0x05
    1f1c:	3e 83       	std	Y+6, r19	; 0x06
    1f1e:	4f 83       	std	Y+7, r20	; 0x07
    1f20:	58 87       	std	Y+8, r21	; 0x08
    1f22:	ce 01       	movw	r24, r28
    1f24:	01 96       	adiw	r24, 0x01	; 1
    1f26:	be 01       	movw	r22, r28
    1f28:	67 5f       	subi	r22, 0xF7	; 247
    1f2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f2c:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    1f30:	ce 01       	movw	r24, r28
    1f32:	05 96       	adiw	r24, 0x05	; 5
    1f34:	be 01       	movw	r22, r28
    1f36:	6f 5e       	subi	r22, 0xEF	; 239
    1f38:	7f 4f       	sbci	r23, 0xFF	; 255
    1f3a:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    1f3e:	99 85       	ldd	r25, Y+9	; 0x09
    1f40:	92 30       	cpi	r25, 0x02	; 2
    1f42:	88 f0       	brcs	.+34     	; 0x1f66 <__mulsf3+0x60>
    1f44:	89 89       	ldd	r24, Y+17	; 0x11
    1f46:	82 30       	cpi	r24, 0x02	; 2
    1f48:	c8 f0       	brcs	.+50     	; 0x1f7c <__mulsf3+0x76>
    1f4a:	94 30       	cpi	r25, 0x04	; 4
    1f4c:	19 f4       	brne	.+6      	; 0x1f54 <__mulsf3+0x4e>
    1f4e:	82 30       	cpi	r24, 0x02	; 2
    1f50:	51 f4       	brne	.+20     	; 0x1f66 <__mulsf3+0x60>
    1f52:	04 c0       	rjmp	.+8      	; 0x1f5c <__mulsf3+0x56>
    1f54:	84 30       	cpi	r24, 0x04	; 4
    1f56:	29 f4       	brne	.+10     	; 0x1f62 <__mulsf3+0x5c>
    1f58:	92 30       	cpi	r25, 0x02	; 2
    1f5a:	81 f4       	brne	.+32     	; 0x1f7c <__mulsf3+0x76>
    1f5c:	8e e6       	ldi	r24, 0x6E	; 110
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	c6 c0       	rjmp	.+396    	; 0x20ee <__mulsf3+0x1e8>
    1f62:	92 30       	cpi	r25, 0x02	; 2
    1f64:	49 f4       	brne	.+18     	; 0x1f78 <__mulsf3+0x72>
    1f66:	20 e0       	ldi	r18, 0x00	; 0
    1f68:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f6a:	8a 89       	ldd	r24, Y+18	; 0x12
    1f6c:	98 13       	cpse	r25, r24
    1f6e:	21 e0       	ldi	r18, 0x01	; 1
    1f70:	2a 87       	std	Y+10, r18	; 0x0a
    1f72:	ce 01       	movw	r24, r28
    1f74:	09 96       	adiw	r24, 0x09	; 9
    1f76:	bb c0       	rjmp	.+374    	; 0x20ee <__mulsf3+0x1e8>
    1f78:	82 30       	cpi	r24, 0x02	; 2
    1f7a:	49 f4       	brne	.+18     	; 0x1f8e <__mulsf3+0x88>
    1f7c:	20 e0       	ldi	r18, 0x00	; 0
    1f7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f80:	8a 89       	ldd	r24, Y+18	; 0x12
    1f82:	98 13       	cpse	r25, r24
    1f84:	21 e0       	ldi	r18, 0x01	; 1
    1f86:	2a 8b       	std	Y+18, r18	; 0x12
    1f88:	ce 01       	movw	r24, r28
    1f8a:	41 96       	adiw	r24, 0x11	; 17
    1f8c:	b0 c0       	rjmp	.+352    	; 0x20ee <__mulsf3+0x1e8>
    1f8e:	2d 84       	ldd	r2, Y+13	; 0x0d
    1f90:	3e 84       	ldd	r3, Y+14	; 0x0e
    1f92:	4f 84       	ldd	r4, Y+15	; 0x0f
    1f94:	58 88       	ldd	r5, Y+16	; 0x10
    1f96:	6d 88       	ldd	r6, Y+21	; 0x15
    1f98:	7e 88       	ldd	r7, Y+22	; 0x16
    1f9a:	8f 88       	ldd	r8, Y+23	; 0x17
    1f9c:	98 8c       	ldd	r9, Y+24	; 0x18
    1f9e:	ee 24       	eor	r14, r14
    1fa0:	ff 24       	eor	r15, r15
    1fa2:	87 01       	movw	r16, r14
    1fa4:	aa 24       	eor	r10, r10
    1fa6:	bb 24       	eor	r11, r11
    1fa8:	65 01       	movw	r12, r10
    1faa:	40 e0       	ldi	r20, 0x00	; 0
    1fac:	50 e0       	ldi	r21, 0x00	; 0
    1fae:	60 e0       	ldi	r22, 0x00	; 0
    1fb0:	70 e0       	ldi	r23, 0x00	; 0
    1fb2:	e0 e0       	ldi	r30, 0x00	; 0
    1fb4:	f0 e0       	ldi	r31, 0x00	; 0
    1fb6:	c1 01       	movw	r24, r2
    1fb8:	81 70       	andi	r24, 0x01	; 1
    1fba:	90 70       	andi	r25, 0x00	; 0
    1fbc:	89 2b       	or	r24, r25
    1fbe:	e9 f0       	breq	.+58     	; 0x1ffa <__mulsf3+0xf4>
    1fc0:	e6 0c       	add	r14, r6
    1fc2:	f7 1c       	adc	r15, r7
    1fc4:	08 1d       	adc	r16, r8
    1fc6:	19 1d       	adc	r17, r9
    1fc8:	9a 01       	movw	r18, r20
    1fca:	ab 01       	movw	r20, r22
    1fcc:	2a 0d       	add	r18, r10
    1fce:	3b 1d       	adc	r19, r11
    1fd0:	4c 1d       	adc	r20, r12
    1fd2:	5d 1d       	adc	r21, r13
    1fd4:	80 e0       	ldi	r24, 0x00	; 0
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	a0 e0       	ldi	r26, 0x00	; 0
    1fda:	b0 e0       	ldi	r27, 0x00	; 0
    1fdc:	e6 14       	cp	r14, r6
    1fde:	f7 04       	cpc	r15, r7
    1fe0:	08 05       	cpc	r16, r8
    1fe2:	19 05       	cpc	r17, r9
    1fe4:	20 f4       	brcc	.+8      	; 0x1fee <__mulsf3+0xe8>
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	a0 e0       	ldi	r26, 0x00	; 0
    1fec:	b0 e0       	ldi	r27, 0x00	; 0
    1fee:	ba 01       	movw	r22, r20
    1ff0:	a9 01       	movw	r20, r18
    1ff2:	48 0f       	add	r20, r24
    1ff4:	59 1f       	adc	r21, r25
    1ff6:	6a 1f       	adc	r22, r26
    1ff8:	7b 1f       	adc	r23, r27
    1ffa:	aa 0c       	add	r10, r10
    1ffc:	bb 1c       	adc	r11, r11
    1ffe:	cc 1c       	adc	r12, r12
    2000:	dd 1c       	adc	r13, r13
    2002:	97 fe       	sbrs	r9, 7
    2004:	08 c0       	rjmp	.+16     	; 0x2016 <__mulsf3+0x110>
    2006:	81 e0       	ldi	r24, 0x01	; 1
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	a0 e0       	ldi	r26, 0x00	; 0
    200c:	b0 e0       	ldi	r27, 0x00	; 0
    200e:	a8 2a       	or	r10, r24
    2010:	b9 2a       	or	r11, r25
    2012:	ca 2a       	or	r12, r26
    2014:	db 2a       	or	r13, r27
    2016:	31 96       	adiw	r30, 0x01	; 1
    2018:	e0 32       	cpi	r30, 0x20	; 32
    201a:	f1 05       	cpc	r31, r1
    201c:	49 f0       	breq	.+18     	; 0x2030 <__mulsf3+0x12a>
    201e:	66 0c       	add	r6, r6
    2020:	77 1c       	adc	r7, r7
    2022:	88 1c       	adc	r8, r8
    2024:	99 1c       	adc	r9, r9
    2026:	56 94       	lsr	r5
    2028:	47 94       	ror	r4
    202a:	37 94       	ror	r3
    202c:	27 94       	ror	r2
    202e:	c3 cf       	rjmp	.-122    	; 0x1fb6 <__mulsf3+0xb0>
    2030:	fa 85       	ldd	r31, Y+10	; 0x0a
    2032:	ea 89       	ldd	r30, Y+18	; 0x12
    2034:	2b 89       	ldd	r18, Y+19	; 0x13
    2036:	3c 89       	ldd	r19, Y+20	; 0x14
    2038:	8b 85       	ldd	r24, Y+11	; 0x0b
    203a:	9c 85       	ldd	r25, Y+12	; 0x0c
    203c:	28 0f       	add	r18, r24
    203e:	39 1f       	adc	r19, r25
    2040:	2e 5f       	subi	r18, 0xFE	; 254
    2042:	3f 4f       	sbci	r19, 0xFF	; 255
    2044:	17 c0       	rjmp	.+46     	; 0x2074 <__mulsf3+0x16e>
    2046:	ca 01       	movw	r24, r20
    2048:	81 70       	andi	r24, 0x01	; 1
    204a:	90 70       	andi	r25, 0x00	; 0
    204c:	89 2b       	or	r24, r25
    204e:	61 f0       	breq	.+24     	; 0x2068 <__mulsf3+0x162>
    2050:	16 95       	lsr	r17
    2052:	07 95       	ror	r16
    2054:	f7 94       	ror	r15
    2056:	e7 94       	ror	r14
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	a0 e0       	ldi	r26, 0x00	; 0
    205e:	b0 e8       	ldi	r27, 0x80	; 128
    2060:	e8 2a       	or	r14, r24
    2062:	f9 2a       	or	r15, r25
    2064:	0a 2b       	or	r16, r26
    2066:	1b 2b       	or	r17, r27
    2068:	76 95       	lsr	r23
    206a:	67 95       	ror	r22
    206c:	57 95       	ror	r21
    206e:	47 95       	ror	r20
    2070:	2f 5f       	subi	r18, 0xFF	; 255
    2072:	3f 4f       	sbci	r19, 0xFF	; 255
    2074:	77 fd       	sbrc	r23, 7
    2076:	e7 cf       	rjmp	.-50     	; 0x2046 <__mulsf3+0x140>
    2078:	0c c0       	rjmp	.+24     	; 0x2092 <__mulsf3+0x18c>
    207a:	44 0f       	add	r20, r20
    207c:	55 1f       	adc	r21, r21
    207e:	66 1f       	adc	r22, r22
    2080:	77 1f       	adc	r23, r23
    2082:	17 fd       	sbrc	r17, 7
    2084:	41 60       	ori	r20, 0x01	; 1
    2086:	ee 0c       	add	r14, r14
    2088:	ff 1c       	adc	r15, r15
    208a:	00 1f       	adc	r16, r16
    208c:	11 1f       	adc	r17, r17
    208e:	21 50       	subi	r18, 0x01	; 1
    2090:	30 40       	sbci	r19, 0x00	; 0
    2092:	40 30       	cpi	r20, 0x00	; 0
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	59 07       	cpc	r21, r25
    2098:	90 e0       	ldi	r25, 0x00	; 0
    209a:	69 07       	cpc	r22, r25
    209c:	90 e4       	ldi	r25, 0x40	; 64
    209e:	79 07       	cpc	r23, r25
    20a0:	60 f3       	brcs	.-40     	; 0x207a <__mulsf3+0x174>
    20a2:	2b 8f       	std	Y+27, r18	; 0x1b
    20a4:	3c 8f       	std	Y+28, r19	; 0x1c
    20a6:	db 01       	movw	r26, r22
    20a8:	ca 01       	movw	r24, r20
    20aa:	8f 77       	andi	r24, 0x7F	; 127
    20ac:	90 70       	andi	r25, 0x00	; 0
    20ae:	a0 70       	andi	r26, 0x00	; 0
    20b0:	b0 70       	andi	r27, 0x00	; 0
    20b2:	80 34       	cpi	r24, 0x40	; 64
    20b4:	91 05       	cpc	r25, r1
    20b6:	a1 05       	cpc	r26, r1
    20b8:	b1 05       	cpc	r27, r1
    20ba:	61 f4       	brne	.+24     	; 0x20d4 <__mulsf3+0x1ce>
    20bc:	47 fd       	sbrc	r20, 7
    20be:	0a c0       	rjmp	.+20     	; 0x20d4 <__mulsf3+0x1ce>
    20c0:	e1 14       	cp	r14, r1
    20c2:	f1 04       	cpc	r15, r1
    20c4:	01 05       	cpc	r16, r1
    20c6:	11 05       	cpc	r17, r1
    20c8:	29 f0       	breq	.+10     	; 0x20d4 <__mulsf3+0x1ce>
    20ca:	40 5c       	subi	r20, 0xC0	; 192
    20cc:	5f 4f       	sbci	r21, 0xFF	; 255
    20ce:	6f 4f       	sbci	r22, 0xFF	; 255
    20d0:	7f 4f       	sbci	r23, 0xFF	; 255
    20d2:	40 78       	andi	r20, 0x80	; 128
    20d4:	1a 8e       	std	Y+26, r1	; 0x1a
    20d6:	fe 17       	cp	r31, r30
    20d8:	11 f0       	breq	.+4      	; 0x20de <__mulsf3+0x1d8>
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	8a 8f       	std	Y+26, r24	; 0x1a
    20de:	4d 8f       	std	Y+29, r20	; 0x1d
    20e0:	5e 8f       	std	Y+30, r21	; 0x1e
    20e2:	6f 8f       	std	Y+31, r22	; 0x1f
    20e4:	78 a3       	std	Y+32, r23	; 0x20
    20e6:	83 e0       	ldi	r24, 0x03	; 3
    20e8:	89 8f       	std	Y+25, r24	; 0x19
    20ea:	ce 01       	movw	r24, r28
    20ec:	49 96       	adiw	r24, 0x19	; 25
    20ee:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__pack_f>
    20f2:	a0 96       	adiw	r28, 0x20	; 32
    20f4:	e2 e1       	ldi	r30, 0x12	; 18
    20f6:	0c 94 c6 3c 	jmp	0x798c	; 0x798c <__epilogue_restores__>

000020fa <__gtsf2>:
    20fa:	a8 e1       	ldi	r26, 0x18	; 24
    20fc:	b0 e0       	ldi	r27, 0x00	; 0
    20fe:	e3 e8       	ldi	r30, 0x83	; 131
    2100:	f0 e1       	ldi	r31, 0x10	; 16
    2102:	0c 94 b6 3c 	jmp	0x796c	; 0x796c <__prologue_saves__+0x18>
    2106:	69 83       	std	Y+1, r22	; 0x01
    2108:	7a 83       	std	Y+2, r23	; 0x02
    210a:	8b 83       	std	Y+3, r24	; 0x03
    210c:	9c 83       	std	Y+4, r25	; 0x04
    210e:	2d 83       	std	Y+5, r18	; 0x05
    2110:	3e 83       	std	Y+6, r19	; 0x06
    2112:	4f 83       	std	Y+7, r20	; 0x07
    2114:	58 87       	std	Y+8, r21	; 0x08
    2116:	89 e0       	ldi	r24, 0x09	; 9
    2118:	e8 2e       	mov	r14, r24
    211a:	f1 2c       	mov	r15, r1
    211c:	ec 0e       	add	r14, r28
    211e:	fd 1e       	adc	r15, r29
    2120:	ce 01       	movw	r24, r28
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	b7 01       	movw	r22, r14
    2126:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    212a:	8e 01       	movw	r16, r28
    212c:	0f 5e       	subi	r16, 0xEF	; 239
    212e:	1f 4f       	sbci	r17, 0xFF	; 255
    2130:	ce 01       	movw	r24, r28
    2132:	05 96       	adiw	r24, 0x05	; 5
    2134:	b8 01       	movw	r22, r16
    2136:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    213a:	89 85       	ldd	r24, Y+9	; 0x09
    213c:	82 30       	cpi	r24, 0x02	; 2
    213e:	40 f0       	brcs	.+16     	; 0x2150 <__gtsf2+0x56>
    2140:	89 89       	ldd	r24, Y+17	; 0x11
    2142:	82 30       	cpi	r24, 0x02	; 2
    2144:	28 f0       	brcs	.+10     	; 0x2150 <__gtsf2+0x56>
    2146:	c7 01       	movw	r24, r14
    2148:	b8 01       	movw	r22, r16
    214a:	0e 94 ae 12 	call	0x255c	; 0x255c <__fpcmp_parts_f>
    214e:	01 c0       	rjmp	.+2      	; 0x2152 <__gtsf2+0x58>
    2150:	8f ef       	ldi	r24, 0xFF	; 255
    2152:	68 96       	adiw	r28, 0x18	; 24
    2154:	e6 e0       	ldi	r30, 0x06	; 6
    2156:	0c 94 d2 3c 	jmp	0x79a4	; 0x79a4 <__epilogue_restores__+0x18>

0000215a <__gesf2>:
    215a:	a8 e1       	ldi	r26, 0x18	; 24
    215c:	b0 e0       	ldi	r27, 0x00	; 0
    215e:	e3 eb       	ldi	r30, 0xB3	; 179
    2160:	f0 e1       	ldi	r31, 0x10	; 16
    2162:	0c 94 b6 3c 	jmp	0x796c	; 0x796c <__prologue_saves__+0x18>
    2166:	69 83       	std	Y+1, r22	; 0x01
    2168:	7a 83       	std	Y+2, r23	; 0x02
    216a:	8b 83       	std	Y+3, r24	; 0x03
    216c:	9c 83       	std	Y+4, r25	; 0x04
    216e:	2d 83       	std	Y+5, r18	; 0x05
    2170:	3e 83       	std	Y+6, r19	; 0x06
    2172:	4f 83       	std	Y+7, r20	; 0x07
    2174:	58 87       	std	Y+8, r21	; 0x08
    2176:	89 e0       	ldi	r24, 0x09	; 9
    2178:	e8 2e       	mov	r14, r24
    217a:	f1 2c       	mov	r15, r1
    217c:	ec 0e       	add	r14, r28
    217e:	fd 1e       	adc	r15, r29
    2180:	ce 01       	movw	r24, r28
    2182:	01 96       	adiw	r24, 0x01	; 1
    2184:	b7 01       	movw	r22, r14
    2186:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    218a:	8e 01       	movw	r16, r28
    218c:	0f 5e       	subi	r16, 0xEF	; 239
    218e:	1f 4f       	sbci	r17, 0xFF	; 255
    2190:	ce 01       	movw	r24, r28
    2192:	05 96       	adiw	r24, 0x05	; 5
    2194:	b8 01       	movw	r22, r16
    2196:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    219a:	89 85       	ldd	r24, Y+9	; 0x09
    219c:	82 30       	cpi	r24, 0x02	; 2
    219e:	40 f0       	brcs	.+16     	; 0x21b0 <__gesf2+0x56>
    21a0:	89 89       	ldd	r24, Y+17	; 0x11
    21a2:	82 30       	cpi	r24, 0x02	; 2
    21a4:	28 f0       	brcs	.+10     	; 0x21b0 <__gesf2+0x56>
    21a6:	c7 01       	movw	r24, r14
    21a8:	b8 01       	movw	r22, r16
    21aa:	0e 94 ae 12 	call	0x255c	; 0x255c <__fpcmp_parts_f>
    21ae:	01 c0       	rjmp	.+2      	; 0x21b2 <__gesf2+0x58>
    21b0:	8f ef       	ldi	r24, 0xFF	; 255
    21b2:	68 96       	adiw	r28, 0x18	; 24
    21b4:	e6 e0       	ldi	r30, 0x06	; 6
    21b6:	0c 94 d2 3c 	jmp	0x79a4	; 0x79a4 <__epilogue_restores__+0x18>

000021ba <__ltsf2>:
    21ba:	a8 e1       	ldi	r26, 0x18	; 24
    21bc:	b0 e0       	ldi	r27, 0x00	; 0
    21be:	e3 ee       	ldi	r30, 0xE3	; 227
    21c0:	f0 e1       	ldi	r31, 0x10	; 16
    21c2:	0c 94 b6 3c 	jmp	0x796c	; 0x796c <__prologue_saves__+0x18>
    21c6:	69 83       	std	Y+1, r22	; 0x01
    21c8:	7a 83       	std	Y+2, r23	; 0x02
    21ca:	8b 83       	std	Y+3, r24	; 0x03
    21cc:	9c 83       	std	Y+4, r25	; 0x04
    21ce:	2d 83       	std	Y+5, r18	; 0x05
    21d0:	3e 83       	std	Y+6, r19	; 0x06
    21d2:	4f 83       	std	Y+7, r20	; 0x07
    21d4:	58 87       	std	Y+8, r21	; 0x08
    21d6:	89 e0       	ldi	r24, 0x09	; 9
    21d8:	e8 2e       	mov	r14, r24
    21da:	f1 2c       	mov	r15, r1
    21dc:	ec 0e       	add	r14, r28
    21de:	fd 1e       	adc	r15, r29
    21e0:	ce 01       	movw	r24, r28
    21e2:	01 96       	adiw	r24, 0x01	; 1
    21e4:	b7 01       	movw	r22, r14
    21e6:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    21ea:	8e 01       	movw	r16, r28
    21ec:	0f 5e       	subi	r16, 0xEF	; 239
    21ee:	1f 4f       	sbci	r17, 0xFF	; 255
    21f0:	ce 01       	movw	r24, r28
    21f2:	05 96       	adiw	r24, 0x05	; 5
    21f4:	b8 01       	movw	r22, r16
    21f6:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    21fa:	89 85       	ldd	r24, Y+9	; 0x09
    21fc:	82 30       	cpi	r24, 0x02	; 2
    21fe:	40 f0       	brcs	.+16     	; 0x2210 <__ltsf2+0x56>
    2200:	89 89       	ldd	r24, Y+17	; 0x11
    2202:	82 30       	cpi	r24, 0x02	; 2
    2204:	28 f0       	brcs	.+10     	; 0x2210 <__ltsf2+0x56>
    2206:	c7 01       	movw	r24, r14
    2208:	b8 01       	movw	r22, r16
    220a:	0e 94 ae 12 	call	0x255c	; 0x255c <__fpcmp_parts_f>
    220e:	01 c0       	rjmp	.+2      	; 0x2212 <__ltsf2+0x58>
    2210:	81 e0       	ldi	r24, 0x01	; 1
    2212:	68 96       	adiw	r28, 0x18	; 24
    2214:	e6 e0       	ldi	r30, 0x06	; 6
    2216:	0c 94 d2 3c 	jmp	0x79a4	; 0x79a4 <__epilogue_restores__+0x18>

0000221a <__fixsfsi>:
    221a:	ac e0       	ldi	r26, 0x0C	; 12
    221c:	b0 e0       	ldi	r27, 0x00	; 0
    221e:	e3 e1       	ldi	r30, 0x13	; 19
    2220:	f1 e1       	ldi	r31, 0x11	; 17
    2222:	0c 94 ba 3c 	jmp	0x7974	; 0x7974 <__prologue_saves__+0x20>
    2226:	69 83       	std	Y+1, r22	; 0x01
    2228:	7a 83       	std	Y+2, r23	; 0x02
    222a:	8b 83       	std	Y+3, r24	; 0x03
    222c:	9c 83       	std	Y+4, r25	; 0x04
    222e:	ce 01       	movw	r24, r28
    2230:	01 96       	adiw	r24, 0x01	; 1
    2232:	be 01       	movw	r22, r28
    2234:	6b 5f       	subi	r22, 0xFB	; 251
    2236:	7f 4f       	sbci	r23, 0xFF	; 255
    2238:	0e 94 36 12 	call	0x246c	; 0x246c <__unpack_f>
    223c:	8d 81       	ldd	r24, Y+5	; 0x05
    223e:	82 30       	cpi	r24, 0x02	; 2
    2240:	61 f1       	breq	.+88     	; 0x229a <__fixsfsi+0x80>
    2242:	82 30       	cpi	r24, 0x02	; 2
    2244:	50 f1       	brcs	.+84     	; 0x229a <__fixsfsi+0x80>
    2246:	84 30       	cpi	r24, 0x04	; 4
    2248:	21 f4       	brne	.+8      	; 0x2252 <__fixsfsi+0x38>
    224a:	8e 81       	ldd	r24, Y+6	; 0x06
    224c:	88 23       	and	r24, r24
    224e:	51 f1       	breq	.+84     	; 0x22a4 <__fixsfsi+0x8a>
    2250:	2e c0       	rjmp	.+92     	; 0x22ae <__fixsfsi+0x94>
    2252:	2f 81       	ldd	r18, Y+7	; 0x07
    2254:	38 85       	ldd	r19, Y+8	; 0x08
    2256:	37 fd       	sbrc	r19, 7
    2258:	20 c0       	rjmp	.+64     	; 0x229a <__fixsfsi+0x80>
    225a:	6e 81       	ldd	r22, Y+6	; 0x06
    225c:	2f 31       	cpi	r18, 0x1F	; 31
    225e:	31 05       	cpc	r19, r1
    2260:	1c f0       	brlt	.+6      	; 0x2268 <__fixsfsi+0x4e>
    2262:	66 23       	and	r22, r22
    2264:	f9 f0       	breq	.+62     	; 0x22a4 <__fixsfsi+0x8a>
    2266:	23 c0       	rjmp	.+70     	; 0x22ae <__fixsfsi+0x94>
    2268:	8e e1       	ldi	r24, 0x1E	; 30
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	82 1b       	sub	r24, r18
    226e:	93 0b       	sbc	r25, r19
    2270:	29 85       	ldd	r18, Y+9	; 0x09
    2272:	3a 85       	ldd	r19, Y+10	; 0x0a
    2274:	4b 85       	ldd	r20, Y+11	; 0x0b
    2276:	5c 85       	ldd	r21, Y+12	; 0x0c
    2278:	04 c0       	rjmp	.+8      	; 0x2282 <__fixsfsi+0x68>
    227a:	56 95       	lsr	r21
    227c:	47 95       	ror	r20
    227e:	37 95       	ror	r19
    2280:	27 95       	ror	r18
    2282:	8a 95       	dec	r24
    2284:	d2 f7       	brpl	.-12     	; 0x227a <__fixsfsi+0x60>
    2286:	66 23       	and	r22, r22
    2288:	b1 f0       	breq	.+44     	; 0x22b6 <__fixsfsi+0x9c>
    228a:	50 95       	com	r21
    228c:	40 95       	com	r20
    228e:	30 95       	com	r19
    2290:	21 95       	neg	r18
    2292:	3f 4f       	sbci	r19, 0xFF	; 255
    2294:	4f 4f       	sbci	r20, 0xFF	; 255
    2296:	5f 4f       	sbci	r21, 0xFF	; 255
    2298:	0e c0       	rjmp	.+28     	; 0x22b6 <__fixsfsi+0x9c>
    229a:	20 e0       	ldi	r18, 0x00	; 0
    229c:	30 e0       	ldi	r19, 0x00	; 0
    229e:	40 e0       	ldi	r20, 0x00	; 0
    22a0:	50 e0       	ldi	r21, 0x00	; 0
    22a2:	09 c0       	rjmp	.+18     	; 0x22b6 <__fixsfsi+0x9c>
    22a4:	2f ef       	ldi	r18, 0xFF	; 255
    22a6:	3f ef       	ldi	r19, 0xFF	; 255
    22a8:	4f ef       	ldi	r20, 0xFF	; 255
    22aa:	5f e7       	ldi	r21, 0x7F	; 127
    22ac:	04 c0       	rjmp	.+8      	; 0x22b6 <__fixsfsi+0x9c>
    22ae:	20 e0       	ldi	r18, 0x00	; 0
    22b0:	30 e0       	ldi	r19, 0x00	; 0
    22b2:	40 e0       	ldi	r20, 0x00	; 0
    22b4:	50 e8       	ldi	r21, 0x80	; 128
    22b6:	b9 01       	movw	r22, r18
    22b8:	ca 01       	movw	r24, r20
    22ba:	2c 96       	adiw	r28, 0x0c	; 12
    22bc:	e2 e0       	ldi	r30, 0x02	; 2
    22be:	0c 94 d6 3c 	jmp	0x79ac	; 0x79ac <__epilogue_restores__+0x20>

000022c2 <__pack_f>:
    22c2:	df 92       	push	r13
    22c4:	ef 92       	push	r14
    22c6:	ff 92       	push	r15
    22c8:	0f 93       	push	r16
    22ca:	1f 93       	push	r17
    22cc:	fc 01       	movw	r30, r24
    22ce:	e4 80       	ldd	r14, Z+4	; 0x04
    22d0:	f5 80       	ldd	r15, Z+5	; 0x05
    22d2:	06 81       	ldd	r16, Z+6	; 0x06
    22d4:	17 81       	ldd	r17, Z+7	; 0x07
    22d6:	d1 80       	ldd	r13, Z+1	; 0x01
    22d8:	80 81       	ld	r24, Z
    22da:	82 30       	cpi	r24, 0x02	; 2
    22dc:	48 f4       	brcc	.+18     	; 0x22f0 <__pack_f+0x2e>
    22de:	80 e0       	ldi	r24, 0x00	; 0
    22e0:	90 e0       	ldi	r25, 0x00	; 0
    22e2:	a0 e1       	ldi	r26, 0x10	; 16
    22e4:	b0 e0       	ldi	r27, 0x00	; 0
    22e6:	e8 2a       	or	r14, r24
    22e8:	f9 2a       	or	r15, r25
    22ea:	0a 2b       	or	r16, r26
    22ec:	1b 2b       	or	r17, r27
    22ee:	a5 c0       	rjmp	.+330    	; 0x243a <__pack_f+0x178>
    22f0:	84 30       	cpi	r24, 0x04	; 4
    22f2:	09 f4       	brne	.+2      	; 0x22f6 <__pack_f+0x34>
    22f4:	9f c0       	rjmp	.+318    	; 0x2434 <__pack_f+0x172>
    22f6:	82 30       	cpi	r24, 0x02	; 2
    22f8:	21 f4       	brne	.+8      	; 0x2302 <__pack_f+0x40>
    22fa:	ee 24       	eor	r14, r14
    22fc:	ff 24       	eor	r15, r15
    22fe:	87 01       	movw	r16, r14
    2300:	05 c0       	rjmp	.+10     	; 0x230c <__pack_f+0x4a>
    2302:	e1 14       	cp	r14, r1
    2304:	f1 04       	cpc	r15, r1
    2306:	01 05       	cpc	r16, r1
    2308:	11 05       	cpc	r17, r1
    230a:	19 f4       	brne	.+6      	; 0x2312 <__pack_f+0x50>
    230c:	e0 e0       	ldi	r30, 0x00	; 0
    230e:	f0 e0       	ldi	r31, 0x00	; 0
    2310:	96 c0       	rjmp	.+300    	; 0x243e <__pack_f+0x17c>
    2312:	62 81       	ldd	r22, Z+2	; 0x02
    2314:	73 81       	ldd	r23, Z+3	; 0x03
    2316:	9f ef       	ldi	r25, 0xFF	; 255
    2318:	62 38       	cpi	r22, 0x82	; 130
    231a:	79 07       	cpc	r23, r25
    231c:	0c f0       	brlt	.+2      	; 0x2320 <__pack_f+0x5e>
    231e:	5b c0       	rjmp	.+182    	; 0x23d6 <__pack_f+0x114>
    2320:	22 e8       	ldi	r18, 0x82	; 130
    2322:	3f ef       	ldi	r19, 0xFF	; 255
    2324:	26 1b       	sub	r18, r22
    2326:	37 0b       	sbc	r19, r23
    2328:	2a 31       	cpi	r18, 0x1A	; 26
    232a:	31 05       	cpc	r19, r1
    232c:	2c f0       	brlt	.+10     	; 0x2338 <__pack_f+0x76>
    232e:	20 e0       	ldi	r18, 0x00	; 0
    2330:	30 e0       	ldi	r19, 0x00	; 0
    2332:	40 e0       	ldi	r20, 0x00	; 0
    2334:	50 e0       	ldi	r21, 0x00	; 0
    2336:	2a c0       	rjmp	.+84     	; 0x238c <__pack_f+0xca>
    2338:	b8 01       	movw	r22, r16
    233a:	a7 01       	movw	r20, r14
    233c:	02 2e       	mov	r0, r18
    233e:	04 c0       	rjmp	.+8      	; 0x2348 <__pack_f+0x86>
    2340:	76 95       	lsr	r23
    2342:	67 95       	ror	r22
    2344:	57 95       	ror	r21
    2346:	47 95       	ror	r20
    2348:	0a 94       	dec	r0
    234a:	d2 f7       	brpl	.-12     	; 0x2340 <__pack_f+0x7e>
    234c:	81 e0       	ldi	r24, 0x01	; 1
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	a0 e0       	ldi	r26, 0x00	; 0
    2352:	b0 e0       	ldi	r27, 0x00	; 0
    2354:	04 c0       	rjmp	.+8      	; 0x235e <__pack_f+0x9c>
    2356:	88 0f       	add	r24, r24
    2358:	99 1f       	adc	r25, r25
    235a:	aa 1f       	adc	r26, r26
    235c:	bb 1f       	adc	r27, r27
    235e:	2a 95       	dec	r18
    2360:	d2 f7       	brpl	.-12     	; 0x2356 <__pack_f+0x94>
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	a1 09       	sbc	r26, r1
    2366:	b1 09       	sbc	r27, r1
    2368:	8e 21       	and	r24, r14
    236a:	9f 21       	and	r25, r15
    236c:	a0 23       	and	r26, r16
    236e:	b1 23       	and	r27, r17
    2370:	00 97       	sbiw	r24, 0x00	; 0
    2372:	a1 05       	cpc	r26, r1
    2374:	b1 05       	cpc	r27, r1
    2376:	21 f0       	breq	.+8      	; 0x2380 <__pack_f+0xbe>
    2378:	81 e0       	ldi	r24, 0x01	; 1
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	a0 e0       	ldi	r26, 0x00	; 0
    237e:	b0 e0       	ldi	r27, 0x00	; 0
    2380:	9a 01       	movw	r18, r20
    2382:	ab 01       	movw	r20, r22
    2384:	28 2b       	or	r18, r24
    2386:	39 2b       	or	r19, r25
    2388:	4a 2b       	or	r20, r26
    238a:	5b 2b       	or	r21, r27
    238c:	da 01       	movw	r26, r20
    238e:	c9 01       	movw	r24, r18
    2390:	8f 77       	andi	r24, 0x7F	; 127
    2392:	90 70       	andi	r25, 0x00	; 0
    2394:	a0 70       	andi	r26, 0x00	; 0
    2396:	b0 70       	andi	r27, 0x00	; 0
    2398:	80 34       	cpi	r24, 0x40	; 64
    239a:	91 05       	cpc	r25, r1
    239c:	a1 05       	cpc	r26, r1
    239e:	b1 05       	cpc	r27, r1
    23a0:	39 f4       	brne	.+14     	; 0x23b0 <__pack_f+0xee>
    23a2:	27 ff       	sbrs	r18, 7
    23a4:	09 c0       	rjmp	.+18     	; 0x23b8 <__pack_f+0xf6>
    23a6:	20 5c       	subi	r18, 0xC0	; 192
    23a8:	3f 4f       	sbci	r19, 0xFF	; 255
    23aa:	4f 4f       	sbci	r20, 0xFF	; 255
    23ac:	5f 4f       	sbci	r21, 0xFF	; 255
    23ae:	04 c0       	rjmp	.+8      	; 0x23b8 <__pack_f+0xf6>
    23b0:	21 5c       	subi	r18, 0xC1	; 193
    23b2:	3f 4f       	sbci	r19, 0xFF	; 255
    23b4:	4f 4f       	sbci	r20, 0xFF	; 255
    23b6:	5f 4f       	sbci	r21, 0xFF	; 255
    23b8:	e0 e0       	ldi	r30, 0x00	; 0
    23ba:	f0 e0       	ldi	r31, 0x00	; 0
    23bc:	20 30       	cpi	r18, 0x00	; 0
    23be:	a0 e0       	ldi	r26, 0x00	; 0
    23c0:	3a 07       	cpc	r19, r26
    23c2:	a0 e0       	ldi	r26, 0x00	; 0
    23c4:	4a 07       	cpc	r20, r26
    23c6:	a0 e4       	ldi	r26, 0x40	; 64
    23c8:	5a 07       	cpc	r21, r26
    23ca:	10 f0       	brcs	.+4      	; 0x23d0 <__pack_f+0x10e>
    23cc:	e1 e0       	ldi	r30, 0x01	; 1
    23ce:	f0 e0       	ldi	r31, 0x00	; 0
    23d0:	79 01       	movw	r14, r18
    23d2:	8a 01       	movw	r16, r20
    23d4:	27 c0       	rjmp	.+78     	; 0x2424 <__pack_f+0x162>
    23d6:	60 38       	cpi	r22, 0x80	; 128
    23d8:	71 05       	cpc	r23, r1
    23da:	64 f5       	brge	.+88     	; 0x2434 <__pack_f+0x172>
    23dc:	fb 01       	movw	r30, r22
    23de:	e1 58       	subi	r30, 0x81	; 129
    23e0:	ff 4f       	sbci	r31, 0xFF	; 255
    23e2:	d8 01       	movw	r26, r16
    23e4:	c7 01       	movw	r24, r14
    23e6:	8f 77       	andi	r24, 0x7F	; 127
    23e8:	90 70       	andi	r25, 0x00	; 0
    23ea:	a0 70       	andi	r26, 0x00	; 0
    23ec:	b0 70       	andi	r27, 0x00	; 0
    23ee:	80 34       	cpi	r24, 0x40	; 64
    23f0:	91 05       	cpc	r25, r1
    23f2:	a1 05       	cpc	r26, r1
    23f4:	b1 05       	cpc	r27, r1
    23f6:	39 f4       	brne	.+14     	; 0x2406 <__pack_f+0x144>
    23f8:	e7 fe       	sbrs	r14, 7
    23fa:	0d c0       	rjmp	.+26     	; 0x2416 <__pack_f+0x154>
    23fc:	80 e4       	ldi	r24, 0x40	; 64
    23fe:	90 e0       	ldi	r25, 0x00	; 0
    2400:	a0 e0       	ldi	r26, 0x00	; 0
    2402:	b0 e0       	ldi	r27, 0x00	; 0
    2404:	04 c0       	rjmp	.+8      	; 0x240e <__pack_f+0x14c>
    2406:	8f e3       	ldi	r24, 0x3F	; 63
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	a0 e0       	ldi	r26, 0x00	; 0
    240c:	b0 e0       	ldi	r27, 0x00	; 0
    240e:	e8 0e       	add	r14, r24
    2410:	f9 1e       	adc	r15, r25
    2412:	0a 1f       	adc	r16, r26
    2414:	1b 1f       	adc	r17, r27
    2416:	17 ff       	sbrs	r17, 7
    2418:	05 c0       	rjmp	.+10     	; 0x2424 <__pack_f+0x162>
    241a:	16 95       	lsr	r17
    241c:	07 95       	ror	r16
    241e:	f7 94       	ror	r15
    2420:	e7 94       	ror	r14
    2422:	31 96       	adiw	r30, 0x01	; 1
    2424:	87 e0       	ldi	r24, 0x07	; 7
    2426:	16 95       	lsr	r17
    2428:	07 95       	ror	r16
    242a:	f7 94       	ror	r15
    242c:	e7 94       	ror	r14
    242e:	8a 95       	dec	r24
    2430:	d1 f7       	brne	.-12     	; 0x2426 <__pack_f+0x164>
    2432:	05 c0       	rjmp	.+10     	; 0x243e <__pack_f+0x17c>
    2434:	ee 24       	eor	r14, r14
    2436:	ff 24       	eor	r15, r15
    2438:	87 01       	movw	r16, r14
    243a:	ef ef       	ldi	r30, 0xFF	; 255
    243c:	f0 e0       	ldi	r31, 0x00	; 0
    243e:	6e 2f       	mov	r22, r30
    2440:	67 95       	ror	r22
    2442:	66 27       	eor	r22, r22
    2444:	67 95       	ror	r22
    2446:	90 2f       	mov	r25, r16
    2448:	9f 77       	andi	r25, 0x7F	; 127
    244a:	d7 94       	ror	r13
    244c:	dd 24       	eor	r13, r13
    244e:	d7 94       	ror	r13
    2450:	8e 2f       	mov	r24, r30
    2452:	86 95       	lsr	r24
    2454:	49 2f       	mov	r20, r25
    2456:	46 2b       	or	r20, r22
    2458:	58 2f       	mov	r21, r24
    245a:	5d 29       	or	r21, r13
    245c:	b7 01       	movw	r22, r14
    245e:	ca 01       	movw	r24, r20
    2460:	1f 91       	pop	r17
    2462:	0f 91       	pop	r16
    2464:	ff 90       	pop	r15
    2466:	ef 90       	pop	r14
    2468:	df 90       	pop	r13
    246a:	08 95       	ret

0000246c <__unpack_f>:
    246c:	fc 01       	movw	r30, r24
    246e:	db 01       	movw	r26, r22
    2470:	40 81       	ld	r20, Z
    2472:	51 81       	ldd	r21, Z+1	; 0x01
    2474:	22 81       	ldd	r18, Z+2	; 0x02
    2476:	62 2f       	mov	r22, r18
    2478:	6f 77       	andi	r22, 0x7F	; 127
    247a:	70 e0       	ldi	r23, 0x00	; 0
    247c:	22 1f       	adc	r18, r18
    247e:	22 27       	eor	r18, r18
    2480:	22 1f       	adc	r18, r18
    2482:	93 81       	ldd	r25, Z+3	; 0x03
    2484:	89 2f       	mov	r24, r25
    2486:	88 0f       	add	r24, r24
    2488:	82 2b       	or	r24, r18
    248a:	28 2f       	mov	r18, r24
    248c:	30 e0       	ldi	r19, 0x00	; 0
    248e:	99 1f       	adc	r25, r25
    2490:	99 27       	eor	r25, r25
    2492:	99 1f       	adc	r25, r25
    2494:	11 96       	adiw	r26, 0x01	; 1
    2496:	9c 93       	st	X, r25
    2498:	11 97       	sbiw	r26, 0x01	; 1
    249a:	21 15       	cp	r18, r1
    249c:	31 05       	cpc	r19, r1
    249e:	a9 f5       	brne	.+106    	; 0x250a <__unpack_f+0x9e>
    24a0:	41 15       	cp	r20, r1
    24a2:	51 05       	cpc	r21, r1
    24a4:	61 05       	cpc	r22, r1
    24a6:	71 05       	cpc	r23, r1
    24a8:	11 f4       	brne	.+4      	; 0x24ae <__unpack_f+0x42>
    24aa:	82 e0       	ldi	r24, 0x02	; 2
    24ac:	37 c0       	rjmp	.+110    	; 0x251c <__unpack_f+0xb0>
    24ae:	82 e8       	ldi	r24, 0x82	; 130
    24b0:	9f ef       	ldi	r25, 0xFF	; 255
    24b2:	13 96       	adiw	r26, 0x03	; 3
    24b4:	9c 93       	st	X, r25
    24b6:	8e 93       	st	-X, r24
    24b8:	12 97       	sbiw	r26, 0x02	; 2
    24ba:	9a 01       	movw	r18, r20
    24bc:	ab 01       	movw	r20, r22
    24be:	67 e0       	ldi	r22, 0x07	; 7
    24c0:	22 0f       	add	r18, r18
    24c2:	33 1f       	adc	r19, r19
    24c4:	44 1f       	adc	r20, r20
    24c6:	55 1f       	adc	r21, r21
    24c8:	6a 95       	dec	r22
    24ca:	d1 f7       	brne	.-12     	; 0x24c0 <__unpack_f+0x54>
    24cc:	83 e0       	ldi	r24, 0x03	; 3
    24ce:	8c 93       	st	X, r24
    24d0:	0d c0       	rjmp	.+26     	; 0x24ec <__unpack_f+0x80>
    24d2:	22 0f       	add	r18, r18
    24d4:	33 1f       	adc	r19, r19
    24d6:	44 1f       	adc	r20, r20
    24d8:	55 1f       	adc	r21, r21
    24da:	12 96       	adiw	r26, 0x02	; 2
    24dc:	8d 91       	ld	r24, X+
    24de:	9c 91       	ld	r25, X
    24e0:	13 97       	sbiw	r26, 0x03	; 3
    24e2:	01 97       	sbiw	r24, 0x01	; 1
    24e4:	13 96       	adiw	r26, 0x03	; 3
    24e6:	9c 93       	st	X, r25
    24e8:	8e 93       	st	-X, r24
    24ea:	12 97       	sbiw	r26, 0x02	; 2
    24ec:	20 30       	cpi	r18, 0x00	; 0
    24ee:	80 e0       	ldi	r24, 0x00	; 0
    24f0:	38 07       	cpc	r19, r24
    24f2:	80 e0       	ldi	r24, 0x00	; 0
    24f4:	48 07       	cpc	r20, r24
    24f6:	80 e4       	ldi	r24, 0x40	; 64
    24f8:	58 07       	cpc	r21, r24
    24fa:	58 f3       	brcs	.-42     	; 0x24d2 <__unpack_f+0x66>
    24fc:	14 96       	adiw	r26, 0x04	; 4
    24fe:	2d 93       	st	X+, r18
    2500:	3d 93       	st	X+, r19
    2502:	4d 93       	st	X+, r20
    2504:	5c 93       	st	X, r21
    2506:	17 97       	sbiw	r26, 0x07	; 7
    2508:	08 95       	ret
    250a:	2f 3f       	cpi	r18, 0xFF	; 255
    250c:	31 05       	cpc	r19, r1
    250e:	79 f4       	brne	.+30     	; 0x252e <__unpack_f+0xc2>
    2510:	41 15       	cp	r20, r1
    2512:	51 05       	cpc	r21, r1
    2514:	61 05       	cpc	r22, r1
    2516:	71 05       	cpc	r23, r1
    2518:	19 f4       	brne	.+6      	; 0x2520 <__unpack_f+0xb4>
    251a:	84 e0       	ldi	r24, 0x04	; 4
    251c:	8c 93       	st	X, r24
    251e:	08 95       	ret
    2520:	64 ff       	sbrs	r22, 4
    2522:	03 c0       	rjmp	.+6      	; 0x252a <__unpack_f+0xbe>
    2524:	81 e0       	ldi	r24, 0x01	; 1
    2526:	8c 93       	st	X, r24
    2528:	12 c0       	rjmp	.+36     	; 0x254e <__unpack_f+0xe2>
    252a:	1c 92       	st	X, r1
    252c:	10 c0       	rjmp	.+32     	; 0x254e <__unpack_f+0xe2>
    252e:	2f 57       	subi	r18, 0x7F	; 127
    2530:	30 40       	sbci	r19, 0x00	; 0
    2532:	13 96       	adiw	r26, 0x03	; 3
    2534:	3c 93       	st	X, r19
    2536:	2e 93       	st	-X, r18
    2538:	12 97       	sbiw	r26, 0x02	; 2
    253a:	83 e0       	ldi	r24, 0x03	; 3
    253c:	8c 93       	st	X, r24
    253e:	87 e0       	ldi	r24, 0x07	; 7
    2540:	44 0f       	add	r20, r20
    2542:	55 1f       	adc	r21, r21
    2544:	66 1f       	adc	r22, r22
    2546:	77 1f       	adc	r23, r23
    2548:	8a 95       	dec	r24
    254a:	d1 f7       	brne	.-12     	; 0x2540 <__unpack_f+0xd4>
    254c:	70 64       	ori	r23, 0x40	; 64
    254e:	14 96       	adiw	r26, 0x04	; 4
    2550:	4d 93       	st	X+, r20
    2552:	5d 93       	st	X+, r21
    2554:	6d 93       	st	X+, r22
    2556:	7c 93       	st	X, r23
    2558:	17 97       	sbiw	r26, 0x07	; 7
    255a:	08 95       	ret

0000255c <__fpcmp_parts_f>:
    255c:	1f 93       	push	r17
    255e:	dc 01       	movw	r26, r24
    2560:	fb 01       	movw	r30, r22
    2562:	9c 91       	ld	r25, X
    2564:	92 30       	cpi	r25, 0x02	; 2
    2566:	08 f4       	brcc	.+2      	; 0x256a <__fpcmp_parts_f+0xe>
    2568:	47 c0       	rjmp	.+142    	; 0x25f8 <__fpcmp_parts_f+0x9c>
    256a:	80 81       	ld	r24, Z
    256c:	82 30       	cpi	r24, 0x02	; 2
    256e:	08 f4       	brcc	.+2      	; 0x2572 <__fpcmp_parts_f+0x16>
    2570:	43 c0       	rjmp	.+134    	; 0x25f8 <__fpcmp_parts_f+0x9c>
    2572:	94 30       	cpi	r25, 0x04	; 4
    2574:	51 f4       	brne	.+20     	; 0x258a <__fpcmp_parts_f+0x2e>
    2576:	11 96       	adiw	r26, 0x01	; 1
    2578:	1c 91       	ld	r17, X
    257a:	84 30       	cpi	r24, 0x04	; 4
    257c:	99 f5       	brne	.+102    	; 0x25e4 <__fpcmp_parts_f+0x88>
    257e:	81 81       	ldd	r24, Z+1	; 0x01
    2580:	68 2f       	mov	r22, r24
    2582:	70 e0       	ldi	r23, 0x00	; 0
    2584:	61 1b       	sub	r22, r17
    2586:	71 09       	sbc	r23, r1
    2588:	3f c0       	rjmp	.+126    	; 0x2608 <__fpcmp_parts_f+0xac>
    258a:	84 30       	cpi	r24, 0x04	; 4
    258c:	21 f0       	breq	.+8      	; 0x2596 <__fpcmp_parts_f+0x3a>
    258e:	92 30       	cpi	r25, 0x02	; 2
    2590:	31 f4       	brne	.+12     	; 0x259e <__fpcmp_parts_f+0x42>
    2592:	82 30       	cpi	r24, 0x02	; 2
    2594:	b9 f1       	breq	.+110    	; 0x2604 <__fpcmp_parts_f+0xa8>
    2596:	81 81       	ldd	r24, Z+1	; 0x01
    2598:	88 23       	and	r24, r24
    259a:	89 f1       	breq	.+98     	; 0x25fe <__fpcmp_parts_f+0xa2>
    259c:	2d c0       	rjmp	.+90     	; 0x25f8 <__fpcmp_parts_f+0x9c>
    259e:	11 96       	adiw	r26, 0x01	; 1
    25a0:	1c 91       	ld	r17, X
    25a2:	11 97       	sbiw	r26, 0x01	; 1
    25a4:	82 30       	cpi	r24, 0x02	; 2
    25a6:	f1 f0       	breq	.+60     	; 0x25e4 <__fpcmp_parts_f+0x88>
    25a8:	81 81       	ldd	r24, Z+1	; 0x01
    25aa:	18 17       	cp	r17, r24
    25ac:	d9 f4       	brne	.+54     	; 0x25e4 <__fpcmp_parts_f+0x88>
    25ae:	12 96       	adiw	r26, 0x02	; 2
    25b0:	2d 91       	ld	r18, X+
    25b2:	3c 91       	ld	r19, X
    25b4:	13 97       	sbiw	r26, 0x03	; 3
    25b6:	82 81       	ldd	r24, Z+2	; 0x02
    25b8:	93 81       	ldd	r25, Z+3	; 0x03
    25ba:	82 17       	cp	r24, r18
    25bc:	93 07       	cpc	r25, r19
    25be:	94 f0       	brlt	.+36     	; 0x25e4 <__fpcmp_parts_f+0x88>
    25c0:	28 17       	cp	r18, r24
    25c2:	39 07       	cpc	r19, r25
    25c4:	bc f0       	brlt	.+46     	; 0x25f4 <__fpcmp_parts_f+0x98>
    25c6:	14 96       	adiw	r26, 0x04	; 4
    25c8:	8d 91       	ld	r24, X+
    25ca:	9d 91       	ld	r25, X+
    25cc:	0d 90       	ld	r0, X+
    25ce:	bc 91       	ld	r27, X
    25d0:	a0 2d       	mov	r26, r0
    25d2:	24 81       	ldd	r18, Z+4	; 0x04
    25d4:	35 81       	ldd	r19, Z+5	; 0x05
    25d6:	46 81       	ldd	r20, Z+6	; 0x06
    25d8:	57 81       	ldd	r21, Z+7	; 0x07
    25da:	28 17       	cp	r18, r24
    25dc:	39 07       	cpc	r19, r25
    25de:	4a 07       	cpc	r20, r26
    25e0:	5b 07       	cpc	r21, r27
    25e2:	18 f4       	brcc	.+6      	; 0x25ea <__fpcmp_parts_f+0x8e>
    25e4:	11 23       	and	r17, r17
    25e6:	41 f0       	breq	.+16     	; 0x25f8 <__fpcmp_parts_f+0x9c>
    25e8:	0a c0       	rjmp	.+20     	; 0x25fe <__fpcmp_parts_f+0xa2>
    25ea:	82 17       	cp	r24, r18
    25ec:	93 07       	cpc	r25, r19
    25ee:	a4 07       	cpc	r26, r20
    25f0:	b5 07       	cpc	r27, r21
    25f2:	40 f4       	brcc	.+16     	; 0x2604 <__fpcmp_parts_f+0xa8>
    25f4:	11 23       	and	r17, r17
    25f6:	19 f0       	breq	.+6      	; 0x25fe <__fpcmp_parts_f+0xa2>
    25f8:	61 e0       	ldi	r22, 0x01	; 1
    25fa:	70 e0       	ldi	r23, 0x00	; 0
    25fc:	05 c0       	rjmp	.+10     	; 0x2608 <__fpcmp_parts_f+0xac>
    25fe:	6f ef       	ldi	r22, 0xFF	; 255
    2600:	7f ef       	ldi	r23, 0xFF	; 255
    2602:	02 c0       	rjmp	.+4      	; 0x2608 <__fpcmp_parts_f+0xac>
    2604:	60 e0       	ldi	r22, 0x00	; 0
    2606:	70 e0       	ldi	r23, 0x00	; 0
    2608:	cb 01       	movw	r24, r22
    260a:	1f 91       	pop	r17
    260c:	08 95       	ret

0000260e <DIO_voidSetPinDirection>:


/*************************************************/

void DIO_voidSetPinDirection(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Mode )
{
    260e:	df 93       	push	r29
    2610:	cf 93       	push	r28
    2612:	cd b7       	in	r28, 0x3d	; 61
    2614:	de b7       	in	r29, 0x3e	; 62
    2616:	27 97       	sbiw	r28, 0x07	; 7
    2618:	0f b6       	in	r0, 0x3f	; 63
    261a:	f8 94       	cli
    261c:	de bf       	out	0x3e, r29	; 62
    261e:	0f be       	out	0x3f, r0	; 63
    2620:	cd bf       	out	0x3d, r28	; 61
    2622:	89 83       	std	Y+1, r24	; 0x01
    2624:	6a 83       	std	Y+2, r22	; 0x02
    2626:	4b 83       	std	Y+3, r20	; 0x03
		if (DIO_u8OUTPUT == Copy_u8Mode)
    2628:	8b 81       	ldd	r24, Y+3	; 0x03
    262a:	81 30       	cpi	r24, 0x01	; 1
    262c:	09 f0       	breq	.+2      	; 0x2630 <DIO_voidSetPinDirection+0x22>
    262e:	70 c0       	rjmp	.+224    	; 0x2710 <DIO_voidSetPinDirection+0x102>
		{
			switch(Copy_u8PortNum)
    2630:	89 81       	ldd	r24, Y+1	; 0x01
    2632:	28 2f       	mov	r18, r24
    2634:	30 e0       	ldi	r19, 0x00	; 0
    2636:	3f 83       	std	Y+7, r19	; 0x07
    2638:	2e 83       	std	Y+6, r18	; 0x06
    263a:	8e 81       	ldd	r24, Y+6	; 0x06
    263c:	9f 81       	ldd	r25, Y+7	; 0x07
    263e:	82 30       	cpi	r24, 0x02	; 2
    2640:	91 05       	cpc	r25, r1
    2642:	51 f1       	breq	.+84     	; 0x2698 <DIO_voidSetPinDirection+0x8a>
    2644:	2e 81       	ldd	r18, Y+6	; 0x06
    2646:	3f 81       	ldd	r19, Y+7	; 0x07
    2648:	23 30       	cpi	r18, 0x03	; 3
    264a:	31 05       	cpc	r19, r1
    264c:	34 f4       	brge	.+12     	; 0x265a <DIO_voidSetPinDirection+0x4c>
    264e:	8e 81       	ldd	r24, Y+6	; 0x06
    2650:	9f 81       	ldd	r25, Y+7	; 0x07
    2652:	81 30       	cpi	r24, 0x01	; 1
    2654:	91 05       	cpc	r25, r1
    2656:	61 f0       	breq	.+24     	; 0x2670 <DIO_voidSetPinDirection+0x62>
    2658:	d3 c0       	rjmp	.+422    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
    265a:	2e 81       	ldd	r18, Y+6	; 0x06
    265c:	3f 81       	ldd	r19, Y+7	; 0x07
    265e:	23 30       	cpi	r18, 0x03	; 3
    2660:	31 05       	cpc	r19, r1
    2662:	71 f1       	breq	.+92     	; 0x26c0 <DIO_voidSetPinDirection+0xb2>
    2664:	8e 81       	ldd	r24, Y+6	; 0x06
    2666:	9f 81       	ldd	r25, Y+7	; 0x07
    2668:	84 30       	cpi	r24, 0x04	; 4
    266a:	91 05       	cpc	r25, r1
    266c:	e9 f1       	breq	.+122    	; 0x26e8 <DIO_voidSetPinDirection+0xda>
    266e:	c8 c0       	rjmp	.+400    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(DDRA , Copy_u8PinNum);       break;
    2670:	aa e3       	ldi	r26, 0x3A	; 58
    2672:	b0 e0       	ldi	r27, 0x00	; 0
    2674:	ea e3       	ldi	r30, 0x3A	; 58
    2676:	f0 e0       	ldi	r31, 0x00	; 0
    2678:	80 81       	ld	r24, Z
    267a:	48 2f       	mov	r20, r24
    267c:	8a 81       	ldd	r24, Y+2	; 0x02
    267e:	28 2f       	mov	r18, r24
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	81 e0       	ldi	r24, 0x01	; 1
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	02 2e       	mov	r0, r18
    2688:	02 c0       	rjmp	.+4      	; 0x268e <DIO_voidSetPinDirection+0x80>
    268a:	88 0f       	add	r24, r24
    268c:	99 1f       	adc	r25, r25
    268e:	0a 94       	dec	r0
    2690:	e2 f7       	brpl	.-8      	; 0x268a <DIO_voidSetPinDirection+0x7c>
    2692:	84 2b       	or	r24, r20
    2694:	8c 93       	st	X, r24
    2696:	b4 c0       	rjmp	.+360    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :         SET_BIT(DDRB , Copy_u8PinNum);       break;
    2698:	a7 e3       	ldi	r26, 0x37	; 55
    269a:	b0 e0       	ldi	r27, 0x00	; 0
    269c:	e7 e3       	ldi	r30, 0x37	; 55
    269e:	f0 e0       	ldi	r31, 0x00	; 0
    26a0:	80 81       	ld	r24, Z
    26a2:	48 2f       	mov	r20, r24
    26a4:	8a 81       	ldd	r24, Y+2	; 0x02
    26a6:	28 2f       	mov	r18, r24
    26a8:	30 e0       	ldi	r19, 0x00	; 0
    26aa:	81 e0       	ldi	r24, 0x01	; 1
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	02 2e       	mov	r0, r18
    26b0:	02 c0       	rjmp	.+4      	; 0x26b6 <DIO_voidSetPinDirection+0xa8>
    26b2:	88 0f       	add	r24, r24
    26b4:	99 1f       	adc	r25, r25
    26b6:	0a 94       	dec	r0
    26b8:	e2 f7       	brpl	.-8      	; 0x26b2 <DIO_voidSetPinDirection+0xa4>
    26ba:	84 2b       	or	r24, r20
    26bc:	8c 93       	st	X, r24
    26be:	a0 c0       	rjmp	.+320    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :         SET_BIT(DDRC , Copy_u8PinNum);       break;
    26c0:	a4 e3       	ldi	r26, 0x34	; 52
    26c2:	b0 e0       	ldi	r27, 0x00	; 0
    26c4:	e4 e3       	ldi	r30, 0x34	; 52
    26c6:	f0 e0       	ldi	r31, 0x00	; 0
    26c8:	80 81       	ld	r24, Z
    26ca:	48 2f       	mov	r20, r24
    26cc:	8a 81       	ldd	r24, Y+2	; 0x02
    26ce:	28 2f       	mov	r18, r24
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	81 e0       	ldi	r24, 0x01	; 1
    26d4:	90 e0       	ldi	r25, 0x00	; 0
    26d6:	02 2e       	mov	r0, r18
    26d8:	02 c0       	rjmp	.+4      	; 0x26de <DIO_voidSetPinDirection+0xd0>
    26da:	88 0f       	add	r24, r24
    26dc:	99 1f       	adc	r25, r25
    26de:	0a 94       	dec	r0
    26e0:	e2 f7       	brpl	.-8      	; 0x26da <DIO_voidSetPinDirection+0xcc>
    26e2:	84 2b       	or	r24, r20
    26e4:	8c 93       	st	X, r24
    26e6:	8c c0       	rjmp	.+280    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :         SET_BIT(DDRD , Copy_u8PinNum);       break;
    26e8:	a1 e3       	ldi	r26, 0x31	; 49
    26ea:	b0 e0       	ldi	r27, 0x00	; 0
    26ec:	e1 e3       	ldi	r30, 0x31	; 49
    26ee:	f0 e0       	ldi	r31, 0x00	; 0
    26f0:	80 81       	ld	r24, Z
    26f2:	48 2f       	mov	r20, r24
    26f4:	8a 81       	ldd	r24, Y+2	; 0x02
    26f6:	28 2f       	mov	r18, r24
    26f8:	30 e0       	ldi	r19, 0x00	; 0
    26fa:	81 e0       	ldi	r24, 0x01	; 1
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	02 2e       	mov	r0, r18
    2700:	02 c0       	rjmp	.+4      	; 0x2706 <DIO_voidSetPinDirection+0xf8>
    2702:	88 0f       	add	r24, r24
    2704:	99 1f       	adc	r25, r25
    2706:	0a 94       	dec	r0
    2708:	e2 f7       	brpl	.-8      	; 0x2702 <DIO_voidSetPinDirection+0xf4>
    270a:	84 2b       	or	r24, r20
    270c:	8c 93       	st	X, r24
    270e:	78 c0       	rjmp	.+240    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
			}
		}
		else if (DIO_u8INPUT == Copy_u8Mode)
    2710:	8b 81       	ldd	r24, Y+3	; 0x03
    2712:	88 23       	and	r24, r24
    2714:	09 f0       	breq	.+2      	; 0x2718 <DIO_voidSetPinDirection+0x10a>
    2716:	74 c0       	rjmp	.+232    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
		{
			switch(Copy_u8PortNum)
    2718:	89 81       	ldd	r24, Y+1	; 0x01
    271a:	28 2f       	mov	r18, r24
    271c:	30 e0       	ldi	r19, 0x00	; 0
    271e:	3d 83       	std	Y+5, r19	; 0x05
    2720:	2c 83       	std	Y+4, r18	; 0x04
    2722:	8c 81       	ldd	r24, Y+4	; 0x04
    2724:	9d 81       	ldd	r25, Y+5	; 0x05
    2726:	82 30       	cpi	r24, 0x02	; 2
    2728:	91 05       	cpc	r25, r1
    272a:	61 f1       	breq	.+88     	; 0x2784 <DIO_voidSetPinDirection+0x176>
    272c:	2c 81       	ldd	r18, Y+4	; 0x04
    272e:	3d 81       	ldd	r19, Y+5	; 0x05
    2730:	23 30       	cpi	r18, 0x03	; 3
    2732:	31 05       	cpc	r19, r1
    2734:	34 f4       	brge	.+12     	; 0x2742 <DIO_voidSetPinDirection+0x134>
    2736:	8c 81       	ldd	r24, Y+4	; 0x04
    2738:	9d 81       	ldd	r25, Y+5	; 0x05
    273a:	81 30       	cpi	r24, 0x01	; 1
    273c:	91 05       	cpc	r25, r1
    273e:	69 f0       	breq	.+26     	; 0x275a <DIO_voidSetPinDirection+0x14c>
    2740:	5f c0       	rjmp	.+190    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
    2742:	2c 81       	ldd	r18, Y+4	; 0x04
    2744:	3d 81       	ldd	r19, Y+5	; 0x05
    2746:	23 30       	cpi	r18, 0x03	; 3
    2748:	31 05       	cpc	r19, r1
    274a:	89 f1       	breq	.+98     	; 0x27ae <DIO_voidSetPinDirection+0x1a0>
    274c:	8c 81       	ldd	r24, Y+4	; 0x04
    274e:	9d 81       	ldd	r25, Y+5	; 0x05
    2750:	84 30       	cpi	r24, 0x04	; 4
    2752:	91 05       	cpc	r25, r1
    2754:	09 f4       	brne	.+2      	; 0x2758 <DIO_voidSetPinDirection+0x14a>
    2756:	40 c0       	rjmp	.+128    	; 0x27d8 <DIO_voidSetPinDirection+0x1ca>
    2758:	53 c0       	rjmp	.+166    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :      CLR_BIT( DDRA, Copy_u8PinNum);    break;
    275a:	aa e3       	ldi	r26, 0x3A	; 58
    275c:	b0 e0       	ldi	r27, 0x00	; 0
    275e:	ea e3       	ldi	r30, 0x3A	; 58
    2760:	f0 e0       	ldi	r31, 0x00	; 0
    2762:	80 81       	ld	r24, Z
    2764:	48 2f       	mov	r20, r24
    2766:	8a 81       	ldd	r24, Y+2	; 0x02
    2768:	28 2f       	mov	r18, r24
    276a:	30 e0       	ldi	r19, 0x00	; 0
    276c:	81 e0       	ldi	r24, 0x01	; 1
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	02 2e       	mov	r0, r18
    2772:	02 c0       	rjmp	.+4      	; 0x2778 <DIO_voidSetPinDirection+0x16a>
    2774:	88 0f       	add	r24, r24
    2776:	99 1f       	adc	r25, r25
    2778:	0a 94       	dec	r0
    277a:	e2 f7       	brpl	.-8      	; 0x2774 <DIO_voidSetPinDirection+0x166>
    277c:	80 95       	com	r24
    277e:	84 23       	and	r24, r20
    2780:	8c 93       	st	X, r24
    2782:	3e c0       	rjmp	.+124    	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :      CLR_BIT( DDRB, Copy_u8PinNum);    break;
    2784:	a7 e3       	ldi	r26, 0x37	; 55
    2786:	b0 e0       	ldi	r27, 0x00	; 0
    2788:	e7 e3       	ldi	r30, 0x37	; 55
    278a:	f0 e0       	ldi	r31, 0x00	; 0
    278c:	80 81       	ld	r24, Z
    278e:	48 2f       	mov	r20, r24
    2790:	8a 81       	ldd	r24, Y+2	; 0x02
    2792:	28 2f       	mov	r18, r24
    2794:	30 e0       	ldi	r19, 0x00	; 0
    2796:	81 e0       	ldi	r24, 0x01	; 1
    2798:	90 e0       	ldi	r25, 0x00	; 0
    279a:	02 2e       	mov	r0, r18
    279c:	02 c0       	rjmp	.+4      	; 0x27a2 <DIO_voidSetPinDirection+0x194>
    279e:	88 0f       	add	r24, r24
    27a0:	99 1f       	adc	r25, r25
    27a2:	0a 94       	dec	r0
    27a4:	e2 f7       	brpl	.-8      	; 0x279e <DIO_voidSetPinDirection+0x190>
    27a6:	80 95       	com	r24
    27a8:	84 23       	and	r24, r20
    27aa:	8c 93       	st	X, r24
    27ac:	29 c0       	rjmp	.+82     	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :      CLR_BIT( DDRC, Copy_u8PinNum);    break;
    27ae:	a4 e3       	ldi	r26, 0x34	; 52
    27b0:	b0 e0       	ldi	r27, 0x00	; 0
    27b2:	e4 e3       	ldi	r30, 0x34	; 52
    27b4:	f0 e0       	ldi	r31, 0x00	; 0
    27b6:	80 81       	ld	r24, Z
    27b8:	48 2f       	mov	r20, r24
    27ba:	8a 81       	ldd	r24, Y+2	; 0x02
    27bc:	28 2f       	mov	r18, r24
    27be:	30 e0       	ldi	r19, 0x00	; 0
    27c0:	81 e0       	ldi	r24, 0x01	; 1
    27c2:	90 e0       	ldi	r25, 0x00	; 0
    27c4:	02 2e       	mov	r0, r18
    27c6:	02 c0       	rjmp	.+4      	; 0x27cc <DIO_voidSetPinDirection+0x1be>
    27c8:	88 0f       	add	r24, r24
    27ca:	99 1f       	adc	r25, r25
    27cc:	0a 94       	dec	r0
    27ce:	e2 f7       	brpl	.-8      	; 0x27c8 <DIO_voidSetPinDirection+0x1ba>
    27d0:	80 95       	com	r24
    27d2:	84 23       	and	r24, r20
    27d4:	8c 93       	st	X, r24
    27d6:	14 c0       	rjmp	.+40     	; 0x2800 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :      CLR_BIT( DDRD, Copy_u8PinNum);    break;
    27d8:	a1 e3       	ldi	r26, 0x31	; 49
    27da:	b0 e0       	ldi	r27, 0x00	; 0
    27dc:	e1 e3       	ldi	r30, 0x31	; 49
    27de:	f0 e0       	ldi	r31, 0x00	; 0
    27e0:	80 81       	ld	r24, Z
    27e2:	48 2f       	mov	r20, r24
    27e4:	8a 81       	ldd	r24, Y+2	; 0x02
    27e6:	28 2f       	mov	r18, r24
    27e8:	30 e0       	ldi	r19, 0x00	; 0
    27ea:	81 e0       	ldi	r24, 0x01	; 1
    27ec:	90 e0       	ldi	r25, 0x00	; 0
    27ee:	02 2e       	mov	r0, r18
    27f0:	02 c0       	rjmp	.+4      	; 0x27f6 <DIO_voidSetPinDirection+0x1e8>
    27f2:	88 0f       	add	r24, r24
    27f4:	99 1f       	adc	r25, r25
    27f6:	0a 94       	dec	r0
    27f8:	e2 f7       	brpl	.-8      	; 0x27f2 <DIO_voidSetPinDirection+0x1e4>
    27fa:	80 95       	com	r24
    27fc:	84 23       	and	r24, r20
    27fe:	8c 93       	st	X, r24
				default :             /* return error */                  break;
			}
		}
}
    2800:	27 96       	adiw	r28, 0x07	; 7
    2802:	0f b6       	in	r0, 0x3f	; 63
    2804:	f8 94       	cli
    2806:	de bf       	out	0x3e, r29	; 62
    2808:	0f be       	out	0x3f, r0	; 63
    280a:	cd bf       	out	0x3d, r28	; 61
    280c:	cf 91       	pop	r28
    280e:	df 91       	pop	r29
    2810:	08 95       	ret

00002812 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Value )
{
    2812:	df 93       	push	r29
    2814:	cf 93       	push	r28
    2816:	cd b7       	in	r28, 0x3d	; 61
    2818:	de b7       	in	r29, 0x3e	; 62
    281a:	27 97       	sbiw	r28, 0x07	; 7
    281c:	0f b6       	in	r0, 0x3f	; 63
    281e:	f8 94       	cli
    2820:	de bf       	out	0x3e, r29	; 62
    2822:	0f be       	out	0x3f, r0	; 63
    2824:	cd bf       	out	0x3d, r28	; 61
    2826:	89 83       	std	Y+1, r24	; 0x01
    2828:	6a 83       	std	Y+2, r22	; 0x02
    282a:	4b 83       	std	Y+3, r20	; 0x03
	if (DIO_u8HIGH == Copy_u8Value)
    282c:	8b 81       	ldd	r24, Y+3	; 0x03
    282e:	81 30       	cpi	r24, 0x01	; 1
    2830:	09 f0       	breq	.+2      	; 0x2834 <DIO_voidSetPinValue+0x22>
    2832:	70 c0       	rjmp	.+224    	; 0x2914 <DIO_voidSetPinValue+0x102>
		{
			switch(Copy_u8PortNum)
    2834:	89 81       	ldd	r24, Y+1	; 0x01
    2836:	28 2f       	mov	r18, r24
    2838:	30 e0       	ldi	r19, 0x00	; 0
    283a:	3f 83       	std	Y+7, r19	; 0x07
    283c:	2e 83       	std	Y+6, r18	; 0x06
    283e:	8e 81       	ldd	r24, Y+6	; 0x06
    2840:	9f 81       	ldd	r25, Y+7	; 0x07
    2842:	82 30       	cpi	r24, 0x02	; 2
    2844:	91 05       	cpc	r25, r1
    2846:	51 f1       	breq	.+84     	; 0x289c <DIO_voidSetPinValue+0x8a>
    2848:	2e 81       	ldd	r18, Y+6	; 0x06
    284a:	3f 81       	ldd	r19, Y+7	; 0x07
    284c:	23 30       	cpi	r18, 0x03	; 3
    284e:	31 05       	cpc	r19, r1
    2850:	34 f4       	brge	.+12     	; 0x285e <DIO_voidSetPinValue+0x4c>
    2852:	8e 81       	ldd	r24, Y+6	; 0x06
    2854:	9f 81       	ldd	r25, Y+7	; 0x07
    2856:	81 30       	cpi	r24, 0x01	; 1
    2858:	91 05       	cpc	r25, r1
    285a:	61 f0       	breq	.+24     	; 0x2874 <DIO_voidSetPinValue+0x62>
    285c:	d3 c0       	rjmp	.+422    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
    285e:	2e 81       	ldd	r18, Y+6	; 0x06
    2860:	3f 81       	ldd	r19, Y+7	; 0x07
    2862:	23 30       	cpi	r18, 0x03	; 3
    2864:	31 05       	cpc	r19, r1
    2866:	71 f1       	breq	.+92     	; 0x28c4 <DIO_voidSetPinValue+0xb2>
    2868:	8e 81       	ldd	r24, Y+6	; 0x06
    286a:	9f 81       	ldd	r25, Y+7	; 0x07
    286c:	84 30       	cpi	r24, 0x04	; 4
    286e:	91 05       	cpc	r25, r1
    2870:	e9 f1       	breq	.+122    	; 0x28ec <DIO_voidSetPinValue+0xda>
    2872:	c8 c0       	rjmp	.+400    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(PORTA , Copy_u8PinNum);       break;
    2874:	ab e3       	ldi	r26, 0x3B	; 59
    2876:	b0 e0       	ldi	r27, 0x00	; 0
    2878:	eb e3       	ldi	r30, 0x3B	; 59
    287a:	f0 e0       	ldi	r31, 0x00	; 0
    287c:	80 81       	ld	r24, Z
    287e:	48 2f       	mov	r20, r24
    2880:	8a 81       	ldd	r24, Y+2	; 0x02
    2882:	28 2f       	mov	r18, r24
    2884:	30 e0       	ldi	r19, 0x00	; 0
    2886:	81 e0       	ldi	r24, 0x01	; 1
    2888:	90 e0       	ldi	r25, 0x00	; 0
    288a:	02 2e       	mov	r0, r18
    288c:	02 c0       	rjmp	.+4      	; 0x2892 <DIO_voidSetPinValue+0x80>
    288e:	88 0f       	add	r24, r24
    2890:	99 1f       	adc	r25, r25
    2892:	0a 94       	dec	r0
    2894:	e2 f7       	brpl	.-8      	; 0x288e <DIO_voidSetPinValue+0x7c>
    2896:	84 2b       	or	r24, r20
    2898:	8c 93       	st	X, r24
    289a:	b4 c0       	rjmp	.+360    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         SET_BIT(PORTB , Copy_u8PinNum);       break;
    289c:	a8 e3       	ldi	r26, 0x38	; 56
    289e:	b0 e0       	ldi	r27, 0x00	; 0
    28a0:	e8 e3       	ldi	r30, 0x38	; 56
    28a2:	f0 e0       	ldi	r31, 0x00	; 0
    28a4:	80 81       	ld	r24, Z
    28a6:	48 2f       	mov	r20, r24
    28a8:	8a 81       	ldd	r24, Y+2	; 0x02
    28aa:	28 2f       	mov	r18, r24
    28ac:	30 e0       	ldi	r19, 0x00	; 0
    28ae:	81 e0       	ldi	r24, 0x01	; 1
    28b0:	90 e0       	ldi	r25, 0x00	; 0
    28b2:	02 2e       	mov	r0, r18
    28b4:	02 c0       	rjmp	.+4      	; 0x28ba <DIO_voidSetPinValue+0xa8>
    28b6:	88 0f       	add	r24, r24
    28b8:	99 1f       	adc	r25, r25
    28ba:	0a 94       	dec	r0
    28bc:	e2 f7       	brpl	.-8      	; 0x28b6 <DIO_voidSetPinValue+0xa4>
    28be:	84 2b       	or	r24, r20
    28c0:	8c 93       	st	X, r24
    28c2:	a0 c0       	rjmp	.+320    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         SET_BIT(PORTC , Copy_u8PinNum);       break;
    28c4:	a5 e3       	ldi	r26, 0x35	; 53
    28c6:	b0 e0       	ldi	r27, 0x00	; 0
    28c8:	e5 e3       	ldi	r30, 0x35	; 53
    28ca:	f0 e0       	ldi	r31, 0x00	; 0
    28cc:	80 81       	ld	r24, Z
    28ce:	48 2f       	mov	r20, r24
    28d0:	8a 81       	ldd	r24, Y+2	; 0x02
    28d2:	28 2f       	mov	r18, r24
    28d4:	30 e0       	ldi	r19, 0x00	; 0
    28d6:	81 e0       	ldi	r24, 0x01	; 1
    28d8:	90 e0       	ldi	r25, 0x00	; 0
    28da:	02 2e       	mov	r0, r18
    28dc:	02 c0       	rjmp	.+4      	; 0x28e2 <DIO_voidSetPinValue+0xd0>
    28de:	88 0f       	add	r24, r24
    28e0:	99 1f       	adc	r25, r25
    28e2:	0a 94       	dec	r0
    28e4:	e2 f7       	brpl	.-8      	; 0x28de <DIO_voidSetPinValue+0xcc>
    28e6:	84 2b       	or	r24, r20
    28e8:	8c 93       	st	X, r24
    28ea:	8c c0       	rjmp	.+280    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         SET_BIT(PORTD , Copy_u8PinNum);       break;
    28ec:	a2 e3       	ldi	r26, 0x32	; 50
    28ee:	b0 e0       	ldi	r27, 0x00	; 0
    28f0:	e2 e3       	ldi	r30, 0x32	; 50
    28f2:	f0 e0       	ldi	r31, 0x00	; 0
    28f4:	80 81       	ld	r24, Z
    28f6:	48 2f       	mov	r20, r24
    28f8:	8a 81       	ldd	r24, Y+2	; 0x02
    28fa:	28 2f       	mov	r18, r24
    28fc:	30 e0       	ldi	r19, 0x00	; 0
    28fe:	81 e0       	ldi	r24, 0x01	; 1
    2900:	90 e0       	ldi	r25, 0x00	; 0
    2902:	02 2e       	mov	r0, r18
    2904:	02 c0       	rjmp	.+4      	; 0x290a <DIO_voidSetPinValue+0xf8>
    2906:	88 0f       	add	r24, r24
    2908:	99 1f       	adc	r25, r25
    290a:	0a 94       	dec	r0
    290c:	e2 f7       	brpl	.-8      	; 0x2906 <DIO_voidSetPinValue+0xf4>
    290e:	84 2b       	or	r24, r20
    2910:	8c 93       	st	X, r24
    2912:	78 c0       	rjmp	.+240    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
				default :                  /* return error */                    break;
			}
		}
		else if (DIO_u8LOW == Copy_u8Value)
    2914:	8b 81       	ldd	r24, Y+3	; 0x03
    2916:	88 23       	and	r24, r24
    2918:	09 f0       	breq	.+2      	; 0x291c <DIO_voidSetPinValue+0x10a>
    291a:	74 c0       	rjmp	.+232    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
		{
			switch(Copy_u8PortNum){
    291c:	89 81       	ldd	r24, Y+1	; 0x01
    291e:	28 2f       	mov	r18, r24
    2920:	30 e0       	ldi	r19, 0x00	; 0
    2922:	3d 83       	std	Y+5, r19	; 0x05
    2924:	2c 83       	std	Y+4, r18	; 0x04
    2926:	8c 81       	ldd	r24, Y+4	; 0x04
    2928:	9d 81       	ldd	r25, Y+5	; 0x05
    292a:	82 30       	cpi	r24, 0x02	; 2
    292c:	91 05       	cpc	r25, r1
    292e:	61 f1       	breq	.+88     	; 0x2988 <DIO_voidSetPinValue+0x176>
    2930:	2c 81       	ldd	r18, Y+4	; 0x04
    2932:	3d 81       	ldd	r19, Y+5	; 0x05
    2934:	23 30       	cpi	r18, 0x03	; 3
    2936:	31 05       	cpc	r19, r1
    2938:	34 f4       	brge	.+12     	; 0x2946 <DIO_voidSetPinValue+0x134>
    293a:	8c 81       	ldd	r24, Y+4	; 0x04
    293c:	9d 81       	ldd	r25, Y+5	; 0x05
    293e:	81 30       	cpi	r24, 0x01	; 1
    2940:	91 05       	cpc	r25, r1
    2942:	69 f0       	breq	.+26     	; 0x295e <DIO_voidSetPinValue+0x14c>
    2944:	5f c0       	rjmp	.+190    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
    2946:	2c 81       	ldd	r18, Y+4	; 0x04
    2948:	3d 81       	ldd	r19, Y+5	; 0x05
    294a:	23 30       	cpi	r18, 0x03	; 3
    294c:	31 05       	cpc	r19, r1
    294e:	89 f1       	breq	.+98     	; 0x29b2 <DIO_voidSetPinValue+0x1a0>
    2950:	8c 81       	ldd	r24, Y+4	; 0x04
    2952:	9d 81       	ldd	r25, Y+5	; 0x05
    2954:	84 30       	cpi	r24, 0x04	; 4
    2956:	91 05       	cpc	r25, r1
    2958:	09 f4       	brne	.+2      	; 0x295c <DIO_voidSetPinValue+0x14a>
    295a:	40 c0       	rjmp	.+128    	; 0x29dc <DIO_voidSetPinValue+0x1ca>
    295c:	53 c0       	rjmp	.+166    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>

				case DIO_u8PORTA :         CLR_BIT( PORTA , Copy_u8PinNum);        break;
    295e:	ab e3       	ldi	r26, 0x3B	; 59
    2960:	b0 e0       	ldi	r27, 0x00	; 0
    2962:	eb e3       	ldi	r30, 0x3B	; 59
    2964:	f0 e0       	ldi	r31, 0x00	; 0
    2966:	80 81       	ld	r24, Z
    2968:	48 2f       	mov	r20, r24
    296a:	8a 81       	ldd	r24, Y+2	; 0x02
    296c:	28 2f       	mov	r18, r24
    296e:	30 e0       	ldi	r19, 0x00	; 0
    2970:	81 e0       	ldi	r24, 0x01	; 1
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	02 2e       	mov	r0, r18
    2976:	02 c0       	rjmp	.+4      	; 0x297c <DIO_voidSetPinValue+0x16a>
    2978:	88 0f       	add	r24, r24
    297a:	99 1f       	adc	r25, r25
    297c:	0a 94       	dec	r0
    297e:	e2 f7       	brpl	.-8      	; 0x2978 <DIO_voidSetPinValue+0x166>
    2980:	80 95       	com	r24
    2982:	84 23       	and	r24, r20
    2984:	8c 93       	st	X, r24
    2986:	3e c0       	rjmp	.+124    	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         CLR_BIT( PORTB , Copy_u8PinNum);        break;
    2988:	a8 e3       	ldi	r26, 0x38	; 56
    298a:	b0 e0       	ldi	r27, 0x00	; 0
    298c:	e8 e3       	ldi	r30, 0x38	; 56
    298e:	f0 e0       	ldi	r31, 0x00	; 0
    2990:	80 81       	ld	r24, Z
    2992:	48 2f       	mov	r20, r24
    2994:	8a 81       	ldd	r24, Y+2	; 0x02
    2996:	28 2f       	mov	r18, r24
    2998:	30 e0       	ldi	r19, 0x00	; 0
    299a:	81 e0       	ldi	r24, 0x01	; 1
    299c:	90 e0       	ldi	r25, 0x00	; 0
    299e:	02 2e       	mov	r0, r18
    29a0:	02 c0       	rjmp	.+4      	; 0x29a6 <DIO_voidSetPinValue+0x194>
    29a2:	88 0f       	add	r24, r24
    29a4:	99 1f       	adc	r25, r25
    29a6:	0a 94       	dec	r0
    29a8:	e2 f7       	brpl	.-8      	; 0x29a2 <DIO_voidSetPinValue+0x190>
    29aa:	80 95       	com	r24
    29ac:	84 23       	and	r24, r20
    29ae:	8c 93       	st	X, r24
    29b0:	29 c0       	rjmp	.+82     	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         CLR_BIT( PORTC , Copy_u8PinNum);        break;
    29b2:	a5 e3       	ldi	r26, 0x35	; 53
    29b4:	b0 e0       	ldi	r27, 0x00	; 0
    29b6:	e5 e3       	ldi	r30, 0x35	; 53
    29b8:	f0 e0       	ldi	r31, 0x00	; 0
    29ba:	80 81       	ld	r24, Z
    29bc:	48 2f       	mov	r20, r24
    29be:	8a 81       	ldd	r24, Y+2	; 0x02
    29c0:	28 2f       	mov	r18, r24
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	81 e0       	ldi	r24, 0x01	; 1
    29c6:	90 e0       	ldi	r25, 0x00	; 0
    29c8:	02 2e       	mov	r0, r18
    29ca:	02 c0       	rjmp	.+4      	; 0x29d0 <DIO_voidSetPinValue+0x1be>
    29cc:	88 0f       	add	r24, r24
    29ce:	99 1f       	adc	r25, r25
    29d0:	0a 94       	dec	r0
    29d2:	e2 f7       	brpl	.-8      	; 0x29cc <DIO_voidSetPinValue+0x1ba>
    29d4:	80 95       	com	r24
    29d6:	84 23       	and	r24, r20
    29d8:	8c 93       	st	X, r24
    29da:	14 c0       	rjmp	.+40     	; 0x2a04 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         CLR_BIT( PORTD , Copy_u8PinNum);        break;
    29dc:	a2 e3       	ldi	r26, 0x32	; 50
    29de:	b0 e0       	ldi	r27, 0x00	; 0
    29e0:	e2 e3       	ldi	r30, 0x32	; 50
    29e2:	f0 e0       	ldi	r31, 0x00	; 0
    29e4:	80 81       	ld	r24, Z
    29e6:	48 2f       	mov	r20, r24
    29e8:	8a 81       	ldd	r24, Y+2	; 0x02
    29ea:	28 2f       	mov	r18, r24
    29ec:	30 e0       	ldi	r19, 0x00	; 0
    29ee:	81 e0       	ldi	r24, 0x01	; 1
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	02 2e       	mov	r0, r18
    29f4:	02 c0       	rjmp	.+4      	; 0x29fa <DIO_voidSetPinValue+0x1e8>
    29f6:	88 0f       	add	r24, r24
    29f8:	99 1f       	adc	r25, r25
    29fa:	0a 94       	dec	r0
    29fc:	e2 f7       	brpl	.-8      	; 0x29f6 <DIO_voidSetPinValue+0x1e4>
    29fe:	80 95       	com	r24
    2a00:	84 23       	and	r24, r20
    2a02:	8c 93       	st	X, r24
				default :                     /* return error */                   break;
				}
		}
		else {/*   return error  */}
}
    2a04:	27 96       	adiw	r28, 0x07	; 7
    2a06:	0f b6       	in	r0, 0x3f	; 63
    2a08:	f8 94       	cli
    2a0a:	de bf       	out	0x3e, r29	; 62
    2a0c:	0f be       	out	0x3f, r0	; 63
    2a0e:	cd bf       	out	0x3d, r28	; 61
    2a10:	cf 91       	pop	r28
    2a12:	df 91       	pop	r29
    2a14:	08 95       	ret

00002a16 <DIO_u8GetPinValue>:

uint8 DIO_u8GetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum )
{
    2a16:	df 93       	push	r29
    2a18:	cf 93       	push	r28
    2a1a:	00 d0       	rcall	.+0      	; 0x2a1c <DIO_u8GetPinValue+0x6>
    2a1c:	00 d0       	rcall	.+0      	; 0x2a1e <DIO_u8GetPinValue+0x8>
    2a1e:	0f 92       	push	r0
    2a20:	cd b7       	in	r28, 0x3d	; 61
    2a22:	de b7       	in	r29, 0x3e	; 62
    2a24:	8a 83       	std	Y+2, r24	; 0x02
    2a26:	6b 83       	std	Y+3, r22	; 0x03
	uint8 BIT;
	switch(Copy_u8PortNum)
    2a28:	8a 81       	ldd	r24, Y+2	; 0x02
    2a2a:	28 2f       	mov	r18, r24
    2a2c:	30 e0       	ldi	r19, 0x00	; 0
    2a2e:	3d 83       	std	Y+5, r19	; 0x05
    2a30:	2c 83       	std	Y+4, r18	; 0x04
    2a32:	4c 81       	ldd	r20, Y+4	; 0x04
    2a34:	5d 81       	ldd	r21, Y+5	; 0x05
    2a36:	42 30       	cpi	r20, 0x02	; 2
    2a38:	51 05       	cpc	r21, r1
    2a3a:	41 f1       	breq	.+80     	; 0x2a8c <DIO_u8GetPinValue+0x76>
    2a3c:	8c 81       	ldd	r24, Y+4	; 0x04
    2a3e:	9d 81       	ldd	r25, Y+5	; 0x05
    2a40:	83 30       	cpi	r24, 0x03	; 3
    2a42:	91 05       	cpc	r25, r1
    2a44:	34 f4       	brge	.+12     	; 0x2a52 <DIO_u8GetPinValue+0x3c>
    2a46:	2c 81       	ldd	r18, Y+4	; 0x04
    2a48:	3d 81       	ldd	r19, Y+5	; 0x05
    2a4a:	21 30       	cpi	r18, 0x01	; 1
    2a4c:	31 05       	cpc	r19, r1
    2a4e:	61 f0       	breq	.+24     	; 0x2a68 <DIO_u8GetPinValue+0x52>
    2a50:	52 c0       	rjmp	.+164    	; 0x2af6 <DIO_u8GetPinValue+0xe0>
    2a52:	4c 81       	ldd	r20, Y+4	; 0x04
    2a54:	5d 81       	ldd	r21, Y+5	; 0x05
    2a56:	43 30       	cpi	r20, 0x03	; 3
    2a58:	51 05       	cpc	r21, r1
    2a5a:	51 f1       	breq	.+84     	; 0x2ab0 <DIO_u8GetPinValue+0x9a>
    2a5c:	8c 81       	ldd	r24, Y+4	; 0x04
    2a5e:	9d 81       	ldd	r25, Y+5	; 0x05
    2a60:	84 30       	cpi	r24, 0x04	; 4
    2a62:	91 05       	cpc	r25, r1
    2a64:	b9 f1       	breq	.+110    	; 0x2ad4 <DIO_u8GetPinValue+0xbe>
    2a66:	47 c0       	rjmp	.+142    	; 0x2af6 <DIO_u8GetPinValue+0xe0>
		{
				case DIO_u8PORTA :         BIT = GET_BIT(PINA , Copy_u8PinNum);       break;
    2a68:	e9 e3       	ldi	r30, 0x39	; 57
    2a6a:	f0 e0       	ldi	r31, 0x00	; 0
    2a6c:	80 81       	ld	r24, Z
    2a6e:	28 2f       	mov	r18, r24
    2a70:	30 e0       	ldi	r19, 0x00	; 0
    2a72:	8b 81       	ldd	r24, Y+3	; 0x03
    2a74:	88 2f       	mov	r24, r24
    2a76:	90 e0       	ldi	r25, 0x00	; 0
    2a78:	a9 01       	movw	r20, r18
    2a7a:	02 c0       	rjmp	.+4      	; 0x2a80 <DIO_u8GetPinValue+0x6a>
    2a7c:	55 95       	asr	r21
    2a7e:	47 95       	ror	r20
    2a80:	8a 95       	dec	r24
    2a82:	e2 f7       	brpl	.-8      	; 0x2a7c <DIO_u8GetPinValue+0x66>
    2a84:	ca 01       	movw	r24, r20
    2a86:	81 70       	andi	r24, 0x01	; 1
    2a88:	89 83       	std	Y+1, r24	; 0x01
    2a8a:	35 c0       	rjmp	.+106    	; 0x2af6 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTB :         BIT = GET_BIT(PINB , Copy_u8PinNum);       break;
    2a8c:	e6 e3       	ldi	r30, 0x36	; 54
    2a8e:	f0 e0       	ldi	r31, 0x00	; 0
    2a90:	80 81       	ld	r24, Z
    2a92:	28 2f       	mov	r18, r24
    2a94:	30 e0       	ldi	r19, 0x00	; 0
    2a96:	8b 81       	ldd	r24, Y+3	; 0x03
    2a98:	88 2f       	mov	r24, r24
    2a9a:	90 e0       	ldi	r25, 0x00	; 0
    2a9c:	a9 01       	movw	r20, r18
    2a9e:	02 c0       	rjmp	.+4      	; 0x2aa4 <DIO_u8GetPinValue+0x8e>
    2aa0:	55 95       	asr	r21
    2aa2:	47 95       	ror	r20
    2aa4:	8a 95       	dec	r24
    2aa6:	e2 f7       	brpl	.-8      	; 0x2aa0 <DIO_u8GetPinValue+0x8a>
    2aa8:	ca 01       	movw	r24, r20
    2aaa:	81 70       	andi	r24, 0x01	; 1
    2aac:	89 83       	std	Y+1, r24	; 0x01
    2aae:	23 c0       	rjmp	.+70     	; 0x2af6 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTC :         BIT = GET_BIT(PINC , Copy_u8PinNum);       break;
    2ab0:	e3 e3       	ldi	r30, 0x33	; 51
    2ab2:	f0 e0       	ldi	r31, 0x00	; 0
    2ab4:	80 81       	ld	r24, Z
    2ab6:	28 2f       	mov	r18, r24
    2ab8:	30 e0       	ldi	r19, 0x00	; 0
    2aba:	8b 81       	ldd	r24, Y+3	; 0x03
    2abc:	88 2f       	mov	r24, r24
    2abe:	90 e0       	ldi	r25, 0x00	; 0
    2ac0:	a9 01       	movw	r20, r18
    2ac2:	02 c0       	rjmp	.+4      	; 0x2ac8 <DIO_u8GetPinValue+0xb2>
    2ac4:	55 95       	asr	r21
    2ac6:	47 95       	ror	r20
    2ac8:	8a 95       	dec	r24
    2aca:	e2 f7       	brpl	.-8      	; 0x2ac4 <DIO_u8GetPinValue+0xae>
    2acc:	ca 01       	movw	r24, r20
    2ace:	81 70       	andi	r24, 0x01	; 1
    2ad0:	89 83       	std	Y+1, r24	; 0x01
    2ad2:	11 c0       	rjmp	.+34     	; 0x2af6 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTD :         BIT = GET_BIT(PIND , Copy_u8PinNum);       break;
    2ad4:	e0 e3       	ldi	r30, 0x30	; 48
    2ad6:	f0 e0       	ldi	r31, 0x00	; 0
    2ad8:	80 81       	ld	r24, Z
    2ada:	28 2f       	mov	r18, r24
    2adc:	30 e0       	ldi	r19, 0x00	; 0
    2ade:	8b 81       	ldd	r24, Y+3	; 0x03
    2ae0:	88 2f       	mov	r24, r24
    2ae2:	90 e0       	ldi	r25, 0x00	; 0
    2ae4:	a9 01       	movw	r20, r18
    2ae6:	02 c0       	rjmp	.+4      	; 0x2aec <DIO_u8GetPinValue+0xd6>
    2ae8:	55 95       	asr	r21
    2aea:	47 95       	ror	r20
    2aec:	8a 95       	dec	r24
    2aee:	e2 f7       	brpl	.-8      	; 0x2ae8 <DIO_u8GetPinValue+0xd2>
    2af0:	ca 01       	movw	r24, r20
    2af2:	81 70       	andi	r24, 0x01	; 1
    2af4:	89 83       	std	Y+1, r24	; 0x01
		}
	return BIT;
    2af6:	89 81       	ldd	r24, Y+1	; 0x01
}
    2af8:	0f 90       	pop	r0
    2afa:	0f 90       	pop	r0
    2afc:	0f 90       	pop	r0
    2afe:	0f 90       	pop	r0
    2b00:	0f 90       	pop	r0
    2b02:	cf 91       	pop	r28
    2b04:	df 91       	pop	r29
    2b06:	08 95       	ret

00002b08 <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(uint8 Copy_u8PortNum, uint8 Copy_u8Mode )
{
    2b08:	df 93       	push	r29
    2b0a:	cf 93       	push	r28
    2b0c:	00 d0       	rcall	.+0      	; 0x2b0e <DIO_voidSetPortDirection+0x6>
    2b0e:	00 d0       	rcall	.+0      	; 0x2b10 <DIO_voidSetPortDirection+0x8>
    2b10:	cd b7       	in	r28, 0x3d	; 61
    2b12:	de b7       	in	r29, 0x3e	; 62
    2b14:	89 83       	std	Y+1, r24	; 0x01
    2b16:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    2b18:	89 81       	ldd	r24, Y+1	; 0x01
    2b1a:	28 2f       	mov	r18, r24
    2b1c:	30 e0       	ldi	r19, 0x00	; 0
    2b1e:	3c 83       	std	Y+4, r19	; 0x04
    2b20:	2b 83       	std	Y+3, r18	; 0x03
    2b22:	8b 81       	ldd	r24, Y+3	; 0x03
    2b24:	9c 81       	ldd	r25, Y+4	; 0x04
    2b26:	82 30       	cpi	r24, 0x02	; 2
    2b28:	91 05       	cpc	r25, r1
    2b2a:	d9 f0       	breq	.+54     	; 0x2b62 <DIO_voidSetPortDirection+0x5a>
    2b2c:	2b 81       	ldd	r18, Y+3	; 0x03
    2b2e:	3c 81       	ldd	r19, Y+4	; 0x04
    2b30:	23 30       	cpi	r18, 0x03	; 3
    2b32:	31 05       	cpc	r19, r1
    2b34:	34 f4       	brge	.+12     	; 0x2b42 <DIO_voidSetPortDirection+0x3a>
    2b36:	8b 81       	ldd	r24, Y+3	; 0x03
    2b38:	9c 81       	ldd	r25, Y+4	; 0x04
    2b3a:	81 30       	cpi	r24, 0x01	; 1
    2b3c:	91 05       	cpc	r25, r1
    2b3e:	61 f0       	breq	.+24     	; 0x2b58 <DIO_voidSetPortDirection+0x50>
    2b40:	1e c0       	rjmp	.+60     	; 0x2b7e <DIO_voidSetPortDirection+0x76>
    2b42:	2b 81       	ldd	r18, Y+3	; 0x03
    2b44:	3c 81       	ldd	r19, Y+4	; 0x04
    2b46:	23 30       	cpi	r18, 0x03	; 3
    2b48:	31 05       	cpc	r19, r1
    2b4a:	81 f0       	breq	.+32     	; 0x2b6c <DIO_voidSetPortDirection+0x64>
    2b4c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b4e:	9c 81       	ldd	r25, Y+4	; 0x04
    2b50:	84 30       	cpi	r24, 0x04	; 4
    2b52:	91 05       	cpc	r25, r1
    2b54:	81 f0       	breq	.+32     	; 0x2b76 <DIO_voidSetPortDirection+0x6e>
    2b56:	13 c0       	rjmp	.+38     	; 0x2b7e <DIO_voidSetPortDirection+0x76>
		{
			case DIO_u8PORTA :         DDRA  = Copy_u8Mode;       break;
    2b58:	ea e3       	ldi	r30, 0x3A	; 58
    2b5a:	f0 e0       	ldi	r31, 0x00	; 0
    2b5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b5e:	80 83       	st	Z, r24
    2b60:	0e c0       	rjmp	.+28     	; 0x2b7e <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTB :         DDRB  = Copy_u8Mode;       break;
    2b62:	e7 e3       	ldi	r30, 0x37	; 55
    2b64:	f0 e0       	ldi	r31, 0x00	; 0
    2b66:	8a 81       	ldd	r24, Y+2	; 0x02
    2b68:	80 83       	st	Z, r24
    2b6a:	09 c0       	rjmp	.+18     	; 0x2b7e <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTC :         DDRC  = Copy_u8Mode;       break;
    2b6c:	e4 e3       	ldi	r30, 0x34	; 52
    2b6e:	f0 e0       	ldi	r31, 0x00	; 0
    2b70:	8a 81       	ldd	r24, Y+2	; 0x02
    2b72:	80 83       	st	Z, r24
    2b74:	04 c0       	rjmp	.+8      	; 0x2b7e <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTD :         DDRD  = Copy_u8Mode;       break;
    2b76:	e1 e3       	ldi	r30, 0x31	; 49
    2b78:	f0 e0       	ldi	r31, 0x00	; 0
    2b7a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b7c:	80 83       	st	Z, r24
		}
}
    2b7e:	0f 90       	pop	r0
    2b80:	0f 90       	pop	r0
    2b82:	0f 90       	pop	r0
    2b84:	0f 90       	pop	r0
    2b86:	cf 91       	pop	r28
    2b88:	df 91       	pop	r29
    2b8a:	08 95       	ret

00002b8c <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(uint8 Copy_u8PortNum, uint8 Copy_u8Value )
{
    2b8c:	df 93       	push	r29
    2b8e:	cf 93       	push	r28
    2b90:	00 d0       	rcall	.+0      	; 0x2b92 <DIO_voidSetPortValue+0x6>
    2b92:	00 d0       	rcall	.+0      	; 0x2b94 <DIO_voidSetPortValue+0x8>
    2b94:	cd b7       	in	r28, 0x3d	; 61
    2b96:	de b7       	in	r29, 0x3e	; 62
    2b98:	89 83       	std	Y+1, r24	; 0x01
    2b9a:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    2b9c:	89 81       	ldd	r24, Y+1	; 0x01
    2b9e:	28 2f       	mov	r18, r24
    2ba0:	30 e0       	ldi	r19, 0x00	; 0
    2ba2:	3c 83       	std	Y+4, r19	; 0x04
    2ba4:	2b 83       	std	Y+3, r18	; 0x03
    2ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ba8:	9c 81       	ldd	r25, Y+4	; 0x04
    2baa:	82 30       	cpi	r24, 0x02	; 2
    2bac:	91 05       	cpc	r25, r1
    2bae:	d9 f0       	breq	.+54     	; 0x2be6 <DIO_voidSetPortValue+0x5a>
    2bb0:	2b 81       	ldd	r18, Y+3	; 0x03
    2bb2:	3c 81       	ldd	r19, Y+4	; 0x04
    2bb4:	23 30       	cpi	r18, 0x03	; 3
    2bb6:	31 05       	cpc	r19, r1
    2bb8:	34 f4       	brge	.+12     	; 0x2bc6 <DIO_voidSetPortValue+0x3a>
    2bba:	8b 81       	ldd	r24, Y+3	; 0x03
    2bbc:	9c 81       	ldd	r25, Y+4	; 0x04
    2bbe:	81 30       	cpi	r24, 0x01	; 1
    2bc0:	91 05       	cpc	r25, r1
    2bc2:	61 f0       	breq	.+24     	; 0x2bdc <DIO_voidSetPortValue+0x50>
    2bc4:	1e c0       	rjmp	.+60     	; 0x2c02 <DIO_voidSetPortValue+0x76>
    2bc6:	2b 81       	ldd	r18, Y+3	; 0x03
    2bc8:	3c 81       	ldd	r19, Y+4	; 0x04
    2bca:	23 30       	cpi	r18, 0x03	; 3
    2bcc:	31 05       	cpc	r19, r1
    2bce:	81 f0       	breq	.+32     	; 0x2bf0 <DIO_voidSetPortValue+0x64>
    2bd0:	8b 81       	ldd	r24, Y+3	; 0x03
    2bd2:	9c 81       	ldd	r25, Y+4	; 0x04
    2bd4:	84 30       	cpi	r24, 0x04	; 4
    2bd6:	91 05       	cpc	r25, r1
    2bd8:	81 f0       	breq	.+32     	; 0x2bfa <DIO_voidSetPortValue+0x6e>
    2bda:	13 c0       	rjmp	.+38     	; 0x2c02 <DIO_voidSetPortValue+0x76>
		{
			case DIO_u8PORTA :         PORTA  = Copy_u8Value;       break;
    2bdc:	eb e3       	ldi	r30, 0x3B	; 59
    2bde:	f0 e0       	ldi	r31, 0x00	; 0
    2be0:	8a 81       	ldd	r24, Y+2	; 0x02
    2be2:	80 83       	st	Z, r24
    2be4:	0e c0       	rjmp	.+28     	; 0x2c02 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTB :         PORTB  = Copy_u8Value;       break;
    2be6:	e8 e3       	ldi	r30, 0x38	; 56
    2be8:	f0 e0       	ldi	r31, 0x00	; 0
    2bea:	8a 81       	ldd	r24, Y+2	; 0x02
    2bec:	80 83       	st	Z, r24
    2bee:	09 c0       	rjmp	.+18     	; 0x2c02 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTC :         PORTC  = Copy_u8Value;       break;
    2bf0:	e5 e3       	ldi	r30, 0x35	; 53
    2bf2:	f0 e0       	ldi	r31, 0x00	; 0
    2bf4:	8a 81       	ldd	r24, Y+2	; 0x02
    2bf6:	80 83       	st	Z, r24
    2bf8:	04 c0       	rjmp	.+8      	; 0x2c02 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTD :         PORTD  = Copy_u8Value;       break;
    2bfa:	e2 e3       	ldi	r30, 0x32	; 50
    2bfc:	f0 e0       	ldi	r31, 0x00	; 0
    2bfe:	8a 81       	ldd	r24, Y+2	; 0x02
    2c00:	80 83       	st	Z, r24
		}
}
    2c02:	0f 90       	pop	r0
    2c04:	0f 90       	pop	r0
    2c06:	0f 90       	pop	r0
    2c08:	0f 90       	pop	r0
    2c0a:	cf 91       	pop	r28
    2c0c:	df 91       	pop	r29
    2c0e:	08 95       	ret

00002c10 <DIO_voidSetTogglePin>:

void DIO_voidSetTogglePin(uint8 Copy_u8PortNum , uint8 Copy_u8PinNum)
{
    2c10:	df 93       	push	r29
    2c12:	cf 93       	push	r28
    2c14:	00 d0       	rcall	.+0      	; 0x2c16 <DIO_voidSetTogglePin+0x6>
    2c16:	00 d0       	rcall	.+0      	; 0x2c18 <DIO_voidSetTogglePin+0x8>
    2c18:	cd b7       	in	r28, 0x3d	; 61
    2c1a:	de b7       	in	r29, 0x3e	; 62
    2c1c:	89 83       	std	Y+1, r24	; 0x01
    2c1e:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    2c20:	89 81       	ldd	r24, Y+1	; 0x01
    2c22:	28 2f       	mov	r18, r24
    2c24:	30 e0       	ldi	r19, 0x00	; 0
    2c26:	3c 83       	std	Y+4, r19	; 0x04
    2c28:	2b 83       	std	Y+3, r18	; 0x03
    2c2a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c2c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c2e:	82 30       	cpi	r24, 0x02	; 2
    2c30:	91 05       	cpc	r25, r1
    2c32:	51 f1       	breq	.+84     	; 0x2c88 <DIO_voidSetTogglePin+0x78>
    2c34:	2b 81       	ldd	r18, Y+3	; 0x03
    2c36:	3c 81       	ldd	r19, Y+4	; 0x04
    2c38:	23 30       	cpi	r18, 0x03	; 3
    2c3a:	31 05       	cpc	r19, r1
    2c3c:	34 f4       	brge	.+12     	; 0x2c4a <DIO_voidSetTogglePin+0x3a>
    2c3e:	8b 81       	ldd	r24, Y+3	; 0x03
    2c40:	9c 81       	ldd	r25, Y+4	; 0x04
    2c42:	81 30       	cpi	r24, 0x01	; 1
    2c44:	91 05       	cpc	r25, r1
    2c46:	61 f0       	breq	.+24     	; 0x2c60 <DIO_voidSetTogglePin+0x50>
    2c48:	5a c0       	rjmp	.+180    	; 0x2cfe <DIO_voidSetTogglePin+0xee>
    2c4a:	2b 81       	ldd	r18, Y+3	; 0x03
    2c4c:	3c 81       	ldd	r19, Y+4	; 0x04
    2c4e:	23 30       	cpi	r18, 0x03	; 3
    2c50:	31 05       	cpc	r19, r1
    2c52:	71 f1       	breq	.+92     	; 0x2cb0 <DIO_voidSetTogglePin+0xa0>
    2c54:	8b 81       	ldd	r24, Y+3	; 0x03
    2c56:	9c 81       	ldd	r25, Y+4	; 0x04
    2c58:	84 30       	cpi	r24, 0x04	; 4
    2c5a:	91 05       	cpc	r25, r1
    2c5c:	e9 f1       	breq	.+122    	; 0x2cd8 <DIO_voidSetTogglePin+0xc8>
    2c5e:	4f c0       	rjmp	.+158    	; 0x2cfe <DIO_voidSetTogglePin+0xee>
		{
			case DIO_u8PORTA :        TOG_BIT(PORTA , Copy_u8PinNum);       break;
    2c60:	ab e3       	ldi	r26, 0x3B	; 59
    2c62:	b0 e0       	ldi	r27, 0x00	; 0
    2c64:	eb e3       	ldi	r30, 0x3B	; 59
    2c66:	f0 e0       	ldi	r31, 0x00	; 0
    2c68:	80 81       	ld	r24, Z
    2c6a:	48 2f       	mov	r20, r24
    2c6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c6e:	28 2f       	mov	r18, r24
    2c70:	30 e0       	ldi	r19, 0x00	; 0
    2c72:	81 e0       	ldi	r24, 0x01	; 1
    2c74:	90 e0       	ldi	r25, 0x00	; 0
    2c76:	02 2e       	mov	r0, r18
    2c78:	02 c0       	rjmp	.+4      	; 0x2c7e <DIO_voidSetTogglePin+0x6e>
    2c7a:	88 0f       	add	r24, r24
    2c7c:	99 1f       	adc	r25, r25
    2c7e:	0a 94       	dec	r0
    2c80:	e2 f7       	brpl	.-8      	; 0x2c7a <DIO_voidSetTogglePin+0x6a>
    2c82:	84 27       	eor	r24, r20
    2c84:	8c 93       	st	X, r24
    2c86:	3b c0       	rjmp	.+118    	; 0x2cfe <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTB :        TOG_BIT(PORTB , Copy_u8PinNum);       break;
    2c88:	a8 e3       	ldi	r26, 0x38	; 56
    2c8a:	b0 e0       	ldi	r27, 0x00	; 0
    2c8c:	e8 e3       	ldi	r30, 0x38	; 56
    2c8e:	f0 e0       	ldi	r31, 0x00	; 0
    2c90:	80 81       	ld	r24, Z
    2c92:	48 2f       	mov	r20, r24
    2c94:	8a 81       	ldd	r24, Y+2	; 0x02
    2c96:	28 2f       	mov	r18, r24
    2c98:	30 e0       	ldi	r19, 0x00	; 0
    2c9a:	81 e0       	ldi	r24, 0x01	; 1
    2c9c:	90 e0       	ldi	r25, 0x00	; 0
    2c9e:	02 2e       	mov	r0, r18
    2ca0:	02 c0       	rjmp	.+4      	; 0x2ca6 <DIO_voidSetTogglePin+0x96>
    2ca2:	88 0f       	add	r24, r24
    2ca4:	99 1f       	adc	r25, r25
    2ca6:	0a 94       	dec	r0
    2ca8:	e2 f7       	brpl	.-8      	; 0x2ca2 <DIO_voidSetTogglePin+0x92>
    2caa:	84 27       	eor	r24, r20
    2cac:	8c 93       	st	X, r24
    2cae:	27 c0       	rjmp	.+78     	; 0x2cfe <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTC :        TOG_BIT(PORTC , Copy_u8PinNum);       break;
    2cb0:	a5 e3       	ldi	r26, 0x35	; 53
    2cb2:	b0 e0       	ldi	r27, 0x00	; 0
    2cb4:	e5 e3       	ldi	r30, 0x35	; 53
    2cb6:	f0 e0       	ldi	r31, 0x00	; 0
    2cb8:	80 81       	ld	r24, Z
    2cba:	48 2f       	mov	r20, r24
    2cbc:	8a 81       	ldd	r24, Y+2	; 0x02
    2cbe:	28 2f       	mov	r18, r24
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	81 e0       	ldi	r24, 0x01	; 1
    2cc4:	90 e0       	ldi	r25, 0x00	; 0
    2cc6:	02 2e       	mov	r0, r18
    2cc8:	02 c0       	rjmp	.+4      	; 0x2cce <DIO_voidSetTogglePin+0xbe>
    2cca:	88 0f       	add	r24, r24
    2ccc:	99 1f       	adc	r25, r25
    2cce:	0a 94       	dec	r0
    2cd0:	e2 f7       	brpl	.-8      	; 0x2cca <DIO_voidSetTogglePin+0xba>
    2cd2:	84 27       	eor	r24, r20
    2cd4:	8c 93       	st	X, r24
    2cd6:	13 c0       	rjmp	.+38     	; 0x2cfe <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTD :        TOG_BIT(PORTD, Copy_u8PinNum);       break;
    2cd8:	a2 e3       	ldi	r26, 0x32	; 50
    2cda:	b0 e0       	ldi	r27, 0x00	; 0
    2cdc:	e2 e3       	ldi	r30, 0x32	; 50
    2cde:	f0 e0       	ldi	r31, 0x00	; 0
    2ce0:	80 81       	ld	r24, Z
    2ce2:	48 2f       	mov	r20, r24
    2ce4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ce6:	28 2f       	mov	r18, r24
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	81 e0       	ldi	r24, 0x01	; 1
    2cec:	90 e0       	ldi	r25, 0x00	; 0
    2cee:	02 2e       	mov	r0, r18
    2cf0:	02 c0       	rjmp	.+4      	; 0x2cf6 <DIO_voidSetTogglePin+0xe6>
    2cf2:	88 0f       	add	r24, r24
    2cf4:	99 1f       	adc	r25, r25
    2cf6:	0a 94       	dec	r0
    2cf8:	e2 f7       	brpl	.-8      	; 0x2cf2 <DIO_voidSetTogglePin+0xe2>
    2cfa:	84 27       	eor	r24, r20
    2cfc:	8c 93       	st	X, r24
		}
}
    2cfe:	0f 90       	pop	r0
    2d00:	0f 90       	pop	r0
    2d02:	0f 90       	pop	r0
    2d04:	0f 90       	pop	r0
    2d06:	cf 91       	pop	r28
    2d08:	df 91       	pop	r29
    2d0a:	08 95       	ret

00002d0c <PushButton_voidInit>:
/* Version             :  1.0.0                    */
/***************************************************/ 

#include "PushButton_interface.h"

void PushButton_voidInit(Button *Button){
    2d0c:	df 93       	push	r29
    2d0e:	cf 93       	push	r28
    2d10:	00 d0       	rcall	.+0      	; 0x2d12 <PushButton_voidInit+0x6>
    2d12:	cd b7       	in	r28, 0x3d	; 61
    2d14:	de b7       	in	r29, 0x3e	; 62
    2d16:	9a 83       	std	Y+2, r25	; 0x02
    2d18:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(Button -> Button_port, Button -> Button_pin, DIO_u8INPUT);
    2d1a:	e9 81       	ldd	r30, Y+1	; 0x01
    2d1c:	fa 81       	ldd	r31, Y+2	; 0x02
    2d1e:	81 81       	ldd	r24, Z+1	; 0x01
    2d20:	e9 81       	ldd	r30, Y+1	; 0x01
    2d22:	fa 81       	ldd	r31, Y+2	; 0x02
    2d24:	90 81       	ld	r25, Z
    2d26:	69 2f       	mov	r22, r25
    2d28:	40 e0       	ldi	r20, 0x00	; 0
    2d2a:	0e 94 07 13 	call	0x260e	; 0x260e <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(Button-> Button_port, Button -> Button_pin, DIO_u8HIGH); //pull up
    2d2e:	e9 81       	ldd	r30, Y+1	; 0x01
    2d30:	fa 81       	ldd	r31, Y+2	; 0x02
    2d32:	81 81       	ldd	r24, Z+1	; 0x01
    2d34:	e9 81       	ldd	r30, Y+1	; 0x01
    2d36:	fa 81       	ldd	r31, Y+2	; 0x02
    2d38:	90 81       	ld	r25, Z
    2d3a:	69 2f       	mov	r22, r25
    2d3c:	41 e0       	ldi	r20, 0x01	; 1
    2d3e:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
}
    2d42:	0f 90       	pop	r0
    2d44:	0f 90       	pop	r0
    2d46:	cf 91       	pop	r28
    2d48:	df 91       	pop	r29
    2d4a:	08 95       	ret

00002d4c <PushButton_voidRead>:

uint8 PushButton_voidRead(Button *Button){
    2d4c:	df 93       	push	r29
    2d4e:	cf 93       	push	r28
    2d50:	00 d0       	rcall	.+0      	; 0x2d52 <PushButton_voidRead+0x6>
    2d52:	0f 92       	push	r0
    2d54:	cd b7       	in	r28, 0x3d	; 61
    2d56:	de b7       	in	r29, 0x3e	; 62
    2d58:	9b 83       	std	Y+3, r25	; 0x03
    2d5a:	8a 83       	std	Y+2, r24	; 0x02
    uint8 local_u8Read = DIO_u8GetPinValue(Button->Button_port, Button->Button_pin);
    2d5c:	ea 81       	ldd	r30, Y+2	; 0x02
    2d5e:	fb 81       	ldd	r31, Y+3	; 0x03
    2d60:	81 81       	ldd	r24, Z+1	; 0x01
    2d62:	ea 81       	ldd	r30, Y+2	; 0x02
    2d64:	fb 81       	ldd	r31, Y+3	; 0x03
    2d66:	90 81       	ld	r25, Z
    2d68:	69 2f       	mov	r22, r25
    2d6a:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <DIO_u8GetPinValue>
    2d6e:	89 83       	std	Y+1, r24	; 0x01
    static Button_state lastButtonState = Button_RELEASED; // Static variable to remember the last state

    if (local_u8Read == 0 && lastButtonState == Button_RELEASED) {
    2d70:	89 81       	ldd	r24, Y+1	; 0x01
    2d72:	88 23       	and	r24, r24
    2d74:	39 f4       	brne	.+14     	; 0x2d84 <PushButton_voidRead+0x38>
    2d76:	80 91 76 01 	lds	r24, 0x0176
    2d7a:	81 30       	cpi	r24, 0x01	; 1
    2d7c:	19 f4       	brne	.+6      	; 0x2d84 <PushButton_voidRead+0x38>
        // Button was just pressed
        lastButtonState = Button_PRESSESD;
    2d7e:	10 92 76 01 	sts	0x0176, r1
    2d82:	0a c0       	rjmp	.+20     	; 0x2d98 <PushButton_voidRead+0x4c>
    } else if (local_u8Read == 1 && lastButtonState == Button_PRESSESD) {
    2d84:	89 81       	ldd	r24, Y+1	; 0x01
    2d86:	81 30       	cpi	r24, 0x01	; 1
    2d88:	39 f4       	brne	.+14     	; 0x2d98 <PushButton_voidRead+0x4c>
    2d8a:	80 91 76 01 	lds	r24, 0x0176
    2d8e:	88 23       	and	r24, r24
    2d90:	19 f4       	brne	.+6      	; 0x2d98 <PushButton_voidRead+0x4c>
        // Button was just released
        lastButtonState = Button_RELEASED;
    2d92:	81 e0       	ldi	r24, 0x01	; 1
    2d94:	80 93 76 01 	sts	0x0176, r24
    }
    return lastButtonState;
    2d98:	80 91 76 01 	lds	r24, 0x0176
}
    2d9c:	0f 90       	pop	r0
    2d9e:	0f 90       	pop	r0
    2da0:	0f 90       	pop	r0
    2da2:	cf 91       	pop	r28
    2da4:	df 91       	pop	r29
    2da6:	08 95       	ret

00002da8 <Keypad_init>:
		{'4','5','6','*'},
		{'1','2','3','-'},
		{'c','0','=','+'},
};

void Keypad_init(void){
    2da8:	df 93       	push	r29
    2daa:	cf 93       	push	r28
    2dac:	cd b7       	in	r28, 0x3d	; 61
    2dae:	de b7       	in	r29, 0x3e	; 62
    2db0:	28 97       	sbiw	r28, 0x08	; 8
    2db2:	0f b6       	in	r0, 0x3f	; 63
    2db4:	f8 94       	cli
    2db6:	de bf       	out	0x3e, r29	; 62
    2db8:	0f be       	out	0x3f, r0	; 63
    2dba:	cd bf       	out	0x3d, r28	; 61


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    2dbc:	18 86       	std	Y+8, r1	; 0x08
    2dbe:	1f 82       	std	Y+7, r1	; 0x07
    2dc0:	0b c0       	rjmp	.+22     	; 0x2dd8 <Keypad_init+0x30>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
    2dc2:	9f 81       	ldd	r25, Y+7	; 0x07
    2dc4:	83 e0       	ldi	r24, 0x03	; 3
    2dc6:	69 2f       	mov	r22, r25
    2dc8:	41 e0       	ldi	r20, 0x01	; 1
    2dca:	0e 94 07 13 	call	0x260e	; 0x260e <DIO_voidSetPinDirection>

void Keypad_init(void){


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    2dce:	8f 81       	ldd	r24, Y+7	; 0x07
    2dd0:	98 85       	ldd	r25, Y+8	; 0x08
    2dd2:	01 96       	adiw	r24, 0x01	; 1
    2dd4:	98 87       	std	Y+8, r25	; 0x08
    2dd6:	8f 83       	std	Y+7, r24	; 0x07
    2dd8:	8f 81       	ldd	r24, Y+7	; 0x07
    2dda:	98 85       	ldd	r25, Y+8	; 0x08
    2ddc:	84 30       	cpi	r24, 0x04	; 4
    2dde:	91 05       	cpc	r25, r1
    2de0:	84 f3       	brlt	.-32     	; 0x2dc2 <Keypad_init+0x1a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    2de2:	1e 82       	std	Y+6, r1	; 0x06
    2de4:	1d 82       	std	Y+5, r1	; 0x05
    2de6:	0b c0       	rjmp	.+22     	; 0x2dfe <Keypad_init+0x56>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    2de8:	9d 81       	ldd	r25, Y+5	; 0x05
    2dea:	83 e0       	ldi	r24, 0x03	; 3
    2dec:	69 2f       	mov	r22, r25
    2dee:	41 e0       	ldi	r20, 0x01	; 1
    2df0:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
		for (int i=0; i<4; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    2df4:	8d 81       	ldd	r24, Y+5	; 0x05
    2df6:	9e 81       	ldd	r25, Y+6	; 0x06
    2df8:	01 96       	adiw	r24, 0x01	; 1
    2dfa:	9e 83       	std	Y+6, r25	; 0x06
    2dfc:	8d 83       	std	Y+5, r24	; 0x05
    2dfe:	8d 81       	ldd	r24, Y+5	; 0x05
    2e00:	9e 81       	ldd	r25, Y+6	; 0x06
    2e02:	84 30       	cpi	r24, 0x04	; 4
    2e04:	91 05       	cpc	r25, r1
    2e06:	84 f3       	brlt	.-32     	; 0x2de8 <Keypad_init+0x40>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    2e08:	84 e0       	ldi	r24, 0x04	; 4
    2e0a:	90 e0       	ldi	r25, 0x00	; 0
    2e0c:	9c 83       	std	Y+4, r25	; 0x04
    2e0e:	8b 83       	std	Y+3, r24	; 0x03
    2e10:	0b c0       	rjmp	.+22     	; 0x2e28 <Keypad_init+0x80>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
    2e12:	9b 81       	ldd	r25, Y+3	; 0x03
    2e14:	83 e0       	ldi	r24, 0x03	; 3
    2e16:	69 2f       	mov	r22, r25
    2e18:	40 e0       	ldi	r20, 0x00	; 0
    2e1a:	0e 94 07 13 	call	0x260e	; 0x260e <DIO_voidSetPinDirection>
	for (int i=0; i<4; i++){
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    2e1e:	8b 81       	ldd	r24, Y+3	; 0x03
    2e20:	9c 81       	ldd	r25, Y+4	; 0x04
    2e22:	01 96       	adiw	r24, 0x01	; 1
    2e24:	9c 83       	std	Y+4, r25	; 0x04
    2e26:	8b 83       	std	Y+3, r24	; 0x03
    2e28:	8b 81       	ldd	r24, Y+3	; 0x03
    2e2a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e2c:	88 30       	cpi	r24, 0x08	; 8
    2e2e:	91 05       	cpc	r25, r1
    2e30:	84 f3       	brlt	.-32     	; 0x2e12 <Keypad_init+0x6a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    2e32:	84 e0       	ldi	r24, 0x04	; 4
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	9a 83       	std	Y+2, r25	; 0x02
    2e38:	89 83       	std	Y+1, r24	; 0x01
    2e3a:	0b c0       	rjmp	.+22     	; 0x2e52 <Keypad_init+0xaa>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    2e3c:	99 81       	ldd	r25, Y+1	; 0x01
    2e3e:	83 e0       	ldi	r24, 0x03	; 3
    2e40:	69 2f       	mov	r22, r25
    2e42:	41 e0       	ldi	r20, 0x01	; 1
    2e44:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
	for (int i=4; i<8; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    2e48:	89 81       	ldd	r24, Y+1	; 0x01
    2e4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e4c:	01 96       	adiw	r24, 0x01	; 1
    2e4e:	9a 83       	std	Y+2, r25	; 0x02
    2e50:	89 83       	std	Y+1, r24	; 0x01
    2e52:	89 81       	ldd	r24, Y+1	; 0x01
    2e54:	9a 81       	ldd	r25, Y+2	; 0x02
    2e56:	88 30       	cpi	r24, 0x08	; 8
    2e58:	91 05       	cpc	r25, r1
    2e5a:	84 f3       	brlt	.-32     	; 0x2e3c <Keypad_init+0x94>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
		}

}
    2e5c:	28 96       	adiw	r28, 0x08	; 8
    2e5e:	0f b6       	in	r0, 0x3f	; 63
    2e60:	f8 94       	cli
    2e62:	de bf       	out	0x3e, r29	; 62
    2e64:	0f be       	out	0x3f, r0	; 63
    2e66:	cd bf       	out	0x3d, r28	; 61
    2e68:	cf 91       	pop	r28
    2e6a:	df 91       	pop	r29
    2e6c:	08 95       	ret

00002e6e <KeyBad_uint8GetKey>:



uint8 KeyBad_uint8GetKey(void){
    2e6e:	df 93       	push	r29
    2e70:	cf 93       	push	r28
    2e72:	00 d0       	rcall	.+0      	; 0x2e74 <KeyBad_uint8GetKey+0x6>
    2e74:	00 d0       	rcall	.+0      	; 0x2e76 <KeyBad_uint8GetKey+0x8>
    2e76:	00 d0       	rcall	.+0      	; 0x2e78 <KeyBad_uint8GetKey+0xa>
    2e78:	cd b7       	in	r28, 0x3d	; 61
    2e7a:	de b7       	in	r29, 0x3e	; 62
	uint8 Key = 'z';
    2e7c:	8a e7       	ldi	r24, 0x7A	; 122
    2e7e:	8e 83       	std	Y+6, r24	; 0x06
	uint8 x = 1 ;
    2e80:	81 e0       	ldi	r24, 0x01	; 1
    2e82:	8d 83       	std	Y+5, r24	; 0x05
	for (int r=0; r<4; r++){
    2e84:	1c 82       	std	Y+4, r1	; 0x04
    2e86:	1b 82       	std	Y+3, r1	; 0x03
    2e88:	43 c0       	rjmp	.+134    	; 0x2f10 <KeyBad_uint8GetKey+0xa2>
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
    2e8a:	9b 81       	ldd	r25, Y+3	; 0x03
    2e8c:	83 e0       	ldi	r24, 0x03	; 3
    2e8e:	69 2f       	mov	r22, r25
    2e90:	40 e0       	ldi	r20, 0x00	; 0
    2e92:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
		for(int c=4; c<8; c++){
    2e96:	84 e0       	ldi	r24, 0x04	; 4
    2e98:	90 e0       	ldi	r25, 0x00	; 0
    2e9a:	9a 83       	std	Y+2, r25	; 0x02
    2e9c:	89 83       	std	Y+1, r24	; 0x01
    2e9e:	28 c0       	rjmp	.+80     	; 0x2ef0 <KeyBad_uint8GetKey+0x82>
		 x=	DIO_u8GetPinValue(PortNum,c);
    2ea0:	99 81       	ldd	r25, Y+1	; 0x01
    2ea2:	83 e0       	ldi	r24, 0x03	; 3
    2ea4:	69 2f       	mov	r22, r25
    2ea6:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <DIO_u8GetPinValue>
    2eaa:	8d 83       	std	Y+5, r24	; 0x05
			if (x ==0){
    2eac:	8d 81       	ldd	r24, Y+5	; 0x05
    2eae:	88 23       	and	r24, r24
    2eb0:	99 f4       	brne	.+38     	; 0x2ed8 <KeyBad_uint8GetKey+0x6a>
				Key = Keypad_arr[r][c-4];
    2eb2:	4b 81       	ldd	r20, Y+3	; 0x03
    2eb4:	5c 81       	ldd	r21, Y+4	; 0x04
    2eb6:	89 81       	ldd	r24, Y+1	; 0x01
    2eb8:	9a 81       	ldd	r25, Y+2	; 0x02
    2eba:	9c 01       	movw	r18, r24
    2ebc:	24 50       	subi	r18, 0x04	; 4
    2ebe:	30 40       	sbci	r19, 0x00	; 0
    2ec0:	ca 01       	movw	r24, r20
    2ec2:	88 0f       	add	r24, r24
    2ec4:	99 1f       	adc	r25, r25
    2ec6:	88 0f       	add	r24, r24
    2ec8:	99 1f       	adc	r25, r25
    2eca:	82 0f       	add	r24, r18
    2ecc:	93 1f       	adc	r25, r19
    2ece:	fc 01       	movw	r30, r24
    2ed0:	e9 58       	subi	r30, 0x89	; 137
    2ed2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ed4:	80 81       	ld	r24, Z
    2ed6:	8e 83       	std	Y+6, r24	; 0x06
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
    2ed8:	99 81       	ldd	r25, Y+1	; 0x01
    2eda:	83 e0       	ldi	r24, 0x03	; 3
    2edc:	69 2f       	mov	r22, r25
    2ede:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <DIO_u8GetPinValue>
    2ee2:	88 23       	and	r24, r24
    2ee4:	c9 f3       	breq	.-14     	; 0x2ed8 <KeyBad_uint8GetKey+0x6a>
uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
		for(int c=4; c<8; c++){
    2ee6:	89 81       	ldd	r24, Y+1	; 0x01
    2ee8:	9a 81       	ldd	r25, Y+2	; 0x02
    2eea:	01 96       	adiw	r24, 0x01	; 1
    2eec:	9a 83       	std	Y+2, r25	; 0x02
    2eee:	89 83       	std	Y+1, r24	; 0x01
    2ef0:	89 81       	ldd	r24, Y+1	; 0x01
    2ef2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ef4:	88 30       	cpi	r24, 0x08	; 8
    2ef6:	91 05       	cpc	r25, r1
    2ef8:	9c f2       	brlt	.-90     	; 0x2ea0 <KeyBad_uint8GetKey+0x32>
			if (x ==0){
				Key = Keypad_arr[r][c-4];
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
    2efa:	9b 81       	ldd	r25, Y+3	; 0x03
    2efc:	83 e0       	ldi	r24, 0x03	; 3
    2efe:	69 2f       	mov	r22, r25
    2f00:	41 e0       	ldi	r20, 0x01	; 1
    2f02:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>


uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
    2f06:	8b 81       	ldd	r24, Y+3	; 0x03
    2f08:	9c 81       	ldd	r25, Y+4	; 0x04
    2f0a:	01 96       	adiw	r24, 0x01	; 1
    2f0c:	9c 83       	std	Y+4, r25	; 0x04
    2f0e:	8b 83       	std	Y+3, r24	; 0x03
    2f10:	8b 81       	ldd	r24, Y+3	; 0x03
    2f12:	9c 81       	ldd	r25, Y+4	; 0x04
    2f14:	84 30       	cpi	r24, 0x04	; 4
    2f16:	91 05       	cpc	r25, r1
    2f18:	0c f4       	brge	.+2      	; 0x2f1c <KeyBad_uint8GetKey+0xae>
    2f1a:	b7 cf       	rjmp	.-146    	; 0x2e8a <KeyBad_uint8GetKey+0x1c>
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
	}
	return Key;
    2f1c:	8e 81       	ldd	r24, Y+6	; 0x06
}
    2f1e:	26 96       	adiw	r28, 0x06	; 6
    2f20:	0f b6       	in	r0, 0x3f	; 63
    2f22:	f8 94       	cli
    2f24:	de bf       	out	0x3e, r29	; 62
    2f26:	0f be       	out	0x3f, r0	; 63
    2f28:	cd bf       	out	0x3d, r28	; 61
    2f2a:	cf 91       	pop	r28
    2f2c:	df 91       	pop	r29
    2f2e:	08 95       	ret

00002f30 <LCD_Init>:
/* Version             :  1.0.0                    */
/***************************************************/ 

#include "CLCD_interface.h"

void LCD_Init(void){
    2f30:	df 93       	push	r29
    2f32:	cf 93       	push	r28
    2f34:	cd b7       	in	r28, 0x3d	; 61
    2f36:	de b7       	in	r29, 0x3e	; 62
    2f38:	6c 97       	sbiw	r28, 0x1c	; 28
    2f3a:	0f b6       	in	r0, 0x3f	; 63
    2f3c:	f8 94       	cli
    2f3e:	de bf       	out	0x3e, r29	; 62
    2f40:	0f be       	out	0x3f, r0	; 63
    2f42:	cd bf       	out	0x3d, r28	; 61
	DIO_voidSetPortDirection(DIO_u8PORTA ,DIO_u8PortOn);
    2f44:	81 e0       	ldi	r24, 0x01	; 1
    2f46:	6f ef       	ldi	r22, 0xFF	; 255
    2f48:	0e 94 84 15 	call	0x2b08	; 0x2b08 <DIO_voidSetPortDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_RS ,DIO_u8OUTPUT);
    2f4c:	82 e0       	ldi	r24, 0x02	; 2
    2f4e:	65 e0       	ldi	r22, 0x05	; 5
    2f50:	41 e0       	ldi	r20, 0x01	; 1
    2f52:	0e 94 07 13 	call	0x260e	; 0x260e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_EN ,DIO_u8OUTPUT);
    2f56:	82 e0       	ldi	r24, 0x02	; 2
    2f58:	67 e0       	ldi	r22, 0x07	; 7
    2f5a:	41 e0       	ldi	r20, 0x01	; 1
    2f5c:	0e 94 07 13 	call	0x260e	; 0x260e <DIO_voidSetPinDirection>
    2f60:	80 e0       	ldi	r24, 0x00	; 0
    2f62:	90 e0       	ldi	r25, 0x00	; 0
    2f64:	a8 e4       	ldi	r26, 0x48	; 72
    2f66:	b2 e4       	ldi	r27, 0x42	; 66
    2f68:	89 8f       	std	Y+25, r24	; 0x19
    2f6a:	9a 8f       	std	Y+26, r25	; 0x1a
    2f6c:	ab 8f       	std	Y+27, r26	; 0x1b
    2f6e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f70:	69 8d       	ldd	r22, Y+25	; 0x19
    2f72:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f74:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f76:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f78:	20 e0       	ldi	r18, 0x00	; 0
    2f7a:	30 e0       	ldi	r19, 0x00	; 0
    2f7c:	4a ef       	ldi	r20, 0xFA	; 250
    2f7e:	54 e4       	ldi	r21, 0x44	; 68
    2f80:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2f84:	dc 01       	movw	r26, r24
    2f86:	cb 01       	movw	r24, r22
    2f88:	8d 8b       	std	Y+21, r24	; 0x15
    2f8a:	9e 8b       	std	Y+22, r25	; 0x16
    2f8c:	af 8b       	std	Y+23, r26	; 0x17
    2f8e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2f90:	6d 89       	ldd	r22, Y+21	; 0x15
    2f92:	7e 89       	ldd	r23, Y+22	; 0x16
    2f94:	8f 89       	ldd	r24, Y+23	; 0x17
    2f96:	98 8d       	ldd	r25, Y+24	; 0x18
    2f98:	20 e0       	ldi	r18, 0x00	; 0
    2f9a:	30 e0       	ldi	r19, 0x00	; 0
    2f9c:	40 e8       	ldi	r20, 0x80	; 128
    2f9e:	5f e3       	ldi	r21, 0x3F	; 63
    2fa0:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    2fa4:	88 23       	and	r24, r24
    2fa6:	2c f4       	brge	.+10     	; 0x2fb2 <LCD_Init+0x82>
		__ticks = 1;
    2fa8:	81 e0       	ldi	r24, 0x01	; 1
    2faa:	90 e0       	ldi	r25, 0x00	; 0
    2fac:	9c 8b       	std	Y+20, r25	; 0x14
    2fae:	8b 8b       	std	Y+19, r24	; 0x13
    2fb0:	3f c0       	rjmp	.+126    	; 0x3030 <LCD_Init+0x100>
	else if (__tmp > 65535)
    2fb2:	6d 89       	ldd	r22, Y+21	; 0x15
    2fb4:	7e 89       	ldd	r23, Y+22	; 0x16
    2fb6:	8f 89       	ldd	r24, Y+23	; 0x17
    2fb8:	98 8d       	ldd	r25, Y+24	; 0x18
    2fba:	20 e0       	ldi	r18, 0x00	; 0
    2fbc:	3f ef       	ldi	r19, 0xFF	; 255
    2fbe:	4f e7       	ldi	r20, 0x7F	; 127
    2fc0:	57 e4       	ldi	r21, 0x47	; 71
    2fc2:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    2fc6:	18 16       	cp	r1, r24
    2fc8:	4c f5       	brge	.+82     	; 0x301c <LCD_Init+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fca:	69 8d       	ldd	r22, Y+25	; 0x19
    2fcc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2fce:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fd0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2fd2:	20 e0       	ldi	r18, 0x00	; 0
    2fd4:	30 e0       	ldi	r19, 0x00	; 0
    2fd6:	40 e2       	ldi	r20, 0x20	; 32
    2fd8:	51 e4       	ldi	r21, 0x41	; 65
    2fda:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2fde:	dc 01       	movw	r26, r24
    2fe0:	cb 01       	movw	r24, r22
    2fe2:	bc 01       	movw	r22, r24
    2fe4:	cd 01       	movw	r24, r26
    2fe6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2fea:	dc 01       	movw	r26, r24
    2fec:	cb 01       	movw	r24, r22
    2fee:	9c 8b       	std	Y+20, r25	; 0x14
    2ff0:	8b 8b       	std	Y+19, r24	; 0x13
    2ff2:	0f c0       	rjmp	.+30     	; 0x3012 <LCD_Init+0xe2>
    2ff4:	88 ec       	ldi	r24, 0xC8	; 200
    2ff6:	90 e0       	ldi	r25, 0x00	; 0
    2ff8:	9a 8b       	std	Y+18, r25	; 0x12
    2ffa:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2ffc:	89 89       	ldd	r24, Y+17	; 0x11
    2ffe:	9a 89       	ldd	r25, Y+18	; 0x12
    3000:	01 97       	sbiw	r24, 0x01	; 1
    3002:	f1 f7       	brne	.-4      	; 0x3000 <LCD_Init+0xd0>
    3004:	9a 8b       	std	Y+18, r25	; 0x12
    3006:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3008:	8b 89       	ldd	r24, Y+19	; 0x13
    300a:	9c 89       	ldd	r25, Y+20	; 0x14
    300c:	01 97       	sbiw	r24, 0x01	; 1
    300e:	9c 8b       	std	Y+20, r25	; 0x14
    3010:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3012:	8b 89       	ldd	r24, Y+19	; 0x13
    3014:	9c 89       	ldd	r25, Y+20	; 0x14
    3016:	00 97       	sbiw	r24, 0x00	; 0
    3018:	69 f7       	brne	.-38     	; 0x2ff4 <LCD_Init+0xc4>
    301a:	14 c0       	rjmp	.+40     	; 0x3044 <LCD_Init+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    301c:	6d 89       	ldd	r22, Y+21	; 0x15
    301e:	7e 89       	ldd	r23, Y+22	; 0x16
    3020:	8f 89       	ldd	r24, Y+23	; 0x17
    3022:	98 8d       	ldd	r25, Y+24	; 0x18
    3024:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3028:	dc 01       	movw	r26, r24
    302a:	cb 01       	movw	r24, r22
    302c:	9c 8b       	std	Y+20, r25	; 0x14
    302e:	8b 8b       	std	Y+19, r24	; 0x13
    3030:	8b 89       	ldd	r24, Y+19	; 0x13
    3032:	9c 89       	ldd	r25, Y+20	; 0x14
    3034:	98 8b       	std	Y+16, r25	; 0x10
    3036:	8f 87       	std	Y+15, r24	; 0x0f
    3038:	8f 85       	ldd	r24, Y+15	; 0x0f
    303a:	98 89       	ldd	r25, Y+16	; 0x10
    303c:	01 97       	sbiw	r24, 0x01	; 1
    303e:	f1 f7       	brne	.-4      	; 0x303c <LCD_Init+0x10c>
    3040:	98 8b       	std	Y+16, r25	; 0x10
    3042:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	LCD_WriteInst(0x38);
    3044:	88 e3       	ldi	r24, 0x38	; 56
    3046:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
	LCD_WriteInst(0x0C);
    304a:	8c e0       	ldi	r24, 0x0C	; 12
    304c:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
	LCD_WriteInst(0x01);
    3050:	81 e0       	ldi	r24, 0x01	; 1
    3052:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
    3056:	80 e0       	ldi	r24, 0x00	; 0
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	a0 e8       	ldi	r26, 0x80	; 128
    305c:	bf e3       	ldi	r27, 0x3F	; 63
    305e:	8b 87       	std	Y+11, r24	; 0x0b
    3060:	9c 87       	std	Y+12, r25	; 0x0c
    3062:	ad 87       	std	Y+13, r26	; 0x0d
    3064:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3066:	6b 85       	ldd	r22, Y+11	; 0x0b
    3068:	7c 85       	ldd	r23, Y+12	; 0x0c
    306a:	8d 85       	ldd	r24, Y+13	; 0x0d
    306c:	9e 85       	ldd	r25, Y+14	; 0x0e
    306e:	20 e0       	ldi	r18, 0x00	; 0
    3070:	30 e0       	ldi	r19, 0x00	; 0
    3072:	4a ef       	ldi	r20, 0xFA	; 250
    3074:	54 e4       	ldi	r21, 0x44	; 68
    3076:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    307a:	dc 01       	movw	r26, r24
    307c:	cb 01       	movw	r24, r22
    307e:	8f 83       	std	Y+7, r24	; 0x07
    3080:	98 87       	std	Y+8, r25	; 0x08
    3082:	a9 87       	std	Y+9, r26	; 0x09
    3084:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3086:	6f 81       	ldd	r22, Y+7	; 0x07
    3088:	78 85       	ldd	r23, Y+8	; 0x08
    308a:	89 85       	ldd	r24, Y+9	; 0x09
    308c:	9a 85       	ldd	r25, Y+10	; 0x0a
    308e:	20 e0       	ldi	r18, 0x00	; 0
    3090:	30 e0       	ldi	r19, 0x00	; 0
    3092:	40 e8       	ldi	r20, 0x80	; 128
    3094:	5f e3       	ldi	r21, 0x3F	; 63
    3096:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    309a:	88 23       	and	r24, r24
    309c:	2c f4       	brge	.+10     	; 0x30a8 <LCD_Init+0x178>
		__ticks = 1;
    309e:	81 e0       	ldi	r24, 0x01	; 1
    30a0:	90 e0       	ldi	r25, 0x00	; 0
    30a2:	9e 83       	std	Y+6, r25	; 0x06
    30a4:	8d 83       	std	Y+5, r24	; 0x05
    30a6:	3f c0       	rjmp	.+126    	; 0x3126 <LCD_Init+0x1f6>
	else if (__tmp > 65535)
    30a8:	6f 81       	ldd	r22, Y+7	; 0x07
    30aa:	78 85       	ldd	r23, Y+8	; 0x08
    30ac:	89 85       	ldd	r24, Y+9	; 0x09
    30ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    30b0:	20 e0       	ldi	r18, 0x00	; 0
    30b2:	3f ef       	ldi	r19, 0xFF	; 255
    30b4:	4f e7       	ldi	r20, 0x7F	; 127
    30b6:	57 e4       	ldi	r21, 0x47	; 71
    30b8:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    30bc:	18 16       	cp	r1, r24
    30be:	4c f5       	brge	.+82     	; 0x3112 <LCD_Init+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    30c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    30c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    30c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    30c8:	20 e0       	ldi	r18, 0x00	; 0
    30ca:	30 e0       	ldi	r19, 0x00	; 0
    30cc:	40 e2       	ldi	r20, 0x20	; 32
    30ce:	51 e4       	ldi	r21, 0x41	; 65
    30d0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    30d4:	dc 01       	movw	r26, r24
    30d6:	cb 01       	movw	r24, r22
    30d8:	bc 01       	movw	r22, r24
    30da:	cd 01       	movw	r24, r26
    30dc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    30e0:	dc 01       	movw	r26, r24
    30e2:	cb 01       	movw	r24, r22
    30e4:	9e 83       	std	Y+6, r25	; 0x06
    30e6:	8d 83       	std	Y+5, r24	; 0x05
    30e8:	0f c0       	rjmp	.+30     	; 0x3108 <LCD_Init+0x1d8>
    30ea:	88 ec       	ldi	r24, 0xC8	; 200
    30ec:	90 e0       	ldi	r25, 0x00	; 0
    30ee:	9c 83       	std	Y+4, r25	; 0x04
    30f0:	8b 83       	std	Y+3, r24	; 0x03
    30f2:	8b 81       	ldd	r24, Y+3	; 0x03
    30f4:	9c 81       	ldd	r25, Y+4	; 0x04
    30f6:	01 97       	sbiw	r24, 0x01	; 1
    30f8:	f1 f7       	brne	.-4      	; 0x30f6 <LCD_Init+0x1c6>
    30fa:	9c 83       	std	Y+4, r25	; 0x04
    30fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30fe:	8d 81       	ldd	r24, Y+5	; 0x05
    3100:	9e 81       	ldd	r25, Y+6	; 0x06
    3102:	01 97       	sbiw	r24, 0x01	; 1
    3104:	9e 83       	std	Y+6, r25	; 0x06
    3106:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3108:	8d 81       	ldd	r24, Y+5	; 0x05
    310a:	9e 81       	ldd	r25, Y+6	; 0x06
    310c:	00 97       	sbiw	r24, 0x00	; 0
    310e:	69 f7       	brne	.-38     	; 0x30ea <LCD_Init+0x1ba>
    3110:	14 c0       	rjmp	.+40     	; 0x313a <LCD_Init+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3112:	6f 81       	ldd	r22, Y+7	; 0x07
    3114:	78 85       	ldd	r23, Y+8	; 0x08
    3116:	89 85       	ldd	r24, Y+9	; 0x09
    3118:	9a 85       	ldd	r25, Y+10	; 0x0a
    311a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    311e:	dc 01       	movw	r26, r24
    3120:	cb 01       	movw	r24, r22
    3122:	9e 83       	std	Y+6, r25	; 0x06
    3124:	8d 83       	std	Y+5, r24	; 0x05
    3126:	8d 81       	ldd	r24, Y+5	; 0x05
    3128:	9e 81       	ldd	r25, Y+6	; 0x06
    312a:	9a 83       	std	Y+2, r25	; 0x02
    312c:	89 83       	std	Y+1, r24	; 0x01
    312e:	89 81       	ldd	r24, Y+1	; 0x01
    3130:	9a 81       	ldd	r25, Y+2	; 0x02
    3132:	01 97       	sbiw	r24, 0x01	; 1
    3134:	f1 f7       	brne	.-4      	; 0x3132 <LCD_Init+0x202>
    3136:	9a 83       	std	Y+2, r25	; 0x02
    3138:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	LCD_WriteInst(0x06);
    313a:	86 e0       	ldi	r24, 0x06	; 6
    313c:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>

}
    3140:	6c 96       	adiw	r28, 0x1c	; 28
    3142:	0f b6       	in	r0, 0x3f	; 63
    3144:	f8 94       	cli
    3146:	de bf       	out	0x3e, r29	; 62
    3148:	0f be       	out	0x3f, r0	; 63
    314a:	cd bf       	out	0x3d, r28	; 61
    314c:	cf 91       	pop	r28
    314e:	df 91       	pop	r29
    3150:	08 95       	ret

00003152 <LCD_WriteInst>:

void LCD_WriteInst(uint8 Ins)
{
    3152:	df 93       	push	r29
    3154:	cf 93       	push	r28
    3156:	cd b7       	in	r28, 0x3d	; 61
    3158:	de b7       	in	r29, 0x3e	; 62
    315a:	6d 97       	sbiw	r28, 0x1d	; 29
    315c:	0f b6       	in	r0, 0x3f	; 63
    315e:	f8 94       	cli
    3160:	de bf       	out	0x3e, r29	; 62
    3162:	0f be       	out	0x3f, r0	; 63
    3164:	cd bf       	out	0x3d, r28	; 61
    3166:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendCmd);
    3168:	82 e0       	ldi	r24, 0x02	; 2
    316a:	65 e0       	ldi	r22, 0x05	; 5
    316c:	40 e0       	ldi	r20, 0x00	; 0
    316e:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,Ins);
    3172:	81 e0       	ldi	r24, 0x01	; 1
    3174:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3176:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    317a:	82 e0       	ldi	r24, 0x02	; 2
    317c:	67 e0       	ldi	r22, 0x07	; 7
    317e:	41 e0       	ldi	r20, 0x01	; 1
    3180:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
    3184:	80 e0       	ldi	r24, 0x00	; 0
    3186:	90 e0       	ldi	r25, 0x00	; 0
    3188:	a0 e8       	ldi	r26, 0x80	; 128
    318a:	bf e3       	ldi	r27, 0x3F	; 63
    318c:	89 8f       	std	Y+25, r24	; 0x19
    318e:	9a 8f       	std	Y+26, r25	; 0x1a
    3190:	ab 8f       	std	Y+27, r26	; 0x1b
    3192:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3194:	69 8d       	ldd	r22, Y+25	; 0x19
    3196:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3198:	8b 8d       	ldd	r24, Y+27	; 0x1b
    319a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    319c:	20 e0       	ldi	r18, 0x00	; 0
    319e:	30 e0       	ldi	r19, 0x00	; 0
    31a0:	4a ef       	ldi	r20, 0xFA	; 250
    31a2:	54 e4       	ldi	r21, 0x44	; 68
    31a4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    31a8:	dc 01       	movw	r26, r24
    31aa:	cb 01       	movw	r24, r22
    31ac:	8d 8b       	std	Y+21, r24	; 0x15
    31ae:	9e 8b       	std	Y+22, r25	; 0x16
    31b0:	af 8b       	std	Y+23, r26	; 0x17
    31b2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    31b4:	6d 89       	ldd	r22, Y+21	; 0x15
    31b6:	7e 89       	ldd	r23, Y+22	; 0x16
    31b8:	8f 89       	ldd	r24, Y+23	; 0x17
    31ba:	98 8d       	ldd	r25, Y+24	; 0x18
    31bc:	20 e0       	ldi	r18, 0x00	; 0
    31be:	30 e0       	ldi	r19, 0x00	; 0
    31c0:	40 e8       	ldi	r20, 0x80	; 128
    31c2:	5f e3       	ldi	r21, 0x3F	; 63
    31c4:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    31c8:	88 23       	and	r24, r24
    31ca:	2c f4       	brge	.+10     	; 0x31d6 <LCD_WriteInst+0x84>
		__ticks = 1;
    31cc:	81 e0       	ldi	r24, 0x01	; 1
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	9c 8b       	std	Y+20, r25	; 0x14
    31d2:	8b 8b       	std	Y+19, r24	; 0x13
    31d4:	3f c0       	rjmp	.+126    	; 0x3254 <LCD_WriteInst+0x102>
	else if (__tmp > 65535)
    31d6:	6d 89       	ldd	r22, Y+21	; 0x15
    31d8:	7e 89       	ldd	r23, Y+22	; 0x16
    31da:	8f 89       	ldd	r24, Y+23	; 0x17
    31dc:	98 8d       	ldd	r25, Y+24	; 0x18
    31de:	20 e0       	ldi	r18, 0x00	; 0
    31e0:	3f ef       	ldi	r19, 0xFF	; 255
    31e2:	4f e7       	ldi	r20, 0x7F	; 127
    31e4:	57 e4       	ldi	r21, 0x47	; 71
    31e6:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    31ea:	18 16       	cp	r1, r24
    31ec:	4c f5       	brge	.+82     	; 0x3240 <LCD_WriteInst+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31ee:	69 8d       	ldd	r22, Y+25	; 0x19
    31f0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    31f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    31f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    31f6:	20 e0       	ldi	r18, 0x00	; 0
    31f8:	30 e0       	ldi	r19, 0x00	; 0
    31fa:	40 e2       	ldi	r20, 0x20	; 32
    31fc:	51 e4       	ldi	r21, 0x41	; 65
    31fe:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3202:	dc 01       	movw	r26, r24
    3204:	cb 01       	movw	r24, r22
    3206:	bc 01       	movw	r22, r24
    3208:	cd 01       	movw	r24, r26
    320a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    320e:	dc 01       	movw	r26, r24
    3210:	cb 01       	movw	r24, r22
    3212:	9c 8b       	std	Y+20, r25	; 0x14
    3214:	8b 8b       	std	Y+19, r24	; 0x13
    3216:	0f c0       	rjmp	.+30     	; 0x3236 <LCD_WriteInst+0xe4>
    3218:	88 ec       	ldi	r24, 0xC8	; 200
    321a:	90 e0       	ldi	r25, 0x00	; 0
    321c:	9a 8b       	std	Y+18, r25	; 0x12
    321e:	89 8b       	std	Y+17, r24	; 0x11
    3220:	89 89       	ldd	r24, Y+17	; 0x11
    3222:	9a 89       	ldd	r25, Y+18	; 0x12
    3224:	01 97       	sbiw	r24, 0x01	; 1
    3226:	f1 f7       	brne	.-4      	; 0x3224 <LCD_WriteInst+0xd2>
    3228:	9a 8b       	std	Y+18, r25	; 0x12
    322a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    322c:	8b 89       	ldd	r24, Y+19	; 0x13
    322e:	9c 89       	ldd	r25, Y+20	; 0x14
    3230:	01 97       	sbiw	r24, 0x01	; 1
    3232:	9c 8b       	std	Y+20, r25	; 0x14
    3234:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3236:	8b 89       	ldd	r24, Y+19	; 0x13
    3238:	9c 89       	ldd	r25, Y+20	; 0x14
    323a:	00 97       	sbiw	r24, 0x00	; 0
    323c:	69 f7       	brne	.-38     	; 0x3218 <LCD_WriteInst+0xc6>
    323e:	14 c0       	rjmp	.+40     	; 0x3268 <LCD_WriteInst+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3240:	6d 89       	ldd	r22, Y+21	; 0x15
    3242:	7e 89       	ldd	r23, Y+22	; 0x16
    3244:	8f 89       	ldd	r24, Y+23	; 0x17
    3246:	98 8d       	ldd	r25, Y+24	; 0x18
    3248:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    324c:	dc 01       	movw	r26, r24
    324e:	cb 01       	movw	r24, r22
    3250:	9c 8b       	std	Y+20, r25	; 0x14
    3252:	8b 8b       	std	Y+19, r24	; 0x13
    3254:	8b 89       	ldd	r24, Y+19	; 0x13
    3256:	9c 89       	ldd	r25, Y+20	; 0x14
    3258:	98 8b       	std	Y+16, r25	; 0x10
    325a:	8f 87       	std	Y+15, r24	; 0x0f
    325c:	8f 85       	ldd	r24, Y+15	; 0x0f
    325e:	98 89       	ldd	r25, Y+16	; 0x10
    3260:	01 97       	sbiw	r24, 0x01	; 1
    3262:	f1 f7       	brne	.-4      	; 0x3260 <LCD_WriteInst+0x10e>
    3264:	98 8b       	std	Y+16, r25	; 0x10
    3266:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    3268:	82 e0       	ldi	r24, 0x02	; 2
    326a:	67 e0       	ldi	r22, 0x07	; 7
    326c:	40 e0       	ldi	r20, 0x00	; 0
    326e:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
    3272:	80 e0       	ldi	r24, 0x00	; 0
    3274:	90 e0       	ldi	r25, 0x00	; 0
    3276:	a0 e8       	ldi	r26, 0x80	; 128
    3278:	bf e3       	ldi	r27, 0x3F	; 63
    327a:	8b 87       	std	Y+11, r24	; 0x0b
    327c:	9c 87       	std	Y+12, r25	; 0x0c
    327e:	ad 87       	std	Y+13, r26	; 0x0d
    3280:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3282:	6b 85       	ldd	r22, Y+11	; 0x0b
    3284:	7c 85       	ldd	r23, Y+12	; 0x0c
    3286:	8d 85       	ldd	r24, Y+13	; 0x0d
    3288:	9e 85       	ldd	r25, Y+14	; 0x0e
    328a:	20 e0       	ldi	r18, 0x00	; 0
    328c:	30 e0       	ldi	r19, 0x00	; 0
    328e:	4a ef       	ldi	r20, 0xFA	; 250
    3290:	54 e4       	ldi	r21, 0x44	; 68
    3292:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3296:	dc 01       	movw	r26, r24
    3298:	cb 01       	movw	r24, r22
    329a:	8f 83       	std	Y+7, r24	; 0x07
    329c:	98 87       	std	Y+8, r25	; 0x08
    329e:	a9 87       	std	Y+9, r26	; 0x09
    32a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    32a2:	6f 81       	ldd	r22, Y+7	; 0x07
    32a4:	78 85       	ldd	r23, Y+8	; 0x08
    32a6:	89 85       	ldd	r24, Y+9	; 0x09
    32a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    32aa:	20 e0       	ldi	r18, 0x00	; 0
    32ac:	30 e0       	ldi	r19, 0x00	; 0
    32ae:	40 e8       	ldi	r20, 0x80	; 128
    32b0:	5f e3       	ldi	r21, 0x3F	; 63
    32b2:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    32b6:	88 23       	and	r24, r24
    32b8:	2c f4       	brge	.+10     	; 0x32c4 <LCD_WriteInst+0x172>
		__ticks = 1;
    32ba:	81 e0       	ldi	r24, 0x01	; 1
    32bc:	90 e0       	ldi	r25, 0x00	; 0
    32be:	9e 83       	std	Y+6, r25	; 0x06
    32c0:	8d 83       	std	Y+5, r24	; 0x05
    32c2:	3f c0       	rjmp	.+126    	; 0x3342 <LCD_WriteInst+0x1f0>
	else if (__tmp > 65535)
    32c4:	6f 81       	ldd	r22, Y+7	; 0x07
    32c6:	78 85       	ldd	r23, Y+8	; 0x08
    32c8:	89 85       	ldd	r24, Y+9	; 0x09
    32ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    32cc:	20 e0       	ldi	r18, 0x00	; 0
    32ce:	3f ef       	ldi	r19, 0xFF	; 255
    32d0:	4f e7       	ldi	r20, 0x7F	; 127
    32d2:	57 e4       	ldi	r21, 0x47	; 71
    32d4:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    32d8:	18 16       	cp	r1, r24
    32da:	4c f5       	brge	.+82     	; 0x332e <LCD_WriteInst+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    32de:	7c 85       	ldd	r23, Y+12	; 0x0c
    32e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    32e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    32e4:	20 e0       	ldi	r18, 0x00	; 0
    32e6:	30 e0       	ldi	r19, 0x00	; 0
    32e8:	40 e2       	ldi	r20, 0x20	; 32
    32ea:	51 e4       	ldi	r21, 0x41	; 65
    32ec:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    32f0:	dc 01       	movw	r26, r24
    32f2:	cb 01       	movw	r24, r22
    32f4:	bc 01       	movw	r22, r24
    32f6:	cd 01       	movw	r24, r26
    32f8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    32fc:	dc 01       	movw	r26, r24
    32fe:	cb 01       	movw	r24, r22
    3300:	9e 83       	std	Y+6, r25	; 0x06
    3302:	8d 83       	std	Y+5, r24	; 0x05
    3304:	0f c0       	rjmp	.+30     	; 0x3324 <LCD_WriteInst+0x1d2>
    3306:	88 ec       	ldi	r24, 0xC8	; 200
    3308:	90 e0       	ldi	r25, 0x00	; 0
    330a:	9c 83       	std	Y+4, r25	; 0x04
    330c:	8b 83       	std	Y+3, r24	; 0x03
    330e:	8b 81       	ldd	r24, Y+3	; 0x03
    3310:	9c 81       	ldd	r25, Y+4	; 0x04
    3312:	01 97       	sbiw	r24, 0x01	; 1
    3314:	f1 f7       	brne	.-4      	; 0x3312 <LCD_WriteInst+0x1c0>
    3316:	9c 83       	std	Y+4, r25	; 0x04
    3318:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    331a:	8d 81       	ldd	r24, Y+5	; 0x05
    331c:	9e 81       	ldd	r25, Y+6	; 0x06
    331e:	01 97       	sbiw	r24, 0x01	; 1
    3320:	9e 83       	std	Y+6, r25	; 0x06
    3322:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3324:	8d 81       	ldd	r24, Y+5	; 0x05
    3326:	9e 81       	ldd	r25, Y+6	; 0x06
    3328:	00 97       	sbiw	r24, 0x00	; 0
    332a:	69 f7       	brne	.-38     	; 0x3306 <LCD_WriteInst+0x1b4>
    332c:	14 c0       	rjmp	.+40     	; 0x3356 <LCD_WriteInst+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    332e:	6f 81       	ldd	r22, Y+7	; 0x07
    3330:	78 85       	ldd	r23, Y+8	; 0x08
    3332:	89 85       	ldd	r24, Y+9	; 0x09
    3334:	9a 85       	ldd	r25, Y+10	; 0x0a
    3336:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    333a:	dc 01       	movw	r26, r24
    333c:	cb 01       	movw	r24, r22
    333e:	9e 83       	std	Y+6, r25	; 0x06
    3340:	8d 83       	std	Y+5, r24	; 0x05
    3342:	8d 81       	ldd	r24, Y+5	; 0x05
    3344:	9e 81       	ldd	r25, Y+6	; 0x06
    3346:	9a 83       	std	Y+2, r25	; 0x02
    3348:	89 83       	std	Y+1, r24	; 0x01
    334a:	89 81       	ldd	r24, Y+1	; 0x01
    334c:	9a 81       	ldd	r25, Y+2	; 0x02
    334e:	01 97       	sbiw	r24, 0x01	; 1
    3350:	f1 f7       	brne	.-4      	; 0x334e <LCD_WriteInst+0x1fc>
    3352:	9a 83       	std	Y+2, r25	; 0x02
    3354:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3356:	6d 96       	adiw	r28, 0x1d	; 29
    3358:	0f b6       	in	r0, 0x3f	; 63
    335a:	f8 94       	cli
    335c:	de bf       	out	0x3e, r29	; 62
    335e:	0f be       	out	0x3f, r0	; 63
    3360:	cd bf       	out	0x3d, r28	; 61
    3362:	cf 91       	pop	r28
    3364:	df 91       	pop	r29
    3366:	08 95       	ret

00003368 <LCD_WriteData>:

void LCD_WriteData(uint8 data)
{
    3368:	df 93       	push	r29
    336a:	cf 93       	push	r28
    336c:	cd b7       	in	r28, 0x3d	; 61
    336e:	de b7       	in	r29, 0x3e	; 62
    3370:	6d 97       	sbiw	r28, 0x1d	; 29
    3372:	0f b6       	in	r0, 0x3f	; 63
    3374:	f8 94       	cli
    3376:	de bf       	out	0x3e, r29	; 62
    3378:	0f be       	out	0x3f, r0	; 63
    337a:	cd bf       	out	0x3d, r28	; 61
    337c:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendData);
    337e:	82 e0       	ldi	r24, 0x02	; 2
    3380:	65 e0       	ldi	r22, 0x05	; 5
    3382:	41 e0       	ldi	r20, 0x01	; 1
    3384:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,data);
    3388:	81 e0       	ldi	r24, 0x01	; 1
    338a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    338c:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    3390:	82 e0       	ldi	r24, 0x02	; 2
    3392:	67 e0       	ldi	r22, 0x07	; 7
    3394:	41 e0       	ldi	r20, 0x01	; 1
    3396:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
    339a:	80 e0       	ldi	r24, 0x00	; 0
    339c:	90 e0       	ldi	r25, 0x00	; 0
    339e:	a0 e8       	ldi	r26, 0x80	; 128
    33a0:	bf e3       	ldi	r27, 0x3F	; 63
    33a2:	89 8f       	std	Y+25, r24	; 0x19
    33a4:	9a 8f       	std	Y+26, r25	; 0x1a
    33a6:	ab 8f       	std	Y+27, r26	; 0x1b
    33a8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33aa:	69 8d       	ldd	r22, Y+25	; 0x19
    33ac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    33ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    33b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    33b2:	20 e0       	ldi	r18, 0x00	; 0
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	4a ef       	ldi	r20, 0xFA	; 250
    33b8:	54 e4       	ldi	r21, 0x44	; 68
    33ba:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    33be:	dc 01       	movw	r26, r24
    33c0:	cb 01       	movw	r24, r22
    33c2:	8d 8b       	std	Y+21, r24	; 0x15
    33c4:	9e 8b       	std	Y+22, r25	; 0x16
    33c6:	af 8b       	std	Y+23, r26	; 0x17
    33c8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    33ca:	6d 89       	ldd	r22, Y+21	; 0x15
    33cc:	7e 89       	ldd	r23, Y+22	; 0x16
    33ce:	8f 89       	ldd	r24, Y+23	; 0x17
    33d0:	98 8d       	ldd	r25, Y+24	; 0x18
    33d2:	20 e0       	ldi	r18, 0x00	; 0
    33d4:	30 e0       	ldi	r19, 0x00	; 0
    33d6:	40 e8       	ldi	r20, 0x80	; 128
    33d8:	5f e3       	ldi	r21, 0x3F	; 63
    33da:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    33de:	88 23       	and	r24, r24
    33e0:	2c f4       	brge	.+10     	; 0x33ec <LCD_WriteData+0x84>
		__ticks = 1;
    33e2:	81 e0       	ldi	r24, 0x01	; 1
    33e4:	90 e0       	ldi	r25, 0x00	; 0
    33e6:	9c 8b       	std	Y+20, r25	; 0x14
    33e8:	8b 8b       	std	Y+19, r24	; 0x13
    33ea:	3f c0       	rjmp	.+126    	; 0x346a <LCD_WriteData+0x102>
	else if (__tmp > 65535)
    33ec:	6d 89       	ldd	r22, Y+21	; 0x15
    33ee:	7e 89       	ldd	r23, Y+22	; 0x16
    33f0:	8f 89       	ldd	r24, Y+23	; 0x17
    33f2:	98 8d       	ldd	r25, Y+24	; 0x18
    33f4:	20 e0       	ldi	r18, 0x00	; 0
    33f6:	3f ef       	ldi	r19, 0xFF	; 255
    33f8:	4f e7       	ldi	r20, 0x7F	; 127
    33fa:	57 e4       	ldi	r21, 0x47	; 71
    33fc:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    3400:	18 16       	cp	r1, r24
    3402:	4c f5       	brge	.+82     	; 0x3456 <LCD_WriteData+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3404:	69 8d       	ldd	r22, Y+25	; 0x19
    3406:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3408:	8b 8d       	ldd	r24, Y+27	; 0x1b
    340a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    340c:	20 e0       	ldi	r18, 0x00	; 0
    340e:	30 e0       	ldi	r19, 0x00	; 0
    3410:	40 e2       	ldi	r20, 0x20	; 32
    3412:	51 e4       	ldi	r21, 0x41	; 65
    3414:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3418:	dc 01       	movw	r26, r24
    341a:	cb 01       	movw	r24, r22
    341c:	bc 01       	movw	r22, r24
    341e:	cd 01       	movw	r24, r26
    3420:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3424:	dc 01       	movw	r26, r24
    3426:	cb 01       	movw	r24, r22
    3428:	9c 8b       	std	Y+20, r25	; 0x14
    342a:	8b 8b       	std	Y+19, r24	; 0x13
    342c:	0f c0       	rjmp	.+30     	; 0x344c <LCD_WriteData+0xe4>
    342e:	88 ec       	ldi	r24, 0xC8	; 200
    3430:	90 e0       	ldi	r25, 0x00	; 0
    3432:	9a 8b       	std	Y+18, r25	; 0x12
    3434:	89 8b       	std	Y+17, r24	; 0x11
    3436:	89 89       	ldd	r24, Y+17	; 0x11
    3438:	9a 89       	ldd	r25, Y+18	; 0x12
    343a:	01 97       	sbiw	r24, 0x01	; 1
    343c:	f1 f7       	brne	.-4      	; 0x343a <LCD_WriteData+0xd2>
    343e:	9a 8b       	std	Y+18, r25	; 0x12
    3440:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3442:	8b 89       	ldd	r24, Y+19	; 0x13
    3444:	9c 89       	ldd	r25, Y+20	; 0x14
    3446:	01 97       	sbiw	r24, 0x01	; 1
    3448:	9c 8b       	std	Y+20, r25	; 0x14
    344a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    344c:	8b 89       	ldd	r24, Y+19	; 0x13
    344e:	9c 89       	ldd	r25, Y+20	; 0x14
    3450:	00 97       	sbiw	r24, 0x00	; 0
    3452:	69 f7       	brne	.-38     	; 0x342e <LCD_WriteData+0xc6>
    3454:	14 c0       	rjmp	.+40     	; 0x347e <LCD_WriteData+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3456:	6d 89       	ldd	r22, Y+21	; 0x15
    3458:	7e 89       	ldd	r23, Y+22	; 0x16
    345a:	8f 89       	ldd	r24, Y+23	; 0x17
    345c:	98 8d       	ldd	r25, Y+24	; 0x18
    345e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3462:	dc 01       	movw	r26, r24
    3464:	cb 01       	movw	r24, r22
    3466:	9c 8b       	std	Y+20, r25	; 0x14
    3468:	8b 8b       	std	Y+19, r24	; 0x13
    346a:	8b 89       	ldd	r24, Y+19	; 0x13
    346c:	9c 89       	ldd	r25, Y+20	; 0x14
    346e:	98 8b       	std	Y+16, r25	; 0x10
    3470:	8f 87       	std	Y+15, r24	; 0x0f
    3472:	8f 85       	ldd	r24, Y+15	; 0x0f
    3474:	98 89       	ldd	r25, Y+16	; 0x10
    3476:	01 97       	sbiw	r24, 0x01	; 1
    3478:	f1 f7       	brne	.-4      	; 0x3476 <LCD_WriteData+0x10e>
    347a:	98 8b       	std	Y+16, r25	; 0x10
    347c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    347e:	82 e0       	ldi	r24, 0x02	; 2
    3480:	67 e0       	ldi	r22, 0x07	; 7
    3482:	40 e0       	ldi	r20, 0x00	; 0
    3484:	0e 94 09 14 	call	0x2812	; 0x2812 <DIO_voidSetPinValue>
    3488:	80 e0       	ldi	r24, 0x00	; 0
    348a:	90 e0       	ldi	r25, 0x00	; 0
    348c:	a0 e8       	ldi	r26, 0x80	; 128
    348e:	bf e3       	ldi	r27, 0x3F	; 63
    3490:	8b 87       	std	Y+11, r24	; 0x0b
    3492:	9c 87       	std	Y+12, r25	; 0x0c
    3494:	ad 87       	std	Y+13, r26	; 0x0d
    3496:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3498:	6b 85       	ldd	r22, Y+11	; 0x0b
    349a:	7c 85       	ldd	r23, Y+12	; 0x0c
    349c:	8d 85       	ldd	r24, Y+13	; 0x0d
    349e:	9e 85       	ldd	r25, Y+14	; 0x0e
    34a0:	20 e0       	ldi	r18, 0x00	; 0
    34a2:	30 e0       	ldi	r19, 0x00	; 0
    34a4:	4a ef       	ldi	r20, 0xFA	; 250
    34a6:	54 e4       	ldi	r21, 0x44	; 68
    34a8:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    34ac:	dc 01       	movw	r26, r24
    34ae:	cb 01       	movw	r24, r22
    34b0:	8f 83       	std	Y+7, r24	; 0x07
    34b2:	98 87       	std	Y+8, r25	; 0x08
    34b4:	a9 87       	std	Y+9, r26	; 0x09
    34b6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    34b8:	6f 81       	ldd	r22, Y+7	; 0x07
    34ba:	78 85       	ldd	r23, Y+8	; 0x08
    34bc:	89 85       	ldd	r24, Y+9	; 0x09
    34be:	9a 85       	ldd	r25, Y+10	; 0x0a
    34c0:	20 e0       	ldi	r18, 0x00	; 0
    34c2:	30 e0       	ldi	r19, 0x00	; 0
    34c4:	40 e8       	ldi	r20, 0x80	; 128
    34c6:	5f e3       	ldi	r21, 0x3F	; 63
    34c8:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    34cc:	88 23       	and	r24, r24
    34ce:	2c f4       	brge	.+10     	; 0x34da <LCD_WriteData+0x172>
		__ticks = 1;
    34d0:	81 e0       	ldi	r24, 0x01	; 1
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	9e 83       	std	Y+6, r25	; 0x06
    34d6:	8d 83       	std	Y+5, r24	; 0x05
    34d8:	3f c0       	rjmp	.+126    	; 0x3558 <LCD_WriteData+0x1f0>
	else if (__tmp > 65535)
    34da:	6f 81       	ldd	r22, Y+7	; 0x07
    34dc:	78 85       	ldd	r23, Y+8	; 0x08
    34de:	89 85       	ldd	r24, Y+9	; 0x09
    34e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    34e2:	20 e0       	ldi	r18, 0x00	; 0
    34e4:	3f ef       	ldi	r19, 0xFF	; 255
    34e6:	4f e7       	ldi	r20, 0x7F	; 127
    34e8:	57 e4       	ldi	r21, 0x47	; 71
    34ea:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    34ee:	18 16       	cp	r1, r24
    34f0:	4c f5       	brge	.+82     	; 0x3544 <LCD_WriteData+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    34f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    34f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    34f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    34fa:	20 e0       	ldi	r18, 0x00	; 0
    34fc:	30 e0       	ldi	r19, 0x00	; 0
    34fe:	40 e2       	ldi	r20, 0x20	; 32
    3500:	51 e4       	ldi	r21, 0x41	; 65
    3502:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3506:	dc 01       	movw	r26, r24
    3508:	cb 01       	movw	r24, r22
    350a:	bc 01       	movw	r22, r24
    350c:	cd 01       	movw	r24, r26
    350e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3512:	dc 01       	movw	r26, r24
    3514:	cb 01       	movw	r24, r22
    3516:	9e 83       	std	Y+6, r25	; 0x06
    3518:	8d 83       	std	Y+5, r24	; 0x05
    351a:	0f c0       	rjmp	.+30     	; 0x353a <LCD_WriteData+0x1d2>
    351c:	88 ec       	ldi	r24, 0xC8	; 200
    351e:	90 e0       	ldi	r25, 0x00	; 0
    3520:	9c 83       	std	Y+4, r25	; 0x04
    3522:	8b 83       	std	Y+3, r24	; 0x03
    3524:	8b 81       	ldd	r24, Y+3	; 0x03
    3526:	9c 81       	ldd	r25, Y+4	; 0x04
    3528:	01 97       	sbiw	r24, 0x01	; 1
    352a:	f1 f7       	brne	.-4      	; 0x3528 <LCD_WriteData+0x1c0>
    352c:	9c 83       	std	Y+4, r25	; 0x04
    352e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3530:	8d 81       	ldd	r24, Y+5	; 0x05
    3532:	9e 81       	ldd	r25, Y+6	; 0x06
    3534:	01 97       	sbiw	r24, 0x01	; 1
    3536:	9e 83       	std	Y+6, r25	; 0x06
    3538:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    353a:	8d 81       	ldd	r24, Y+5	; 0x05
    353c:	9e 81       	ldd	r25, Y+6	; 0x06
    353e:	00 97       	sbiw	r24, 0x00	; 0
    3540:	69 f7       	brne	.-38     	; 0x351c <LCD_WriteData+0x1b4>
    3542:	14 c0       	rjmp	.+40     	; 0x356c <LCD_WriteData+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3544:	6f 81       	ldd	r22, Y+7	; 0x07
    3546:	78 85       	ldd	r23, Y+8	; 0x08
    3548:	89 85       	ldd	r24, Y+9	; 0x09
    354a:	9a 85       	ldd	r25, Y+10	; 0x0a
    354c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3550:	dc 01       	movw	r26, r24
    3552:	cb 01       	movw	r24, r22
    3554:	9e 83       	std	Y+6, r25	; 0x06
    3556:	8d 83       	std	Y+5, r24	; 0x05
    3558:	8d 81       	ldd	r24, Y+5	; 0x05
    355a:	9e 81       	ldd	r25, Y+6	; 0x06
    355c:	9a 83       	std	Y+2, r25	; 0x02
    355e:	89 83       	std	Y+1, r24	; 0x01
    3560:	89 81       	ldd	r24, Y+1	; 0x01
    3562:	9a 81       	ldd	r25, Y+2	; 0x02
    3564:	01 97       	sbiw	r24, 0x01	; 1
    3566:	f1 f7       	brne	.-4      	; 0x3564 <LCD_WriteData+0x1fc>
    3568:	9a 83       	std	Y+2, r25	; 0x02
    356a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    356c:	6d 96       	adiw	r28, 0x1d	; 29
    356e:	0f b6       	in	r0, 0x3f	; 63
    3570:	f8 94       	cli
    3572:	de bf       	out	0x3e, r29	; 62
    3574:	0f be       	out	0x3f, r0	; 63
    3576:	cd bf       	out	0x3d, r28	; 61
    3578:	cf 91       	pop	r28
    357a:	df 91       	pop	r29
    357c:	08 95       	ret

0000357e <LCD_WriteString>:

void LCD_WriteString(char* Name)
{
    357e:	0f 93       	push	r16
    3580:	1f 93       	push	r17
    3582:	df 93       	push	r29
    3584:	cf 93       	push	r28
    3586:	00 d0       	rcall	.+0      	; 0x3588 <LCD_WriteString+0xa>
    3588:	00 d0       	rcall	.+0      	; 0x358a <LCD_WriteString+0xc>
    358a:	cd b7       	in	r28, 0x3d	; 61
    358c:	de b7       	in	r29, 0x3e	; 62
    358e:	9c 83       	std	Y+4, r25	; 0x04
    3590:	8b 83       	std	Y+3, r24	; 0x03
	for(int i= 0 ; i < strlen(Name);i++)
    3592:	1a 82       	std	Y+2, r1	; 0x02
    3594:	19 82       	std	Y+1, r1	; 0x01
    3596:	0f c0       	rjmp	.+30     	; 0x35b6 <LCD_WriteString+0x38>
	{
		LCD_WriteData(Name[i]);
    3598:	29 81       	ldd	r18, Y+1	; 0x01
    359a:	3a 81       	ldd	r19, Y+2	; 0x02
    359c:	8b 81       	ldd	r24, Y+3	; 0x03
    359e:	9c 81       	ldd	r25, Y+4	; 0x04
    35a0:	fc 01       	movw	r30, r24
    35a2:	e2 0f       	add	r30, r18
    35a4:	f3 1f       	adc	r31, r19
    35a6:	80 81       	ld	r24, Z
    35a8:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
	_delay_ms(1);
}

void LCD_WriteString(char* Name)
{
	for(int i= 0 ; i < strlen(Name);i++)
    35ac:	89 81       	ldd	r24, Y+1	; 0x01
    35ae:	9a 81       	ldd	r25, Y+2	; 0x02
    35b0:	01 96       	adiw	r24, 0x01	; 1
    35b2:	9a 83       	std	Y+2, r25	; 0x02
    35b4:	89 83       	std	Y+1, r24	; 0x01
    35b6:	09 81       	ldd	r16, Y+1	; 0x01
    35b8:	1a 81       	ldd	r17, Y+2	; 0x02
    35ba:	8b 81       	ldd	r24, Y+3	; 0x03
    35bc:	9c 81       	ldd	r25, Y+4	; 0x04
    35be:	0e 94 e1 3c 	call	0x79c2	; 0x79c2 <strlen>
    35c2:	08 17       	cp	r16, r24
    35c4:	19 07       	cpc	r17, r25
    35c6:	40 f3       	brcs	.-48     	; 0x3598 <LCD_WriteString+0x1a>
	{
		LCD_WriteData(Name[i]);
	}
}
    35c8:	0f 90       	pop	r0
    35ca:	0f 90       	pop	r0
    35cc:	0f 90       	pop	r0
    35ce:	0f 90       	pop	r0
    35d0:	cf 91       	pop	r28
    35d2:	df 91       	pop	r29
    35d4:	1f 91       	pop	r17
    35d6:	0f 91       	pop	r16
    35d8:	08 95       	ret

000035da <LCD_Goto>:

void LCD_Goto(uint8 row,uint8 col)
{
    35da:	df 93       	push	r29
    35dc:	cf 93       	push	r28
    35de:	00 d0       	rcall	.+0      	; 0x35e0 <LCD_Goto+0x6>
    35e0:	00 d0       	rcall	.+0      	; 0x35e2 <LCD_Goto+0x8>
    35e2:	cd b7       	in	r28, 0x3d	; 61
    35e4:	de b7       	in	r29, 0x3e	; 62
    35e6:	89 83       	std	Y+1, r24	; 0x01
    35e8:	6a 83       	std	Y+2, r22	; 0x02
	 row--;
    35ea:	89 81       	ldd	r24, Y+1	; 0x01
    35ec:	81 50       	subi	r24, 0x01	; 1
    35ee:	89 83       	std	Y+1, r24	; 0x01
	 col--;
    35f0:	8a 81       	ldd	r24, Y+2	; 0x02
    35f2:	81 50       	subi	r24, 0x01	; 1
    35f4:	8a 83       	std	Y+2, r24	; 0x02
	 switch(row)
    35f6:	89 81       	ldd	r24, Y+1	; 0x01
    35f8:	28 2f       	mov	r18, r24
    35fa:	30 e0       	ldi	r19, 0x00	; 0
    35fc:	3c 83       	std	Y+4, r19	; 0x04
    35fe:	2b 83       	std	Y+3, r18	; 0x03
    3600:	8b 81       	ldd	r24, Y+3	; 0x03
    3602:	9c 81       	ldd	r25, Y+4	; 0x04
    3604:	00 97       	sbiw	r24, 0x00	; 0
    3606:	31 f0       	breq	.+12     	; 0x3614 <LCD_Goto+0x3a>
    3608:	2b 81       	ldd	r18, Y+3	; 0x03
    360a:	3c 81       	ldd	r19, Y+4	; 0x04
    360c:	21 30       	cpi	r18, 0x01	; 1
    360e:	31 05       	cpc	r19, r1
    3610:	31 f0       	breq	.+12     	; 0x361e <LCD_Goto+0x44>
    3612:	09 c0       	rjmp	.+18     	; 0x3626 <LCD_Goto+0x4c>
	 {
	 case 0: LCD_WriteInst(0x80+col);break;
    3614:	8a 81       	ldd	r24, Y+2	; 0x02
    3616:	80 58       	subi	r24, 0x80	; 128
    3618:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
    361c:	04 c0       	rjmp	.+8      	; 0x3626 <LCD_Goto+0x4c>
	 case 1: LCD_WriteInst(0xc0+col);break;
    361e:	8a 81       	ldd	r24, Y+2	; 0x02
    3620:	80 54       	subi	r24, 0x40	; 64
    3622:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
	 }
	}
    3626:	0f 90       	pop	r0
    3628:	0f 90       	pop	r0
    362a:	0f 90       	pop	r0
    362c:	0f 90       	pop	r0
    362e:	cf 91       	pop	r28
    3630:	df 91       	pop	r29
    3632:	08 95       	ret

00003634 <LCD_PrintNumber>:
void LCD_PrintNumber(uint64 num)
{
    3634:	af 92       	push	r10
    3636:	bf 92       	push	r11
    3638:	cf 92       	push	r12
    363a:	df 92       	push	r13
    363c:	ef 92       	push	r14
    363e:	ff 92       	push	r15
    3640:	0f 93       	push	r16
    3642:	1f 93       	push	r17
    3644:	df 93       	push	r29
    3646:	cf 93       	push	r28
    3648:	cd b7       	in	r28, 0x3d	; 61
    364a:	de b7       	in	r29, 0x3e	; 62
    364c:	c6 56       	subi	r28, 0x66	; 102
    364e:	d0 40       	sbci	r29, 0x00	; 0
    3650:	0f b6       	in	r0, 0x3f	; 63
    3652:	f8 94       	cli
    3654:	de bf       	out	0x3e, r29	; 62
    3656:	0f be       	out	0x3f, r0	; 63
    3658:	cd bf       	out	0x3d, r28	; 61
    365a:	29 87       	std	Y+9, r18	; 0x09
    365c:	3a 87       	std	Y+10, r19	; 0x0a
    365e:	4b 87       	std	Y+11, r20	; 0x0b
    3660:	5c 87       	std	Y+12, r21	; 0x0c
    3662:	6d 87       	std	Y+13, r22	; 0x0d
    3664:	7e 87       	std	Y+14, r23	; 0x0e
    3666:	8f 87       	std	Y+15, r24	; 0x0f
    3668:	98 8b       	std	Y+16, r25	; 0x10
	uint64 reverse= 1;
    366a:	81 e0       	ldi	r24, 0x01	; 1
    366c:	89 83       	std	Y+1, r24	; 0x01
    366e:	1a 82       	std	Y+2, r1	; 0x02
    3670:	1b 82       	std	Y+3, r1	; 0x03
    3672:	1c 82       	std	Y+4, r1	; 0x04
    3674:	1d 82       	std	Y+5, r1	; 0x05
    3676:	1e 82       	std	Y+6, r1	; 0x06
    3678:	1f 82       	std	Y+7, r1	; 0x07
    367a:	18 86       	std	Y+8, r1	; 0x08
    367c:	5e c3       	rjmp	.+1724   	; 0x3d3a <LCD_PrintNumber+0x706>
	    while (num > 0) //123
	    {
	        reverse= (reverse * 10) + num % 10;
    367e:	29 81       	ldd	r18, Y+1	; 0x01
    3680:	3a 81       	ldd	r19, Y+2	; 0x02
    3682:	4b 81       	ldd	r20, Y+3	; 0x03
    3684:	5c 81       	ldd	r21, Y+4	; 0x04
    3686:	6d 81       	ldd	r22, Y+5	; 0x05
    3688:	7e 81       	ldd	r23, Y+6	; 0x06
    368a:	8f 81       	ldd	r24, Y+7	; 0x07
    368c:	98 85       	ldd	r25, Y+8	; 0x08
    368e:	a2 2e       	mov	r10, r18
    3690:	b3 2e       	mov	r11, r19
    3692:	c4 2e       	mov	r12, r20
    3694:	d5 2e       	mov	r13, r21
    3696:	e6 2e       	mov	r14, r22
    3698:	f7 2e       	mov	r15, r23
    369a:	08 2f       	mov	r16, r24
    369c:	19 2f       	mov	r17, r25
    369e:	2a 2d       	mov	r18, r10
    36a0:	3b 2d       	mov	r19, r11
    36a2:	4c 2d       	mov	r20, r12
    36a4:	5d 2d       	mov	r21, r13
    36a6:	6e 2d       	mov	r22, r14
    36a8:	7f 2d       	mov	r23, r15
    36aa:	80 2f       	mov	r24, r16
    36ac:	91 2f       	mov	r25, r17
    36ae:	01 e0       	ldi	r16, 0x01	; 1
    36b0:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    36b4:	29 a3       	std	Y+33, r18	; 0x21
    36b6:	3a a3       	std	Y+34, r19	; 0x22
    36b8:	4b a3       	std	Y+35, r20	; 0x23
    36ba:	5c a3       	std	Y+36, r21	; 0x24
    36bc:	6d a3       	std	Y+37, r22	; 0x25
    36be:	7e a3       	std	Y+38, r23	; 0x26
    36c0:	8f a3       	std	Y+39, r24	; 0x27
    36c2:	98 a7       	std	Y+40, r25	; 0x28
    36c4:	29 a1       	ldd	r18, Y+33	; 0x21
    36c6:	3a a1       	ldd	r19, Y+34	; 0x22
    36c8:	4b a1       	ldd	r20, Y+35	; 0x23
    36ca:	5c a1       	ldd	r21, Y+36	; 0x24
    36cc:	6d a1       	ldd	r22, Y+37	; 0x25
    36ce:	7e a1       	ldd	r23, Y+38	; 0x26
    36d0:	8f a1       	ldd	r24, Y+39	; 0x27
    36d2:	98 a5       	ldd	r25, Y+40	; 0x28
    36d4:	02 e0       	ldi	r16, 0x02	; 2
    36d6:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    36da:	29 a7       	std	Y+41, r18	; 0x29
    36dc:	3a a7       	std	Y+42, r19	; 0x2a
    36de:	4b a7       	std	Y+43, r20	; 0x2b
    36e0:	5c a7       	std	Y+44, r21	; 0x2c
    36e2:	6d a7       	std	Y+45, r22	; 0x2d
    36e4:	7e a7       	std	Y+46, r23	; 0x2e
    36e6:	8f a7       	std	Y+47, r24	; 0x2f
    36e8:	98 ab       	std	Y+48, r25	; 0x30
    36ea:	89 a1       	ldd	r24, Y+33	; 0x21
    36ec:	99 a5       	ldd	r25, Y+41	; 0x29
    36ee:	89 0f       	add	r24, r25
    36f0:	89 ab       	std	Y+49, r24	; 0x31
    36f2:	81 e0       	ldi	r24, 0x01	; 1
    36f4:	89 af       	std	Y+57, r24	; 0x39
    36f6:	99 a9       	ldd	r25, Y+49	; 0x31
    36f8:	89 a1       	ldd	r24, Y+33	; 0x21
    36fa:	98 17       	cp	r25, r24
    36fc:	08 f0       	brcs	.+2      	; 0x3700 <LCD_PrintNumber+0xcc>
    36fe:	19 ae       	std	Y+57, r1	; 0x39
    3700:	9a a1       	ldd	r25, Y+34	; 0x22
    3702:	8a a5       	ldd	r24, Y+42	; 0x2a
    3704:	98 0f       	add	r25, r24
    3706:	9a ab       	std	Y+50, r25	; 0x32
    3708:	91 e0       	ldi	r25, 0x01	; 1
    370a:	9a af       	std	Y+58, r25	; 0x3a
    370c:	8a a9       	ldd	r24, Y+50	; 0x32
    370e:	9a a1       	ldd	r25, Y+34	; 0x22
    3710:	89 17       	cp	r24, r25
    3712:	08 f0       	brcs	.+2      	; 0x3716 <LCD_PrintNumber+0xe2>
    3714:	1a ae       	std	Y+58, r1	; 0x3a
    3716:	89 ad       	ldd	r24, Y+57	; 0x39
    3718:	9a a9       	ldd	r25, Y+50	; 0x32
    371a:	89 0f       	add	r24, r25
    371c:	8b af       	std	Y+59, r24	; 0x3b
    371e:	81 e0       	ldi	r24, 0x01	; 1
    3720:	8c af       	std	Y+60, r24	; 0x3c
    3722:	9b ad       	ldd	r25, Y+59	; 0x3b
    3724:	8a a9       	ldd	r24, Y+50	; 0x32
    3726:	98 17       	cp	r25, r24
    3728:	08 f0       	brcs	.+2      	; 0x372c <LCD_PrintNumber+0xf8>
    372a:	1c ae       	std	Y+60, r1	; 0x3c
    372c:	9a ad       	ldd	r25, Y+58	; 0x3a
    372e:	8c ad       	ldd	r24, Y+60	; 0x3c
    3730:	98 2b       	or	r25, r24
    3732:	9a af       	std	Y+58, r25	; 0x3a
    3734:	9b ad       	ldd	r25, Y+59	; 0x3b
    3736:	9a ab       	std	Y+50, r25	; 0x32
    3738:	8b a1       	ldd	r24, Y+35	; 0x23
    373a:	9b a5       	ldd	r25, Y+43	; 0x2b
    373c:	89 0f       	add	r24, r25
    373e:	8b ab       	std	Y+51, r24	; 0x33
    3740:	81 e0       	ldi	r24, 0x01	; 1
    3742:	8d af       	std	Y+61, r24	; 0x3d
    3744:	9b a9       	ldd	r25, Y+51	; 0x33
    3746:	8b a1       	ldd	r24, Y+35	; 0x23
    3748:	98 17       	cp	r25, r24
    374a:	08 f0       	brcs	.+2      	; 0x374e <LCD_PrintNumber+0x11a>
    374c:	1d ae       	std	Y+61, r1	; 0x3d
    374e:	9a ad       	ldd	r25, Y+58	; 0x3a
    3750:	8b a9       	ldd	r24, Y+51	; 0x33
    3752:	98 0f       	add	r25, r24
    3754:	9e af       	std	Y+62, r25	; 0x3e
    3756:	91 e0       	ldi	r25, 0x01	; 1
    3758:	9f af       	std	Y+63, r25	; 0x3f
    375a:	8e ad       	ldd	r24, Y+62	; 0x3e
    375c:	9b a9       	ldd	r25, Y+51	; 0x33
    375e:	89 17       	cp	r24, r25
    3760:	08 f0       	brcs	.+2      	; 0x3764 <LCD_PrintNumber+0x130>
    3762:	1f ae       	std	Y+63, r1	; 0x3f
    3764:	8d ad       	ldd	r24, Y+61	; 0x3d
    3766:	9f ad       	ldd	r25, Y+63	; 0x3f
    3768:	89 2b       	or	r24, r25
    376a:	8d af       	std	Y+61, r24	; 0x3d
    376c:	8e ad       	ldd	r24, Y+62	; 0x3e
    376e:	8b ab       	std	Y+51, r24	; 0x33
    3770:	9c a1       	ldd	r25, Y+36	; 0x24
    3772:	8c a5       	ldd	r24, Y+44	; 0x2c
    3774:	98 0f       	add	r25, r24
    3776:	9c ab       	std	Y+52, r25	; 0x34
    3778:	91 e0       	ldi	r25, 0x01	; 1
    377a:	21 96       	adiw	r28, 0x01	; 1
    377c:	9f af       	std	Y+63, r25	; 0x3f
    377e:	21 97       	sbiw	r28, 0x01	; 1
    3780:	8c a9       	ldd	r24, Y+52	; 0x34
    3782:	9c a1       	ldd	r25, Y+36	; 0x24
    3784:	89 17       	cp	r24, r25
    3786:	18 f0       	brcs	.+6      	; 0x378e <LCD_PrintNumber+0x15a>
    3788:	21 96       	adiw	r28, 0x01	; 1
    378a:	1f ae       	std	Y+63, r1	; 0x3f
    378c:	21 97       	sbiw	r28, 0x01	; 1
    378e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3790:	9c a9       	ldd	r25, Y+52	; 0x34
    3792:	89 0f       	add	r24, r25
    3794:	22 96       	adiw	r28, 0x02	; 2
    3796:	8f af       	std	Y+63, r24	; 0x3f
    3798:	22 97       	sbiw	r28, 0x02	; 2
    379a:	81 e0       	ldi	r24, 0x01	; 1
    379c:	23 96       	adiw	r28, 0x03	; 3
    379e:	8f af       	std	Y+63, r24	; 0x3f
    37a0:	23 97       	sbiw	r28, 0x03	; 3
    37a2:	22 96       	adiw	r28, 0x02	; 2
    37a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    37a6:	22 97       	sbiw	r28, 0x02	; 2
    37a8:	8c a9       	ldd	r24, Y+52	; 0x34
    37aa:	98 17       	cp	r25, r24
    37ac:	18 f0       	brcs	.+6      	; 0x37b4 <LCD_PrintNumber+0x180>
    37ae:	23 96       	adiw	r28, 0x03	; 3
    37b0:	1f ae       	std	Y+63, r1	; 0x3f
    37b2:	23 97       	sbiw	r28, 0x03	; 3
    37b4:	21 96       	adiw	r28, 0x01	; 1
    37b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    37b8:	21 97       	sbiw	r28, 0x01	; 1
    37ba:	23 96       	adiw	r28, 0x03	; 3
    37bc:	8f ad       	ldd	r24, Y+63	; 0x3f
    37be:	23 97       	sbiw	r28, 0x03	; 3
    37c0:	98 2b       	or	r25, r24
    37c2:	21 96       	adiw	r28, 0x01	; 1
    37c4:	9f af       	std	Y+63, r25	; 0x3f
    37c6:	21 97       	sbiw	r28, 0x01	; 1
    37c8:	22 96       	adiw	r28, 0x02	; 2
    37ca:	9f ad       	ldd	r25, Y+63	; 0x3f
    37cc:	22 97       	sbiw	r28, 0x02	; 2
    37ce:	9c ab       	std	Y+52, r25	; 0x34
    37d0:	8d a1       	ldd	r24, Y+37	; 0x25
    37d2:	9d a5       	ldd	r25, Y+45	; 0x2d
    37d4:	89 0f       	add	r24, r25
    37d6:	8d ab       	std	Y+53, r24	; 0x35
    37d8:	81 e0       	ldi	r24, 0x01	; 1
    37da:	24 96       	adiw	r28, 0x04	; 4
    37dc:	8f af       	std	Y+63, r24	; 0x3f
    37de:	24 97       	sbiw	r28, 0x04	; 4
    37e0:	9d a9       	ldd	r25, Y+53	; 0x35
    37e2:	8d a1       	ldd	r24, Y+37	; 0x25
    37e4:	98 17       	cp	r25, r24
    37e6:	18 f0       	brcs	.+6      	; 0x37ee <LCD_PrintNumber+0x1ba>
    37e8:	24 96       	adiw	r28, 0x04	; 4
    37ea:	1f ae       	std	Y+63, r1	; 0x3f
    37ec:	24 97       	sbiw	r28, 0x04	; 4
    37ee:	21 96       	adiw	r28, 0x01	; 1
    37f0:	9f ad       	ldd	r25, Y+63	; 0x3f
    37f2:	21 97       	sbiw	r28, 0x01	; 1
    37f4:	8d a9       	ldd	r24, Y+53	; 0x35
    37f6:	98 0f       	add	r25, r24
    37f8:	25 96       	adiw	r28, 0x05	; 5
    37fa:	9f af       	std	Y+63, r25	; 0x3f
    37fc:	25 97       	sbiw	r28, 0x05	; 5
    37fe:	91 e0       	ldi	r25, 0x01	; 1
    3800:	26 96       	adiw	r28, 0x06	; 6
    3802:	9f af       	std	Y+63, r25	; 0x3f
    3804:	26 97       	sbiw	r28, 0x06	; 6
    3806:	25 96       	adiw	r28, 0x05	; 5
    3808:	8f ad       	ldd	r24, Y+63	; 0x3f
    380a:	25 97       	sbiw	r28, 0x05	; 5
    380c:	9d a9       	ldd	r25, Y+53	; 0x35
    380e:	89 17       	cp	r24, r25
    3810:	18 f0       	brcs	.+6      	; 0x3818 <LCD_PrintNumber+0x1e4>
    3812:	26 96       	adiw	r28, 0x06	; 6
    3814:	1f ae       	std	Y+63, r1	; 0x3f
    3816:	26 97       	sbiw	r28, 0x06	; 6
    3818:	24 96       	adiw	r28, 0x04	; 4
    381a:	8f ad       	ldd	r24, Y+63	; 0x3f
    381c:	24 97       	sbiw	r28, 0x04	; 4
    381e:	26 96       	adiw	r28, 0x06	; 6
    3820:	9f ad       	ldd	r25, Y+63	; 0x3f
    3822:	26 97       	sbiw	r28, 0x06	; 6
    3824:	89 2b       	or	r24, r25
    3826:	24 96       	adiw	r28, 0x04	; 4
    3828:	8f af       	std	Y+63, r24	; 0x3f
    382a:	24 97       	sbiw	r28, 0x04	; 4
    382c:	25 96       	adiw	r28, 0x05	; 5
    382e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3830:	25 97       	sbiw	r28, 0x05	; 5
    3832:	8d ab       	std	Y+53, r24	; 0x35
    3834:	9e a1       	ldd	r25, Y+38	; 0x26
    3836:	8e a5       	ldd	r24, Y+46	; 0x2e
    3838:	98 0f       	add	r25, r24
    383a:	9e ab       	std	Y+54, r25	; 0x36
    383c:	91 e0       	ldi	r25, 0x01	; 1
    383e:	27 96       	adiw	r28, 0x07	; 7
    3840:	9f af       	std	Y+63, r25	; 0x3f
    3842:	27 97       	sbiw	r28, 0x07	; 7
    3844:	8e a9       	ldd	r24, Y+54	; 0x36
    3846:	9e a1       	ldd	r25, Y+38	; 0x26
    3848:	89 17       	cp	r24, r25
    384a:	18 f0       	brcs	.+6      	; 0x3852 <LCD_PrintNumber+0x21e>
    384c:	27 96       	adiw	r28, 0x07	; 7
    384e:	1f ae       	std	Y+63, r1	; 0x3f
    3850:	27 97       	sbiw	r28, 0x07	; 7
    3852:	24 96       	adiw	r28, 0x04	; 4
    3854:	8f ad       	ldd	r24, Y+63	; 0x3f
    3856:	24 97       	sbiw	r28, 0x04	; 4
    3858:	9e a9       	ldd	r25, Y+54	; 0x36
    385a:	89 0f       	add	r24, r25
    385c:	28 96       	adiw	r28, 0x08	; 8
    385e:	8f af       	std	Y+63, r24	; 0x3f
    3860:	28 97       	sbiw	r28, 0x08	; 8
    3862:	81 e0       	ldi	r24, 0x01	; 1
    3864:	29 96       	adiw	r28, 0x09	; 9
    3866:	8f af       	std	Y+63, r24	; 0x3f
    3868:	29 97       	sbiw	r28, 0x09	; 9
    386a:	28 96       	adiw	r28, 0x08	; 8
    386c:	9f ad       	ldd	r25, Y+63	; 0x3f
    386e:	28 97       	sbiw	r28, 0x08	; 8
    3870:	8e a9       	ldd	r24, Y+54	; 0x36
    3872:	98 17       	cp	r25, r24
    3874:	18 f0       	brcs	.+6      	; 0x387c <LCD_PrintNumber+0x248>
    3876:	29 96       	adiw	r28, 0x09	; 9
    3878:	1f ae       	std	Y+63, r1	; 0x3f
    387a:	29 97       	sbiw	r28, 0x09	; 9
    387c:	27 96       	adiw	r28, 0x07	; 7
    387e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3880:	27 97       	sbiw	r28, 0x07	; 7
    3882:	29 96       	adiw	r28, 0x09	; 9
    3884:	8f ad       	ldd	r24, Y+63	; 0x3f
    3886:	29 97       	sbiw	r28, 0x09	; 9
    3888:	98 2b       	or	r25, r24
    388a:	27 96       	adiw	r28, 0x07	; 7
    388c:	9f af       	std	Y+63, r25	; 0x3f
    388e:	27 97       	sbiw	r28, 0x07	; 7
    3890:	28 96       	adiw	r28, 0x08	; 8
    3892:	9f ad       	ldd	r25, Y+63	; 0x3f
    3894:	28 97       	sbiw	r28, 0x08	; 8
    3896:	9e ab       	std	Y+54, r25	; 0x36
    3898:	8f a1       	ldd	r24, Y+39	; 0x27
    389a:	9f a5       	ldd	r25, Y+47	; 0x2f
    389c:	89 0f       	add	r24, r25
    389e:	8f ab       	std	Y+55, r24	; 0x37
    38a0:	81 e0       	ldi	r24, 0x01	; 1
    38a2:	2a 96       	adiw	r28, 0x0a	; 10
    38a4:	8f af       	std	Y+63, r24	; 0x3f
    38a6:	2a 97       	sbiw	r28, 0x0a	; 10
    38a8:	9f a9       	ldd	r25, Y+55	; 0x37
    38aa:	8f a1       	ldd	r24, Y+39	; 0x27
    38ac:	98 17       	cp	r25, r24
    38ae:	18 f0       	brcs	.+6      	; 0x38b6 <LCD_PrintNumber+0x282>
    38b0:	2a 96       	adiw	r28, 0x0a	; 10
    38b2:	1f ae       	std	Y+63, r1	; 0x3f
    38b4:	2a 97       	sbiw	r28, 0x0a	; 10
    38b6:	27 96       	adiw	r28, 0x07	; 7
    38b8:	9f ad       	ldd	r25, Y+63	; 0x3f
    38ba:	27 97       	sbiw	r28, 0x07	; 7
    38bc:	8f a9       	ldd	r24, Y+55	; 0x37
    38be:	98 0f       	add	r25, r24
    38c0:	2b 96       	adiw	r28, 0x0b	; 11
    38c2:	9f af       	std	Y+63, r25	; 0x3f
    38c4:	2b 97       	sbiw	r28, 0x0b	; 11
    38c6:	91 e0       	ldi	r25, 0x01	; 1
    38c8:	2c 96       	adiw	r28, 0x0c	; 12
    38ca:	9f af       	std	Y+63, r25	; 0x3f
    38cc:	2c 97       	sbiw	r28, 0x0c	; 12
    38ce:	2b 96       	adiw	r28, 0x0b	; 11
    38d0:	8f ad       	ldd	r24, Y+63	; 0x3f
    38d2:	2b 97       	sbiw	r28, 0x0b	; 11
    38d4:	9f a9       	ldd	r25, Y+55	; 0x37
    38d6:	89 17       	cp	r24, r25
    38d8:	18 f0       	brcs	.+6      	; 0x38e0 <LCD_PrintNumber+0x2ac>
    38da:	2c 96       	adiw	r28, 0x0c	; 12
    38dc:	1f ae       	std	Y+63, r1	; 0x3f
    38de:	2c 97       	sbiw	r28, 0x0c	; 12
    38e0:	2a 96       	adiw	r28, 0x0a	; 10
    38e2:	8f ad       	ldd	r24, Y+63	; 0x3f
    38e4:	2a 97       	sbiw	r28, 0x0a	; 10
    38e6:	2c 96       	adiw	r28, 0x0c	; 12
    38e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    38ea:	2c 97       	sbiw	r28, 0x0c	; 12
    38ec:	89 2b       	or	r24, r25
    38ee:	2a 96       	adiw	r28, 0x0a	; 10
    38f0:	8f af       	std	Y+63, r24	; 0x3f
    38f2:	2a 97       	sbiw	r28, 0x0a	; 10
    38f4:	2b 96       	adiw	r28, 0x0b	; 11
    38f6:	8f ad       	ldd	r24, Y+63	; 0x3f
    38f8:	2b 97       	sbiw	r28, 0x0b	; 11
    38fa:	8f ab       	std	Y+55, r24	; 0x37
    38fc:	98 a5       	ldd	r25, Y+40	; 0x28
    38fe:	88 a9       	ldd	r24, Y+48	; 0x30
    3900:	98 0f       	add	r25, r24
    3902:	98 af       	std	Y+56, r25	; 0x38
    3904:	2a 96       	adiw	r28, 0x0a	; 10
    3906:	8f ad       	ldd	r24, Y+63	; 0x3f
    3908:	2a 97       	sbiw	r28, 0x0a	; 10
    390a:	98 ad       	ldd	r25, Y+56	; 0x38
    390c:	89 0f       	add	r24, r25
    390e:	88 af       	std	Y+56, r24	; 0x38
    3910:	89 a9       	ldd	r24, Y+49	; 0x31
    3912:	89 8f       	std	Y+25, r24	; 0x19
    3914:	9a a9       	ldd	r25, Y+50	; 0x32
    3916:	9a 8f       	std	Y+26, r25	; 0x1a
    3918:	8b a9       	ldd	r24, Y+51	; 0x33
    391a:	8b 8f       	std	Y+27, r24	; 0x1b
    391c:	9c a9       	ldd	r25, Y+52	; 0x34
    391e:	9c 8f       	std	Y+28, r25	; 0x1c
    3920:	8d a9       	ldd	r24, Y+53	; 0x35
    3922:	8d 8f       	std	Y+29, r24	; 0x1d
    3924:	9e a9       	ldd	r25, Y+54	; 0x36
    3926:	9e 8f       	std	Y+30, r25	; 0x1e
    3928:	8f a9       	ldd	r24, Y+55	; 0x37
    392a:	8f 8f       	std	Y+31, r24	; 0x1f
    392c:	98 ad       	ldd	r25, Y+56	; 0x38
    392e:	98 a3       	std	Y+32, r25	; 0x20
    3930:	a9 84       	ldd	r10, Y+9	; 0x09
    3932:	ba 84       	ldd	r11, Y+10	; 0x0a
    3934:	cb 84       	ldd	r12, Y+11	; 0x0b
    3936:	dc 84       	ldd	r13, Y+12	; 0x0c
    3938:	ed 84       	ldd	r14, Y+13	; 0x0d
    393a:	fe 84       	ldd	r15, Y+14	; 0x0e
    393c:	0f 85       	ldd	r16, Y+15	; 0x0f
    393e:	18 89       	ldd	r17, Y+16	; 0x10
    3940:	2a 2d       	mov	r18, r10
    3942:	3b 2d       	mov	r19, r11
    3944:	4c 2d       	mov	r20, r12
    3946:	5d 2d       	mov	r21, r13
    3948:	6e 2d       	mov	r22, r14
    394a:	7f 2d       	mov	r23, r15
    394c:	80 2f       	mov	r24, r16
    394e:	91 2f       	mov	r25, r17
    3950:	0f 2e       	mov	r0, r31
    3952:	fa e0       	ldi	r31, 0x0A	; 10
    3954:	af 2e       	mov	r10, r31
    3956:	f0 2d       	mov	r31, r0
    3958:	bb 24       	eor	r11, r11
    395a:	cc 24       	eor	r12, r12
    395c:	dd 24       	eor	r13, r13
    395e:	ee 24       	eor	r14, r14
    3960:	ff 24       	eor	r15, r15
    3962:	00 e0       	ldi	r16, 0x00	; 0
    3964:	10 e0       	ldi	r17, 0x00	; 0
    3966:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    396a:	a2 2e       	mov	r10, r18
    396c:	b3 2e       	mov	r11, r19
    396e:	c4 2e       	mov	r12, r20
    3970:	d5 2e       	mov	r13, r21
    3972:	e6 2e       	mov	r14, r22
    3974:	f7 2e       	mov	r15, r23
    3976:	08 2f       	mov	r16, r24
    3978:	19 2f       	mov	r17, r25
    397a:	a9 8a       	std	Y+17, r10	; 0x11
    397c:	ba 8a       	std	Y+18, r11	; 0x12
    397e:	cb 8a       	std	Y+19, r12	; 0x13
    3980:	dc 8a       	std	Y+20, r13	; 0x14
    3982:	ed 8a       	std	Y+21, r14	; 0x15
    3984:	fe 8a       	std	Y+22, r15	; 0x16
    3986:	0f 8b       	std	Y+23, r16	; 0x17
    3988:	18 8f       	std	Y+24, r17	; 0x18
    398a:	89 8d       	ldd	r24, Y+25	; 0x19
    398c:	99 89       	ldd	r25, Y+17	; 0x11
    398e:	89 0f       	add	r24, r25
    3990:	2d 96       	adiw	r28, 0x0d	; 13
    3992:	8f af       	std	Y+63, r24	; 0x3f
    3994:	2d 97       	sbiw	r28, 0x0d	; 13
    3996:	81 e0       	ldi	r24, 0x01	; 1
    3998:	65 96       	adiw	r28, 0x15	; 21
    399a:	8f af       	std	Y+63, r24	; 0x3f
    399c:	65 97       	sbiw	r28, 0x15	; 21
    399e:	2d 96       	adiw	r28, 0x0d	; 13
    39a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    39a2:	2d 97       	sbiw	r28, 0x0d	; 13
    39a4:	89 8d       	ldd	r24, Y+25	; 0x19
    39a6:	98 17       	cp	r25, r24
    39a8:	18 f0       	brcs	.+6      	; 0x39b0 <LCD_PrintNumber+0x37c>
    39aa:	65 96       	adiw	r28, 0x15	; 21
    39ac:	1f ae       	std	Y+63, r1	; 0x3f
    39ae:	65 97       	sbiw	r28, 0x15	; 21
    39b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    39b2:	8a 89       	ldd	r24, Y+18	; 0x12
    39b4:	98 0f       	add	r25, r24
    39b6:	2e 96       	adiw	r28, 0x0e	; 14
    39b8:	9f af       	std	Y+63, r25	; 0x3f
    39ba:	2e 97       	sbiw	r28, 0x0e	; 14
    39bc:	91 e0       	ldi	r25, 0x01	; 1
    39be:	66 96       	adiw	r28, 0x16	; 22
    39c0:	9f af       	std	Y+63, r25	; 0x3f
    39c2:	66 97       	sbiw	r28, 0x16	; 22
    39c4:	2e 96       	adiw	r28, 0x0e	; 14
    39c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    39c8:	2e 97       	sbiw	r28, 0x0e	; 14
    39ca:	9a 8d       	ldd	r25, Y+26	; 0x1a
    39cc:	89 17       	cp	r24, r25
    39ce:	18 f0       	brcs	.+6      	; 0x39d6 <LCD_PrintNumber+0x3a2>
    39d0:	66 96       	adiw	r28, 0x16	; 22
    39d2:	1f ae       	std	Y+63, r1	; 0x3f
    39d4:	66 97       	sbiw	r28, 0x16	; 22
    39d6:	65 96       	adiw	r28, 0x15	; 21
    39d8:	8f ad       	ldd	r24, Y+63	; 0x3f
    39da:	65 97       	sbiw	r28, 0x15	; 21
    39dc:	2e 96       	adiw	r28, 0x0e	; 14
    39de:	9f ad       	ldd	r25, Y+63	; 0x3f
    39e0:	2e 97       	sbiw	r28, 0x0e	; 14
    39e2:	89 0f       	add	r24, r25
    39e4:	67 96       	adiw	r28, 0x17	; 23
    39e6:	8f af       	std	Y+63, r24	; 0x3f
    39e8:	67 97       	sbiw	r28, 0x17	; 23
    39ea:	81 e0       	ldi	r24, 0x01	; 1
    39ec:	68 96       	adiw	r28, 0x18	; 24
    39ee:	8f af       	std	Y+63, r24	; 0x3f
    39f0:	68 97       	sbiw	r28, 0x18	; 24
    39f2:	67 96       	adiw	r28, 0x17	; 23
    39f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    39f6:	67 97       	sbiw	r28, 0x17	; 23
    39f8:	2e 96       	adiw	r28, 0x0e	; 14
    39fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    39fc:	2e 97       	sbiw	r28, 0x0e	; 14
    39fe:	98 17       	cp	r25, r24
    3a00:	18 f0       	brcs	.+6      	; 0x3a08 <LCD_PrintNumber+0x3d4>
    3a02:	68 96       	adiw	r28, 0x18	; 24
    3a04:	1f ae       	std	Y+63, r1	; 0x3f
    3a06:	68 97       	sbiw	r28, 0x18	; 24
    3a08:	66 96       	adiw	r28, 0x16	; 22
    3a0a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a0c:	66 97       	sbiw	r28, 0x16	; 22
    3a0e:	68 96       	adiw	r28, 0x18	; 24
    3a10:	8f ad       	ldd	r24, Y+63	; 0x3f
    3a12:	68 97       	sbiw	r28, 0x18	; 24
    3a14:	98 2b       	or	r25, r24
    3a16:	66 96       	adiw	r28, 0x16	; 22
    3a18:	9f af       	std	Y+63, r25	; 0x3f
    3a1a:	66 97       	sbiw	r28, 0x16	; 22
    3a1c:	67 96       	adiw	r28, 0x17	; 23
    3a1e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a20:	67 97       	sbiw	r28, 0x17	; 23
    3a22:	2e 96       	adiw	r28, 0x0e	; 14
    3a24:	9f af       	std	Y+63, r25	; 0x3f
    3a26:	2e 97       	sbiw	r28, 0x0e	; 14
    3a28:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a2a:	9b 89       	ldd	r25, Y+19	; 0x13
    3a2c:	89 0f       	add	r24, r25
    3a2e:	2f 96       	adiw	r28, 0x0f	; 15
    3a30:	8f af       	std	Y+63, r24	; 0x3f
    3a32:	2f 97       	sbiw	r28, 0x0f	; 15
    3a34:	81 e0       	ldi	r24, 0x01	; 1
    3a36:	69 96       	adiw	r28, 0x19	; 25
    3a38:	8f af       	std	Y+63, r24	; 0x3f
    3a3a:	69 97       	sbiw	r28, 0x19	; 25
    3a3c:	2f 96       	adiw	r28, 0x0f	; 15
    3a3e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a40:	2f 97       	sbiw	r28, 0x0f	; 15
    3a42:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a44:	98 17       	cp	r25, r24
    3a46:	18 f0       	brcs	.+6      	; 0x3a4e <LCD_PrintNumber+0x41a>
    3a48:	69 96       	adiw	r28, 0x19	; 25
    3a4a:	1f ae       	std	Y+63, r1	; 0x3f
    3a4c:	69 97       	sbiw	r28, 0x19	; 25
    3a4e:	66 96       	adiw	r28, 0x16	; 22
    3a50:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a52:	66 97       	sbiw	r28, 0x16	; 22
    3a54:	2f 96       	adiw	r28, 0x0f	; 15
    3a56:	8f ad       	ldd	r24, Y+63	; 0x3f
    3a58:	2f 97       	sbiw	r28, 0x0f	; 15
    3a5a:	98 0f       	add	r25, r24
    3a5c:	6a 96       	adiw	r28, 0x1a	; 26
    3a5e:	9f af       	std	Y+63, r25	; 0x3f
    3a60:	6a 97       	sbiw	r28, 0x1a	; 26
    3a62:	91 e0       	ldi	r25, 0x01	; 1
    3a64:	6b 96       	adiw	r28, 0x1b	; 27
    3a66:	9f af       	std	Y+63, r25	; 0x3f
    3a68:	6b 97       	sbiw	r28, 0x1b	; 27
    3a6a:	6a 96       	adiw	r28, 0x1a	; 26
    3a6c:	8f ad       	ldd	r24, Y+63	; 0x3f
    3a6e:	6a 97       	sbiw	r28, 0x1a	; 26
    3a70:	2f 96       	adiw	r28, 0x0f	; 15
    3a72:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a74:	2f 97       	sbiw	r28, 0x0f	; 15
    3a76:	89 17       	cp	r24, r25
    3a78:	18 f0       	brcs	.+6      	; 0x3a80 <LCD_PrintNumber+0x44c>
    3a7a:	6b 96       	adiw	r28, 0x1b	; 27
    3a7c:	1f ae       	std	Y+63, r1	; 0x3f
    3a7e:	6b 97       	sbiw	r28, 0x1b	; 27
    3a80:	69 96       	adiw	r28, 0x19	; 25
    3a82:	8f ad       	ldd	r24, Y+63	; 0x3f
    3a84:	69 97       	sbiw	r28, 0x19	; 25
    3a86:	6b 96       	adiw	r28, 0x1b	; 27
    3a88:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a8a:	6b 97       	sbiw	r28, 0x1b	; 27
    3a8c:	89 2b       	or	r24, r25
    3a8e:	69 96       	adiw	r28, 0x19	; 25
    3a90:	8f af       	std	Y+63, r24	; 0x3f
    3a92:	69 97       	sbiw	r28, 0x19	; 25
    3a94:	6a 96       	adiw	r28, 0x1a	; 26
    3a96:	8f ad       	ldd	r24, Y+63	; 0x3f
    3a98:	6a 97       	sbiw	r28, 0x1a	; 26
    3a9a:	2f 96       	adiw	r28, 0x0f	; 15
    3a9c:	8f af       	std	Y+63, r24	; 0x3f
    3a9e:	2f 97       	sbiw	r28, 0x0f	; 15
    3aa0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3aa2:	8c 89       	ldd	r24, Y+20	; 0x14
    3aa4:	98 0f       	add	r25, r24
    3aa6:	60 96       	adiw	r28, 0x10	; 16
    3aa8:	9f af       	std	Y+63, r25	; 0x3f
    3aaa:	60 97       	sbiw	r28, 0x10	; 16
    3aac:	91 e0       	ldi	r25, 0x01	; 1
    3aae:	6c 96       	adiw	r28, 0x1c	; 28
    3ab0:	9f af       	std	Y+63, r25	; 0x3f
    3ab2:	6c 97       	sbiw	r28, 0x1c	; 28
    3ab4:	60 96       	adiw	r28, 0x10	; 16
    3ab6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ab8:	60 97       	sbiw	r28, 0x10	; 16
    3aba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3abc:	89 17       	cp	r24, r25
    3abe:	18 f0       	brcs	.+6      	; 0x3ac6 <LCD_PrintNumber+0x492>
    3ac0:	6c 96       	adiw	r28, 0x1c	; 28
    3ac2:	1f ae       	std	Y+63, r1	; 0x3f
    3ac4:	6c 97       	sbiw	r28, 0x1c	; 28
    3ac6:	69 96       	adiw	r28, 0x19	; 25
    3ac8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3aca:	69 97       	sbiw	r28, 0x19	; 25
    3acc:	60 96       	adiw	r28, 0x10	; 16
    3ace:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ad0:	60 97       	sbiw	r28, 0x10	; 16
    3ad2:	89 0f       	add	r24, r25
    3ad4:	6d 96       	adiw	r28, 0x1d	; 29
    3ad6:	8f af       	std	Y+63, r24	; 0x3f
    3ad8:	6d 97       	sbiw	r28, 0x1d	; 29
    3ada:	81 e0       	ldi	r24, 0x01	; 1
    3adc:	6e 96       	adiw	r28, 0x1e	; 30
    3ade:	8f af       	std	Y+63, r24	; 0x3f
    3ae0:	6e 97       	sbiw	r28, 0x1e	; 30
    3ae2:	6d 96       	adiw	r28, 0x1d	; 29
    3ae4:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ae6:	6d 97       	sbiw	r28, 0x1d	; 29
    3ae8:	60 96       	adiw	r28, 0x10	; 16
    3aea:	8f ad       	ldd	r24, Y+63	; 0x3f
    3aec:	60 97       	sbiw	r28, 0x10	; 16
    3aee:	98 17       	cp	r25, r24
    3af0:	18 f0       	brcs	.+6      	; 0x3af8 <LCD_PrintNumber+0x4c4>
    3af2:	6e 96       	adiw	r28, 0x1e	; 30
    3af4:	1f ae       	std	Y+63, r1	; 0x3f
    3af6:	6e 97       	sbiw	r28, 0x1e	; 30
    3af8:	6c 96       	adiw	r28, 0x1c	; 28
    3afa:	9f ad       	ldd	r25, Y+63	; 0x3f
    3afc:	6c 97       	sbiw	r28, 0x1c	; 28
    3afe:	6e 96       	adiw	r28, 0x1e	; 30
    3b00:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b02:	6e 97       	sbiw	r28, 0x1e	; 30
    3b04:	98 2b       	or	r25, r24
    3b06:	6c 96       	adiw	r28, 0x1c	; 28
    3b08:	9f af       	std	Y+63, r25	; 0x3f
    3b0a:	6c 97       	sbiw	r28, 0x1c	; 28
    3b0c:	6d 96       	adiw	r28, 0x1d	; 29
    3b0e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b10:	6d 97       	sbiw	r28, 0x1d	; 29
    3b12:	60 96       	adiw	r28, 0x10	; 16
    3b14:	9f af       	std	Y+63, r25	; 0x3f
    3b16:	60 97       	sbiw	r28, 0x10	; 16
    3b18:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3b1a:	9d 89       	ldd	r25, Y+21	; 0x15
    3b1c:	89 0f       	add	r24, r25
    3b1e:	61 96       	adiw	r28, 0x11	; 17
    3b20:	8f af       	std	Y+63, r24	; 0x3f
    3b22:	61 97       	sbiw	r28, 0x11	; 17
    3b24:	81 e0       	ldi	r24, 0x01	; 1
    3b26:	6f 96       	adiw	r28, 0x1f	; 31
    3b28:	8f af       	std	Y+63, r24	; 0x3f
    3b2a:	6f 97       	sbiw	r28, 0x1f	; 31
    3b2c:	61 96       	adiw	r28, 0x11	; 17
    3b2e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b30:	61 97       	sbiw	r28, 0x11	; 17
    3b32:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3b34:	98 17       	cp	r25, r24
    3b36:	18 f0       	brcs	.+6      	; 0x3b3e <LCD_PrintNumber+0x50a>
    3b38:	6f 96       	adiw	r28, 0x1f	; 31
    3b3a:	1f ae       	std	Y+63, r1	; 0x3f
    3b3c:	6f 97       	sbiw	r28, 0x1f	; 31
    3b3e:	6c 96       	adiw	r28, 0x1c	; 28
    3b40:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b42:	6c 97       	sbiw	r28, 0x1c	; 28
    3b44:	61 96       	adiw	r28, 0x11	; 17
    3b46:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b48:	61 97       	sbiw	r28, 0x11	; 17
    3b4a:	98 0f       	add	r25, r24
    3b4c:	a0 96       	adiw	r28, 0x20	; 32
    3b4e:	9f af       	std	Y+63, r25	; 0x3f
    3b50:	a0 97       	sbiw	r28, 0x20	; 32
    3b52:	91 e0       	ldi	r25, 0x01	; 1
    3b54:	a1 96       	adiw	r28, 0x21	; 33
    3b56:	9f af       	std	Y+63, r25	; 0x3f
    3b58:	a1 97       	sbiw	r28, 0x21	; 33
    3b5a:	a0 96       	adiw	r28, 0x20	; 32
    3b5c:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b5e:	a0 97       	sbiw	r28, 0x20	; 32
    3b60:	61 96       	adiw	r28, 0x11	; 17
    3b62:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b64:	61 97       	sbiw	r28, 0x11	; 17
    3b66:	89 17       	cp	r24, r25
    3b68:	18 f0       	brcs	.+6      	; 0x3b70 <LCD_PrintNumber+0x53c>
    3b6a:	a1 96       	adiw	r28, 0x21	; 33
    3b6c:	1f ae       	std	Y+63, r1	; 0x3f
    3b6e:	a1 97       	sbiw	r28, 0x21	; 33
    3b70:	6f 96       	adiw	r28, 0x1f	; 31
    3b72:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b74:	6f 97       	sbiw	r28, 0x1f	; 31
    3b76:	a1 96       	adiw	r28, 0x21	; 33
    3b78:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b7a:	a1 97       	sbiw	r28, 0x21	; 33
    3b7c:	89 2b       	or	r24, r25
    3b7e:	6f 96       	adiw	r28, 0x1f	; 31
    3b80:	8f af       	std	Y+63, r24	; 0x3f
    3b82:	6f 97       	sbiw	r28, 0x1f	; 31
    3b84:	a0 96       	adiw	r28, 0x20	; 32
    3b86:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b88:	a0 97       	sbiw	r28, 0x20	; 32
    3b8a:	61 96       	adiw	r28, 0x11	; 17
    3b8c:	8f af       	std	Y+63, r24	; 0x3f
    3b8e:	61 97       	sbiw	r28, 0x11	; 17
    3b90:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3b92:	8e 89       	ldd	r24, Y+22	; 0x16
    3b94:	98 0f       	add	r25, r24
    3b96:	62 96       	adiw	r28, 0x12	; 18
    3b98:	9f af       	std	Y+63, r25	; 0x3f
    3b9a:	62 97       	sbiw	r28, 0x12	; 18
    3b9c:	91 e0       	ldi	r25, 0x01	; 1
    3b9e:	a2 96       	adiw	r28, 0x22	; 34
    3ba0:	9f af       	std	Y+63, r25	; 0x3f
    3ba2:	a2 97       	sbiw	r28, 0x22	; 34
    3ba4:	62 96       	adiw	r28, 0x12	; 18
    3ba6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ba8:	62 97       	sbiw	r28, 0x12	; 18
    3baa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3bac:	89 17       	cp	r24, r25
    3bae:	18 f0       	brcs	.+6      	; 0x3bb6 <LCD_PrintNumber+0x582>
    3bb0:	a2 96       	adiw	r28, 0x22	; 34
    3bb2:	1f ae       	std	Y+63, r1	; 0x3f
    3bb4:	a2 97       	sbiw	r28, 0x22	; 34
    3bb6:	6f 96       	adiw	r28, 0x1f	; 31
    3bb8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bba:	6f 97       	sbiw	r28, 0x1f	; 31
    3bbc:	62 96       	adiw	r28, 0x12	; 18
    3bbe:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bc0:	62 97       	sbiw	r28, 0x12	; 18
    3bc2:	89 0f       	add	r24, r25
    3bc4:	a3 96       	adiw	r28, 0x23	; 35
    3bc6:	8f af       	std	Y+63, r24	; 0x3f
    3bc8:	a3 97       	sbiw	r28, 0x23	; 35
    3bca:	81 e0       	ldi	r24, 0x01	; 1
    3bcc:	a4 96       	adiw	r28, 0x24	; 36
    3bce:	8f af       	std	Y+63, r24	; 0x3f
    3bd0:	a4 97       	sbiw	r28, 0x24	; 36
    3bd2:	a3 96       	adiw	r28, 0x23	; 35
    3bd4:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bd6:	a3 97       	sbiw	r28, 0x23	; 35
    3bd8:	62 96       	adiw	r28, 0x12	; 18
    3bda:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bdc:	62 97       	sbiw	r28, 0x12	; 18
    3bde:	98 17       	cp	r25, r24
    3be0:	18 f0       	brcs	.+6      	; 0x3be8 <LCD_PrintNumber+0x5b4>
    3be2:	a4 96       	adiw	r28, 0x24	; 36
    3be4:	1f ae       	std	Y+63, r1	; 0x3f
    3be6:	a4 97       	sbiw	r28, 0x24	; 36
    3be8:	a2 96       	adiw	r28, 0x22	; 34
    3bea:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bec:	a2 97       	sbiw	r28, 0x22	; 34
    3bee:	a4 96       	adiw	r28, 0x24	; 36
    3bf0:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bf2:	a4 97       	sbiw	r28, 0x24	; 36
    3bf4:	98 2b       	or	r25, r24
    3bf6:	a2 96       	adiw	r28, 0x22	; 34
    3bf8:	9f af       	std	Y+63, r25	; 0x3f
    3bfa:	a2 97       	sbiw	r28, 0x22	; 34
    3bfc:	a3 96       	adiw	r28, 0x23	; 35
    3bfe:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c00:	a3 97       	sbiw	r28, 0x23	; 35
    3c02:	62 96       	adiw	r28, 0x12	; 18
    3c04:	9f af       	std	Y+63, r25	; 0x3f
    3c06:	62 97       	sbiw	r28, 0x12	; 18
    3c08:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3c0a:	9f 89       	ldd	r25, Y+23	; 0x17
    3c0c:	89 0f       	add	r24, r25
    3c0e:	63 96       	adiw	r28, 0x13	; 19
    3c10:	8f af       	std	Y+63, r24	; 0x3f
    3c12:	63 97       	sbiw	r28, 0x13	; 19
    3c14:	81 e0       	ldi	r24, 0x01	; 1
    3c16:	a5 96       	adiw	r28, 0x25	; 37
    3c18:	8f af       	std	Y+63, r24	; 0x3f
    3c1a:	a5 97       	sbiw	r28, 0x25	; 37
    3c1c:	63 96       	adiw	r28, 0x13	; 19
    3c1e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c20:	63 97       	sbiw	r28, 0x13	; 19
    3c22:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3c24:	98 17       	cp	r25, r24
    3c26:	18 f0       	brcs	.+6      	; 0x3c2e <LCD_PrintNumber+0x5fa>
    3c28:	a5 96       	adiw	r28, 0x25	; 37
    3c2a:	1f ae       	std	Y+63, r1	; 0x3f
    3c2c:	a5 97       	sbiw	r28, 0x25	; 37
    3c2e:	a2 96       	adiw	r28, 0x22	; 34
    3c30:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c32:	a2 97       	sbiw	r28, 0x22	; 34
    3c34:	63 96       	adiw	r28, 0x13	; 19
    3c36:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c38:	63 97       	sbiw	r28, 0x13	; 19
    3c3a:	98 0f       	add	r25, r24
    3c3c:	a6 96       	adiw	r28, 0x26	; 38
    3c3e:	9f af       	std	Y+63, r25	; 0x3f
    3c40:	a6 97       	sbiw	r28, 0x26	; 38
    3c42:	91 e0       	ldi	r25, 0x01	; 1
    3c44:	a7 96       	adiw	r28, 0x27	; 39
    3c46:	9f af       	std	Y+63, r25	; 0x3f
    3c48:	a7 97       	sbiw	r28, 0x27	; 39
    3c4a:	a6 96       	adiw	r28, 0x26	; 38
    3c4c:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c4e:	a6 97       	sbiw	r28, 0x26	; 38
    3c50:	63 96       	adiw	r28, 0x13	; 19
    3c52:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c54:	63 97       	sbiw	r28, 0x13	; 19
    3c56:	89 17       	cp	r24, r25
    3c58:	18 f0       	brcs	.+6      	; 0x3c60 <LCD_PrintNumber+0x62c>
    3c5a:	a7 96       	adiw	r28, 0x27	; 39
    3c5c:	1f ae       	std	Y+63, r1	; 0x3f
    3c5e:	a7 97       	sbiw	r28, 0x27	; 39
    3c60:	a5 96       	adiw	r28, 0x25	; 37
    3c62:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c64:	a5 97       	sbiw	r28, 0x25	; 37
    3c66:	a7 96       	adiw	r28, 0x27	; 39
    3c68:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c6a:	a7 97       	sbiw	r28, 0x27	; 39
    3c6c:	89 2b       	or	r24, r25
    3c6e:	a5 96       	adiw	r28, 0x25	; 37
    3c70:	8f af       	std	Y+63, r24	; 0x3f
    3c72:	a5 97       	sbiw	r28, 0x25	; 37
    3c74:	a6 96       	adiw	r28, 0x26	; 38
    3c76:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c78:	a6 97       	sbiw	r28, 0x26	; 38
    3c7a:	63 96       	adiw	r28, 0x13	; 19
    3c7c:	8f af       	std	Y+63, r24	; 0x3f
    3c7e:	63 97       	sbiw	r28, 0x13	; 19
    3c80:	98 a1       	ldd	r25, Y+32	; 0x20
    3c82:	88 8d       	ldd	r24, Y+24	; 0x18
    3c84:	98 0f       	add	r25, r24
    3c86:	64 96       	adiw	r28, 0x14	; 20
    3c88:	9f af       	std	Y+63, r25	; 0x3f
    3c8a:	64 97       	sbiw	r28, 0x14	; 20
    3c8c:	a5 96       	adiw	r28, 0x25	; 37
    3c8e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c90:	a5 97       	sbiw	r28, 0x25	; 37
    3c92:	64 96       	adiw	r28, 0x14	; 20
    3c94:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c96:	64 97       	sbiw	r28, 0x14	; 20
    3c98:	89 0f       	add	r24, r25
    3c9a:	64 96       	adiw	r28, 0x14	; 20
    3c9c:	8f af       	std	Y+63, r24	; 0x3f
    3c9e:	64 97       	sbiw	r28, 0x14	; 20
    3ca0:	2d 96       	adiw	r28, 0x0d	; 13
    3ca2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ca4:	2d 97       	sbiw	r28, 0x0d	; 13
    3ca6:	89 83       	std	Y+1, r24	; 0x01
    3ca8:	2e 96       	adiw	r28, 0x0e	; 14
    3caa:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cac:	2e 97       	sbiw	r28, 0x0e	; 14
    3cae:	9a 83       	std	Y+2, r25	; 0x02
    3cb0:	2f 96       	adiw	r28, 0x0f	; 15
    3cb2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cb4:	2f 97       	sbiw	r28, 0x0f	; 15
    3cb6:	8b 83       	std	Y+3, r24	; 0x03
    3cb8:	60 96       	adiw	r28, 0x10	; 16
    3cba:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cbc:	60 97       	sbiw	r28, 0x10	; 16
    3cbe:	9c 83       	std	Y+4, r25	; 0x04
    3cc0:	61 96       	adiw	r28, 0x11	; 17
    3cc2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cc4:	61 97       	sbiw	r28, 0x11	; 17
    3cc6:	8d 83       	std	Y+5, r24	; 0x05
    3cc8:	62 96       	adiw	r28, 0x12	; 18
    3cca:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ccc:	62 97       	sbiw	r28, 0x12	; 18
    3cce:	9e 83       	std	Y+6, r25	; 0x06
    3cd0:	63 96       	adiw	r28, 0x13	; 19
    3cd2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cd4:	63 97       	sbiw	r28, 0x13	; 19
    3cd6:	8f 83       	std	Y+7, r24	; 0x07
    3cd8:	64 96       	adiw	r28, 0x14	; 20
    3cda:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cdc:	64 97       	sbiw	r28, 0x14	; 20
    3cde:	98 87       	std	Y+8, r25	; 0x08

	        num = num / 10;
    3ce0:	a9 84       	ldd	r10, Y+9	; 0x09
    3ce2:	ba 84       	ldd	r11, Y+10	; 0x0a
    3ce4:	cb 84       	ldd	r12, Y+11	; 0x0b
    3ce6:	dc 84       	ldd	r13, Y+12	; 0x0c
    3ce8:	ed 84       	ldd	r14, Y+13	; 0x0d
    3cea:	fe 84       	ldd	r15, Y+14	; 0x0e
    3cec:	0f 85       	ldd	r16, Y+15	; 0x0f
    3cee:	18 89       	ldd	r17, Y+16	; 0x10
    3cf0:	2a 2d       	mov	r18, r10
    3cf2:	3b 2d       	mov	r19, r11
    3cf4:	4c 2d       	mov	r20, r12
    3cf6:	5d 2d       	mov	r21, r13
    3cf8:	6e 2d       	mov	r22, r14
    3cfa:	7f 2d       	mov	r23, r15
    3cfc:	80 2f       	mov	r24, r16
    3cfe:	91 2f       	mov	r25, r17
    3d00:	0f 2e       	mov	r0, r31
    3d02:	fa e0       	ldi	r31, 0x0A	; 10
    3d04:	af 2e       	mov	r10, r31
    3d06:	f0 2d       	mov	r31, r0
    3d08:	bb 24       	eor	r11, r11
    3d0a:	cc 24       	eor	r12, r12
    3d0c:	dd 24       	eor	r13, r13
    3d0e:	ee 24       	eor	r14, r14
    3d10:	ff 24       	eor	r15, r15
    3d12:	00 e0       	ldi	r16, 0x00	; 0
    3d14:	10 e0       	ldi	r17, 0x00	; 0
    3d16:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    3d1a:	a2 2e       	mov	r10, r18
    3d1c:	b3 2e       	mov	r11, r19
    3d1e:	c4 2e       	mov	r12, r20
    3d20:	d5 2e       	mov	r13, r21
    3d22:	e6 2e       	mov	r14, r22
    3d24:	f7 2e       	mov	r15, r23
    3d26:	08 2f       	mov	r16, r24
    3d28:	19 2f       	mov	r17, r25
    3d2a:	a9 86       	std	Y+9, r10	; 0x09
    3d2c:	ba 86       	std	Y+10, r11	; 0x0a
    3d2e:	cb 86       	std	Y+11, r12	; 0x0b
    3d30:	dc 86       	std	Y+12, r13	; 0x0c
    3d32:	ed 86       	std	Y+13, r14	; 0x0d
    3d34:	fe 86       	std	Y+14, r15	; 0x0e
    3d36:	0f 87       	std	Y+15, r16	; 0x0f
    3d38:	18 8b       	std	Y+16, r17	; 0x10
	 }
	}
void LCD_PrintNumber(uint64 num)
{
	uint64 reverse= 1;
	    while (num > 0) //123
    3d3a:	89 85       	ldd	r24, Y+9	; 0x09
    3d3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d3e:	89 2b       	or	r24, r25
    3d40:	9b 85       	ldd	r25, Y+11	; 0x0b
    3d42:	89 2b       	or	r24, r25
    3d44:	9c 85       	ldd	r25, Y+12	; 0x0c
    3d46:	89 2b       	or	r24, r25
    3d48:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d4a:	89 2b       	or	r24, r25
    3d4c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d4e:	89 2b       	or	r24, r25
    3d50:	9f 85       	ldd	r25, Y+15	; 0x0f
    3d52:	89 2b       	or	r24, r25
    3d54:	98 89       	ldd	r25, Y+16	; 0x10
    3d56:	89 2b       	or	r24, r25
    3d58:	88 23       	and	r24, r24
    3d5a:	09 f0       	breq	.+2      	; 0x3d5e <LCD_PrintNumber+0x72a>
    3d5c:	90 cc       	rjmp	.-1760   	; 0x367e <LCD_PrintNumber+0x4a>
    3d5e:	5e c0       	rjmp	.+188    	; 0x3e1c <LCD_PrintNumber+0x7e8>
	    }

	    while(reverse>1) //321
	    {

	    	LCD_WriteData((reverse%10)+48);
    3d60:	a9 80       	ldd	r10, Y+1	; 0x01
    3d62:	ba 80       	ldd	r11, Y+2	; 0x02
    3d64:	cb 80       	ldd	r12, Y+3	; 0x03
    3d66:	dc 80       	ldd	r13, Y+4	; 0x04
    3d68:	ed 80       	ldd	r14, Y+5	; 0x05
    3d6a:	fe 80       	ldd	r15, Y+6	; 0x06
    3d6c:	0f 81       	ldd	r16, Y+7	; 0x07
    3d6e:	18 85       	ldd	r17, Y+8	; 0x08
    3d70:	2a 2d       	mov	r18, r10
    3d72:	3b 2d       	mov	r19, r11
    3d74:	4c 2d       	mov	r20, r12
    3d76:	5d 2d       	mov	r21, r13
    3d78:	6e 2d       	mov	r22, r14
    3d7a:	7f 2d       	mov	r23, r15
    3d7c:	80 2f       	mov	r24, r16
    3d7e:	91 2f       	mov	r25, r17
    3d80:	0f 2e       	mov	r0, r31
    3d82:	fa e0       	ldi	r31, 0x0A	; 10
    3d84:	af 2e       	mov	r10, r31
    3d86:	f0 2d       	mov	r31, r0
    3d88:	bb 24       	eor	r11, r11
    3d8a:	cc 24       	eor	r12, r12
    3d8c:	dd 24       	eor	r13, r13
    3d8e:	ee 24       	eor	r14, r14
    3d90:	ff 24       	eor	r15, r15
    3d92:	00 e0       	ldi	r16, 0x00	; 0
    3d94:	10 e0       	ldi	r17, 0x00	; 0
    3d96:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    3d9a:	a2 2e       	mov	r10, r18
    3d9c:	b3 2e       	mov	r11, r19
    3d9e:	c4 2e       	mov	r12, r20
    3da0:	d5 2e       	mov	r13, r21
    3da2:	e6 2e       	mov	r14, r22
    3da4:	f7 2e       	mov	r15, r23
    3da6:	08 2f       	mov	r16, r24
    3da8:	19 2f       	mov	r17, r25
    3daa:	2a 2d       	mov	r18, r10
    3dac:	3b 2d       	mov	r19, r11
    3dae:	4c 2d       	mov	r20, r12
    3db0:	5d 2d       	mov	r21, r13
    3db2:	6e 2d       	mov	r22, r14
    3db4:	7f 2d       	mov	r23, r15
    3db6:	80 2f       	mov	r24, r16
    3db8:	91 2f       	mov	r25, r17
    3dba:	82 2f       	mov	r24, r18
    3dbc:	80 5d       	subi	r24, 0xD0	; 208
    3dbe:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
	    	reverse=reverse/10;
    3dc2:	a9 80       	ldd	r10, Y+1	; 0x01
    3dc4:	ba 80       	ldd	r11, Y+2	; 0x02
    3dc6:	cb 80       	ldd	r12, Y+3	; 0x03
    3dc8:	dc 80       	ldd	r13, Y+4	; 0x04
    3dca:	ed 80       	ldd	r14, Y+5	; 0x05
    3dcc:	fe 80       	ldd	r15, Y+6	; 0x06
    3dce:	0f 81       	ldd	r16, Y+7	; 0x07
    3dd0:	18 85       	ldd	r17, Y+8	; 0x08
    3dd2:	2a 2d       	mov	r18, r10
    3dd4:	3b 2d       	mov	r19, r11
    3dd6:	4c 2d       	mov	r20, r12
    3dd8:	5d 2d       	mov	r21, r13
    3dda:	6e 2d       	mov	r22, r14
    3ddc:	7f 2d       	mov	r23, r15
    3dde:	80 2f       	mov	r24, r16
    3de0:	91 2f       	mov	r25, r17
    3de2:	0f 2e       	mov	r0, r31
    3de4:	fa e0       	ldi	r31, 0x0A	; 10
    3de6:	af 2e       	mov	r10, r31
    3de8:	f0 2d       	mov	r31, r0
    3dea:	bb 24       	eor	r11, r11
    3dec:	cc 24       	eor	r12, r12
    3dee:	dd 24       	eor	r13, r13
    3df0:	ee 24       	eor	r14, r14
    3df2:	ff 24       	eor	r15, r15
    3df4:	00 e0       	ldi	r16, 0x00	; 0
    3df6:	10 e0       	ldi	r17, 0x00	; 0
    3df8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    3dfc:	a2 2e       	mov	r10, r18
    3dfe:	b3 2e       	mov	r11, r19
    3e00:	c4 2e       	mov	r12, r20
    3e02:	d5 2e       	mov	r13, r21
    3e04:	e6 2e       	mov	r14, r22
    3e06:	f7 2e       	mov	r15, r23
    3e08:	08 2f       	mov	r16, r24
    3e0a:	19 2f       	mov	r17, r25
    3e0c:	a9 82       	std	Y+1, r10	; 0x01
    3e0e:	ba 82       	std	Y+2, r11	; 0x02
    3e10:	cb 82       	std	Y+3, r12	; 0x03
    3e12:	dc 82       	std	Y+4, r13	; 0x04
    3e14:	ed 82       	std	Y+5, r14	; 0x05
    3e16:	fe 82       	std	Y+6, r15	; 0x06
    3e18:	0f 83       	std	Y+7, r16	; 0x07
    3e1a:	18 87       	std	Y+8, r17	; 0x08
	        reverse= (reverse * 10) + num % 10;

	        num = num / 10;
	    }

	    while(reverse>1) //321
    3e1c:	88 85       	ldd	r24, Y+8	; 0x08
    3e1e:	88 23       	and	r24, r24
    3e20:	09 f0       	breq	.+2      	; 0x3e24 <LCD_PrintNumber+0x7f0>
    3e22:	9e cf       	rjmp	.-196    	; 0x3d60 <LCD_PrintNumber+0x72c>
    3e24:	88 85       	ldd	r24, Y+8	; 0x08
    3e26:	88 23       	and	r24, r24
    3e28:	71 f5       	brne	.+92     	; 0x3e86 <LCD_PrintNumber+0x852>
    3e2a:	8f 81       	ldd	r24, Y+7	; 0x07
    3e2c:	88 23       	and	r24, r24
    3e2e:	09 f0       	breq	.+2      	; 0x3e32 <LCD_PrintNumber+0x7fe>
    3e30:	97 cf       	rjmp	.-210    	; 0x3d60 <LCD_PrintNumber+0x72c>
    3e32:	8f 81       	ldd	r24, Y+7	; 0x07
    3e34:	88 23       	and	r24, r24
    3e36:	39 f5       	brne	.+78     	; 0x3e86 <LCD_PrintNumber+0x852>
    3e38:	8e 81       	ldd	r24, Y+6	; 0x06
    3e3a:	88 23       	and	r24, r24
    3e3c:	09 f0       	breq	.+2      	; 0x3e40 <LCD_PrintNumber+0x80c>
    3e3e:	90 cf       	rjmp	.-224    	; 0x3d60 <LCD_PrintNumber+0x72c>
    3e40:	8e 81       	ldd	r24, Y+6	; 0x06
    3e42:	88 23       	and	r24, r24
    3e44:	01 f5       	brne	.+64     	; 0x3e86 <LCD_PrintNumber+0x852>
    3e46:	8d 81       	ldd	r24, Y+5	; 0x05
    3e48:	88 23       	and	r24, r24
    3e4a:	09 f0       	breq	.+2      	; 0x3e4e <LCD_PrintNumber+0x81a>
    3e4c:	89 cf       	rjmp	.-238    	; 0x3d60 <LCD_PrintNumber+0x72c>
    3e4e:	8d 81       	ldd	r24, Y+5	; 0x05
    3e50:	88 23       	and	r24, r24
    3e52:	c9 f4       	brne	.+50     	; 0x3e86 <LCD_PrintNumber+0x852>
    3e54:	8c 81       	ldd	r24, Y+4	; 0x04
    3e56:	88 23       	and	r24, r24
    3e58:	09 f0       	breq	.+2      	; 0x3e5c <LCD_PrintNumber+0x828>
    3e5a:	82 cf       	rjmp	.-252    	; 0x3d60 <LCD_PrintNumber+0x72c>
    3e5c:	8c 81       	ldd	r24, Y+4	; 0x04
    3e5e:	88 23       	and	r24, r24
    3e60:	91 f4       	brne	.+36     	; 0x3e86 <LCD_PrintNumber+0x852>
    3e62:	8b 81       	ldd	r24, Y+3	; 0x03
    3e64:	88 23       	and	r24, r24
    3e66:	09 f0       	breq	.+2      	; 0x3e6a <LCD_PrintNumber+0x836>
    3e68:	7b cf       	rjmp	.-266    	; 0x3d60 <LCD_PrintNumber+0x72c>
    3e6a:	8b 81       	ldd	r24, Y+3	; 0x03
    3e6c:	88 23       	and	r24, r24
    3e6e:	59 f4       	brne	.+22     	; 0x3e86 <LCD_PrintNumber+0x852>
    3e70:	8a 81       	ldd	r24, Y+2	; 0x02
    3e72:	88 23       	and	r24, r24
    3e74:	09 f0       	breq	.+2      	; 0x3e78 <LCD_PrintNumber+0x844>
    3e76:	74 cf       	rjmp	.-280    	; 0x3d60 <LCD_PrintNumber+0x72c>
    3e78:	8a 81       	ldd	r24, Y+2	; 0x02
    3e7a:	88 23       	and	r24, r24
    3e7c:	21 f4       	brne	.+8      	; 0x3e86 <LCD_PrintNumber+0x852>
    3e7e:	89 81       	ldd	r24, Y+1	; 0x01
    3e80:	82 30       	cpi	r24, 0x02	; 2
    3e82:	08 f0       	brcs	.+2      	; 0x3e86 <LCD_PrintNumber+0x852>
    3e84:	6d cf       	rjmp	.-294    	; 0x3d60 <LCD_PrintNumber+0x72c>
	    {

	    	LCD_WriteData((reverse%10)+48);
	    	reverse=reverse/10;
	    }
}
    3e86:	ca 59       	subi	r28, 0x9A	; 154
    3e88:	df 4f       	sbci	r29, 0xFF	; 255
    3e8a:	0f b6       	in	r0, 0x3f	; 63
    3e8c:	f8 94       	cli
    3e8e:	de bf       	out	0x3e, r29	; 62
    3e90:	0f be       	out	0x3f, r0	; 63
    3e92:	cd bf       	out	0x3d, r28	; 61
    3e94:	cf 91       	pop	r28
    3e96:	df 91       	pop	r29
    3e98:	1f 91       	pop	r17
    3e9a:	0f 91       	pop	r16
    3e9c:	ff 90       	pop	r15
    3e9e:	ef 90       	pop	r14
    3ea0:	df 90       	pop	r13
    3ea2:	cf 90       	pop	r12
    3ea4:	bf 90       	pop	r11
    3ea6:	af 90       	pop	r10
    3ea8:	08 95       	ret

00003eaa <LCD_PrintBinary>:

void LCD_PrintBinary(uint8 num)
{
    3eaa:	df 93       	push	r29
    3eac:	cf 93       	push	r28
    3eae:	00 d0       	rcall	.+0      	; 0x3eb0 <LCD_PrintBinary+0x6>
    3eb0:	0f 92       	push	r0
    3eb2:	cd b7       	in	r28, 0x3d	; 61
    3eb4:	de b7       	in	r29, 0x3e	; 62
    3eb6:	8a 83       	std	Y+2, r24	; 0x02
	for (sint8 i=7; i>=0; i--)
    3eb8:	87 e0       	ldi	r24, 0x07	; 7
    3eba:	89 83       	std	Y+1, r24	; 0x01
    3ebc:	1d c0       	rjmp	.+58     	; 0x3ef8 <LCD_PrintBinary+0x4e>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
    3ebe:	8a 81       	ldd	r24, Y+2	; 0x02
    3ec0:	28 2f       	mov	r18, r24
    3ec2:	30 e0       	ldi	r19, 0x00	; 0
    3ec4:	89 81       	ldd	r24, Y+1	; 0x01
    3ec6:	99 27       	eor	r25, r25
    3ec8:	87 fd       	sbrc	r24, 7
    3eca:	90 95       	com	r25
    3ecc:	a9 01       	movw	r20, r18
    3ece:	02 c0       	rjmp	.+4      	; 0x3ed4 <LCD_PrintBinary+0x2a>
    3ed0:	55 95       	asr	r21
    3ed2:	47 95       	ror	r20
    3ed4:	8a 95       	dec	r24
    3ed6:	e2 f7       	brpl	.-8      	; 0x3ed0 <LCD_PrintBinary+0x26>
    3ed8:	ca 01       	movw	r24, r20
    3eda:	81 70       	andi	r24, 0x01	; 1
    3edc:	90 70       	andi	r25, 0x00	; 0
    3ede:	88 23       	and	r24, r24
    3ee0:	19 f0       	breq	.+6      	; 0x3ee8 <LCD_PrintBinary+0x3e>
    3ee2:	51 e3       	ldi	r21, 0x31	; 49
    3ee4:	5b 83       	std	Y+3, r21	; 0x03
    3ee6:	02 c0       	rjmp	.+4      	; 0x3eec <LCD_PrintBinary+0x42>
    3ee8:	80 e3       	ldi	r24, 0x30	; 48
    3eea:	8b 83       	std	Y+3, r24	; 0x03
    3eec:	8b 81       	ldd	r24, Y+3	; 0x03
    3eee:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
	    }
}

void LCD_PrintBinary(uint8 num)
{
	for (sint8 i=7; i>=0; i--)
    3ef2:	89 81       	ldd	r24, Y+1	; 0x01
    3ef4:	81 50       	subi	r24, 0x01	; 1
    3ef6:	89 83       	std	Y+1, r24	; 0x01
    3ef8:	89 81       	ldd	r24, Y+1	; 0x01
    3efa:	88 23       	and	r24, r24
    3efc:	04 f7       	brge	.-64     	; 0x3ebe <LCD_PrintBinary+0x14>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
	}

}
    3efe:	0f 90       	pop	r0
    3f00:	0f 90       	pop	r0
    3f02:	0f 90       	pop	r0
    3f04:	cf 91       	pop	r28
    3f06:	df 91       	pop	r29
    3f08:	08 95       	ret

00003f0a <LCD_PrintHex>:

void LCD_PrintHex(uint8 num)
{
    3f0a:	df 93       	push	r29
    3f0c:	cf 93       	push	r28
    3f0e:	00 d0       	rcall	.+0      	; 0x3f10 <LCD_PrintHex+0x6>
    3f10:	0f 92       	push	r0
    3f12:	cd b7       	in	r28, 0x3d	; 61
    3f14:	de b7       	in	r29, 0x3e	; 62
    3f16:	8b 83       	std	Y+3, r24	; 0x03
	uint8 Upper = 0, Lower = 0;
    3f18:	1a 82       	std	Y+2, r1	; 0x02
    3f1a:	19 82       	std	Y+1, r1	; 0x01
	LCD_WriteString("0X");
    3f1c:	80 e6       	ldi	r24, 0x60	; 96
    3f1e:	90 e0       	ldi	r25, 0x00	; 0
    3f20:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>

	Upper = num >> 4;     //0b000 0010
    3f24:	8b 81       	ldd	r24, Y+3	; 0x03
    3f26:	82 95       	swap	r24
    3f28:	8f 70       	andi	r24, 0x0F	; 15
    3f2a:	8a 83       	std	Y+2, r24	; 0x02
	Lower = num & 0X0f;   //0b000 0000
    3f2c:	8b 81       	ldd	r24, Y+3	; 0x03
    3f2e:	8f 70       	andi	r24, 0x0F	; 15
    3f30:	89 83       	std	Y+1, r24	; 0x01

	if (Upper < 10){
    3f32:	8a 81       	ldd	r24, Y+2	; 0x02
    3f34:	8a 30       	cpi	r24, 0x0A	; 10
    3f36:	28 f4       	brcc	.+10     	; 0x3f42 <LCD_PrintHex+0x38>
		LCD_WriteData(Upper+'0');
    3f38:	8a 81       	ldd	r24, Y+2	; 0x02
    3f3a:	80 5d       	subi	r24, 0xD0	; 208
    3f3c:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    3f40:	04 c0       	rjmp	.+8      	; 0x3f4a <LCD_PrintHex+0x40>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    3f42:	8a 81       	ldd	r24, Y+2	; 0x02
    3f44:	89 5c       	subi	r24, 0xC9	; 201
    3f46:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
	}

	if (Lower < 10){
    3f4a:	89 81       	ldd	r24, Y+1	; 0x01
    3f4c:	8a 30       	cpi	r24, 0x0A	; 10
    3f4e:	28 f4       	brcc	.+10     	; 0x3f5a <LCD_PrintHex+0x50>

		LCD_WriteData(Lower+'0');
    3f50:	89 81       	ldd	r24, Y+1	; 0x01
    3f52:	80 5d       	subi	r24, 0xD0	; 208
    3f54:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    3f58:	04 c0       	rjmp	.+8      	; 0x3f62 <LCD_PrintHex+0x58>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    3f5a:	8a 81       	ldd	r24, Y+2	; 0x02
    3f5c:	89 5c       	subi	r24, 0xC9	; 201
    3f5e:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>

	}
}
    3f62:	0f 90       	pop	r0
    3f64:	0f 90       	pop	r0
    3f66:	0f 90       	pop	r0
    3f68:	cf 91       	pop	r28
    3f6a:	df 91       	pop	r29
    3f6c:	08 95       	ret

00003f6e <LCD_DrawCharInAdd>:
				0x07,
				0x00,
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
    3f6e:	df 93       	push	r29
    3f70:	cf 93       	push	r28
    3f72:	00 d0       	rcall	.+0      	; 0x3f74 <LCD_DrawCharInAdd+0x6>
    3f74:	cd b7       	in	r28, 0x3d	; 61
    3f76:	de b7       	in	r29, 0x3e	; 62
    3f78:	8a 83       	std	Y+2, r24	; 0x02
	LCD_WriteInst(0x40);
    3f7a:	80 e4       	ldi	r24, 0x40	; 64
    3f7c:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
	for(uint8 i=0; i<8;i++){
    3f80:	19 82       	std	Y+1, r1	; 0x01
    3f82:	0c c0       	rjmp	.+24     	; 0x3f9c <LCD_DrawCharInAdd+0x2e>
		LCD_WriteData(arr[i]);
    3f84:	89 81       	ldd	r24, Y+1	; 0x01
    3f86:	88 2f       	mov	r24, r24
    3f88:	90 e0       	ldi	r25, 0x00	; 0
    3f8a:	fc 01       	movw	r30, r24
    3f8c:	e9 57       	subi	r30, 0x79	; 121
    3f8e:	fe 4f       	sbci	r31, 0xFE	; 254
    3f90:	80 81       	ld	r24, Z
    3f92:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
	LCD_WriteInst(0x40);
	for(uint8 i=0; i<8;i++){
    3f96:	89 81       	ldd	r24, Y+1	; 0x01
    3f98:	8f 5f       	subi	r24, 0xFF	; 255
    3f9a:	89 83       	std	Y+1, r24	; 0x01
    3f9c:	89 81       	ldd	r24, Y+1	; 0x01
    3f9e:	88 30       	cpi	r24, 0x08	; 8
    3fa0:	88 f3       	brcs	.-30     	; 0x3f84 <LCD_DrawCharInAdd+0x16>
		LCD_WriteData(arr[i]);
	}

	LCD_WriteInst(0x80);
    3fa2:	80 e8       	ldi	r24, 0x80	; 128
    3fa4:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
	LCD_WriteData(Data);
    3fa8:	8a 81       	ldd	r24, Y+2	; 0x02
    3faa:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>

}
    3fae:	0f 90       	pop	r0
    3fb0:	0f 90       	pop	r0
    3fb2:	cf 91       	pop	r28
    3fb4:	df 91       	pop	r29
    3fb6:	08 95       	ret

00003fb8 <LCD_Draw_Char>:

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    3fb8:	df 93       	push	r29
    3fba:	cf 93       	push	r28
    3fbc:	00 d0       	rcall	.+0      	; 0x3fbe <LCD_Draw_Char+0x6>
    3fbe:	00 d0       	rcall	.+0      	; 0x3fc0 <LCD_Draw_Char+0x8>
    3fc0:	cd b7       	in	r28, 0x3d	; 61
    3fc2:	de b7       	in	r29, 0x3e	; 62
    3fc4:	8a 83       	std	Y+2, r24	; 0x02
    3fc6:	7c 83       	std	Y+4, r23	; 0x04
    3fc8:	6b 83       	std	Y+3, r22	; 0x03
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    3fca:	8a 81       	ldd	r24, Y+2	; 0x02
    3fcc:	88 2f       	mov	r24, r24
    3fce:	90 e0       	ldi	r25, 0x00	; 0
    3fd0:	88 0f       	add	r24, r24
    3fd2:	99 1f       	adc	r25, r25
    3fd4:	88 0f       	add	r24, r24
    3fd6:	99 1f       	adc	r25, r25
    3fd8:	88 0f       	add	r24, r24
    3fda:	99 1f       	adc	r25, r25
    3fdc:	80 64       	ori	r24, 0x40	; 64
    3fde:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
    for (uint8 j = 0; j < 8; j++) {
    3fe2:	19 82       	std	Y+1, r1	; 0x01
    3fe4:	0e c0       	rjmp	.+28     	; 0x4002 <LCD_Draw_Char+0x4a>
        LCD_WriteData(charArray[j]);
    3fe6:	89 81       	ldd	r24, Y+1	; 0x01
    3fe8:	28 2f       	mov	r18, r24
    3fea:	30 e0       	ldi	r19, 0x00	; 0
    3fec:	8b 81       	ldd	r24, Y+3	; 0x03
    3fee:	9c 81       	ldd	r25, Y+4	; 0x04
    3ff0:	fc 01       	movw	r30, r24
    3ff2:	e2 0f       	add	r30, r18
    3ff4:	f3 1f       	adc	r31, r19
    3ff6:	80 81       	ld	r24, Z
    3ff8:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>

}

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    for (uint8 j = 0; j < 8; j++) {
    3ffc:	89 81       	ldd	r24, Y+1	; 0x01
    3ffe:	8f 5f       	subi	r24, 0xFF	; 255
    4000:	89 83       	std	Y+1, r24	; 0x01
    4002:	89 81       	ldd	r24, Y+1	; 0x01
    4004:	88 30       	cpi	r24, 0x08	; 8
    4006:	78 f3       	brcs	.-34     	; 0x3fe6 <LCD_Draw_Char+0x2e>
        LCD_WriteData(charArray[j]);
    }
    LCD_WriteInst(0x80); // Set DDRAM address to return to the display area
    4008:	80 e8       	ldi	r24, 0x80	; 128
    400a:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
}
    400e:	0f 90       	pop	r0
    4010:	0f 90       	pop	r0
    4012:	0f 90       	pop	r0
    4014:	0f 90       	pop	r0
    4016:	cf 91       	pop	r28
    4018:	df 91       	pop	r29
    401a:	08 95       	ret

0000401c <LCD_Clear>:

void LCD_Clear(void)
{
    401c:	df 93       	push	r29
    401e:	cf 93       	push	r28
    4020:	cd b7       	in	r28, 0x3d	; 61
    4022:	de b7       	in	r29, 0x3e	; 62
	LCD_WriteInst(0x01);
    4024:	81 e0       	ldi	r24, 0x01	; 1
    4026:	0e 94 a9 18 	call	0x3152	; 0x3152 <LCD_WriteInst>
}
    402a:	cf 91       	pop	r28
    402c:	df 91       	pop	r29
    402e:	08 95       	ret

00004030 <LCD_ReverseNumber>:
	return Input+0x30;
}
*/


sint32 LCD_ReverseNumber(sint32 NUM){
    4030:	ef 92       	push	r14
    4032:	ff 92       	push	r15
    4034:	0f 93       	push	r16
    4036:	1f 93       	push	r17
    4038:	df 93       	push	r29
    403a:	cf 93       	push	r28
    403c:	cd b7       	in	r28, 0x3d	; 61
    403e:	de b7       	in	r29, 0x3e	; 62
    4040:	28 97       	sbiw	r28, 0x08	; 8
    4042:	0f b6       	in	r0, 0x3f	; 63
    4044:	f8 94       	cli
    4046:	de bf       	out	0x3e, r29	; 62
    4048:	0f be       	out	0x3f, r0	; 63
    404a:	cd bf       	out	0x3d, r28	; 61
    404c:	6d 83       	std	Y+5, r22	; 0x05
    404e:	7e 83       	std	Y+6, r23	; 0x06
    4050:	8f 83       	std	Y+7, r24	; 0x07
    4052:	98 87       	std	Y+8, r25	; 0x08
	uint32 reverse =1;
    4054:	81 e0       	ldi	r24, 0x01	; 1
    4056:	90 e0       	ldi	r25, 0x00	; 0
    4058:	a0 e0       	ldi	r26, 0x00	; 0
    405a:	b0 e0       	ldi	r27, 0x00	; 0
    405c:	89 83       	std	Y+1, r24	; 0x01
    405e:	9a 83       	std	Y+2, r25	; 0x02
    4060:	ab 83       	std	Y+3, r26	; 0x03
    4062:	bc 83       	std	Y+4, r27	; 0x04
    4064:	36 c0       	rjmp	.+108    	; 0x40d2 <LCD_ReverseNumber+0xa2>
	while (NUM != 0){
		reverse = (reverse*10)+(NUM%10);
    4066:	89 81       	ldd	r24, Y+1	; 0x01
    4068:	9a 81       	ldd	r25, Y+2	; 0x02
    406a:	ab 81       	ldd	r26, Y+3	; 0x03
    406c:	bc 81       	ldd	r27, Y+4	; 0x04
    406e:	2a e0       	ldi	r18, 0x0A	; 10
    4070:	30 e0       	ldi	r19, 0x00	; 0
    4072:	40 e0       	ldi	r20, 0x00	; 0
    4074:	50 e0       	ldi	r21, 0x00	; 0
    4076:	bc 01       	movw	r22, r24
    4078:	cd 01       	movw	r24, r26
    407a:	0e 94 4e 3c 	call	0x789c	; 0x789c <__mulsi3>
    407e:	7b 01       	movw	r14, r22
    4080:	8c 01       	movw	r16, r24
    4082:	8d 81       	ldd	r24, Y+5	; 0x05
    4084:	9e 81       	ldd	r25, Y+6	; 0x06
    4086:	af 81       	ldd	r26, Y+7	; 0x07
    4088:	b8 85       	ldd	r27, Y+8	; 0x08
    408a:	2a e0       	ldi	r18, 0x0A	; 10
    408c:	30 e0       	ldi	r19, 0x00	; 0
    408e:	40 e0       	ldi	r20, 0x00	; 0
    4090:	50 e0       	ldi	r21, 0x00	; 0
    4092:	bc 01       	movw	r22, r24
    4094:	cd 01       	movw	r24, r26
    4096:	0e 94 6d 3c 	call	0x78da	; 0x78da <__divmodsi4>
    409a:	dc 01       	movw	r26, r24
    409c:	cb 01       	movw	r24, r22
    409e:	8e 0d       	add	r24, r14
    40a0:	9f 1d       	adc	r25, r15
    40a2:	a0 1f       	adc	r26, r16
    40a4:	b1 1f       	adc	r27, r17
    40a6:	89 83       	std	Y+1, r24	; 0x01
    40a8:	9a 83       	std	Y+2, r25	; 0x02
    40aa:	ab 83       	std	Y+3, r26	; 0x03
    40ac:	bc 83       	std	Y+4, r27	; 0x04
		NUM = NUM / 10;
    40ae:	8d 81       	ldd	r24, Y+5	; 0x05
    40b0:	9e 81       	ldd	r25, Y+6	; 0x06
    40b2:	af 81       	ldd	r26, Y+7	; 0x07
    40b4:	b8 85       	ldd	r27, Y+8	; 0x08
    40b6:	2a e0       	ldi	r18, 0x0A	; 10
    40b8:	30 e0       	ldi	r19, 0x00	; 0
    40ba:	40 e0       	ldi	r20, 0x00	; 0
    40bc:	50 e0       	ldi	r21, 0x00	; 0
    40be:	bc 01       	movw	r22, r24
    40c0:	cd 01       	movw	r24, r26
    40c2:	0e 94 6d 3c 	call	0x78da	; 0x78da <__divmodsi4>
    40c6:	da 01       	movw	r26, r20
    40c8:	c9 01       	movw	r24, r18
    40ca:	8d 83       	std	Y+5, r24	; 0x05
    40cc:	9e 83       	std	Y+6, r25	; 0x06
    40ce:	af 83       	std	Y+7, r26	; 0x07
    40d0:	b8 87       	std	Y+8, r27	; 0x08
*/


sint32 LCD_ReverseNumber(sint32 NUM){
	uint32 reverse =1;
	while (NUM != 0){
    40d2:	8d 81       	ldd	r24, Y+5	; 0x05
    40d4:	9e 81       	ldd	r25, Y+6	; 0x06
    40d6:	af 81       	ldd	r26, Y+7	; 0x07
    40d8:	b8 85       	ldd	r27, Y+8	; 0x08
    40da:	00 97       	sbiw	r24, 0x00	; 0
    40dc:	a1 05       	cpc	r26, r1
    40de:	b1 05       	cpc	r27, r1
    40e0:	11 f6       	brne	.-124    	; 0x4066 <LCD_ReverseNumber+0x36>
		reverse = (reverse*10)+(NUM%10);
		NUM = NUM / 10;
	}
	return reverse;
    40e2:	89 81       	ldd	r24, Y+1	; 0x01
    40e4:	9a 81       	ldd	r25, Y+2	; 0x02
    40e6:	ab 81       	ldd	r26, Y+3	; 0x03
    40e8:	bc 81       	ldd	r27, Y+4	; 0x04
}
    40ea:	bc 01       	movw	r22, r24
    40ec:	cd 01       	movw	r24, r26
    40ee:	28 96       	adiw	r28, 0x08	; 8
    40f0:	0f b6       	in	r0, 0x3f	; 63
    40f2:	f8 94       	cli
    40f4:	de bf       	out	0x3e, r29	; 62
    40f6:	0f be       	out	0x3f, r0	; 63
    40f8:	cd bf       	out	0x3d, r28	; 61
    40fa:	cf 91       	pop	r28
    40fc:	df 91       	pop	r29
    40fe:	1f 91       	pop	r17
    4100:	0f 91       	pop	r16
    4102:	ff 90       	pop	r15
    4104:	ef 90       	pop	r14
    4106:	08 95       	ret

00004108 <main>:
char word_B1[]		  = "Button1_Pushed";
char word_B2[]		  = "Button2_Pushed";
char word_EndGame[]   = "End Game !!"	;


int main(void){
    4108:	0f 93       	push	r16
    410a:	1f 93       	push	r17
    410c:	df 93       	push	r29
    410e:	cf 93       	push	r28
    4110:	cd b7       	in	r28, 0x3d	; 61
    4112:	de b7       	in	r29, 0x3e	; 62
    4114:	ca 52       	subi	r28, 0x2A	; 42
    4116:	d2 40       	sbci	r29, 0x02	; 2
    4118:	0f b6       	in	r0, 0x3f	; 63
    411a:	f8 94       	cli
    411c:	de bf       	out	0x3e, r29	; 62
    411e:	0f be       	out	0x3f, r0	; 63
    4120:	cd bf       	out	0x3d, r28	; 61
	Button myButton1;
	Button myButton2;
	myButton1.Button_pin =  DIO_u8PIN0;
    4122:	fe 01       	movw	r30, r28
    4124:	eb 5d       	subi	r30, 0xDB	; 219
    4126:	fd 4f       	sbci	r31, 0xFD	; 253
    4128:	10 82       	st	Z, r1
	myButton1.Button_port = DIO_u8PORTB;
    412a:	fe 01       	movw	r30, r28
    412c:	eb 5d       	subi	r30, 0xDB	; 219
    412e:	fd 4f       	sbci	r31, 0xFD	; 253
    4130:	82 e0       	ldi	r24, 0x02	; 2
    4132:	81 83       	std	Z+1, r24	; 0x01
	myButton2.Button_port = DIO_u8PORTB;
    4134:	fe 01       	movw	r30, r28
    4136:	e8 5d       	subi	r30, 0xD8	; 216
    4138:	fd 4f       	sbci	r31, 0xFD	; 253
    413a:	82 e0       	ldi	r24, 0x02	; 2
    413c:	81 83       	std	Z+1, r24	; 0x01
	myButton2.Button_pin =  DIO_u8PIN1;
    413e:	fe 01       	movw	r30, r28
    4140:	e8 5d       	subi	r30, 0xD8	; 216
    4142:	fd 4f       	sbci	r31, 0xFD	; 253
    4144:	81 e0       	ldi	r24, 0x01	; 1
    4146:	80 83       	st	Z, r24

	LCD_Init();
    4148:	0e 94 98 17 	call	0x2f30	; 0x2f30 <LCD_Init>
	//Keypad_init();
	PushButton_voidInit(&myButton1);
    414c:	ce 01       	movw	r24, r28
    414e:	8b 5d       	subi	r24, 0xDB	; 219
    4150:	9d 4f       	sbci	r25, 0xFD	; 253
    4152:	0e 94 86 16 	call	0x2d0c	; 0x2d0c <PushButton_voidInit>
	PushButton_voidInit(&myButton2);
    4156:	ce 01       	movw	r24, r28
    4158:	88 5d       	subi	r24, 0xD8	; 216
    415a:	9d 4f       	sbci	r25, 0xFD	; 253
    415c:	0e 94 86 16 	call	0x2d0c	; 0x2d0c <PushButton_voidInit>

	LCD_Draw_Char(0,nullChar);
    4160:	28 e1       	ldi	r18, 0x18	; 24
    4162:	32 e0       	ldi	r19, 0x02	; 2
    4164:	80 e0       	ldi	r24, 0x00	; 0
    4166:	b9 01       	movw	r22, r18
    4168:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <LCD_Draw_Char>
	LCD_Draw_Char(1,boyChar);
    416c:	27 e9       	ldi	r18, 0x97	; 151
    416e:	31 e0       	ldi	r19, 0x01	; 1
    4170:	81 e0       	ldi	r24, 0x01	; 1
    4172:	b9 01       	movw	r22, r18
    4174:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <LCD_Draw_Char>
	LCD_Draw_Char(2,ballChar);
    4178:	2f e9       	ldi	r18, 0x9F	; 159
    417a:	31 e0       	ldi	r19, 0x01	; 1
    417c:	82 e0       	ldi	r24, 0x02	; 2
    417e:	b9 01       	movw	r22, r18
    4180:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <LCD_Draw_Char>
	LCD_Draw_Char(3,goalPlace);
    4184:	27 ea       	ldi	r18, 0xA7	; 167
    4186:	31 e0       	ldi	r19, 0x01	; 1
    4188:	83 e0       	ldi	r24, 0x03	; 3
    418a:	b9 01       	movw	r22, r18
    418c:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <LCD_Draw_Char>

	while(1){
		LCD_Clear();
    4190:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
		LCD_Goto(1,4);
    4194:	81 e0       	ldi	r24, 0x01	; 1
    4196:	64 e0       	ldi	r22, 0x04	; 4
    4198:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteString(word_Welcome);
    419c:	8e eb       	ldi	r24, 0xBE	; 190
    419e:	91 e0       	ldi	r25, 0x01	; 1
    41a0:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
		LCD_Goto(2,2);
    41a4:	82 e0       	ldi	r24, 0x02	; 2
    41a6:	62 e0       	ldi	r22, 0x02	; 2
    41a8:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteString(word_StartWord);
    41ac:	8f ea       	ldi	r24, 0xAF	; 175
    41ae:	91 e0       	ldi	r25, 0x01	; 1
    41b0:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    41b4:	fe 01       	movw	r30, r28
    41b6:	e1 5e       	subi	r30, 0xE1	; 225
    41b8:	fd 4f       	sbci	r31, 0xFD	; 253
    41ba:	80 e0       	ldi	r24, 0x00	; 0
    41bc:	90 e0       	ldi	r25, 0x00	; 0
    41be:	aa ef       	ldi	r26, 0xFA	; 250
    41c0:	b4 e4       	ldi	r27, 0x44	; 68
    41c2:	80 83       	st	Z, r24
    41c4:	91 83       	std	Z+1, r25	; 0x01
    41c6:	a2 83       	std	Z+2, r26	; 0x02
    41c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41ca:	8e 01       	movw	r16, r28
    41cc:	05 5e       	subi	r16, 0xE5	; 229
    41ce:	1d 4f       	sbci	r17, 0xFD	; 253
    41d0:	fe 01       	movw	r30, r28
    41d2:	e1 5e       	subi	r30, 0xE1	; 225
    41d4:	fd 4f       	sbci	r31, 0xFD	; 253
    41d6:	60 81       	ld	r22, Z
    41d8:	71 81       	ldd	r23, Z+1	; 0x01
    41da:	82 81       	ldd	r24, Z+2	; 0x02
    41dc:	93 81       	ldd	r25, Z+3	; 0x03
    41de:	20 e0       	ldi	r18, 0x00	; 0
    41e0:	30 e0       	ldi	r19, 0x00	; 0
    41e2:	4a ef       	ldi	r20, 0xFA	; 250
    41e4:	54 e4       	ldi	r21, 0x44	; 68
    41e6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    41ea:	dc 01       	movw	r26, r24
    41ec:	cb 01       	movw	r24, r22
    41ee:	f8 01       	movw	r30, r16
    41f0:	80 83       	st	Z, r24
    41f2:	91 83       	std	Z+1, r25	; 0x01
    41f4:	a2 83       	std	Z+2, r26	; 0x02
    41f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    41f8:	fe 01       	movw	r30, r28
    41fa:	e5 5e       	subi	r30, 0xE5	; 229
    41fc:	fd 4f       	sbci	r31, 0xFD	; 253
    41fe:	60 81       	ld	r22, Z
    4200:	71 81       	ldd	r23, Z+1	; 0x01
    4202:	82 81       	ldd	r24, Z+2	; 0x02
    4204:	93 81       	ldd	r25, Z+3	; 0x03
    4206:	20 e0       	ldi	r18, 0x00	; 0
    4208:	30 e0       	ldi	r19, 0x00	; 0
    420a:	40 e8       	ldi	r20, 0x80	; 128
    420c:	5f e3       	ldi	r21, 0x3F	; 63
    420e:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4212:	88 23       	and	r24, r24
    4214:	44 f4       	brge	.+16     	; 0x4226 <main+0x11e>
		__ticks = 1;
    4216:	fe 01       	movw	r30, r28
    4218:	e7 5e       	subi	r30, 0xE7	; 231
    421a:	fd 4f       	sbci	r31, 0xFD	; 253
    421c:	81 e0       	ldi	r24, 0x01	; 1
    421e:	90 e0       	ldi	r25, 0x00	; 0
    4220:	91 83       	std	Z+1, r25	; 0x01
    4222:	80 83       	st	Z, r24
    4224:	64 c0       	rjmp	.+200    	; 0x42ee <main+0x1e6>
	else if (__tmp > 65535)
    4226:	fe 01       	movw	r30, r28
    4228:	e5 5e       	subi	r30, 0xE5	; 229
    422a:	fd 4f       	sbci	r31, 0xFD	; 253
    422c:	60 81       	ld	r22, Z
    422e:	71 81       	ldd	r23, Z+1	; 0x01
    4230:	82 81       	ldd	r24, Z+2	; 0x02
    4232:	93 81       	ldd	r25, Z+3	; 0x03
    4234:	20 e0       	ldi	r18, 0x00	; 0
    4236:	3f ef       	ldi	r19, 0xFF	; 255
    4238:	4f e7       	ldi	r20, 0x7F	; 127
    423a:	57 e4       	ldi	r21, 0x47	; 71
    423c:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4240:	18 16       	cp	r1, r24
    4242:	0c f0       	brlt	.+2      	; 0x4246 <main+0x13e>
    4244:	43 c0       	rjmp	.+134    	; 0x42cc <main+0x1c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4246:	fe 01       	movw	r30, r28
    4248:	e1 5e       	subi	r30, 0xE1	; 225
    424a:	fd 4f       	sbci	r31, 0xFD	; 253
    424c:	60 81       	ld	r22, Z
    424e:	71 81       	ldd	r23, Z+1	; 0x01
    4250:	82 81       	ldd	r24, Z+2	; 0x02
    4252:	93 81       	ldd	r25, Z+3	; 0x03
    4254:	20 e0       	ldi	r18, 0x00	; 0
    4256:	30 e0       	ldi	r19, 0x00	; 0
    4258:	40 e2       	ldi	r20, 0x20	; 32
    425a:	51 e4       	ldi	r21, 0x41	; 65
    425c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4260:	dc 01       	movw	r26, r24
    4262:	cb 01       	movw	r24, r22
    4264:	8e 01       	movw	r16, r28
    4266:	07 5e       	subi	r16, 0xE7	; 231
    4268:	1d 4f       	sbci	r17, 0xFD	; 253
    426a:	bc 01       	movw	r22, r24
    426c:	cd 01       	movw	r24, r26
    426e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4272:	dc 01       	movw	r26, r24
    4274:	cb 01       	movw	r24, r22
    4276:	f8 01       	movw	r30, r16
    4278:	91 83       	std	Z+1, r25	; 0x01
    427a:	80 83       	st	Z, r24
    427c:	1f c0       	rjmp	.+62     	; 0x42bc <main+0x1b4>
    427e:	fe 01       	movw	r30, r28
    4280:	e9 5e       	subi	r30, 0xE9	; 233
    4282:	fd 4f       	sbci	r31, 0xFD	; 253
    4284:	88 ec       	ldi	r24, 0xC8	; 200
    4286:	90 e0       	ldi	r25, 0x00	; 0
    4288:	91 83       	std	Z+1, r25	; 0x01
    428a:	80 83       	st	Z, r24
    428c:	fe 01       	movw	r30, r28
    428e:	e9 5e       	subi	r30, 0xE9	; 233
    4290:	fd 4f       	sbci	r31, 0xFD	; 253
    4292:	80 81       	ld	r24, Z
    4294:	91 81       	ldd	r25, Z+1	; 0x01
    4296:	01 97       	sbiw	r24, 0x01	; 1
    4298:	f1 f7       	brne	.-4      	; 0x4296 <main+0x18e>
    429a:	fe 01       	movw	r30, r28
    429c:	e9 5e       	subi	r30, 0xE9	; 233
    429e:	fd 4f       	sbci	r31, 0xFD	; 253
    42a0:	91 83       	std	Z+1, r25	; 0x01
    42a2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42a4:	de 01       	movw	r26, r28
    42a6:	a7 5e       	subi	r26, 0xE7	; 231
    42a8:	bd 4f       	sbci	r27, 0xFD	; 253
    42aa:	fe 01       	movw	r30, r28
    42ac:	e7 5e       	subi	r30, 0xE7	; 231
    42ae:	fd 4f       	sbci	r31, 0xFD	; 253
    42b0:	80 81       	ld	r24, Z
    42b2:	91 81       	ldd	r25, Z+1	; 0x01
    42b4:	01 97       	sbiw	r24, 0x01	; 1
    42b6:	11 96       	adiw	r26, 0x01	; 1
    42b8:	9c 93       	st	X, r25
    42ba:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42bc:	fe 01       	movw	r30, r28
    42be:	e7 5e       	subi	r30, 0xE7	; 231
    42c0:	fd 4f       	sbci	r31, 0xFD	; 253
    42c2:	80 81       	ld	r24, Z
    42c4:	91 81       	ldd	r25, Z+1	; 0x01
    42c6:	00 97       	sbiw	r24, 0x00	; 0
    42c8:	d1 f6       	brne	.-76     	; 0x427e <main+0x176>
    42ca:	27 c0       	rjmp	.+78     	; 0x431a <main+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42cc:	8e 01       	movw	r16, r28
    42ce:	07 5e       	subi	r16, 0xE7	; 231
    42d0:	1d 4f       	sbci	r17, 0xFD	; 253
    42d2:	fe 01       	movw	r30, r28
    42d4:	e5 5e       	subi	r30, 0xE5	; 229
    42d6:	fd 4f       	sbci	r31, 0xFD	; 253
    42d8:	60 81       	ld	r22, Z
    42da:	71 81       	ldd	r23, Z+1	; 0x01
    42dc:	82 81       	ldd	r24, Z+2	; 0x02
    42de:	93 81       	ldd	r25, Z+3	; 0x03
    42e0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    42e4:	dc 01       	movw	r26, r24
    42e6:	cb 01       	movw	r24, r22
    42e8:	f8 01       	movw	r30, r16
    42ea:	91 83       	std	Z+1, r25	; 0x01
    42ec:	80 83       	st	Z, r24
    42ee:	de 01       	movw	r26, r28
    42f0:	ab 5e       	subi	r26, 0xEB	; 235
    42f2:	bd 4f       	sbci	r27, 0xFD	; 253
    42f4:	fe 01       	movw	r30, r28
    42f6:	e7 5e       	subi	r30, 0xE7	; 231
    42f8:	fd 4f       	sbci	r31, 0xFD	; 253
    42fa:	80 81       	ld	r24, Z
    42fc:	91 81       	ldd	r25, Z+1	; 0x01
    42fe:	8d 93       	st	X+, r24
    4300:	9c 93       	st	X, r25
    4302:	fe 01       	movw	r30, r28
    4304:	eb 5e       	subi	r30, 0xEB	; 235
    4306:	fd 4f       	sbci	r31, 0xFD	; 253
    4308:	80 81       	ld	r24, Z
    430a:	91 81       	ldd	r25, Z+1	; 0x01
    430c:	01 97       	sbiw	r24, 0x01	; 1
    430e:	f1 f7       	brne	.-4      	; 0x430c <main+0x204>
    4310:	fe 01       	movw	r30, r28
    4312:	eb 5e       	subi	r30, 0xEB	; 235
    4314:	fd 4f       	sbci	r31, 0xFD	; 253
    4316:	91 83       	std	Z+1, r25	; 0x01
    4318:	80 83       	st	Z, r24
		_delay_ms(2000);
		LCD_Clear();
    431a:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
		LCD_Goto(1,1);
    431e:	81 e0       	ldi	r24, 0x01	; 1
    4320:	61 e0       	ldi	r22, 0x01	; 1
    4322:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteString("Loading");
    4326:	83 e6       	ldi	r24, 0x63	; 99
    4328:	90 e0       	ldi	r25, 0x00	; 0
    432a:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    432e:	fe 01       	movw	r30, r28
    4330:	ef 5e       	subi	r30, 0xEF	; 239
    4332:	fd 4f       	sbci	r31, 0xFD	; 253
    4334:	80 e0       	ldi	r24, 0x00	; 0
    4336:	90 e0       	ldi	r25, 0x00	; 0
    4338:	aa ef       	ldi	r26, 0xFA	; 250
    433a:	b3 e4       	ldi	r27, 0x43	; 67
    433c:	80 83       	st	Z, r24
    433e:	91 83       	std	Z+1, r25	; 0x01
    4340:	a2 83       	std	Z+2, r26	; 0x02
    4342:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4344:	8e 01       	movw	r16, r28
    4346:	03 5f       	subi	r16, 0xF3	; 243
    4348:	1d 4f       	sbci	r17, 0xFD	; 253
    434a:	fe 01       	movw	r30, r28
    434c:	ef 5e       	subi	r30, 0xEF	; 239
    434e:	fd 4f       	sbci	r31, 0xFD	; 253
    4350:	60 81       	ld	r22, Z
    4352:	71 81       	ldd	r23, Z+1	; 0x01
    4354:	82 81       	ldd	r24, Z+2	; 0x02
    4356:	93 81       	ldd	r25, Z+3	; 0x03
    4358:	20 e0       	ldi	r18, 0x00	; 0
    435a:	30 e0       	ldi	r19, 0x00	; 0
    435c:	4a ef       	ldi	r20, 0xFA	; 250
    435e:	54 e4       	ldi	r21, 0x44	; 68
    4360:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4364:	dc 01       	movw	r26, r24
    4366:	cb 01       	movw	r24, r22
    4368:	f8 01       	movw	r30, r16
    436a:	80 83       	st	Z, r24
    436c:	91 83       	std	Z+1, r25	; 0x01
    436e:	a2 83       	std	Z+2, r26	; 0x02
    4370:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4372:	fe 01       	movw	r30, r28
    4374:	e3 5f       	subi	r30, 0xF3	; 243
    4376:	fd 4f       	sbci	r31, 0xFD	; 253
    4378:	60 81       	ld	r22, Z
    437a:	71 81       	ldd	r23, Z+1	; 0x01
    437c:	82 81       	ldd	r24, Z+2	; 0x02
    437e:	93 81       	ldd	r25, Z+3	; 0x03
    4380:	20 e0       	ldi	r18, 0x00	; 0
    4382:	30 e0       	ldi	r19, 0x00	; 0
    4384:	40 e8       	ldi	r20, 0x80	; 128
    4386:	5f e3       	ldi	r21, 0x3F	; 63
    4388:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    438c:	88 23       	and	r24, r24
    438e:	44 f4       	brge	.+16     	; 0x43a0 <main+0x298>
		__ticks = 1;
    4390:	fe 01       	movw	r30, r28
    4392:	e5 5f       	subi	r30, 0xF5	; 245
    4394:	fd 4f       	sbci	r31, 0xFD	; 253
    4396:	81 e0       	ldi	r24, 0x01	; 1
    4398:	90 e0       	ldi	r25, 0x00	; 0
    439a:	91 83       	std	Z+1, r25	; 0x01
    439c:	80 83       	st	Z, r24
    439e:	64 c0       	rjmp	.+200    	; 0x4468 <main+0x360>
	else if (__tmp > 65535)
    43a0:	fe 01       	movw	r30, r28
    43a2:	e3 5f       	subi	r30, 0xF3	; 243
    43a4:	fd 4f       	sbci	r31, 0xFD	; 253
    43a6:	60 81       	ld	r22, Z
    43a8:	71 81       	ldd	r23, Z+1	; 0x01
    43aa:	82 81       	ldd	r24, Z+2	; 0x02
    43ac:	93 81       	ldd	r25, Z+3	; 0x03
    43ae:	20 e0       	ldi	r18, 0x00	; 0
    43b0:	3f ef       	ldi	r19, 0xFF	; 255
    43b2:	4f e7       	ldi	r20, 0x7F	; 127
    43b4:	57 e4       	ldi	r21, 0x47	; 71
    43b6:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    43ba:	18 16       	cp	r1, r24
    43bc:	0c f0       	brlt	.+2      	; 0x43c0 <main+0x2b8>
    43be:	43 c0       	rjmp	.+134    	; 0x4446 <main+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43c0:	fe 01       	movw	r30, r28
    43c2:	ef 5e       	subi	r30, 0xEF	; 239
    43c4:	fd 4f       	sbci	r31, 0xFD	; 253
    43c6:	60 81       	ld	r22, Z
    43c8:	71 81       	ldd	r23, Z+1	; 0x01
    43ca:	82 81       	ldd	r24, Z+2	; 0x02
    43cc:	93 81       	ldd	r25, Z+3	; 0x03
    43ce:	20 e0       	ldi	r18, 0x00	; 0
    43d0:	30 e0       	ldi	r19, 0x00	; 0
    43d2:	40 e2       	ldi	r20, 0x20	; 32
    43d4:	51 e4       	ldi	r21, 0x41	; 65
    43d6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    43da:	dc 01       	movw	r26, r24
    43dc:	cb 01       	movw	r24, r22
    43de:	8e 01       	movw	r16, r28
    43e0:	05 5f       	subi	r16, 0xF5	; 245
    43e2:	1d 4f       	sbci	r17, 0xFD	; 253
    43e4:	bc 01       	movw	r22, r24
    43e6:	cd 01       	movw	r24, r26
    43e8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    43ec:	dc 01       	movw	r26, r24
    43ee:	cb 01       	movw	r24, r22
    43f0:	f8 01       	movw	r30, r16
    43f2:	91 83       	std	Z+1, r25	; 0x01
    43f4:	80 83       	st	Z, r24
    43f6:	1f c0       	rjmp	.+62     	; 0x4436 <main+0x32e>
    43f8:	fe 01       	movw	r30, r28
    43fa:	e7 5f       	subi	r30, 0xF7	; 247
    43fc:	fd 4f       	sbci	r31, 0xFD	; 253
    43fe:	88 ec       	ldi	r24, 0xC8	; 200
    4400:	90 e0       	ldi	r25, 0x00	; 0
    4402:	91 83       	std	Z+1, r25	; 0x01
    4404:	80 83       	st	Z, r24
    4406:	fe 01       	movw	r30, r28
    4408:	e7 5f       	subi	r30, 0xF7	; 247
    440a:	fd 4f       	sbci	r31, 0xFD	; 253
    440c:	80 81       	ld	r24, Z
    440e:	91 81       	ldd	r25, Z+1	; 0x01
    4410:	01 97       	sbiw	r24, 0x01	; 1
    4412:	f1 f7       	brne	.-4      	; 0x4410 <main+0x308>
    4414:	fe 01       	movw	r30, r28
    4416:	e7 5f       	subi	r30, 0xF7	; 247
    4418:	fd 4f       	sbci	r31, 0xFD	; 253
    441a:	91 83       	std	Z+1, r25	; 0x01
    441c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    441e:	de 01       	movw	r26, r28
    4420:	a5 5f       	subi	r26, 0xF5	; 245
    4422:	bd 4f       	sbci	r27, 0xFD	; 253
    4424:	fe 01       	movw	r30, r28
    4426:	e5 5f       	subi	r30, 0xF5	; 245
    4428:	fd 4f       	sbci	r31, 0xFD	; 253
    442a:	80 81       	ld	r24, Z
    442c:	91 81       	ldd	r25, Z+1	; 0x01
    442e:	01 97       	sbiw	r24, 0x01	; 1
    4430:	11 96       	adiw	r26, 0x01	; 1
    4432:	9c 93       	st	X, r25
    4434:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4436:	fe 01       	movw	r30, r28
    4438:	e5 5f       	subi	r30, 0xF5	; 245
    443a:	fd 4f       	sbci	r31, 0xFD	; 253
    443c:	80 81       	ld	r24, Z
    443e:	91 81       	ldd	r25, Z+1	; 0x01
    4440:	00 97       	sbiw	r24, 0x00	; 0
    4442:	d1 f6       	brne	.-76     	; 0x43f8 <main+0x2f0>
    4444:	27 c0       	rjmp	.+78     	; 0x4494 <main+0x38c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4446:	8e 01       	movw	r16, r28
    4448:	05 5f       	subi	r16, 0xF5	; 245
    444a:	1d 4f       	sbci	r17, 0xFD	; 253
    444c:	fe 01       	movw	r30, r28
    444e:	e3 5f       	subi	r30, 0xF3	; 243
    4450:	fd 4f       	sbci	r31, 0xFD	; 253
    4452:	60 81       	ld	r22, Z
    4454:	71 81       	ldd	r23, Z+1	; 0x01
    4456:	82 81       	ldd	r24, Z+2	; 0x02
    4458:	93 81       	ldd	r25, Z+3	; 0x03
    445a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    445e:	dc 01       	movw	r26, r24
    4460:	cb 01       	movw	r24, r22
    4462:	f8 01       	movw	r30, r16
    4464:	91 83       	std	Z+1, r25	; 0x01
    4466:	80 83       	st	Z, r24
    4468:	de 01       	movw	r26, r28
    446a:	a9 5f       	subi	r26, 0xF9	; 249
    446c:	bd 4f       	sbci	r27, 0xFD	; 253
    446e:	fe 01       	movw	r30, r28
    4470:	e5 5f       	subi	r30, 0xF5	; 245
    4472:	fd 4f       	sbci	r31, 0xFD	; 253
    4474:	80 81       	ld	r24, Z
    4476:	91 81       	ldd	r25, Z+1	; 0x01
    4478:	8d 93       	st	X+, r24
    447a:	9c 93       	st	X, r25
    447c:	fe 01       	movw	r30, r28
    447e:	e9 5f       	subi	r30, 0xF9	; 249
    4480:	fd 4f       	sbci	r31, 0xFD	; 253
    4482:	80 81       	ld	r24, Z
    4484:	91 81       	ldd	r25, Z+1	; 0x01
    4486:	01 97       	sbiw	r24, 0x01	; 1
    4488:	f1 f7       	brne	.-4      	; 0x4486 <main+0x37e>
    448a:	fe 01       	movw	r30, r28
    448c:	e9 5f       	subi	r30, 0xF9	; 249
    448e:	fd 4f       	sbci	r31, 0xFD	; 253
    4490:	91 83       	std	Z+1, r25	; 0x01
    4492:	80 83       	st	Z, r24
		_delay_ms(500);
		LCD_Goto(1,8);
    4494:	81 e0       	ldi	r24, 0x01	; 1
    4496:	68 e0       	ldi	r22, 0x08	; 8
    4498:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteString("..");
    449c:	8b e6       	ldi	r24, 0x6B	; 107
    449e:	90 e0       	ldi	r25, 0x00	; 0
    44a0:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    44a4:	fe 01       	movw	r30, r28
    44a6:	ed 5f       	subi	r30, 0xFD	; 253
    44a8:	fd 4f       	sbci	r31, 0xFD	; 253
    44aa:	80 e0       	ldi	r24, 0x00	; 0
    44ac:	90 e0       	ldi	r25, 0x00	; 0
    44ae:	aa ef       	ldi	r26, 0xFA	; 250
    44b0:	b3 e4       	ldi	r27, 0x43	; 67
    44b2:	80 83       	st	Z, r24
    44b4:	91 83       	std	Z+1, r25	; 0x01
    44b6:	a2 83       	std	Z+2, r26	; 0x02
    44b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44ba:	8e 01       	movw	r16, r28
    44bc:	01 50       	subi	r16, 0x01	; 1
    44be:	1e 4f       	sbci	r17, 0xFE	; 254
    44c0:	fe 01       	movw	r30, r28
    44c2:	ed 5f       	subi	r30, 0xFD	; 253
    44c4:	fd 4f       	sbci	r31, 0xFD	; 253
    44c6:	60 81       	ld	r22, Z
    44c8:	71 81       	ldd	r23, Z+1	; 0x01
    44ca:	82 81       	ldd	r24, Z+2	; 0x02
    44cc:	93 81       	ldd	r25, Z+3	; 0x03
    44ce:	20 e0       	ldi	r18, 0x00	; 0
    44d0:	30 e0       	ldi	r19, 0x00	; 0
    44d2:	4a ef       	ldi	r20, 0xFA	; 250
    44d4:	54 e4       	ldi	r21, 0x44	; 68
    44d6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    44da:	dc 01       	movw	r26, r24
    44dc:	cb 01       	movw	r24, r22
    44de:	f8 01       	movw	r30, r16
    44e0:	80 83       	st	Z, r24
    44e2:	91 83       	std	Z+1, r25	; 0x01
    44e4:	a2 83       	std	Z+2, r26	; 0x02
    44e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    44e8:	fe 01       	movw	r30, r28
    44ea:	e1 50       	subi	r30, 0x01	; 1
    44ec:	fe 4f       	sbci	r31, 0xFE	; 254
    44ee:	60 81       	ld	r22, Z
    44f0:	71 81       	ldd	r23, Z+1	; 0x01
    44f2:	82 81       	ldd	r24, Z+2	; 0x02
    44f4:	93 81       	ldd	r25, Z+3	; 0x03
    44f6:	20 e0       	ldi	r18, 0x00	; 0
    44f8:	30 e0       	ldi	r19, 0x00	; 0
    44fa:	40 e8       	ldi	r20, 0x80	; 128
    44fc:	5f e3       	ldi	r21, 0x3F	; 63
    44fe:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4502:	88 23       	and	r24, r24
    4504:	44 f4       	brge	.+16     	; 0x4516 <main+0x40e>
		__ticks = 1;
    4506:	fe 01       	movw	r30, r28
    4508:	e3 50       	subi	r30, 0x03	; 3
    450a:	fe 4f       	sbci	r31, 0xFE	; 254
    450c:	81 e0       	ldi	r24, 0x01	; 1
    450e:	90 e0       	ldi	r25, 0x00	; 0
    4510:	91 83       	std	Z+1, r25	; 0x01
    4512:	80 83       	st	Z, r24
    4514:	64 c0       	rjmp	.+200    	; 0x45de <main+0x4d6>
	else if (__tmp > 65535)
    4516:	fe 01       	movw	r30, r28
    4518:	e1 50       	subi	r30, 0x01	; 1
    451a:	fe 4f       	sbci	r31, 0xFE	; 254
    451c:	60 81       	ld	r22, Z
    451e:	71 81       	ldd	r23, Z+1	; 0x01
    4520:	82 81       	ldd	r24, Z+2	; 0x02
    4522:	93 81       	ldd	r25, Z+3	; 0x03
    4524:	20 e0       	ldi	r18, 0x00	; 0
    4526:	3f ef       	ldi	r19, 0xFF	; 255
    4528:	4f e7       	ldi	r20, 0x7F	; 127
    452a:	57 e4       	ldi	r21, 0x47	; 71
    452c:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4530:	18 16       	cp	r1, r24
    4532:	0c f0       	brlt	.+2      	; 0x4536 <main+0x42e>
    4534:	43 c0       	rjmp	.+134    	; 0x45bc <main+0x4b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4536:	fe 01       	movw	r30, r28
    4538:	ed 5f       	subi	r30, 0xFD	; 253
    453a:	fd 4f       	sbci	r31, 0xFD	; 253
    453c:	60 81       	ld	r22, Z
    453e:	71 81       	ldd	r23, Z+1	; 0x01
    4540:	82 81       	ldd	r24, Z+2	; 0x02
    4542:	93 81       	ldd	r25, Z+3	; 0x03
    4544:	20 e0       	ldi	r18, 0x00	; 0
    4546:	30 e0       	ldi	r19, 0x00	; 0
    4548:	40 e2       	ldi	r20, 0x20	; 32
    454a:	51 e4       	ldi	r21, 0x41	; 65
    454c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4550:	dc 01       	movw	r26, r24
    4552:	cb 01       	movw	r24, r22
    4554:	8e 01       	movw	r16, r28
    4556:	03 50       	subi	r16, 0x03	; 3
    4558:	1e 4f       	sbci	r17, 0xFE	; 254
    455a:	bc 01       	movw	r22, r24
    455c:	cd 01       	movw	r24, r26
    455e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4562:	dc 01       	movw	r26, r24
    4564:	cb 01       	movw	r24, r22
    4566:	f8 01       	movw	r30, r16
    4568:	91 83       	std	Z+1, r25	; 0x01
    456a:	80 83       	st	Z, r24
    456c:	1f c0       	rjmp	.+62     	; 0x45ac <main+0x4a4>
    456e:	fe 01       	movw	r30, r28
    4570:	e5 50       	subi	r30, 0x05	; 5
    4572:	fe 4f       	sbci	r31, 0xFE	; 254
    4574:	88 ec       	ldi	r24, 0xC8	; 200
    4576:	90 e0       	ldi	r25, 0x00	; 0
    4578:	91 83       	std	Z+1, r25	; 0x01
    457a:	80 83       	st	Z, r24
    457c:	fe 01       	movw	r30, r28
    457e:	e5 50       	subi	r30, 0x05	; 5
    4580:	fe 4f       	sbci	r31, 0xFE	; 254
    4582:	80 81       	ld	r24, Z
    4584:	91 81       	ldd	r25, Z+1	; 0x01
    4586:	01 97       	sbiw	r24, 0x01	; 1
    4588:	f1 f7       	brne	.-4      	; 0x4586 <main+0x47e>
    458a:	fe 01       	movw	r30, r28
    458c:	e5 50       	subi	r30, 0x05	; 5
    458e:	fe 4f       	sbci	r31, 0xFE	; 254
    4590:	91 83       	std	Z+1, r25	; 0x01
    4592:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4594:	de 01       	movw	r26, r28
    4596:	a3 50       	subi	r26, 0x03	; 3
    4598:	be 4f       	sbci	r27, 0xFE	; 254
    459a:	fe 01       	movw	r30, r28
    459c:	e3 50       	subi	r30, 0x03	; 3
    459e:	fe 4f       	sbci	r31, 0xFE	; 254
    45a0:	80 81       	ld	r24, Z
    45a2:	91 81       	ldd	r25, Z+1	; 0x01
    45a4:	01 97       	sbiw	r24, 0x01	; 1
    45a6:	11 96       	adiw	r26, 0x01	; 1
    45a8:	9c 93       	st	X, r25
    45aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    45ac:	fe 01       	movw	r30, r28
    45ae:	e3 50       	subi	r30, 0x03	; 3
    45b0:	fe 4f       	sbci	r31, 0xFE	; 254
    45b2:	80 81       	ld	r24, Z
    45b4:	91 81       	ldd	r25, Z+1	; 0x01
    45b6:	00 97       	sbiw	r24, 0x00	; 0
    45b8:	d1 f6       	brne	.-76     	; 0x456e <main+0x466>
    45ba:	27 c0       	rjmp	.+78     	; 0x460a <main+0x502>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45bc:	8e 01       	movw	r16, r28
    45be:	03 50       	subi	r16, 0x03	; 3
    45c0:	1e 4f       	sbci	r17, 0xFE	; 254
    45c2:	fe 01       	movw	r30, r28
    45c4:	e1 50       	subi	r30, 0x01	; 1
    45c6:	fe 4f       	sbci	r31, 0xFE	; 254
    45c8:	60 81       	ld	r22, Z
    45ca:	71 81       	ldd	r23, Z+1	; 0x01
    45cc:	82 81       	ldd	r24, Z+2	; 0x02
    45ce:	93 81       	ldd	r25, Z+3	; 0x03
    45d0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    45d4:	dc 01       	movw	r26, r24
    45d6:	cb 01       	movw	r24, r22
    45d8:	f8 01       	movw	r30, r16
    45da:	91 83       	std	Z+1, r25	; 0x01
    45dc:	80 83       	st	Z, r24
    45de:	de 01       	movw	r26, r28
    45e0:	a7 50       	subi	r26, 0x07	; 7
    45e2:	be 4f       	sbci	r27, 0xFE	; 254
    45e4:	fe 01       	movw	r30, r28
    45e6:	e3 50       	subi	r30, 0x03	; 3
    45e8:	fe 4f       	sbci	r31, 0xFE	; 254
    45ea:	80 81       	ld	r24, Z
    45ec:	91 81       	ldd	r25, Z+1	; 0x01
    45ee:	8d 93       	st	X+, r24
    45f0:	9c 93       	st	X, r25
    45f2:	fe 01       	movw	r30, r28
    45f4:	e7 50       	subi	r30, 0x07	; 7
    45f6:	fe 4f       	sbci	r31, 0xFE	; 254
    45f8:	80 81       	ld	r24, Z
    45fa:	91 81       	ldd	r25, Z+1	; 0x01
    45fc:	01 97       	sbiw	r24, 0x01	; 1
    45fe:	f1 f7       	brne	.-4      	; 0x45fc <main+0x4f4>
    4600:	fe 01       	movw	r30, r28
    4602:	e7 50       	subi	r30, 0x07	; 7
    4604:	fe 4f       	sbci	r31, 0xFE	; 254
    4606:	91 83       	std	Z+1, r25	; 0x01
    4608:	80 83       	st	Z, r24
		_delay_ms(500);
		LCD_Goto(1,10);
    460a:	81 e0       	ldi	r24, 0x01	; 1
    460c:	6a e0       	ldi	r22, 0x0A	; 10
    460e:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteString("..");
    4612:	8b e6       	ldi	r24, 0x6B	; 107
    4614:	90 e0       	ldi	r25, 0x00	; 0
    4616:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    461a:	fe 01       	movw	r30, r28
    461c:	eb 50       	subi	r30, 0x0B	; 11
    461e:	fe 4f       	sbci	r31, 0xFE	; 254
    4620:	80 e0       	ldi	r24, 0x00	; 0
    4622:	90 e0       	ldi	r25, 0x00	; 0
    4624:	aa ef       	ldi	r26, 0xFA	; 250
    4626:	b3 e4       	ldi	r27, 0x43	; 67
    4628:	80 83       	st	Z, r24
    462a:	91 83       	std	Z+1, r25	; 0x01
    462c:	a2 83       	std	Z+2, r26	; 0x02
    462e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4630:	8e 01       	movw	r16, r28
    4632:	0f 50       	subi	r16, 0x0F	; 15
    4634:	1e 4f       	sbci	r17, 0xFE	; 254
    4636:	fe 01       	movw	r30, r28
    4638:	eb 50       	subi	r30, 0x0B	; 11
    463a:	fe 4f       	sbci	r31, 0xFE	; 254
    463c:	60 81       	ld	r22, Z
    463e:	71 81       	ldd	r23, Z+1	; 0x01
    4640:	82 81       	ldd	r24, Z+2	; 0x02
    4642:	93 81       	ldd	r25, Z+3	; 0x03
    4644:	20 e0       	ldi	r18, 0x00	; 0
    4646:	30 e0       	ldi	r19, 0x00	; 0
    4648:	4a ef       	ldi	r20, 0xFA	; 250
    464a:	54 e4       	ldi	r21, 0x44	; 68
    464c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4650:	dc 01       	movw	r26, r24
    4652:	cb 01       	movw	r24, r22
    4654:	f8 01       	movw	r30, r16
    4656:	80 83       	st	Z, r24
    4658:	91 83       	std	Z+1, r25	; 0x01
    465a:	a2 83       	std	Z+2, r26	; 0x02
    465c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    465e:	fe 01       	movw	r30, r28
    4660:	ef 50       	subi	r30, 0x0F	; 15
    4662:	fe 4f       	sbci	r31, 0xFE	; 254
    4664:	60 81       	ld	r22, Z
    4666:	71 81       	ldd	r23, Z+1	; 0x01
    4668:	82 81       	ldd	r24, Z+2	; 0x02
    466a:	93 81       	ldd	r25, Z+3	; 0x03
    466c:	20 e0       	ldi	r18, 0x00	; 0
    466e:	30 e0       	ldi	r19, 0x00	; 0
    4670:	40 e8       	ldi	r20, 0x80	; 128
    4672:	5f e3       	ldi	r21, 0x3F	; 63
    4674:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4678:	88 23       	and	r24, r24
    467a:	44 f4       	brge	.+16     	; 0x468c <main+0x584>
		__ticks = 1;
    467c:	fe 01       	movw	r30, r28
    467e:	e1 51       	subi	r30, 0x11	; 17
    4680:	fe 4f       	sbci	r31, 0xFE	; 254
    4682:	81 e0       	ldi	r24, 0x01	; 1
    4684:	90 e0       	ldi	r25, 0x00	; 0
    4686:	91 83       	std	Z+1, r25	; 0x01
    4688:	80 83       	st	Z, r24
    468a:	64 c0       	rjmp	.+200    	; 0x4754 <main+0x64c>
	else if (__tmp > 65535)
    468c:	fe 01       	movw	r30, r28
    468e:	ef 50       	subi	r30, 0x0F	; 15
    4690:	fe 4f       	sbci	r31, 0xFE	; 254
    4692:	60 81       	ld	r22, Z
    4694:	71 81       	ldd	r23, Z+1	; 0x01
    4696:	82 81       	ldd	r24, Z+2	; 0x02
    4698:	93 81       	ldd	r25, Z+3	; 0x03
    469a:	20 e0       	ldi	r18, 0x00	; 0
    469c:	3f ef       	ldi	r19, 0xFF	; 255
    469e:	4f e7       	ldi	r20, 0x7F	; 127
    46a0:	57 e4       	ldi	r21, 0x47	; 71
    46a2:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    46a6:	18 16       	cp	r1, r24
    46a8:	0c f0       	brlt	.+2      	; 0x46ac <main+0x5a4>
    46aa:	43 c0       	rjmp	.+134    	; 0x4732 <main+0x62a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46ac:	fe 01       	movw	r30, r28
    46ae:	eb 50       	subi	r30, 0x0B	; 11
    46b0:	fe 4f       	sbci	r31, 0xFE	; 254
    46b2:	60 81       	ld	r22, Z
    46b4:	71 81       	ldd	r23, Z+1	; 0x01
    46b6:	82 81       	ldd	r24, Z+2	; 0x02
    46b8:	93 81       	ldd	r25, Z+3	; 0x03
    46ba:	20 e0       	ldi	r18, 0x00	; 0
    46bc:	30 e0       	ldi	r19, 0x00	; 0
    46be:	40 e2       	ldi	r20, 0x20	; 32
    46c0:	51 e4       	ldi	r21, 0x41	; 65
    46c2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    46c6:	dc 01       	movw	r26, r24
    46c8:	cb 01       	movw	r24, r22
    46ca:	8e 01       	movw	r16, r28
    46cc:	01 51       	subi	r16, 0x11	; 17
    46ce:	1e 4f       	sbci	r17, 0xFE	; 254
    46d0:	bc 01       	movw	r22, r24
    46d2:	cd 01       	movw	r24, r26
    46d4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    46d8:	dc 01       	movw	r26, r24
    46da:	cb 01       	movw	r24, r22
    46dc:	f8 01       	movw	r30, r16
    46de:	91 83       	std	Z+1, r25	; 0x01
    46e0:	80 83       	st	Z, r24
    46e2:	1f c0       	rjmp	.+62     	; 0x4722 <main+0x61a>
    46e4:	fe 01       	movw	r30, r28
    46e6:	e3 51       	subi	r30, 0x13	; 19
    46e8:	fe 4f       	sbci	r31, 0xFE	; 254
    46ea:	88 ec       	ldi	r24, 0xC8	; 200
    46ec:	90 e0       	ldi	r25, 0x00	; 0
    46ee:	91 83       	std	Z+1, r25	; 0x01
    46f0:	80 83       	st	Z, r24
    46f2:	fe 01       	movw	r30, r28
    46f4:	e3 51       	subi	r30, 0x13	; 19
    46f6:	fe 4f       	sbci	r31, 0xFE	; 254
    46f8:	80 81       	ld	r24, Z
    46fa:	91 81       	ldd	r25, Z+1	; 0x01
    46fc:	01 97       	sbiw	r24, 0x01	; 1
    46fe:	f1 f7       	brne	.-4      	; 0x46fc <main+0x5f4>
    4700:	fe 01       	movw	r30, r28
    4702:	e3 51       	subi	r30, 0x13	; 19
    4704:	fe 4f       	sbci	r31, 0xFE	; 254
    4706:	91 83       	std	Z+1, r25	; 0x01
    4708:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    470a:	de 01       	movw	r26, r28
    470c:	a1 51       	subi	r26, 0x11	; 17
    470e:	be 4f       	sbci	r27, 0xFE	; 254
    4710:	fe 01       	movw	r30, r28
    4712:	e1 51       	subi	r30, 0x11	; 17
    4714:	fe 4f       	sbci	r31, 0xFE	; 254
    4716:	80 81       	ld	r24, Z
    4718:	91 81       	ldd	r25, Z+1	; 0x01
    471a:	01 97       	sbiw	r24, 0x01	; 1
    471c:	11 96       	adiw	r26, 0x01	; 1
    471e:	9c 93       	st	X, r25
    4720:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4722:	fe 01       	movw	r30, r28
    4724:	e1 51       	subi	r30, 0x11	; 17
    4726:	fe 4f       	sbci	r31, 0xFE	; 254
    4728:	80 81       	ld	r24, Z
    472a:	91 81       	ldd	r25, Z+1	; 0x01
    472c:	00 97       	sbiw	r24, 0x00	; 0
    472e:	d1 f6       	brne	.-76     	; 0x46e4 <main+0x5dc>
    4730:	27 c0       	rjmp	.+78     	; 0x4780 <main+0x678>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4732:	8e 01       	movw	r16, r28
    4734:	01 51       	subi	r16, 0x11	; 17
    4736:	1e 4f       	sbci	r17, 0xFE	; 254
    4738:	fe 01       	movw	r30, r28
    473a:	ef 50       	subi	r30, 0x0F	; 15
    473c:	fe 4f       	sbci	r31, 0xFE	; 254
    473e:	60 81       	ld	r22, Z
    4740:	71 81       	ldd	r23, Z+1	; 0x01
    4742:	82 81       	ldd	r24, Z+2	; 0x02
    4744:	93 81       	ldd	r25, Z+3	; 0x03
    4746:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    474a:	dc 01       	movw	r26, r24
    474c:	cb 01       	movw	r24, r22
    474e:	f8 01       	movw	r30, r16
    4750:	91 83       	std	Z+1, r25	; 0x01
    4752:	80 83       	st	Z, r24
    4754:	de 01       	movw	r26, r28
    4756:	a5 51       	subi	r26, 0x15	; 21
    4758:	be 4f       	sbci	r27, 0xFE	; 254
    475a:	fe 01       	movw	r30, r28
    475c:	e1 51       	subi	r30, 0x11	; 17
    475e:	fe 4f       	sbci	r31, 0xFE	; 254
    4760:	80 81       	ld	r24, Z
    4762:	91 81       	ldd	r25, Z+1	; 0x01
    4764:	8d 93       	st	X+, r24
    4766:	9c 93       	st	X, r25
    4768:	fe 01       	movw	r30, r28
    476a:	e5 51       	subi	r30, 0x15	; 21
    476c:	fe 4f       	sbci	r31, 0xFE	; 254
    476e:	80 81       	ld	r24, Z
    4770:	91 81       	ldd	r25, Z+1	; 0x01
    4772:	01 97       	sbiw	r24, 0x01	; 1
    4774:	f1 f7       	brne	.-4      	; 0x4772 <main+0x66a>
    4776:	fe 01       	movw	r30, r28
    4778:	e5 51       	subi	r30, 0x15	; 21
    477a:	fe 4f       	sbci	r31, 0xFE	; 254
    477c:	91 83       	std	Z+1, r25	; 0x01
    477e:	80 83       	st	Z, r24
		_delay_ms(500);
		LCD_Goto(1,12);
    4780:	81 e0       	ldi	r24, 0x01	; 1
    4782:	6c e0       	ldi	r22, 0x0C	; 12
    4784:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteString("..");
    4788:	8b e6       	ldi	r24, 0x6B	; 107
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    4790:	fe 01       	movw	r30, r28
    4792:	e9 51       	subi	r30, 0x19	; 25
    4794:	fe 4f       	sbci	r31, 0xFE	; 254
    4796:	80 e0       	ldi	r24, 0x00	; 0
    4798:	90 e0       	ldi	r25, 0x00	; 0
    479a:	aa e7       	ldi	r26, 0x7A	; 122
    479c:	b4 e4       	ldi	r27, 0x44	; 68
    479e:	80 83       	st	Z, r24
    47a0:	91 83       	std	Z+1, r25	; 0x01
    47a2:	a2 83       	std	Z+2, r26	; 0x02
    47a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47a6:	8e 01       	movw	r16, r28
    47a8:	0d 51       	subi	r16, 0x1D	; 29
    47aa:	1e 4f       	sbci	r17, 0xFE	; 254
    47ac:	fe 01       	movw	r30, r28
    47ae:	e9 51       	subi	r30, 0x19	; 25
    47b0:	fe 4f       	sbci	r31, 0xFE	; 254
    47b2:	60 81       	ld	r22, Z
    47b4:	71 81       	ldd	r23, Z+1	; 0x01
    47b6:	82 81       	ldd	r24, Z+2	; 0x02
    47b8:	93 81       	ldd	r25, Z+3	; 0x03
    47ba:	20 e0       	ldi	r18, 0x00	; 0
    47bc:	30 e0       	ldi	r19, 0x00	; 0
    47be:	4a ef       	ldi	r20, 0xFA	; 250
    47c0:	54 e4       	ldi	r21, 0x44	; 68
    47c2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    47c6:	dc 01       	movw	r26, r24
    47c8:	cb 01       	movw	r24, r22
    47ca:	f8 01       	movw	r30, r16
    47cc:	80 83       	st	Z, r24
    47ce:	91 83       	std	Z+1, r25	; 0x01
    47d0:	a2 83       	std	Z+2, r26	; 0x02
    47d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    47d4:	fe 01       	movw	r30, r28
    47d6:	ed 51       	subi	r30, 0x1D	; 29
    47d8:	fe 4f       	sbci	r31, 0xFE	; 254
    47da:	60 81       	ld	r22, Z
    47dc:	71 81       	ldd	r23, Z+1	; 0x01
    47de:	82 81       	ldd	r24, Z+2	; 0x02
    47e0:	93 81       	ldd	r25, Z+3	; 0x03
    47e2:	20 e0       	ldi	r18, 0x00	; 0
    47e4:	30 e0       	ldi	r19, 0x00	; 0
    47e6:	40 e8       	ldi	r20, 0x80	; 128
    47e8:	5f e3       	ldi	r21, 0x3F	; 63
    47ea:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    47ee:	88 23       	and	r24, r24
    47f0:	44 f4       	brge	.+16     	; 0x4802 <main+0x6fa>
		__ticks = 1;
    47f2:	fe 01       	movw	r30, r28
    47f4:	ef 51       	subi	r30, 0x1F	; 31
    47f6:	fe 4f       	sbci	r31, 0xFE	; 254
    47f8:	81 e0       	ldi	r24, 0x01	; 1
    47fa:	90 e0       	ldi	r25, 0x00	; 0
    47fc:	91 83       	std	Z+1, r25	; 0x01
    47fe:	80 83       	st	Z, r24
    4800:	64 c0       	rjmp	.+200    	; 0x48ca <main+0x7c2>
	else if (__tmp > 65535)
    4802:	fe 01       	movw	r30, r28
    4804:	ed 51       	subi	r30, 0x1D	; 29
    4806:	fe 4f       	sbci	r31, 0xFE	; 254
    4808:	60 81       	ld	r22, Z
    480a:	71 81       	ldd	r23, Z+1	; 0x01
    480c:	82 81       	ldd	r24, Z+2	; 0x02
    480e:	93 81       	ldd	r25, Z+3	; 0x03
    4810:	20 e0       	ldi	r18, 0x00	; 0
    4812:	3f ef       	ldi	r19, 0xFF	; 255
    4814:	4f e7       	ldi	r20, 0x7F	; 127
    4816:	57 e4       	ldi	r21, 0x47	; 71
    4818:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    481c:	18 16       	cp	r1, r24
    481e:	0c f0       	brlt	.+2      	; 0x4822 <main+0x71a>
    4820:	43 c0       	rjmp	.+134    	; 0x48a8 <main+0x7a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4822:	fe 01       	movw	r30, r28
    4824:	e9 51       	subi	r30, 0x19	; 25
    4826:	fe 4f       	sbci	r31, 0xFE	; 254
    4828:	60 81       	ld	r22, Z
    482a:	71 81       	ldd	r23, Z+1	; 0x01
    482c:	82 81       	ldd	r24, Z+2	; 0x02
    482e:	93 81       	ldd	r25, Z+3	; 0x03
    4830:	20 e0       	ldi	r18, 0x00	; 0
    4832:	30 e0       	ldi	r19, 0x00	; 0
    4834:	40 e2       	ldi	r20, 0x20	; 32
    4836:	51 e4       	ldi	r21, 0x41	; 65
    4838:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    483c:	dc 01       	movw	r26, r24
    483e:	cb 01       	movw	r24, r22
    4840:	8e 01       	movw	r16, r28
    4842:	0f 51       	subi	r16, 0x1F	; 31
    4844:	1e 4f       	sbci	r17, 0xFE	; 254
    4846:	bc 01       	movw	r22, r24
    4848:	cd 01       	movw	r24, r26
    484a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    484e:	dc 01       	movw	r26, r24
    4850:	cb 01       	movw	r24, r22
    4852:	f8 01       	movw	r30, r16
    4854:	91 83       	std	Z+1, r25	; 0x01
    4856:	80 83       	st	Z, r24
    4858:	1f c0       	rjmp	.+62     	; 0x4898 <main+0x790>
    485a:	fe 01       	movw	r30, r28
    485c:	e1 52       	subi	r30, 0x21	; 33
    485e:	fe 4f       	sbci	r31, 0xFE	; 254
    4860:	88 ec       	ldi	r24, 0xC8	; 200
    4862:	90 e0       	ldi	r25, 0x00	; 0
    4864:	91 83       	std	Z+1, r25	; 0x01
    4866:	80 83       	st	Z, r24
    4868:	fe 01       	movw	r30, r28
    486a:	e1 52       	subi	r30, 0x21	; 33
    486c:	fe 4f       	sbci	r31, 0xFE	; 254
    486e:	80 81       	ld	r24, Z
    4870:	91 81       	ldd	r25, Z+1	; 0x01
    4872:	01 97       	sbiw	r24, 0x01	; 1
    4874:	f1 f7       	brne	.-4      	; 0x4872 <main+0x76a>
    4876:	fe 01       	movw	r30, r28
    4878:	e1 52       	subi	r30, 0x21	; 33
    487a:	fe 4f       	sbci	r31, 0xFE	; 254
    487c:	91 83       	std	Z+1, r25	; 0x01
    487e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4880:	de 01       	movw	r26, r28
    4882:	af 51       	subi	r26, 0x1F	; 31
    4884:	be 4f       	sbci	r27, 0xFE	; 254
    4886:	fe 01       	movw	r30, r28
    4888:	ef 51       	subi	r30, 0x1F	; 31
    488a:	fe 4f       	sbci	r31, 0xFE	; 254
    488c:	80 81       	ld	r24, Z
    488e:	91 81       	ldd	r25, Z+1	; 0x01
    4890:	01 97       	sbiw	r24, 0x01	; 1
    4892:	11 96       	adiw	r26, 0x01	; 1
    4894:	9c 93       	st	X, r25
    4896:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4898:	fe 01       	movw	r30, r28
    489a:	ef 51       	subi	r30, 0x1F	; 31
    489c:	fe 4f       	sbci	r31, 0xFE	; 254
    489e:	80 81       	ld	r24, Z
    48a0:	91 81       	ldd	r25, Z+1	; 0x01
    48a2:	00 97       	sbiw	r24, 0x00	; 0
    48a4:	d1 f6       	brne	.-76     	; 0x485a <main+0x752>
    48a6:	27 c0       	rjmp	.+78     	; 0x48f6 <main+0x7ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48a8:	8e 01       	movw	r16, r28
    48aa:	0f 51       	subi	r16, 0x1F	; 31
    48ac:	1e 4f       	sbci	r17, 0xFE	; 254
    48ae:	fe 01       	movw	r30, r28
    48b0:	ed 51       	subi	r30, 0x1D	; 29
    48b2:	fe 4f       	sbci	r31, 0xFE	; 254
    48b4:	60 81       	ld	r22, Z
    48b6:	71 81       	ldd	r23, Z+1	; 0x01
    48b8:	82 81       	ldd	r24, Z+2	; 0x02
    48ba:	93 81       	ldd	r25, Z+3	; 0x03
    48bc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    48c0:	dc 01       	movw	r26, r24
    48c2:	cb 01       	movw	r24, r22
    48c4:	f8 01       	movw	r30, r16
    48c6:	91 83       	std	Z+1, r25	; 0x01
    48c8:	80 83       	st	Z, r24
    48ca:	de 01       	movw	r26, r28
    48cc:	a3 52       	subi	r26, 0x23	; 35
    48ce:	be 4f       	sbci	r27, 0xFE	; 254
    48d0:	fe 01       	movw	r30, r28
    48d2:	ef 51       	subi	r30, 0x1F	; 31
    48d4:	fe 4f       	sbci	r31, 0xFE	; 254
    48d6:	80 81       	ld	r24, Z
    48d8:	91 81       	ldd	r25, Z+1	; 0x01
    48da:	8d 93       	st	X+, r24
    48dc:	9c 93       	st	X, r25
    48de:	fe 01       	movw	r30, r28
    48e0:	e3 52       	subi	r30, 0x23	; 35
    48e2:	fe 4f       	sbci	r31, 0xFE	; 254
    48e4:	80 81       	ld	r24, Z
    48e6:	91 81       	ldd	r25, Z+1	; 0x01
    48e8:	01 97       	sbiw	r24, 0x01	; 1
    48ea:	f1 f7       	brne	.-4      	; 0x48e8 <main+0x7e0>
    48ec:	fe 01       	movw	r30, r28
    48ee:	e3 52       	subi	r30, 0x23	; 35
    48f0:	fe 4f       	sbci	r31, 0xFE	; 254
    48f2:	91 83       	std	Z+1, r25	; 0x01
    48f4:	80 83       	st	Z, r24
		_delay_ms(1000);
		LCD_Clear();
    48f6:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    48fa:	fe 01       	movw	r30, r28
    48fc:	e7 52       	subi	r30, 0x27	; 39
    48fe:	fe 4f       	sbci	r31, 0xFE	; 254
    4900:	80 e0       	ldi	r24, 0x00	; 0
    4902:	90 e0       	ldi	r25, 0x00	; 0
    4904:	a8 ec       	ldi	r26, 0xC8	; 200
    4906:	b2 e4       	ldi	r27, 0x42	; 66
    4908:	80 83       	st	Z, r24
    490a:	91 83       	std	Z+1, r25	; 0x01
    490c:	a2 83       	std	Z+2, r26	; 0x02
    490e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4910:	8e 01       	movw	r16, r28
    4912:	0b 52       	subi	r16, 0x2B	; 43
    4914:	1e 4f       	sbci	r17, 0xFE	; 254
    4916:	fe 01       	movw	r30, r28
    4918:	e7 52       	subi	r30, 0x27	; 39
    491a:	fe 4f       	sbci	r31, 0xFE	; 254
    491c:	60 81       	ld	r22, Z
    491e:	71 81       	ldd	r23, Z+1	; 0x01
    4920:	82 81       	ldd	r24, Z+2	; 0x02
    4922:	93 81       	ldd	r25, Z+3	; 0x03
    4924:	20 e0       	ldi	r18, 0x00	; 0
    4926:	30 e0       	ldi	r19, 0x00	; 0
    4928:	4a ef       	ldi	r20, 0xFA	; 250
    492a:	54 e4       	ldi	r21, 0x44	; 68
    492c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4930:	dc 01       	movw	r26, r24
    4932:	cb 01       	movw	r24, r22
    4934:	f8 01       	movw	r30, r16
    4936:	80 83       	st	Z, r24
    4938:	91 83       	std	Z+1, r25	; 0x01
    493a:	a2 83       	std	Z+2, r26	; 0x02
    493c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    493e:	fe 01       	movw	r30, r28
    4940:	eb 52       	subi	r30, 0x2B	; 43
    4942:	fe 4f       	sbci	r31, 0xFE	; 254
    4944:	60 81       	ld	r22, Z
    4946:	71 81       	ldd	r23, Z+1	; 0x01
    4948:	82 81       	ldd	r24, Z+2	; 0x02
    494a:	93 81       	ldd	r25, Z+3	; 0x03
    494c:	20 e0       	ldi	r18, 0x00	; 0
    494e:	30 e0       	ldi	r19, 0x00	; 0
    4950:	40 e8       	ldi	r20, 0x80	; 128
    4952:	5f e3       	ldi	r21, 0x3F	; 63
    4954:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4958:	88 23       	and	r24, r24
    495a:	44 f4       	brge	.+16     	; 0x496c <main+0x864>
		__ticks = 1;
    495c:	fe 01       	movw	r30, r28
    495e:	ed 52       	subi	r30, 0x2D	; 45
    4960:	fe 4f       	sbci	r31, 0xFE	; 254
    4962:	81 e0       	ldi	r24, 0x01	; 1
    4964:	90 e0       	ldi	r25, 0x00	; 0
    4966:	91 83       	std	Z+1, r25	; 0x01
    4968:	80 83       	st	Z, r24
    496a:	64 c0       	rjmp	.+200    	; 0x4a34 <main+0x92c>
	else if (__tmp > 65535)
    496c:	fe 01       	movw	r30, r28
    496e:	eb 52       	subi	r30, 0x2B	; 43
    4970:	fe 4f       	sbci	r31, 0xFE	; 254
    4972:	60 81       	ld	r22, Z
    4974:	71 81       	ldd	r23, Z+1	; 0x01
    4976:	82 81       	ldd	r24, Z+2	; 0x02
    4978:	93 81       	ldd	r25, Z+3	; 0x03
    497a:	20 e0       	ldi	r18, 0x00	; 0
    497c:	3f ef       	ldi	r19, 0xFF	; 255
    497e:	4f e7       	ldi	r20, 0x7F	; 127
    4980:	57 e4       	ldi	r21, 0x47	; 71
    4982:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4986:	18 16       	cp	r1, r24
    4988:	0c f0       	brlt	.+2      	; 0x498c <main+0x884>
    498a:	43 c0       	rjmp	.+134    	; 0x4a12 <main+0x90a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    498c:	fe 01       	movw	r30, r28
    498e:	e7 52       	subi	r30, 0x27	; 39
    4990:	fe 4f       	sbci	r31, 0xFE	; 254
    4992:	60 81       	ld	r22, Z
    4994:	71 81       	ldd	r23, Z+1	; 0x01
    4996:	82 81       	ldd	r24, Z+2	; 0x02
    4998:	93 81       	ldd	r25, Z+3	; 0x03
    499a:	20 e0       	ldi	r18, 0x00	; 0
    499c:	30 e0       	ldi	r19, 0x00	; 0
    499e:	40 e2       	ldi	r20, 0x20	; 32
    49a0:	51 e4       	ldi	r21, 0x41	; 65
    49a2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    49a6:	dc 01       	movw	r26, r24
    49a8:	cb 01       	movw	r24, r22
    49aa:	8e 01       	movw	r16, r28
    49ac:	0d 52       	subi	r16, 0x2D	; 45
    49ae:	1e 4f       	sbci	r17, 0xFE	; 254
    49b0:	bc 01       	movw	r22, r24
    49b2:	cd 01       	movw	r24, r26
    49b4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    49b8:	dc 01       	movw	r26, r24
    49ba:	cb 01       	movw	r24, r22
    49bc:	f8 01       	movw	r30, r16
    49be:	91 83       	std	Z+1, r25	; 0x01
    49c0:	80 83       	st	Z, r24
    49c2:	1f c0       	rjmp	.+62     	; 0x4a02 <main+0x8fa>
    49c4:	fe 01       	movw	r30, r28
    49c6:	ef 52       	subi	r30, 0x2F	; 47
    49c8:	fe 4f       	sbci	r31, 0xFE	; 254
    49ca:	88 ec       	ldi	r24, 0xC8	; 200
    49cc:	90 e0       	ldi	r25, 0x00	; 0
    49ce:	91 83       	std	Z+1, r25	; 0x01
    49d0:	80 83       	st	Z, r24
    49d2:	fe 01       	movw	r30, r28
    49d4:	ef 52       	subi	r30, 0x2F	; 47
    49d6:	fe 4f       	sbci	r31, 0xFE	; 254
    49d8:	80 81       	ld	r24, Z
    49da:	91 81       	ldd	r25, Z+1	; 0x01
    49dc:	01 97       	sbiw	r24, 0x01	; 1
    49de:	f1 f7       	brne	.-4      	; 0x49dc <main+0x8d4>
    49e0:	fe 01       	movw	r30, r28
    49e2:	ef 52       	subi	r30, 0x2F	; 47
    49e4:	fe 4f       	sbci	r31, 0xFE	; 254
    49e6:	91 83       	std	Z+1, r25	; 0x01
    49e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49ea:	de 01       	movw	r26, r28
    49ec:	ad 52       	subi	r26, 0x2D	; 45
    49ee:	be 4f       	sbci	r27, 0xFE	; 254
    49f0:	fe 01       	movw	r30, r28
    49f2:	ed 52       	subi	r30, 0x2D	; 45
    49f4:	fe 4f       	sbci	r31, 0xFE	; 254
    49f6:	80 81       	ld	r24, Z
    49f8:	91 81       	ldd	r25, Z+1	; 0x01
    49fa:	01 97       	sbiw	r24, 0x01	; 1
    49fc:	11 96       	adiw	r26, 0x01	; 1
    49fe:	9c 93       	st	X, r25
    4a00:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a02:	fe 01       	movw	r30, r28
    4a04:	ed 52       	subi	r30, 0x2D	; 45
    4a06:	fe 4f       	sbci	r31, 0xFE	; 254
    4a08:	80 81       	ld	r24, Z
    4a0a:	91 81       	ldd	r25, Z+1	; 0x01
    4a0c:	00 97       	sbiw	r24, 0x00	; 0
    4a0e:	d1 f6       	brne	.-76     	; 0x49c4 <main+0x8bc>
    4a10:	27 c0       	rjmp	.+78     	; 0x4a60 <main+0x958>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a12:	8e 01       	movw	r16, r28
    4a14:	0d 52       	subi	r16, 0x2D	; 45
    4a16:	1e 4f       	sbci	r17, 0xFE	; 254
    4a18:	fe 01       	movw	r30, r28
    4a1a:	eb 52       	subi	r30, 0x2B	; 43
    4a1c:	fe 4f       	sbci	r31, 0xFE	; 254
    4a1e:	60 81       	ld	r22, Z
    4a20:	71 81       	ldd	r23, Z+1	; 0x01
    4a22:	82 81       	ldd	r24, Z+2	; 0x02
    4a24:	93 81       	ldd	r25, Z+3	; 0x03
    4a26:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4a2a:	dc 01       	movw	r26, r24
    4a2c:	cb 01       	movw	r24, r22
    4a2e:	f8 01       	movw	r30, r16
    4a30:	91 83       	std	Z+1, r25	; 0x01
    4a32:	80 83       	st	Z, r24
    4a34:	de 01       	movw	r26, r28
    4a36:	a1 53       	subi	r26, 0x31	; 49
    4a38:	be 4f       	sbci	r27, 0xFE	; 254
    4a3a:	fe 01       	movw	r30, r28
    4a3c:	ed 52       	subi	r30, 0x2D	; 45
    4a3e:	fe 4f       	sbci	r31, 0xFE	; 254
    4a40:	80 81       	ld	r24, Z
    4a42:	91 81       	ldd	r25, Z+1	; 0x01
    4a44:	8d 93       	st	X+, r24
    4a46:	9c 93       	st	X, r25
    4a48:	fe 01       	movw	r30, r28
    4a4a:	e1 53       	subi	r30, 0x31	; 49
    4a4c:	fe 4f       	sbci	r31, 0xFE	; 254
    4a4e:	80 81       	ld	r24, Z
    4a50:	91 81       	ldd	r25, Z+1	; 0x01
    4a52:	01 97       	sbiw	r24, 0x01	; 1
    4a54:	f1 f7       	brne	.-4      	; 0x4a52 <main+0x94a>
    4a56:	fe 01       	movw	r30, r28
    4a58:	e1 53       	subi	r30, 0x31	; 49
    4a5a:	fe 4f       	sbci	r31, 0xFE	; 254
    4a5c:	91 83       	std	Z+1, r25	; 0x01
    4a5e:	80 83       	st	Z, r24
		_delay_ms(100);
		LCD_Goto(2,1);
    4a60:	82 e0       	ldi	r24, 0x02	; 2
    4a62:	61 e0       	ldi	r22, 0x01	; 1
    4a64:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteData(1);
    4a68:	81 e0       	ldi	r24, 0x01	; 1
    4a6a:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
		LCD_Goto(2,3);
    4a6e:	82 e0       	ldi	r24, 0x02	; 2
    4a70:	63 e0       	ldi	r22, 0x03	; 3
    4a72:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteData(2);
    4a76:	82 e0       	ldi	r24, 0x02	; 2
    4a78:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
		LCD_Goto(2,16);
    4a7c:	82 e0       	ldi	r24, 0x02	; 2
    4a7e:	60 e1       	ldi	r22, 0x10	; 16
    4a80:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteData(3);
    4a84:	83 e0       	ldi	r24, 0x03	; 3
    4a86:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    4a8a:	fe 01       	movw	r30, r28
    4a8c:	e5 53       	subi	r30, 0x35	; 53
    4a8e:	fe 4f       	sbci	r31, 0xFE	; 254
    4a90:	80 e0       	ldi	r24, 0x00	; 0
    4a92:	90 e0       	ldi	r25, 0x00	; 0
    4a94:	a6 e9       	ldi	r26, 0x96	; 150
    4a96:	b3 e4       	ldi	r27, 0x43	; 67
    4a98:	80 83       	st	Z, r24
    4a9a:	91 83       	std	Z+1, r25	; 0x01
    4a9c:	a2 83       	std	Z+2, r26	; 0x02
    4a9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4aa0:	8e 01       	movw	r16, r28
    4aa2:	09 53       	subi	r16, 0x39	; 57
    4aa4:	1e 4f       	sbci	r17, 0xFE	; 254
    4aa6:	fe 01       	movw	r30, r28
    4aa8:	e5 53       	subi	r30, 0x35	; 53
    4aaa:	fe 4f       	sbci	r31, 0xFE	; 254
    4aac:	60 81       	ld	r22, Z
    4aae:	71 81       	ldd	r23, Z+1	; 0x01
    4ab0:	82 81       	ldd	r24, Z+2	; 0x02
    4ab2:	93 81       	ldd	r25, Z+3	; 0x03
    4ab4:	20 e0       	ldi	r18, 0x00	; 0
    4ab6:	30 e0       	ldi	r19, 0x00	; 0
    4ab8:	4a ef       	ldi	r20, 0xFA	; 250
    4aba:	54 e4       	ldi	r21, 0x44	; 68
    4abc:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4ac0:	dc 01       	movw	r26, r24
    4ac2:	cb 01       	movw	r24, r22
    4ac4:	f8 01       	movw	r30, r16
    4ac6:	80 83       	st	Z, r24
    4ac8:	91 83       	std	Z+1, r25	; 0x01
    4aca:	a2 83       	std	Z+2, r26	; 0x02
    4acc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ace:	fe 01       	movw	r30, r28
    4ad0:	e9 53       	subi	r30, 0x39	; 57
    4ad2:	fe 4f       	sbci	r31, 0xFE	; 254
    4ad4:	60 81       	ld	r22, Z
    4ad6:	71 81       	ldd	r23, Z+1	; 0x01
    4ad8:	82 81       	ldd	r24, Z+2	; 0x02
    4ada:	93 81       	ldd	r25, Z+3	; 0x03
    4adc:	20 e0       	ldi	r18, 0x00	; 0
    4ade:	30 e0       	ldi	r19, 0x00	; 0
    4ae0:	40 e8       	ldi	r20, 0x80	; 128
    4ae2:	5f e3       	ldi	r21, 0x3F	; 63
    4ae4:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4ae8:	88 23       	and	r24, r24
    4aea:	44 f4       	brge	.+16     	; 0x4afc <main+0x9f4>
		__ticks = 1;
    4aec:	fe 01       	movw	r30, r28
    4aee:	eb 53       	subi	r30, 0x3B	; 59
    4af0:	fe 4f       	sbci	r31, 0xFE	; 254
    4af2:	81 e0       	ldi	r24, 0x01	; 1
    4af4:	90 e0       	ldi	r25, 0x00	; 0
    4af6:	91 83       	std	Z+1, r25	; 0x01
    4af8:	80 83       	st	Z, r24
    4afa:	64 c0       	rjmp	.+200    	; 0x4bc4 <main+0xabc>
	else if (__tmp > 65535)
    4afc:	fe 01       	movw	r30, r28
    4afe:	e9 53       	subi	r30, 0x39	; 57
    4b00:	fe 4f       	sbci	r31, 0xFE	; 254
    4b02:	60 81       	ld	r22, Z
    4b04:	71 81       	ldd	r23, Z+1	; 0x01
    4b06:	82 81       	ldd	r24, Z+2	; 0x02
    4b08:	93 81       	ldd	r25, Z+3	; 0x03
    4b0a:	20 e0       	ldi	r18, 0x00	; 0
    4b0c:	3f ef       	ldi	r19, 0xFF	; 255
    4b0e:	4f e7       	ldi	r20, 0x7F	; 127
    4b10:	57 e4       	ldi	r21, 0x47	; 71
    4b12:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4b16:	18 16       	cp	r1, r24
    4b18:	0c f0       	brlt	.+2      	; 0x4b1c <main+0xa14>
    4b1a:	43 c0       	rjmp	.+134    	; 0x4ba2 <main+0xa9a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b1c:	fe 01       	movw	r30, r28
    4b1e:	e5 53       	subi	r30, 0x35	; 53
    4b20:	fe 4f       	sbci	r31, 0xFE	; 254
    4b22:	60 81       	ld	r22, Z
    4b24:	71 81       	ldd	r23, Z+1	; 0x01
    4b26:	82 81       	ldd	r24, Z+2	; 0x02
    4b28:	93 81       	ldd	r25, Z+3	; 0x03
    4b2a:	20 e0       	ldi	r18, 0x00	; 0
    4b2c:	30 e0       	ldi	r19, 0x00	; 0
    4b2e:	40 e2       	ldi	r20, 0x20	; 32
    4b30:	51 e4       	ldi	r21, 0x41	; 65
    4b32:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4b36:	dc 01       	movw	r26, r24
    4b38:	cb 01       	movw	r24, r22
    4b3a:	8e 01       	movw	r16, r28
    4b3c:	0b 53       	subi	r16, 0x3B	; 59
    4b3e:	1e 4f       	sbci	r17, 0xFE	; 254
    4b40:	bc 01       	movw	r22, r24
    4b42:	cd 01       	movw	r24, r26
    4b44:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4b48:	dc 01       	movw	r26, r24
    4b4a:	cb 01       	movw	r24, r22
    4b4c:	f8 01       	movw	r30, r16
    4b4e:	91 83       	std	Z+1, r25	; 0x01
    4b50:	80 83       	st	Z, r24
    4b52:	1f c0       	rjmp	.+62     	; 0x4b92 <main+0xa8a>
    4b54:	fe 01       	movw	r30, r28
    4b56:	ed 53       	subi	r30, 0x3D	; 61
    4b58:	fe 4f       	sbci	r31, 0xFE	; 254
    4b5a:	88 ec       	ldi	r24, 0xC8	; 200
    4b5c:	90 e0       	ldi	r25, 0x00	; 0
    4b5e:	91 83       	std	Z+1, r25	; 0x01
    4b60:	80 83       	st	Z, r24
    4b62:	fe 01       	movw	r30, r28
    4b64:	ed 53       	subi	r30, 0x3D	; 61
    4b66:	fe 4f       	sbci	r31, 0xFE	; 254
    4b68:	80 81       	ld	r24, Z
    4b6a:	91 81       	ldd	r25, Z+1	; 0x01
    4b6c:	01 97       	sbiw	r24, 0x01	; 1
    4b6e:	f1 f7       	brne	.-4      	; 0x4b6c <main+0xa64>
    4b70:	fe 01       	movw	r30, r28
    4b72:	ed 53       	subi	r30, 0x3D	; 61
    4b74:	fe 4f       	sbci	r31, 0xFE	; 254
    4b76:	91 83       	std	Z+1, r25	; 0x01
    4b78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b7a:	de 01       	movw	r26, r28
    4b7c:	ab 53       	subi	r26, 0x3B	; 59
    4b7e:	be 4f       	sbci	r27, 0xFE	; 254
    4b80:	fe 01       	movw	r30, r28
    4b82:	eb 53       	subi	r30, 0x3B	; 59
    4b84:	fe 4f       	sbci	r31, 0xFE	; 254
    4b86:	80 81       	ld	r24, Z
    4b88:	91 81       	ldd	r25, Z+1	; 0x01
    4b8a:	01 97       	sbiw	r24, 0x01	; 1
    4b8c:	11 96       	adiw	r26, 0x01	; 1
    4b8e:	9c 93       	st	X, r25
    4b90:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b92:	fe 01       	movw	r30, r28
    4b94:	eb 53       	subi	r30, 0x3B	; 59
    4b96:	fe 4f       	sbci	r31, 0xFE	; 254
    4b98:	80 81       	ld	r24, Z
    4b9a:	91 81       	ldd	r25, Z+1	; 0x01
    4b9c:	00 97       	sbiw	r24, 0x00	; 0
    4b9e:	d1 f6       	brne	.-76     	; 0x4b54 <main+0xa4c>
    4ba0:	27 c0       	rjmp	.+78     	; 0x4bf0 <main+0xae8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ba2:	8e 01       	movw	r16, r28
    4ba4:	0b 53       	subi	r16, 0x3B	; 59
    4ba6:	1e 4f       	sbci	r17, 0xFE	; 254
    4ba8:	fe 01       	movw	r30, r28
    4baa:	e9 53       	subi	r30, 0x39	; 57
    4bac:	fe 4f       	sbci	r31, 0xFE	; 254
    4bae:	60 81       	ld	r22, Z
    4bb0:	71 81       	ldd	r23, Z+1	; 0x01
    4bb2:	82 81       	ldd	r24, Z+2	; 0x02
    4bb4:	93 81       	ldd	r25, Z+3	; 0x03
    4bb6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4bba:	dc 01       	movw	r26, r24
    4bbc:	cb 01       	movw	r24, r22
    4bbe:	f8 01       	movw	r30, r16
    4bc0:	91 83       	std	Z+1, r25	; 0x01
    4bc2:	80 83       	st	Z, r24
    4bc4:	de 01       	movw	r26, r28
    4bc6:	af 53       	subi	r26, 0x3F	; 63
    4bc8:	be 4f       	sbci	r27, 0xFE	; 254
    4bca:	fe 01       	movw	r30, r28
    4bcc:	eb 53       	subi	r30, 0x3B	; 59
    4bce:	fe 4f       	sbci	r31, 0xFE	; 254
    4bd0:	80 81       	ld	r24, Z
    4bd2:	91 81       	ldd	r25, Z+1	; 0x01
    4bd4:	8d 93       	st	X+, r24
    4bd6:	9c 93       	st	X, r25
    4bd8:	fe 01       	movw	r30, r28
    4bda:	ef 53       	subi	r30, 0x3F	; 63
    4bdc:	fe 4f       	sbci	r31, 0xFE	; 254
    4bde:	80 81       	ld	r24, Z
    4be0:	91 81       	ldd	r25, Z+1	; 0x01
    4be2:	01 97       	sbiw	r24, 0x01	; 1
    4be4:	f1 f7       	brne	.-4      	; 0x4be2 <main+0xada>
    4be6:	fe 01       	movw	r30, r28
    4be8:	ef 53       	subi	r30, 0x3F	; 63
    4bea:	fe 4f       	sbci	r31, 0xFE	; 254
    4bec:	91 83       	std	Z+1, r25	; 0x01
    4bee:	80 83       	st	Z, r24
		_delay_ms(300);
		LCD_Goto(1,3);
    4bf0:	81 e0       	ldi	r24, 0x01	; 1
    4bf2:	63 e0       	ldi	r22, 0x03	; 3
    4bf4:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
		LCD_WriteString(word_Push);
    4bf8:	80 ee       	ldi	r24, 0xE0	; 224
    4bfa:	91 e0       	ldi	r25, 0x01	; 1
    4bfc:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    4c00:	fe 01       	movw	r30, r28
    4c02:	e3 54       	subi	r30, 0x43	; 67
    4c04:	fe 4f       	sbci	r31, 0xFE	; 254
    4c06:	80 e0       	ldi	r24, 0x00	; 0
    4c08:	90 e0       	ldi	r25, 0x00	; 0
    4c0a:	a8 e4       	ldi	r26, 0x48	; 72
    4c0c:	b4 e4       	ldi	r27, 0x44	; 68
    4c0e:	80 83       	st	Z, r24
    4c10:	91 83       	std	Z+1, r25	; 0x01
    4c12:	a2 83       	std	Z+2, r26	; 0x02
    4c14:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c16:	8e 01       	movw	r16, r28
    4c18:	07 54       	subi	r16, 0x47	; 71
    4c1a:	1e 4f       	sbci	r17, 0xFE	; 254
    4c1c:	fe 01       	movw	r30, r28
    4c1e:	e3 54       	subi	r30, 0x43	; 67
    4c20:	fe 4f       	sbci	r31, 0xFE	; 254
    4c22:	60 81       	ld	r22, Z
    4c24:	71 81       	ldd	r23, Z+1	; 0x01
    4c26:	82 81       	ldd	r24, Z+2	; 0x02
    4c28:	93 81       	ldd	r25, Z+3	; 0x03
    4c2a:	20 e0       	ldi	r18, 0x00	; 0
    4c2c:	30 e0       	ldi	r19, 0x00	; 0
    4c2e:	4a ef       	ldi	r20, 0xFA	; 250
    4c30:	54 e4       	ldi	r21, 0x44	; 68
    4c32:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4c36:	dc 01       	movw	r26, r24
    4c38:	cb 01       	movw	r24, r22
    4c3a:	f8 01       	movw	r30, r16
    4c3c:	80 83       	st	Z, r24
    4c3e:	91 83       	std	Z+1, r25	; 0x01
    4c40:	a2 83       	std	Z+2, r26	; 0x02
    4c42:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4c44:	fe 01       	movw	r30, r28
    4c46:	e7 54       	subi	r30, 0x47	; 71
    4c48:	fe 4f       	sbci	r31, 0xFE	; 254
    4c4a:	60 81       	ld	r22, Z
    4c4c:	71 81       	ldd	r23, Z+1	; 0x01
    4c4e:	82 81       	ldd	r24, Z+2	; 0x02
    4c50:	93 81       	ldd	r25, Z+3	; 0x03
    4c52:	20 e0       	ldi	r18, 0x00	; 0
    4c54:	30 e0       	ldi	r19, 0x00	; 0
    4c56:	40 e8       	ldi	r20, 0x80	; 128
    4c58:	5f e3       	ldi	r21, 0x3F	; 63
    4c5a:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4c5e:	88 23       	and	r24, r24
    4c60:	44 f4       	brge	.+16     	; 0x4c72 <main+0xb6a>
		__ticks = 1;
    4c62:	fe 01       	movw	r30, r28
    4c64:	e9 54       	subi	r30, 0x49	; 73
    4c66:	fe 4f       	sbci	r31, 0xFE	; 254
    4c68:	81 e0       	ldi	r24, 0x01	; 1
    4c6a:	90 e0       	ldi	r25, 0x00	; 0
    4c6c:	91 83       	std	Z+1, r25	; 0x01
    4c6e:	80 83       	st	Z, r24
    4c70:	64 c0       	rjmp	.+200    	; 0x4d3a <main+0xc32>
	else if (__tmp > 65535)
    4c72:	fe 01       	movw	r30, r28
    4c74:	e7 54       	subi	r30, 0x47	; 71
    4c76:	fe 4f       	sbci	r31, 0xFE	; 254
    4c78:	60 81       	ld	r22, Z
    4c7a:	71 81       	ldd	r23, Z+1	; 0x01
    4c7c:	82 81       	ldd	r24, Z+2	; 0x02
    4c7e:	93 81       	ldd	r25, Z+3	; 0x03
    4c80:	20 e0       	ldi	r18, 0x00	; 0
    4c82:	3f ef       	ldi	r19, 0xFF	; 255
    4c84:	4f e7       	ldi	r20, 0x7F	; 127
    4c86:	57 e4       	ldi	r21, 0x47	; 71
    4c88:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4c8c:	18 16       	cp	r1, r24
    4c8e:	0c f0       	brlt	.+2      	; 0x4c92 <main+0xb8a>
    4c90:	43 c0       	rjmp	.+134    	; 0x4d18 <main+0xc10>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c92:	fe 01       	movw	r30, r28
    4c94:	e3 54       	subi	r30, 0x43	; 67
    4c96:	fe 4f       	sbci	r31, 0xFE	; 254
    4c98:	60 81       	ld	r22, Z
    4c9a:	71 81       	ldd	r23, Z+1	; 0x01
    4c9c:	82 81       	ldd	r24, Z+2	; 0x02
    4c9e:	93 81       	ldd	r25, Z+3	; 0x03
    4ca0:	20 e0       	ldi	r18, 0x00	; 0
    4ca2:	30 e0       	ldi	r19, 0x00	; 0
    4ca4:	40 e2       	ldi	r20, 0x20	; 32
    4ca6:	51 e4       	ldi	r21, 0x41	; 65
    4ca8:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4cac:	dc 01       	movw	r26, r24
    4cae:	cb 01       	movw	r24, r22
    4cb0:	8e 01       	movw	r16, r28
    4cb2:	09 54       	subi	r16, 0x49	; 73
    4cb4:	1e 4f       	sbci	r17, 0xFE	; 254
    4cb6:	bc 01       	movw	r22, r24
    4cb8:	cd 01       	movw	r24, r26
    4cba:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4cbe:	dc 01       	movw	r26, r24
    4cc0:	cb 01       	movw	r24, r22
    4cc2:	f8 01       	movw	r30, r16
    4cc4:	91 83       	std	Z+1, r25	; 0x01
    4cc6:	80 83       	st	Z, r24
    4cc8:	1f c0       	rjmp	.+62     	; 0x4d08 <main+0xc00>
    4cca:	fe 01       	movw	r30, r28
    4ccc:	eb 54       	subi	r30, 0x4B	; 75
    4cce:	fe 4f       	sbci	r31, 0xFE	; 254
    4cd0:	88 ec       	ldi	r24, 0xC8	; 200
    4cd2:	90 e0       	ldi	r25, 0x00	; 0
    4cd4:	91 83       	std	Z+1, r25	; 0x01
    4cd6:	80 83       	st	Z, r24
    4cd8:	fe 01       	movw	r30, r28
    4cda:	eb 54       	subi	r30, 0x4B	; 75
    4cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    4cde:	80 81       	ld	r24, Z
    4ce0:	91 81       	ldd	r25, Z+1	; 0x01
    4ce2:	01 97       	sbiw	r24, 0x01	; 1
    4ce4:	f1 f7       	brne	.-4      	; 0x4ce2 <main+0xbda>
    4ce6:	fe 01       	movw	r30, r28
    4ce8:	eb 54       	subi	r30, 0x4B	; 75
    4cea:	fe 4f       	sbci	r31, 0xFE	; 254
    4cec:	91 83       	std	Z+1, r25	; 0x01
    4cee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4cf0:	de 01       	movw	r26, r28
    4cf2:	a9 54       	subi	r26, 0x49	; 73
    4cf4:	be 4f       	sbci	r27, 0xFE	; 254
    4cf6:	fe 01       	movw	r30, r28
    4cf8:	e9 54       	subi	r30, 0x49	; 73
    4cfa:	fe 4f       	sbci	r31, 0xFE	; 254
    4cfc:	80 81       	ld	r24, Z
    4cfe:	91 81       	ldd	r25, Z+1	; 0x01
    4d00:	01 97       	sbiw	r24, 0x01	; 1
    4d02:	11 96       	adiw	r26, 0x01	; 1
    4d04:	9c 93       	st	X, r25
    4d06:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d08:	fe 01       	movw	r30, r28
    4d0a:	e9 54       	subi	r30, 0x49	; 73
    4d0c:	fe 4f       	sbci	r31, 0xFE	; 254
    4d0e:	80 81       	ld	r24, Z
    4d10:	91 81       	ldd	r25, Z+1	; 0x01
    4d12:	00 97       	sbiw	r24, 0x00	; 0
    4d14:	d1 f6       	brne	.-76     	; 0x4cca <main+0xbc2>
    4d16:	27 c0       	rjmp	.+78     	; 0x4d66 <main+0xc5e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d18:	8e 01       	movw	r16, r28
    4d1a:	09 54       	subi	r16, 0x49	; 73
    4d1c:	1e 4f       	sbci	r17, 0xFE	; 254
    4d1e:	fe 01       	movw	r30, r28
    4d20:	e7 54       	subi	r30, 0x47	; 71
    4d22:	fe 4f       	sbci	r31, 0xFE	; 254
    4d24:	60 81       	ld	r22, Z
    4d26:	71 81       	ldd	r23, Z+1	; 0x01
    4d28:	82 81       	ldd	r24, Z+2	; 0x02
    4d2a:	93 81       	ldd	r25, Z+3	; 0x03
    4d2c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4d30:	dc 01       	movw	r26, r24
    4d32:	cb 01       	movw	r24, r22
    4d34:	f8 01       	movw	r30, r16
    4d36:	91 83       	std	Z+1, r25	; 0x01
    4d38:	80 83       	st	Z, r24
    4d3a:	de 01       	movw	r26, r28
    4d3c:	ad 54       	subi	r26, 0x4D	; 77
    4d3e:	be 4f       	sbci	r27, 0xFE	; 254
    4d40:	fe 01       	movw	r30, r28
    4d42:	e9 54       	subi	r30, 0x49	; 73
    4d44:	fe 4f       	sbci	r31, 0xFE	; 254
    4d46:	80 81       	ld	r24, Z
    4d48:	91 81       	ldd	r25, Z+1	; 0x01
    4d4a:	8d 93       	st	X+, r24
    4d4c:	9c 93       	st	X, r25
    4d4e:	fe 01       	movw	r30, r28
    4d50:	ed 54       	subi	r30, 0x4D	; 77
    4d52:	fe 4f       	sbci	r31, 0xFE	; 254
    4d54:	80 81       	ld	r24, Z
    4d56:	91 81       	ldd	r25, Z+1	; 0x01
    4d58:	01 97       	sbiw	r24, 0x01	; 1
    4d5a:	f1 f7       	brne	.-4      	; 0x4d58 <main+0xc50>
    4d5c:	fe 01       	movw	r30, r28
    4d5e:	ed 54       	subi	r30, 0x4D	; 77
    4d60:	fe 4f       	sbci	r31, 0xFE	; 254
    4d62:	91 83       	std	Z+1, r25	; 0x01
    4d64:	80 83       	st	Z, r24
		_delay_ms(800);
		uint8 Button_1 = PushButton_voidRead(&myButton1);
    4d66:	ce 01       	movw	r24, r28
    4d68:	8b 5d       	subi	r24, 0xDB	; 219
    4d6a:	9d 4f       	sbci	r25, 0xFD	; 253
    4d6c:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <PushButton_voidRead>
    4d70:	fe 01       	movw	r30, r28
    4d72:	ec 5d       	subi	r30, 0xDC	; 220
    4d74:	fd 4f       	sbci	r31, 0xFD	; 253
    4d76:	80 83       	st	Z, r24
		uint8 Button_2 = PushButton_voidRead(&myButton2);
    4d78:	ce 01       	movw	r24, r28
    4d7a:	88 5d       	subi	r24, 0xD8	; 216
    4d7c:	9d 4f       	sbci	r25, 0xFD	; 253
    4d7e:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <PushButton_voidRead>
    4d82:	fe 01       	movw	r30, r28
    4d84:	ed 5d       	subi	r30, 0xDD	; 221
    4d86:	fd 4f       	sbci	r31, 0xFD	; 253
    4d88:	80 83       	st	Z, r24
    4d8a:	fe 01       	movw	r30, r28
    4d8c:	e1 55       	subi	r30, 0x51	; 81
    4d8e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d90:	80 e0       	ldi	r24, 0x00	; 0
    4d92:	90 e0       	ldi	r25, 0x00	; 0
    4d94:	aa e7       	ldi	r26, 0x7A	; 122
    4d96:	b4 e4       	ldi	r27, 0x44	; 68
    4d98:	80 83       	st	Z, r24
    4d9a:	91 83       	std	Z+1, r25	; 0x01
    4d9c:	a2 83       	std	Z+2, r26	; 0x02
    4d9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4da0:	8e 01       	movw	r16, r28
    4da2:	05 55       	subi	r16, 0x55	; 85
    4da4:	1e 4f       	sbci	r17, 0xFE	; 254
    4da6:	fe 01       	movw	r30, r28
    4da8:	e1 55       	subi	r30, 0x51	; 81
    4daa:	fe 4f       	sbci	r31, 0xFE	; 254
    4dac:	60 81       	ld	r22, Z
    4dae:	71 81       	ldd	r23, Z+1	; 0x01
    4db0:	82 81       	ldd	r24, Z+2	; 0x02
    4db2:	93 81       	ldd	r25, Z+3	; 0x03
    4db4:	20 e0       	ldi	r18, 0x00	; 0
    4db6:	30 e0       	ldi	r19, 0x00	; 0
    4db8:	4a ef       	ldi	r20, 0xFA	; 250
    4dba:	54 e4       	ldi	r21, 0x44	; 68
    4dbc:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4dc0:	dc 01       	movw	r26, r24
    4dc2:	cb 01       	movw	r24, r22
    4dc4:	f8 01       	movw	r30, r16
    4dc6:	80 83       	st	Z, r24
    4dc8:	91 83       	std	Z+1, r25	; 0x01
    4dca:	a2 83       	std	Z+2, r26	; 0x02
    4dcc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4dce:	fe 01       	movw	r30, r28
    4dd0:	e5 55       	subi	r30, 0x55	; 85
    4dd2:	fe 4f       	sbci	r31, 0xFE	; 254
    4dd4:	60 81       	ld	r22, Z
    4dd6:	71 81       	ldd	r23, Z+1	; 0x01
    4dd8:	82 81       	ldd	r24, Z+2	; 0x02
    4dda:	93 81       	ldd	r25, Z+3	; 0x03
    4ddc:	20 e0       	ldi	r18, 0x00	; 0
    4dde:	30 e0       	ldi	r19, 0x00	; 0
    4de0:	40 e8       	ldi	r20, 0x80	; 128
    4de2:	5f e3       	ldi	r21, 0x3F	; 63
    4de4:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4de8:	88 23       	and	r24, r24
    4dea:	44 f4       	brge	.+16     	; 0x4dfc <main+0xcf4>
		__ticks = 1;
    4dec:	fe 01       	movw	r30, r28
    4dee:	e7 55       	subi	r30, 0x57	; 87
    4df0:	fe 4f       	sbci	r31, 0xFE	; 254
    4df2:	81 e0       	ldi	r24, 0x01	; 1
    4df4:	90 e0       	ldi	r25, 0x00	; 0
    4df6:	91 83       	std	Z+1, r25	; 0x01
    4df8:	80 83       	st	Z, r24
    4dfa:	64 c0       	rjmp	.+200    	; 0x4ec4 <main+0xdbc>
	else if (__tmp > 65535)
    4dfc:	fe 01       	movw	r30, r28
    4dfe:	e5 55       	subi	r30, 0x55	; 85
    4e00:	fe 4f       	sbci	r31, 0xFE	; 254
    4e02:	60 81       	ld	r22, Z
    4e04:	71 81       	ldd	r23, Z+1	; 0x01
    4e06:	82 81       	ldd	r24, Z+2	; 0x02
    4e08:	93 81       	ldd	r25, Z+3	; 0x03
    4e0a:	20 e0       	ldi	r18, 0x00	; 0
    4e0c:	3f ef       	ldi	r19, 0xFF	; 255
    4e0e:	4f e7       	ldi	r20, 0x7F	; 127
    4e10:	57 e4       	ldi	r21, 0x47	; 71
    4e12:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4e16:	18 16       	cp	r1, r24
    4e18:	0c f0       	brlt	.+2      	; 0x4e1c <main+0xd14>
    4e1a:	43 c0       	rjmp	.+134    	; 0x4ea2 <main+0xd9a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e1c:	fe 01       	movw	r30, r28
    4e1e:	e1 55       	subi	r30, 0x51	; 81
    4e20:	fe 4f       	sbci	r31, 0xFE	; 254
    4e22:	60 81       	ld	r22, Z
    4e24:	71 81       	ldd	r23, Z+1	; 0x01
    4e26:	82 81       	ldd	r24, Z+2	; 0x02
    4e28:	93 81       	ldd	r25, Z+3	; 0x03
    4e2a:	20 e0       	ldi	r18, 0x00	; 0
    4e2c:	30 e0       	ldi	r19, 0x00	; 0
    4e2e:	40 e2       	ldi	r20, 0x20	; 32
    4e30:	51 e4       	ldi	r21, 0x41	; 65
    4e32:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4e36:	dc 01       	movw	r26, r24
    4e38:	cb 01       	movw	r24, r22
    4e3a:	8e 01       	movw	r16, r28
    4e3c:	07 55       	subi	r16, 0x57	; 87
    4e3e:	1e 4f       	sbci	r17, 0xFE	; 254
    4e40:	bc 01       	movw	r22, r24
    4e42:	cd 01       	movw	r24, r26
    4e44:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4e48:	dc 01       	movw	r26, r24
    4e4a:	cb 01       	movw	r24, r22
    4e4c:	f8 01       	movw	r30, r16
    4e4e:	91 83       	std	Z+1, r25	; 0x01
    4e50:	80 83       	st	Z, r24
    4e52:	1f c0       	rjmp	.+62     	; 0x4e92 <main+0xd8a>
    4e54:	fe 01       	movw	r30, r28
    4e56:	e9 55       	subi	r30, 0x59	; 89
    4e58:	fe 4f       	sbci	r31, 0xFE	; 254
    4e5a:	88 ec       	ldi	r24, 0xC8	; 200
    4e5c:	90 e0       	ldi	r25, 0x00	; 0
    4e5e:	91 83       	std	Z+1, r25	; 0x01
    4e60:	80 83       	st	Z, r24
    4e62:	fe 01       	movw	r30, r28
    4e64:	e9 55       	subi	r30, 0x59	; 89
    4e66:	fe 4f       	sbci	r31, 0xFE	; 254
    4e68:	80 81       	ld	r24, Z
    4e6a:	91 81       	ldd	r25, Z+1	; 0x01
    4e6c:	01 97       	sbiw	r24, 0x01	; 1
    4e6e:	f1 f7       	brne	.-4      	; 0x4e6c <main+0xd64>
    4e70:	fe 01       	movw	r30, r28
    4e72:	e9 55       	subi	r30, 0x59	; 89
    4e74:	fe 4f       	sbci	r31, 0xFE	; 254
    4e76:	91 83       	std	Z+1, r25	; 0x01
    4e78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e7a:	de 01       	movw	r26, r28
    4e7c:	a7 55       	subi	r26, 0x57	; 87
    4e7e:	be 4f       	sbci	r27, 0xFE	; 254
    4e80:	fe 01       	movw	r30, r28
    4e82:	e7 55       	subi	r30, 0x57	; 87
    4e84:	fe 4f       	sbci	r31, 0xFE	; 254
    4e86:	80 81       	ld	r24, Z
    4e88:	91 81       	ldd	r25, Z+1	; 0x01
    4e8a:	01 97       	sbiw	r24, 0x01	; 1
    4e8c:	11 96       	adiw	r26, 0x01	; 1
    4e8e:	9c 93       	st	X, r25
    4e90:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e92:	fe 01       	movw	r30, r28
    4e94:	e7 55       	subi	r30, 0x57	; 87
    4e96:	fe 4f       	sbci	r31, 0xFE	; 254
    4e98:	80 81       	ld	r24, Z
    4e9a:	91 81       	ldd	r25, Z+1	; 0x01
    4e9c:	00 97       	sbiw	r24, 0x00	; 0
    4e9e:	d1 f6       	brne	.-76     	; 0x4e54 <main+0xd4c>
    4ea0:	28 c0       	rjmp	.+80     	; 0x4ef2 <main+0xdea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ea2:	8e 01       	movw	r16, r28
    4ea4:	07 55       	subi	r16, 0x57	; 87
    4ea6:	1e 4f       	sbci	r17, 0xFE	; 254
    4ea8:	fe 01       	movw	r30, r28
    4eaa:	e5 55       	subi	r30, 0x55	; 85
    4eac:	fe 4f       	sbci	r31, 0xFE	; 254
    4eae:	60 81       	ld	r22, Z
    4eb0:	71 81       	ldd	r23, Z+1	; 0x01
    4eb2:	82 81       	ldd	r24, Z+2	; 0x02
    4eb4:	93 81       	ldd	r25, Z+3	; 0x03
    4eb6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4eba:	dc 01       	movw	r26, r24
    4ebc:	cb 01       	movw	r24, r22
    4ebe:	f8 01       	movw	r30, r16
    4ec0:	91 83       	std	Z+1, r25	; 0x01
    4ec2:	80 83       	st	Z, r24
    4ec4:	de 01       	movw	r26, r28
    4ec6:	ab 55       	subi	r26, 0x5B	; 91
    4ec8:	be 4f       	sbci	r27, 0xFE	; 254
    4eca:	fe 01       	movw	r30, r28
    4ecc:	e7 55       	subi	r30, 0x57	; 87
    4ece:	fe 4f       	sbci	r31, 0xFE	; 254
    4ed0:	80 81       	ld	r24, Z
    4ed2:	91 81       	ldd	r25, Z+1	; 0x01
    4ed4:	11 96       	adiw	r26, 0x01	; 1
    4ed6:	9c 93       	st	X, r25
    4ed8:	8e 93       	st	-X, r24
    4eda:	fe 01       	movw	r30, r28
    4edc:	eb 55       	subi	r30, 0x5B	; 91
    4ede:	fe 4f       	sbci	r31, 0xFE	; 254
    4ee0:	80 81       	ld	r24, Z
    4ee2:	91 81       	ldd	r25, Z+1	; 0x01
    4ee4:	01 97       	sbiw	r24, 0x01	; 1
    4ee6:	f1 f7       	brne	.-4      	; 0x4ee4 <main+0xddc>
    4ee8:	fe 01       	movw	r30, r28
    4eea:	eb 55       	subi	r30, 0x5B	; 91
    4eec:	fe 4f       	sbci	r31, 0xFE	; 254
    4eee:	91 83       	std	Z+1, r25	; 0x01
    4ef0:	80 83       	st	Z, r24
		_delay_ms(1000);

		if (Button_1 == 0 && Button_2 == 1){
    4ef2:	fe 01       	movw	r30, r28
    4ef4:	ec 5d       	subi	r30, 0xDC	; 220
    4ef6:	fd 4f       	sbci	r31, 0xFD	; 253
    4ef8:	80 81       	ld	r24, Z
    4efa:	88 23       	and	r24, r24
    4efc:	11 f0       	breq	.+4      	; 0x4f02 <main+0xdfa>
    4efe:	0c 94 35 33 	jmp	0x666a	; 0x666a <main+0x2562>
    4f02:	fe 01       	movw	r30, r28
    4f04:	ed 5d       	subi	r30, 0xDD	; 221
    4f06:	fd 4f       	sbci	r31, 0xFD	; 253
    4f08:	80 81       	ld	r24, Z
    4f0a:	81 30       	cpi	r24, 0x01	; 1
    4f0c:	11 f0       	breq	.+4      	; 0x4f12 <main+0xe0a>
    4f0e:	0c 94 35 33 	jmp	0x666a	; 0x666a <main+0x2562>
			LCD_Clear();
    4f12:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
			LCD_Goto(1,2);
    4f16:	81 e0       	ldi	r24, 0x01	; 1
    4f18:	62 e0       	ldi	r22, 0x02	; 2
    4f1a:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_B1);
    4f1e:	8d ee       	ldi	r24, 0xED	; 237
    4f20:	91 e0       	ldi	r25, 0x01	; 1
    4f22:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    4f26:	fe 01       	movw	r30, r28
    4f28:	ef 55       	subi	r30, 0x5F	; 95
    4f2a:	fe 4f       	sbci	r31, 0xFE	; 254
    4f2c:	80 e0       	ldi	r24, 0x00	; 0
    4f2e:	90 e0       	ldi	r25, 0x00	; 0
    4f30:	aa ef       	ldi	r26, 0xFA	; 250
    4f32:	b3 e4       	ldi	r27, 0x43	; 67
    4f34:	80 83       	st	Z, r24
    4f36:	91 83       	std	Z+1, r25	; 0x01
    4f38:	a2 83       	std	Z+2, r26	; 0x02
    4f3a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f3c:	8e 01       	movw	r16, r28
    4f3e:	03 56       	subi	r16, 0x63	; 99
    4f40:	1e 4f       	sbci	r17, 0xFE	; 254
    4f42:	fe 01       	movw	r30, r28
    4f44:	ef 55       	subi	r30, 0x5F	; 95
    4f46:	fe 4f       	sbci	r31, 0xFE	; 254
    4f48:	60 81       	ld	r22, Z
    4f4a:	71 81       	ldd	r23, Z+1	; 0x01
    4f4c:	82 81       	ldd	r24, Z+2	; 0x02
    4f4e:	93 81       	ldd	r25, Z+3	; 0x03
    4f50:	20 e0       	ldi	r18, 0x00	; 0
    4f52:	30 e0       	ldi	r19, 0x00	; 0
    4f54:	4a ef       	ldi	r20, 0xFA	; 250
    4f56:	54 e4       	ldi	r21, 0x44	; 68
    4f58:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4f5c:	dc 01       	movw	r26, r24
    4f5e:	cb 01       	movw	r24, r22
    4f60:	f8 01       	movw	r30, r16
    4f62:	80 83       	st	Z, r24
    4f64:	91 83       	std	Z+1, r25	; 0x01
    4f66:	a2 83       	std	Z+2, r26	; 0x02
    4f68:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4f6a:	fe 01       	movw	r30, r28
    4f6c:	e3 56       	subi	r30, 0x63	; 99
    4f6e:	fe 4f       	sbci	r31, 0xFE	; 254
    4f70:	60 81       	ld	r22, Z
    4f72:	71 81       	ldd	r23, Z+1	; 0x01
    4f74:	82 81       	ldd	r24, Z+2	; 0x02
    4f76:	93 81       	ldd	r25, Z+3	; 0x03
    4f78:	20 e0       	ldi	r18, 0x00	; 0
    4f7a:	30 e0       	ldi	r19, 0x00	; 0
    4f7c:	40 e8       	ldi	r20, 0x80	; 128
    4f7e:	5f e3       	ldi	r21, 0x3F	; 63
    4f80:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4f84:	88 23       	and	r24, r24
    4f86:	44 f4       	brge	.+16     	; 0x4f98 <main+0xe90>
		__ticks = 1;
    4f88:	fe 01       	movw	r30, r28
    4f8a:	e5 56       	subi	r30, 0x65	; 101
    4f8c:	fe 4f       	sbci	r31, 0xFE	; 254
    4f8e:	81 e0       	ldi	r24, 0x01	; 1
    4f90:	90 e0       	ldi	r25, 0x00	; 0
    4f92:	91 83       	std	Z+1, r25	; 0x01
    4f94:	80 83       	st	Z, r24
    4f96:	64 c0       	rjmp	.+200    	; 0x5060 <main+0xf58>
	else if (__tmp > 65535)
    4f98:	fe 01       	movw	r30, r28
    4f9a:	e3 56       	subi	r30, 0x63	; 99
    4f9c:	fe 4f       	sbci	r31, 0xFE	; 254
    4f9e:	60 81       	ld	r22, Z
    4fa0:	71 81       	ldd	r23, Z+1	; 0x01
    4fa2:	82 81       	ldd	r24, Z+2	; 0x02
    4fa4:	93 81       	ldd	r25, Z+3	; 0x03
    4fa6:	20 e0       	ldi	r18, 0x00	; 0
    4fa8:	3f ef       	ldi	r19, 0xFF	; 255
    4faa:	4f e7       	ldi	r20, 0x7F	; 127
    4fac:	57 e4       	ldi	r21, 0x47	; 71
    4fae:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4fb2:	18 16       	cp	r1, r24
    4fb4:	0c f0       	brlt	.+2      	; 0x4fb8 <main+0xeb0>
    4fb6:	43 c0       	rjmp	.+134    	; 0x503e <main+0xf36>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fb8:	fe 01       	movw	r30, r28
    4fba:	ef 55       	subi	r30, 0x5F	; 95
    4fbc:	fe 4f       	sbci	r31, 0xFE	; 254
    4fbe:	60 81       	ld	r22, Z
    4fc0:	71 81       	ldd	r23, Z+1	; 0x01
    4fc2:	82 81       	ldd	r24, Z+2	; 0x02
    4fc4:	93 81       	ldd	r25, Z+3	; 0x03
    4fc6:	20 e0       	ldi	r18, 0x00	; 0
    4fc8:	30 e0       	ldi	r19, 0x00	; 0
    4fca:	40 e2       	ldi	r20, 0x20	; 32
    4fcc:	51 e4       	ldi	r21, 0x41	; 65
    4fce:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4fd2:	dc 01       	movw	r26, r24
    4fd4:	cb 01       	movw	r24, r22
    4fd6:	8e 01       	movw	r16, r28
    4fd8:	05 56       	subi	r16, 0x65	; 101
    4fda:	1e 4f       	sbci	r17, 0xFE	; 254
    4fdc:	bc 01       	movw	r22, r24
    4fde:	cd 01       	movw	r24, r26
    4fe0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4fe4:	dc 01       	movw	r26, r24
    4fe6:	cb 01       	movw	r24, r22
    4fe8:	f8 01       	movw	r30, r16
    4fea:	91 83       	std	Z+1, r25	; 0x01
    4fec:	80 83       	st	Z, r24
    4fee:	1f c0       	rjmp	.+62     	; 0x502e <main+0xf26>
    4ff0:	fe 01       	movw	r30, r28
    4ff2:	e7 56       	subi	r30, 0x67	; 103
    4ff4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ff6:	88 ec       	ldi	r24, 0xC8	; 200
    4ff8:	90 e0       	ldi	r25, 0x00	; 0
    4ffa:	91 83       	std	Z+1, r25	; 0x01
    4ffc:	80 83       	st	Z, r24
    4ffe:	fe 01       	movw	r30, r28
    5000:	e7 56       	subi	r30, 0x67	; 103
    5002:	fe 4f       	sbci	r31, 0xFE	; 254
    5004:	80 81       	ld	r24, Z
    5006:	91 81       	ldd	r25, Z+1	; 0x01
    5008:	01 97       	sbiw	r24, 0x01	; 1
    500a:	f1 f7       	brne	.-4      	; 0x5008 <main+0xf00>
    500c:	fe 01       	movw	r30, r28
    500e:	e7 56       	subi	r30, 0x67	; 103
    5010:	fe 4f       	sbci	r31, 0xFE	; 254
    5012:	91 83       	std	Z+1, r25	; 0x01
    5014:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5016:	de 01       	movw	r26, r28
    5018:	a5 56       	subi	r26, 0x65	; 101
    501a:	be 4f       	sbci	r27, 0xFE	; 254
    501c:	fe 01       	movw	r30, r28
    501e:	e5 56       	subi	r30, 0x65	; 101
    5020:	fe 4f       	sbci	r31, 0xFE	; 254
    5022:	80 81       	ld	r24, Z
    5024:	91 81       	ldd	r25, Z+1	; 0x01
    5026:	01 97       	sbiw	r24, 0x01	; 1
    5028:	11 96       	adiw	r26, 0x01	; 1
    502a:	9c 93       	st	X, r25
    502c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    502e:	fe 01       	movw	r30, r28
    5030:	e5 56       	subi	r30, 0x65	; 101
    5032:	fe 4f       	sbci	r31, 0xFE	; 254
    5034:	80 81       	ld	r24, Z
    5036:	91 81       	ldd	r25, Z+1	; 0x01
    5038:	00 97       	sbiw	r24, 0x00	; 0
    503a:	d1 f6       	brne	.-76     	; 0x4ff0 <main+0xee8>
    503c:	27 c0       	rjmp	.+78     	; 0x508c <main+0xf84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    503e:	8e 01       	movw	r16, r28
    5040:	05 56       	subi	r16, 0x65	; 101
    5042:	1e 4f       	sbci	r17, 0xFE	; 254
    5044:	fe 01       	movw	r30, r28
    5046:	e3 56       	subi	r30, 0x63	; 99
    5048:	fe 4f       	sbci	r31, 0xFE	; 254
    504a:	60 81       	ld	r22, Z
    504c:	71 81       	ldd	r23, Z+1	; 0x01
    504e:	82 81       	ldd	r24, Z+2	; 0x02
    5050:	93 81       	ldd	r25, Z+3	; 0x03
    5052:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5056:	dc 01       	movw	r26, r24
    5058:	cb 01       	movw	r24, r22
    505a:	f8 01       	movw	r30, r16
    505c:	91 83       	std	Z+1, r25	; 0x01
    505e:	80 83       	st	Z, r24
    5060:	de 01       	movw	r26, r28
    5062:	a9 56       	subi	r26, 0x69	; 105
    5064:	be 4f       	sbci	r27, 0xFE	; 254
    5066:	fe 01       	movw	r30, r28
    5068:	e5 56       	subi	r30, 0x65	; 101
    506a:	fe 4f       	sbci	r31, 0xFE	; 254
    506c:	80 81       	ld	r24, Z
    506e:	91 81       	ldd	r25, Z+1	; 0x01
    5070:	8d 93       	st	X+, r24
    5072:	9c 93       	st	X, r25
    5074:	fe 01       	movw	r30, r28
    5076:	e9 56       	subi	r30, 0x69	; 105
    5078:	fe 4f       	sbci	r31, 0xFE	; 254
    507a:	80 81       	ld	r24, Z
    507c:	91 81       	ldd	r25, Z+1	; 0x01
    507e:	01 97       	sbiw	r24, 0x01	; 1
    5080:	f1 f7       	brne	.-4      	; 0x507e <main+0xf76>
    5082:	fe 01       	movw	r30, r28
    5084:	e9 56       	subi	r30, 0x69	; 105
    5086:	fe 4f       	sbci	r31, 0xFE	; 254
    5088:	91 83       	std	Z+1, r25	; 0x01
    508a:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Clear();
    508c:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    5090:	fe 01       	movw	r30, r28
    5092:	ed 56       	subi	r30, 0x6D	; 109
    5094:	fe 4f       	sbci	r31, 0xFE	; 254
    5096:	80 e0       	ldi	r24, 0x00	; 0
    5098:	90 e0       	ldi	r25, 0x00	; 0
    509a:	aa ef       	ldi	r26, 0xFA	; 250
    509c:	b3 e4       	ldi	r27, 0x43	; 67
    509e:	80 83       	st	Z, r24
    50a0:	91 83       	std	Z+1, r25	; 0x01
    50a2:	a2 83       	std	Z+2, r26	; 0x02
    50a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    50a6:	8e 01       	movw	r16, r28
    50a8:	01 57       	subi	r16, 0x71	; 113
    50aa:	1e 4f       	sbci	r17, 0xFE	; 254
    50ac:	fe 01       	movw	r30, r28
    50ae:	ed 56       	subi	r30, 0x6D	; 109
    50b0:	fe 4f       	sbci	r31, 0xFE	; 254
    50b2:	60 81       	ld	r22, Z
    50b4:	71 81       	ldd	r23, Z+1	; 0x01
    50b6:	82 81       	ldd	r24, Z+2	; 0x02
    50b8:	93 81       	ldd	r25, Z+3	; 0x03
    50ba:	20 e0       	ldi	r18, 0x00	; 0
    50bc:	30 e0       	ldi	r19, 0x00	; 0
    50be:	4a ef       	ldi	r20, 0xFA	; 250
    50c0:	54 e4       	ldi	r21, 0x44	; 68
    50c2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    50c6:	dc 01       	movw	r26, r24
    50c8:	cb 01       	movw	r24, r22
    50ca:	f8 01       	movw	r30, r16
    50cc:	80 83       	st	Z, r24
    50ce:	91 83       	std	Z+1, r25	; 0x01
    50d0:	a2 83       	std	Z+2, r26	; 0x02
    50d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    50d4:	fe 01       	movw	r30, r28
    50d6:	e1 57       	subi	r30, 0x71	; 113
    50d8:	fe 4f       	sbci	r31, 0xFE	; 254
    50da:	60 81       	ld	r22, Z
    50dc:	71 81       	ldd	r23, Z+1	; 0x01
    50de:	82 81       	ldd	r24, Z+2	; 0x02
    50e0:	93 81       	ldd	r25, Z+3	; 0x03
    50e2:	20 e0       	ldi	r18, 0x00	; 0
    50e4:	30 e0       	ldi	r19, 0x00	; 0
    50e6:	40 e8       	ldi	r20, 0x80	; 128
    50e8:	5f e3       	ldi	r21, 0x3F	; 63
    50ea:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    50ee:	88 23       	and	r24, r24
    50f0:	44 f4       	brge	.+16     	; 0x5102 <main+0xffa>
		__ticks = 1;
    50f2:	fe 01       	movw	r30, r28
    50f4:	e3 57       	subi	r30, 0x73	; 115
    50f6:	fe 4f       	sbci	r31, 0xFE	; 254
    50f8:	81 e0       	ldi	r24, 0x01	; 1
    50fa:	90 e0       	ldi	r25, 0x00	; 0
    50fc:	91 83       	std	Z+1, r25	; 0x01
    50fe:	80 83       	st	Z, r24
    5100:	64 c0       	rjmp	.+200    	; 0x51ca <main+0x10c2>
	else if (__tmp > 65535)
    5102:	fe 01       	movw	r30, r28
    5104:	e1 57       	subi	r30, 0x71	; 113
    5106:	fe 4f       	sbci	r31, 0xFE	; 254
    5108:	60 81       	ld	r22, Z
    510a:	71 81       	ldd	r23, Z+1	; 0x01
    510c:	82 81       	ldd	r24, Z+2	; 0x02
    510e:	93 81       	ldd	r25, Z+3	; 0x03
    5110:	20 e0       	ldi	r18, 0x00	; 0
    5112:	3f ef       	ldi	r19, 0xFF	; 255
    5114:	4f e7       	ldi	r20, 0x7F	; 127
    5116:	57 e4       	ldi	r21, 0x47	; 71
    5118:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    511c:	18 16       	cp	r1, r24
    511e:	0c f0       	brlt	.+2      	; 0x5122 <main+0x101a>
    5120:	43 c0       	rjmp	.+134    	; 0x51a8 <main+0x10a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5122:	fe 01       	movw	r30, r28
    5124:	ed 56       	subi	r30, 0x6D	; 109
    5126:	fe 4f       	sbci	r31, 0xFE	; 254
    5128:	60 81       	ld	r22, Z
    512a:	71 81       	ldd	r23, Z+1	; 0x01
    512c:	82 81       	ldd	r24, Z+2	; 0x02
    512e:	93 81       	ldd	r25, Z+3	; 0x03
    5130:	20 e0       	ldi	r18, 0x00	; 0
    5132:	30 e0       	ldi	r19, 0x00	; 0
    5134:	40 e2       	ldi	r20, 0x20	; 32
    5136:	51 e4       	ldi	r21, 0x41	; 65
    5138:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    513c:	dc 01       	movw	r26, r24
    513e:	cb 01       	movw	r24, r22
    5140:	8e 01       	movw	r16, r28
    5142:	03 57       	subi	r16, 0x73	; 115
    5144:	1e 4f       	sbci	r17, 0xFE	; 254
    5146:	bc 01       	movw	r22, r24
    5148:	cd 01       	movw	r24, r26
    514a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    514e:	dc 01       	movw	r26, r24
    5150:	cb 01       	movw	r24, r22
    5152:	f8 01       	movw	r30, r16
    5154:	91 83       	std	Z+1, r25	; 0x01
    5156:	80 83       	st	Z, r24
    5158:	1f c0       	rjmp	.+62     	; 0x5198 <main+0x1090>
    515a:	fe 01       	movw	r30, r28
    515c:	e5 57       	subi	r30, 0x75	; 117
    515e:	fe 4f       	sbci	r31, 0xFE	; 254
    5160:	88 ec       	ldi	r24, 0xC8	; 200
    5162:	90 e0       	ldi	r25, 0x00	; 0
    5164:	91 83       	std	Z+1, r25	; 0x01
    5166:	80 83       	st	Z, r24
    5168:	fe 01       	movw	r30, r28
    516a:	e5 57       	subi	r30, 0x75	; 117
    516c:	fe 4f       	sbci	r31, 0xFE	; 254
    516e:	80 81       	ld	r24, Z
    5170:	91 81       	ldd	r25, Z+1	; 0x01
    5172:	01 97       	sbiw	r24, 0x01	; 1
    5174:	f1 f7       	brne	.-4      	; 0x5172 <main+0x106a>
    5176:	fe 01       	movw	r30, r28
    5178:	e5 57       	subi	r30, 0x75	; 117
    517a:	fe 4f       	sbci	r31, 0xFE	; 254
    517c:	91 83       	std	Z+1, r25	; 0x01
    517e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5180:	de 01       	movw	r26, r28
    5182:	a3 57       	subi	r26, 0x73	; 115
    5184:	be 4f       	sbci	r27, 0xFE	; 254
    5186:	fe 01       	movw	r30, r28
    5188:	e3 57       	subi	r30, 0x73	; 115
    518a:	fe 4f       	sbci	r31, 0xFE	; 254
    518c:	80 81       	ld	r24, Z
    518e:	91 81       	ldd	r25, Z+1	; 0x01
    5190:	01 97       	sbiw	r24, 0x01	; 1
    5192:	11 96       	adiw	r26, 0x01	; 1
    5194:	9c 93       	st	X, r25
    5196:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5198:	fe 01       	movw	r30, r28
    519a:	e3 57       	subi	r30, 0x73	; 115
    519c:	fe 4f       	sbci	r31, 0xFE	; 254
    519e:	80 81       	ld	r24, Z
    51a0:	91 81       	ldd	r25, Z+1	; 0x01
    51a2:	00 97       	sbiw	r24, 0x00	; 0
    51a4:	d1 f6       	brne	.-76     	; 0x515a <main+0x1052>
    51a6:	27 c0       	rjmp	.+78     	; 0x51f6 <main+0x10ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    51a8:	8e 01       	movw	r16, r28
    51aa:	03 57       	subi	r16, 0x73	; 115
    51ac:	1e 4f       	sbci	r17, 0xFE	; 254
    51ae:	fe 01       	movw	r30, r28
    51b0:	e1 57       	subi	r30, 0x71	; 113
    51b2:	fe 4f       	sbci	r31, 0xFE	; 254
    51b4:	60 81       	ld	r22, Z
    51b6:	71 81       	ldd	r23, Z+1	; 0x01
    51b8:	82 81       	ldd	r24, Z+2	; 0x02
    51ba:	93 81       	ldd	r25, Z+3	; 0x03
    51bc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    51c0:	dc 01       	movw	r26, r24
    51c2:	cb 01       	movw	r24, r22
    51c4:	f8 01       	movw	r30, r16
    51c6:	91 83       	std	Z+1, r25	; 0x01
    51c8:	80 83       	st	Z, r24
    51ca:	de 01       	movw	r26, r28
    51cc:	a7 57       	subi	r26, 0x77	; 119
    51ce:	be 4f       	sbci	r27, 0xFE	; 254
    51d0:	fe 01       	movw	r30, r28
    51d2:	e3 57       	subi	r30, 0x73	; 115
    51d4:	fe 4f       	sbci	r31, 0xFE	; 254
    51d6:	80 81       	ld	r24, Z
    51d8:	91 81       	ldd	r25, Z+1	; 0x01
    51da:	8d 93       	st	X+, r24
    51dc:	9c 93       	st	X, r25
    51de:	fe 01       	movw	r30, r28
    51e0:	e7 57       	subi	r30, 0x77	; 119
    51e2:	fe 4f       	sbci	r31, 0xFE	; 254
    51e4:	80 81       	ld	r24, Z
    51e6:	91 81       	ldd	r25, Z+1	; 0x01
    51e8:	01 97       	sbiw	r24, 0x01	; 1
    51ea:	f1 f7       	brne	.-4      	; 0x51e8 <main+0x10e0>
    51ec:	fe 01       	movw	r30, r28
    51ee:	e7 57       	subi	r30, 0x77	; 119
    51f0:	fe 4f       	sbci	r31, 0xFE	; 254
    51f2:	91 83       	std	Z+1, r25	; 0x01
    51f4:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(2,16);
    51f6:	82 e0       	ldi	r24, 0x02	; 2
    51f8:	60 e1       	ldi	r22, 0x10	; 16
    51fa:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(3);
    51fe:	83 e0       	ldi	r24, 0x03	; 3
    5200:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
			LCD_Goto(2,3);
    5204:	82 e0       	ldi	r24, 0x02	; 2
    5206:	63 e0       	ldi	r22, 0x03	; 3
    5208:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(2);
    520c:	82 e0       	ldi	r24, 0x02	; 2
    520e:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>

			LCD_Goto(2,1);
    5212:	82 e0       	ldi	r24, 0x02	; 2
    5214:	61 e0       	ldi	r22, 0x01	; 1
    5216:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(1);
    521a:	81 e0       	ldi	r24, 0x01	; 1
    521c:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    5220:	fe 01       	movw	r30, r28
    5222:	eb 57       	subi	r30, 0x7B	; 123
    5224:	fe 4f       	sbci	r31, 0xFE	; 254
    5226:	80 e0       	ldi	r24, 0x00	; 0
    5228:	90 e0       	ldi	r25, 0x00	; 0
    522a:	aa ef       	ldi	r26, 0xFA	; 250
    522c:	b3 e4       	ldi	r27, 0x43	; 67
    522e:	80 83       	st	Z, r24
    5230:	91 83       	std	Z+1, r25	; 0x01
    5232:	a2 83       	std	Z+2, r26	; 0x02
    5234:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5236:	8e 01       	movw	r16, r28
    5238:	0f 57       	subi	r16, 0x7F	; 127
    523a:	1e 4f       	sbci	r17, 0xFE	; 254
    523c:	fe 01       	movw	r30, r28
    523e:	eb 57       	subi	r30, 0x7B	; 123
    5240:	fe 4f       	sbci	r31, 0xFE	; 254
    5242:	60 81       	ld	r22, Z
    5244:	71 81       	ldd	r23, Z+1	; 0x01
    5246:	82 81       	ldd	r24, Z+2	; 0x02
    5248:	93 81       	ldd	r25, Z+3	; 0x03
    524a:	20 e0       	ldi	r18, 0x00	; 0
    524c:	30 e0       	ldi	r19, 0x00	; 0
    524e:	4a ef       	ldi	r20, 0xFA	; 250
    5250:	54 e4       	ldi	r21, 0x44	; 68
    5252:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5256:	dc 01       	movw	r26, r24
    5258:	cb 01       	movw	r24, r22
    525a:	f8 01       	movw	r30, r16
    525c:	80 83       	st	Z, r24
    525e:	91 83       	std	Z+1, r25	; 0x01
    5260:	a2 83       	std	Z+2, r26	; 0x02
    5262:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5264:	fe 01       	movw	r30, r28
    5266:	ef 57       	subi	r30, 0x7F	; 127
    5268:	fe 4f       	sbci	r31, 0xFE	; 254
    526a:	60 81       	ld	r22, Z
    526c:	71 81       	ldd	r23, Z+1	; 0x01
    526e:	82 81       	ldd	r24, Z+2	; 0x02
    5270:	93 81       	ldd	r25, Z+3	; 0x03
    5272:	20 e0       	ldi	r18, 0x00	; 0
    5274:	30 e0       	ldi	r19, 0x00	; 0
    5276:	40 e8       	ldi	r20, 0x80	; 128
    5278:	5f e3       	ldi	r21, 0x3F	; 63
    527a:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    527e:	88 23       	and	r24, r24
    5280:	44 f4       	brge	.+16     	; 0x5292 <main+0x118a>
		__ticks = 1;
    5282:	fe 01       	movw	r30, r28
    5284:	e1 58       	subi	r30, 0x81	; 129
    5286:	fe 4f       	sbci	r31, 0xFE	; 254
    5288:	81 e0       	ldi	r24, 0x01	; 1
    528a:	90 e0       	ldi	r25, 0x00	; 0
    528c:	91 83       	std	Z+1, r25	; 0x01
    528e:	80 83       	st	Z, r24
    5290:	64 c0       	rjmp	.+200    	; 0x535a <main+0x1252>
	else if (__tmp > 65535)
    5292:	fe 01       	movw	r30, r28
    5294:	ef 57       	subi	r30, 0x7F	; 127
    5296:	fe 4f       	sbci	r31, 0xFE	; 254
    5298:	60 81       	ld	r22, Z
    529a:	71 81       	ldd	r23, Z+1	; 0x01
    529c:	82 81       	ldd	r24, Z+2	; 0x02
    529e:	93 81       	ldd	r25, Z+3	; 0x03
    52a0:	20 e0       	ldi	r18, 0x00	; 0
    52a2:	3f ef       	ldi	r19, 0xFF	; 255
    52a4:	4f e7       	ldi	r20, 0x7F	; 127
    52a6:	57 e4       	ldi	r21, 0x47	; 71
    52a8:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    52ac:	18 16       	cp	r1, r24
    52ae:	0c f0       	brlt	.+2      	; 0x52b2 <main+0x11aa>
    52b0:	43 c0       	rjmp	.+134    	; 0x5338 <main+0x1230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52b2:	fe 01       	movw	r30, r28
    52b4:	eb 57       	subi	r30, 0x7B	; 123
    52b6:	fe 4f       	sbci	r31, 0xFE	; 254
    52b8:	60 81       	ld	r22, Z
    52ba:	71 81       	ldd	r23, Z+1	; 0x01
    52bc:	82 81       	ldd	r24, Z+2	; 0x02
    52be:	93 81       	ldd	r25, Z+3	; 0x03
    52c0:	20 e0       	ldi	r18, 0x00	; 0
    52c2:	30 e0       	ldi	r19, 0x00	; 0
    52c4:	40 e2       	ldi	r20, 0x20	; 32
    52c6:	51 e4       	ldi	r21, 0x41	; 65
    52c8:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    52cc:	dc 01       	movw	r26, r24
    52ce:	cb 01       	movw	r24, r22
    52d0:	8e 01       	movw	r16, r28
    52d2:	01 58       	subi	r16, 0x81	; 129
    52d4:	1e 4f       	sbci	r17, 0xFE	; 254
    52d6:	bc 01       	movw	r22, r24
    52d8:	cd 01       	movw	r24, r26
    52da:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    52de:	dc 01       	movw	r26, r24
    52e0:	cb 01       	movw	r24, r22
    52e2:	f8 01       	movw	r30, r16
    52e4:	91 83       	std	Z+1, r25	; 0x01
    52e6:	80 83       	st	Z, r24
    52e8:	1f c0       	rjmp	.+62     	; 0x5328 <main+0x1220>
    52ea:	fe 01       	movw	r30, r28
    52ec:	e3 58       	subi	r30, 0x83	; 131
    52ee:	fe 4f       	sbci	r31, 0xFE	; 254
    52f0:	88 ec       	ldi	r24, 0xC8	; 200
    52f2:	90 e0       	ldi	r25, 0x00	; 0
    52f4:	91 83       	std	Z+1, r25	; 0x01
    52f6:	80 83       	st	Z, r24
    52f8:	fe 01       	movw	r30, r28
    52fa:	e3 58       	subi	r30, 0x83	; 131
    52fc:	fe 4f       	sbci	r31, 0xFE	; 254
    52fe:	80 81       	ld	r24, Z
    5300:	91 81       	ldd	r25, Z+1	; 0x01
    5302:	01 97       	sbiw	r24, 0x01	; 1
    5304:	f1 f7       	brne	.-4      	; 0x5302 <main+0x11fa>
    5306:	fe 01       	movw	r30, r28
    5308:	e3 58       	subi	r30, 0x83	; 131
    530a:	fe 4f       	sbci	r31, 0xFE	; 254
    530c:	91 83       	std	Z+1, r25	; 0x01
    530e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5310:	de 01       	movw	r26, r28
    5312:	a1 58       	subi	r26, 0x81	; 129
    5314:	be 4f       	sbci	r27, 0xFE	; 254
    5316:	fe 01       	movw	r30, r28
    5318:	e1 58       	subi	r30, 0x81	; 129
    531a:	fe 4f       	sbci	r31, 0xFE	; 254
    531c:	80 81       	ld	r24, Z
    531e:	91 81       	ldd	r25, Z+1	; 0x01
    5320:	01 97       	sbiw	r24, 0x01	; 1
    5322:	11 96       	adiw	r26, 0x01	; 1
    5324:	9c 93       	st	X, r25
    5326:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5328:	fe 01       	movw	r30, r28
    532a:	e1 58       	subi	r30, 0x81	; 129
    532c:	fe 4f       	sbci	r31, 0xFE	; 254
    532e:	80 81       	ld	r24, Z
    5330:	91 81       	ldd	r25, Z+1	; 0x01
    5332:	00 97       	sbiw	r24, 0x00	; 0
    5334:	d1 f6       	brne	.-76     	; 0x52ea <main+0x11e2>
    5336:	27 c0       	rjmp	.+78     	; 0x5386 <main+0x127e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5338:	8e 01       	movw	r16, r28
    533a:	01 58       	subi	r16, 0x81	; 129
    533c:	1e 4f       	sbci	r17, 0xFE	; 254
    533e:	fe 01       	movw	r30, r28
    5340:	ef 57       	subi	r30, 0x7F	; 127
    5342:	fe 4f       	sbci	r31, 0xFE	; 254
    5344:	60 81       	ld	r22, Z
    5346:	71 81       	ldd	r23, Z+1	; 0x01
    5348:	82 81       	ldd	r24, Z+2	; 0x02
    534a:	93 81       	ldd	r25, Z+3	; 0x03
    534c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5350:	dc 01       	movw	r26, r24
    5352:	cb 01       	movw	r24, r22
    5354:	f8 01       	movw	r30, r16
    5356:	91 83       	std	Z+1, r25	; 0x01
    5358:	80 83       	st	Z, r24
    535a:	de 01       	movw	r26, r28
    535c:	a5 58       	subi	r26, 0x85	; 133
    535e:	be 4f       	sbci	r27, 0xFE	; 254
    5360:	fe 01       	movw	r30, r28
    5362:	e1 58       	subi	r30, 0x81	; 129
    5364:	fe 4f       	sbci	r31, 0xFE	; 254
    5366:	80 81       	ld	r24, Z
    5368:	91 81       	ldd	r25, Z+1	; 0x01
    536a:	8d 93       	st	X+, r24
    536c:	9c 93       	st	X, r25
    536e:	fe 01       	movw	r30, r28
    5370:	e5 58       	subi	r30, 0x85	; 133
    5372:	fe 4f       	sbci	r31, 0xFE	; 254
    5374:	80 81       	ld	r24, Z
    5376:	91 81       	ldd	r25, Z+1	; 0x01
    5378:	01 97       	sbiw	r24, 0x01	; 1
    537a:	f1 f7       	brne	.-4      	; 0x5378 <main+0x1270>
    537c:	fe 01       	movw	r30, r28
    537e:	e5 58       	subi	r30, 0x85	; 133
    5380:	fe 4f       	sbci	r31, 0xFE	; 254
    5382:	91 83       	std	Z+1, r25	; 0x01
    5384:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(2,1);
    5386:	82 e0       	ldi	r24, 0x02	; 2
    5388:	61 e0       	ldi	r22, 0x01	; 1
    538a:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(0);
    538e:	80 e0       	ldi	r24, 0x00	; 0
    5390:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
			LCD_Goto(2,2);
    5394:	82 e0       	ldi	r24, 0x02	; 2
    5396:	62 e0       	ldi	r22, 0x02	; 2
    5398:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(1);
    539c:	81 e0       	ldi	r24, 0x01	; 1
    539e:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    53a2:	fe 01       	movw	r30, r28
    53a4:	e9 58       	subi	r30, 0x89	; 137
    53a6:	fe 4f       	sbci	r31, 0xFE	; 254
    53a8:	80 e0       	ldi	r24, 0x00	; 0
    53aa:	90 e0       	ldi	r25, 0x00	; 0
    53ac:	aa ef       	ldi	r26, 0xFA	; 250
    53ae:	b3 e4       	ldi	r27, 0x43	; 67
    53b0:	80 83       	st	Z, r24
    53b2:	91 83       	std	Z+1, r25	; 0x01
    53b4:	a2 83       	std	Z+2, r26	; 0x02
    53b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    53b8:	8e 01       	movw	r16, r28
    53ba:	0d 58       	subi	r16, 0x8D	; 141
    53bc:	1e 4f       	sbci	r17, 0xFE	; 254
    53be:	fe 01       	movw	r30, r28
    53c0:	e9 58       	subi	r30, 0x89	; 137
    53c2:	fe 4f       	sbci	r31, 0xFE	; 254
    53c4:	60 81       	ld	r22, Z
    53c6:	71 81       	ldd	r23, Z+1	; 0x01
    53c8:	82 81       	ldd	r24, Z+2	; 0x02
    53ca:	93 81       	ldd	r25, Z+3	; 0x03
    53cc:	20 e0       	ldi	r18, 0x00	; 0
    53ce:	30 e0       	ldi	r19, 0x00	; 0
    53d0:	4a ef       	ldi	r20, 0xFA	; 250
    53d2:	54 e4       	ldi	r21, 0x44	; 68
    53d4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    53d8:	dc 01       	movw	r26, r24
    53da:	cb 01       	movw	r24, r22
    53dc:	f8 01       	movw	r30, r16
    53de:	80 83       	st	Z, r24
    53e0:	91 83       	std	Z+1, r25	; 0x01
    53e2:	a2 83       	std	Z+2, r26	; 0x02
    53e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    53e6:	fe 01       	movw	r30, r28
    53e8:	ed 58       	subi	r30, 0x8D	; 141
    53ea:	fe 4f       	sbci	r31, 0xFE	; 254
    53ec:	60 81       	ld	r22, Z
    53ee:	71 81       	ldd	r23, Z+1	; 0x01
    53f0:	82 81       	ldd	r24, Z+2	; 0x02
    53f2:	93 81       	ldd	r25, Z+3	; 0x03
    53f4:	20 e0       	ldi	r18, 0x00	; 0
    53f6:	30 e0       	ldi	r19, 0x00	; 0
    53f8:	40 e8       	ldi	r20, 0x80	; 128
    53fa:	5f e3       	ldi	r21, 0x3F	; 63
    53fc:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    5400:	88 23       	and	r24, r24
    5402:	44 f4       	brge	.+16     	; 0x5414 <main+0x130c>
		__ticks = 1;
    5404:	fe 01       	movw	r30, r28
    5406:	ef 58       	subi	r30, 0x8F	; 143
    5408:	fe 4f       	sbci	r31, 0xFE	; 254
    540a:	81 e0       	ldi	r24, 0x01	; 1
    540c:	90 e0       	ldi	r25, 0x00	; 0
    540e:	91 83       	std	Z+1, r25	; 0x01
    5410:	80 83       	st	Z, r24
    5412:	64 c0       	rjmp	.+200    	; 0x54dc <main+0x13d4>
	else if (__tmp > 65535)
    5414:	fe 01       	movw	r30, r28
    5416:	ed 58       	subi	r30, 0x8D	; 141
    5418:	fe 4f       	sbci	r31, 0xFE	; 254
    541a:	60 81       	ld	r22, Z
    541c:	71 81       	ldd	r23, Z+1	; 0x01
    541e:	82 81       	ldd	r24, Z+2	; 0x02
    5420:	93 81       	ldd	r25, Z+3	; 0x03
    5422:	20 e0       	ldi	r18, 0x00	; 0
    5424:	3f ef       	ldi	r19, 0xFF	; 255
    5426:	4f e7       	ldi	r20, 0x7F	; 127
    5428:	57 e4       	ldi	r21, 0x47	; 71
    542a:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    542e:	18 16       	cp	r1, r24
    5430:	0c f0       	brlt	.+2      	; 0x5434 <main+0x132c>
    5432:	43 c0       	rjmp	.+134    	; 0x54ba <main+0x13b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5434:	fe 01       	movw	r30, r28
    5436:	e9 58       	subi	r30, 0x89	; 137
    5438:	fe 4f       	sbci	r31, 0xFE	; 254
    543a:	60 81       	ld	r22, Z
    543c:	71 81       	ldd	r23, Z+1	; 0x01
    543e:	82 81       	ldd	r24, Z+2	; 0x02
    5440:	93 81       	ldd	r25, Z+3	; 0x03
    5442:	20 e0       	ldi	r18, 0x00	; 0
    5444:	30 e0       	ldi	r19, 0x00	; 0
    5446:	40 e2       	ldi	r20, 0x20	; 32
    5448:	51 e4       	ldi	r21, 0x41	; 65
    544a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    544e:	dc 01       	movw	r26, r24
    5450:	cb 01       	movw	r24, r22
    5452:	8e 01       	movw	r16, r28
    5454:	0f 58       	subi	r16, 0x8F	; 143
    5456:	1e 4f       	sbci	r17, 0xFE	; 254
    5458:	bc 01       	movw	r22, r24
    545a:	cd 01       	movw	r24, r26
    545c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5460:	dc 01       	movw	r26, r24
    5462:	cb 01       	movw	r24, r22
    5464:	f8 01       	movw	r30, r16
    5466:	91 83       	std	Z+1, r25	; 0x01
    5468:	80 83       	st	Z, r24
    546a:	1f c0       	rjmp	.+62     	; 0x54aa <main+0x13a2>
    546c:	fe 01       	movw	r30, r28
    546e:	e1 59       	subi	r30, 0x91	; 145
    5470:	fe 4f       	sbci	r31, 0xFE	; 254
    5472:	88 ec       	ldi	r24, 0xC8	; 200
    5474:	90 e0       	ldi	r25, 0x00	; 0
    5476:	91 83       	std	Z+1, r25	; 0x01
    5478:	80 83       	st	Z, r24
    547a:	fe 01       	movw	r30, r28
    547c:	e1 59       	subi	r30, 0x91	; 145
    547e:	fe 4f       	sbci	r31, 0xFE	; 254
    5480:	80 81       	ld	r24, Z
    5482:	91 81       	ldd	r25, Z+1	; 0x01
    5484:	01 97       	sbiw	r24, 0x01	; 1
    5486:	f1 f7       	brne	.-4      	; 0x5484 <main+0x137c>
    5488:	fe 01       	movw	r30, r28
    548a:	e1 59       	subi	r30, 0x91	; 145
    548c:	fe 4f       	sbci	r31, 0xFE	; 254
    548e:	91 83       	std	Z+1, r25	; 0x01
    5490:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5492:	de 01       	movw	r26, r28
    5494:	af 58       	subi	r26, 0x8F	; 143
    5496:	be 4f       	sbci	r27, 0xFE	; 254
    5498:	fe 01       	movw	r30, r28
    549a:	ef 58       	subi	r30, 0x8F	; 143
    549c:	fe 4f       	sbci	r31, 0xFE	; 254
    549e:	80 81       	ld	r24, Z
    54a0:	91 81       	ldd	r25, Z+1	; 0x01
    54a2:	01 97       	sbiw	r24, 0x01	; 1
    54a4:	11 96       	adiw	r26, 0x01	; 1
    54a6:	9c 93       	st	X, r25
    54a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    54aa:	fe 01       	movw	r30, r28
    54ac:	ef 58       	subi	r30, 0x8F	; 143
    54ae:	fe 4f       	sbci	r31, 0xFE	; 254
    54b0:	80 81       	ld	r24, Z
    54b2:	91 81       	ldd	r25, Z+1	; 0x01
    54b4:	00 97       	sbiw	r24, 0x00	; 0
    54b6:	d1 f6       	brne	.-76     	; 0x546c <main+0x1364>
    54b8:	27 c0       	rjmp	.+78     	; 0x5508 <main+0x1400>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    54ba:	8e 01       	movw	r16, r28
    54bc:	0f 58       	subi	r16, 0x8F	; 143
    54be:	1e 4f       	sbci	r17, 0xFE	; 254
    54c0:	fe 01       	movw	r30, r28
    54c2:	ed 58       	subi	r30, 0x8D	; 141
    54c4:	fe 4f       	sbci	r31, 0xFE	; 254
    54c6:	60 81       	ld	r22, Z
    54c8:	71 81       	ldd	r23, Z+1	; 0x01
    54ca:	82 81       	ldd	r24, Z+2	; 0x02
    54cc:	93 81       	ldd	r25, Z+3	; 0x03
    54ce:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    54d2:	dc 01       	movw	r26, r24
    54d4:	cb 01       	movw	r24, r22
    54d6:	f8 01       	movw	r30, r16
    54d8:	91 83       	std	Z+1, r25	; 0x01
    54da:	80 83       	st	Z, r24
    54dc:	de 01       	movw	r26, r28
    54de:	a3 59       	subi	r26, 0x93	; 147
    54e0:	be 4f       	sbci	r27, 0xFE	; 254
    54e2:	fe 01       	movw	r30, r28
    54e4:	ef 58       	subi	r30, 0x8F	; 143
    54e6:	fe 4f       	sbci	r31, 0xFE	; 254
    54e8:	80 81       	ld	r24, Z
    54ea:	91 81       	ldd	r25, Z+1	; 0x01
    54ec:	8d 93       	st	X+, r24
    54ee:	9c 93       	st	X, r25
    54f0:	fe 01       	movw	r30, r28
    54f2:	e3 59       	subi	r30, 0x93	; 147
    54f4:	fe 4f       	sbci	r31, 0xFE	; 254
    54f6:	80 81       	ld	r24, Z
    54f8:	91 81       	ldd	r25, Z+1	; 0x01
    54fa:	01 97       	sbiw	r24, 0x01	; 1
    54fc:	f1 f7       	brne	.-4      	; 0x54fa <main+0x13f2>
    54fe:	fe 01       	movw	r30, r28
    5500:	e3 59       	subi	r30, 0x93	; 147
    5502:	fe 4f       	sbci	r31, 0xFE	; 254
    5504:	91 83       	std	Z+1, r25	; 0x01
    5506:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(2,2);
    5508:	82 e0       	ldi	r24, 0x02	; 2
    550a:	62 e0       	ldi	r22, 0x02	; 2
    550c:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(0);
    5510:	80 e0       	ldi	r24, 0x00	; 0
    5512:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    5516:	fe 01       	movw	r30, r28
    5518:	e7 59       	subi	r30, 0x97	; 151
    551a:	fe 4f       	sbci	r31, 0xFE	; 254
    551c:	80 e0       	ldi	r24, 0x00	; 0
    551e:	90 e0       	ldi	r25, 0x00	; 0
    5520:	a6 e9       	ldi	r26, 0x96	; 150
    5522:	b3 e4       	ldi	r27, 0x43	; 67
    5524:	80 83       	st	Z, r24
    5526:	91 83       	std	Z+1, r25	; 0x01
    5528:	a2 83       	std	Z+2, r26	; 0x02
    552a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    552c:	8e 01       	movw	r16, r28
    552e:	0b 59       	subi	r16, 0x9B	; 155
    5530:	1e 4f       	sbci	r17, 0xFE	; 254
    5532:	fe 01       	movw	r30, r28
    5534:	e7 59       	subi	r30, 0x97	; 151
    5536:	fe 4f       	sbci	r31, 0xFE	; 254
    5538:	60 81       	ld	r22, Z
    553a:	71 81       	ldd	r23, Z+1	; 0x01
    553c:	82 81       	ldd	r24, Z+2	; 0x02
    553e:	93 81       	ldd	r25, Z+3	; 0x03
    5540:	20 e0       	ldi	r18, 0x00	; 0
    5542:	30 e0       	ldi	r19, 0x00	; 0
    5544:	4a ef       	ldi	r20, 0xFA	; 250
    5546:	54 e4       	ldi	r21, 0x44	; 68
    5548:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    554c:	dc 01       	movw	r26, r24
    554e:	cb 01       	movw	r24, r22
    5550:	f8 01       	movw	r30, r16
    5552:	80 83       	st	Z, r24
    5554:	91 83       	std	Z+1, r25	; 0x01
    5556:	a2 83       	std	Z+2, r26	; 0x02
    5558:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    555a:	fe 01       	movw	r30, r28
    555c:	eb 59       	subi	r30, 0x9B	; 155
    555e:	fe 4f       	sbci	r31, 0xFE	; 254
    5560:	60 81       	ld	r22, Z
    5562:	71 81       	ldd	r23, Z+1	; 0x01
    5564:	82 81       	ldd	r24, Z+2	; 0x02
    5566:	93 81       	ldd	r25, Z+3	; 0x03
    5568:	20 e0       	ldi	r18, 0x00	; 0
    556a:	30 e0       	ldi	r19, 0x00	; 0
    556c:	40 e8       	ldi	r20, 0x80	; 128
    556e:	5f e3       	ldi	r21, 0x3F	; 63
    5570:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    5574:	88 23       	and	r24, r24
    5576:	44 f4       	brge	.+16     	; 0x5588 <main+0x1480>
		__ticks = 1;
    5578:	fe 01       	movw	r30, r28
    557a:	ed 59       	subi	r30, 0x9D	; 157
    557c:	fe 4f       	sbci	r31, 0xFE	; 254
    557e:	81 e0       	ldi	r24, 0x01	; 1
    5580:	90 e0       	ldi	r25, 0x00	; 0
    5582:	91 83       	std	Z+1, r25	; 0x01
    5584:	80 83       	st	Z, r24
    5586:	64 c0       	rjmp	.+200    	; 0x5650 <main+0x1548>
	else if (__tmp > 65535)
    5588:	fe 01       	movw	r30, r28
    558a:	eb 59       	subi	r30, 0x9B	; 155
    558c:	fe 4f       	sbci	r31, 0xFE	; 254
    558e:	60 81       	ld	r22, Z
    5590:	71 81       	ldd	r23, Z+1	; 0x01
    5592:	82 81       	ldd	r24, Z+2	; 0x02
    5594:	93 81       	ldd	r25, Z+3	; 0x03
    5596:	20 e0       	ldi	r18, 0x00	; 0
    5598:	3f ef       	ldi	r19, 0xFF	; 255
    559a:	4f e7       	ldi	r20, 0x7F	; 127
    559c:	57 e4       	ldi	r21, 0x47	; 71
    559e:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    55a2:	18 16       	cp	r1, r24
    55a4:	0c f0       	brlt	.+2      	; 0x55a8 <main+0x14a0>
    55a6:	43 c0       	rjmp	.+134    	; 0x562e <main+0x1526>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    55a8:	fe 01       	movw	r30, r28
    55aa:	e7 59       	subi	r30, 0x97	; 151
    55ac:	fe 4f       	sbci	r31, 0xFE	; 254
    55ae:	60 81       	ld	r22, Z
    55b0:	71 81       	ldd	r23, Z+1	; 0x01
    55b2:	82 81       	ldd	r24, Z+2	; 0x02
    55b4:	93 81       	ldd	r25, Z+3	; 0x03
    55b6:	20 e0       	ldi	r18, 0x00	; 0
    55b8:	30 e0       	ldi	r19, 0x00	; 0
    55ba:	40 e2       	ldi	r20, 0x20	; 32
    55bc:	51 e4       	ldi	r21, 0x41	; 65
    55be:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    55c2:	dc 01       	movw	r26, r24
    55c4:	cb 01       	movw	r24, r22
    55c6:	8e 01       	movw	r16, r28
    55c8:	0d 59       	subi	r16, 0x9D	; 157
    55ca:	1e 4f       	sbci	r17, 0xFE	; 254
    55cc:	bc 01       	movw	r22, r24
    55ce:	cd 01       	movw	r24, r26
    55d0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    55d4:	dc 01       	movw	r26, r24
    55d6:	cb 01       	movw	r24, r22
    55d8:	f8 01       	movw	r30, r16
    55da:	91 83       	std	Z+1, r25	; 0x01
    55dc:	80 83       	st	Z, r24
    55de:	1f c0       	rjmp	.+62     	; 0x561e <main+0x1516>
    55e0:	fe 01       	movw	r30, r28
    55e2:	ef 59       	subi	r30, 0x9F	; 159
    55e4:	fe 4f       	sbci	r31, 0xFE	; 254
    55e6:	88 ec       	ldi	r24, 0xC8	; 200
    55e8:	90 e0       	ldi	r25, 0x00	; 0
    55ea:	91 83       	std	Z+1, r25	; 0x01
    55ec:	80 83       	st	Z, r24
    55ee:	fe 01       	movw	r30, r28
    55f0:	ef 59       	subi	r30, 0x9F	; 159
    55f2:	fe 4f       	sbci	r31, 0xFE	; 254
    55f4:	80 81       	ld	r24, Z
    55f6:	91 81       	ldd	r25, Z+1	; 0x01
    55f8:	01 97       	sbiw	r24, 0x01	; 1
    55fa:	f1 f7       	brne	.-4      	; 0x55f8 <main+0x14f0>
    55fc:	fe 01       	movw	r30, r28
    55fe:	ef 59       	subi	r30, 0x9F	; 159
    5600:	fe 4f       	sbci	r31, 0xFE	; 254
    5602:	91 83       	std	Z+1, r25	; 0x01
    5604:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5606:	de 01       	movw	r26, r28
    5608:	ad 59       	subi	r26, 0x9D	; 157
    560a:	be 4f       	sbci	r27, 0xFE	; 254
    560c:	fe 01       	movw	r30, r28
    560e:	ed 59       	subi	r30, 0x9D	; 157
    5610:	fe 4f       	sbci	r31, 0xFE	; 254
    5612:	80 81       	ld	r24, Z
    5614:	91 81       	ldd	r25, Z+1	; 0x01
    5616:	01 97       	sbiw	r24, 0x01	; 1
    5618:	11 96       	adiw	r26, 0x01	; 1
    561a:	9c 93       	st	X, r25
    561c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    561e:	fe 01       	movw	r30, r28
    5620:	ed 59       	subi	r30, 0x9D	; 157
    5622:	fe 4f       	sbci	r31, 0xFE	; 254
    5624:	80 81       	ld	r24, Z
    5626:	91 81       	ldd	r25, Z+1	; 0x01
    5628:	00 97       	sbiw	r24, 0x00	; 0
    562a:	d1 f6       	brne	.-76     	; 0x55e0 <main+0x14d8>
    562c:	27 c0       	rjmp	.+78     	; 0x567c <main+0x1574>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    562e:	8e 01       	movw	r16, r28
    5630:	0d 59       	subi	r16, 0x9D	; 157
    5632:	1e 4f       	sbci	r17, 0xFE	; 254
    5634:	fe 01       	movw	r30, r28
    5636:	eb 59       	subi	r30, 0x9B	; 155
    5638:	fe 4f       	sbci	r31, 0xFE	; 254
    563a:	60 81       	ld	r22, Z
    563c:	71 81       	ldd	r23, Z+1	; 0x01
    563e:	82 81       	ldd	r24, Z+2	; 0x02
    5640:	93 81       	ldd	r25, Z+3	; 0x03
    5642:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5646:	dc 01       	movw	r26, r24
    5648:	cb 01       	movw	r24, r22
    564a:	f8 01       	movw	r30, r16
    564c:	91 83       	std	Z+1, r25	; 0x01
    564e:	80 83       	st	Z, r24
    5650:	de 01       	movw	r26, r28
    5652:	a1 5a       	subi	r26, 0xA1	; 161
    5654:	be 4f       	sbci	r27, 0xFE	; 254
    5656:	fe 01       	movw	r30, r28
    5658:	ed 59       	subi	r30, 0x9D	; 157
    565a:	fe 4f       	sbci	r31, 0xFE	; 254
    565c:	80 81       	ld	r24, Z
    565e:	91 81       	ldd	r25, Z+1	; 0x01
    5660:	8d 93       	st	X+, r24
    5662:	9c 93       	st	X, r25
    5664:	fe 01       	movw	r30, r28
    5666:	e1 5a       	subi	r30, 0xA1	; 161
    5668:	fe 4f       	sbci	r31, 0xFE	; 254
    566a:	80 81       	ld	r24, Z
    566c:	91 81       	ldd	r25, Z+1	; 0x01
    566e:	01 97       	sbiw	r24, 0x01	; 1
    5670:	f1 f7       	brne	.-4      	; 0x566e <main+0x1566>
    5672:	fe 01       	movw	r30, r28
    5674:	e1 5a       	subi	r30, 0xA1	; 161
    5676:	fe 4f       	sbci	r31, 0xFE	; 254
    5678:	91 83       	std	Z+1, r25	; 0x01
    567a:	80 83       	st	Z, r24
			_delay_ms(300);
			LCD_Goto(2,3);
    567c:	82 e0       	ldi	r24, 0x02	; 2
    567e:	63 e0       	ldi	r22, 0x03	; 3
    5680:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(1);
    5684:	81 e0       	ldi	r24, 0x01	; 1
    5686:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>

			LCD_Goto(2,15);
    568a:	82 e0       	ldi	r24, 0x02	; 2
    568c:	6f e0       	ldi	r22, 0x0F	; 15
    568e:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(2);
    5692:	82 e0       	ldi	r24, 0x02	; 2
    5694:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    5698:	fe 01       	movw	r30, r28
    569a:	e5 5a       	subi	r30, 0xA5	; 165
    569c:	fe 4f       	sbci	r31, 0xFE	; 254
    569e:	80 e0       	ldi	r24, 0x00	; 0
    56a0:	90 e0       	ldi	r25, 0x00	; 0
    56a2:	aa e7       	ldi	r26, 0x7A	; 122
    56a4:	b4 e4       	ldi	r27, 0x44	; 68
    56a6:	80 83       	st	Z, r24
    56a8:	91 83       	std	Z+1, r25	; 0x01
    56aa:	a2 83       	std	Z+2, r26	; 0x02
    56ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    56ae:	8e 01       	movw	r16, r28
    56b0:	09 5a       	subi	r16, 0xA9	; 169
    56b2:	1e 4f       	sbci	r17, 0xFE	; 254
    56b4:	fe 01       	movw	r30, r28
    56b6:	e5 5a       	subi	r30, 0xA5	; 165
    56b8:	fe 4f       	sbci	r31, 0xFE	; 254
    56ba:	60 81       	ld	r22, Z
    56bc:	71 81       	ldd	r23, Z+1	; 0x01
    56be:	82 81       	ldd	r24, Z+2	; 0x02
    56c0:	93 81       	ldd	r25, Z+3	; 0x03
    56c2:	20 e0       	ldi	r18, 0x00	; 0
    56c4:	30 e0       	ldi	r19, 0x00	; 0
    56c6:	4a ef       	ldi	r20, 0xFA	; 250
    56c8:	54 e4       	ldi	r21, 0x44	; 68
    56ca:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    56ce:	dc 01       	movw	r26, r24
    56d0:	cb 01       	movw	r24, r22
    56d2:	f8 01       	movw	r30, r16
    56d4:	80 83       	st	Z, r24
    56d6:	91 83       	std	Z+1, r25	; 0x01
    56d8:	a2 83       	std	Z+2, r26	; 0x02
    56da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    56dc:	fe 01       	movw	r30, r28
    56de:	e9 5a       	subi	r30, 0xA9	; 169
    56e0:	fe 4f       	sbci	r31, 0xFE	; 254
    56e2:	60 81       	ld	r22, Z
    56e4:	71 81       	ldd	r23, Z+1	; 0x01
    56e6:	82 81       	ldd	r24, Z+2	; 0x02
    56e8:	93 81       	ldd	r25, Z+3	; 0x03
    56ea:	20 e0       	ldi	r18, 0x00	; 0
    56ec:	30 e0       	ldi	r19, 0x00	; 0
    56ee:	40 e8       	ldi	r20, 0x80	; 128
    56f0:	5f e3       	ldi	r21, 0x3F	; 63
    56f2:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    56f6:	88 23       	and	r24, r24
    56f8:	44 f4       	brge	.+16     	; 0x570a <main+0x1602>
		__ticks = 1;
    56fa:	fe 01       	movw	r30, r28
    56fc:	eb 5a       	subi	r30, 0xAB	; 171
    56fe:	fe 4f       	sbci	r31, 0xFE	; 254
    5700:	81 e0       	ldi	r24, 0x01	; 1
    5702:	90 e0       	ldi	r25, 0x00	; 0
    5704:	91 83       	std	Z+1, r25	; 0x01
    5706:	80 83       	st	Z, r24
    5708:	64 c0       	rjmp	.+200    	; 0x57d2 <main+0x16ca>
	else if (__tmp > 65535)
    570a:	fe 01       	movw	r30, r28
    570c:	e9 5a       	subi	r30, 0xA9	; 169
    570e:	fe 4f       	sbci	r31, 0xFE	; 254
    5710:	60 81       	ld	r22, Z
    5712:	71 81       	ldd	r23, Z+1	; 0x01
    5714:	82 81       	ldd	r24, Z+2	; 0x02
    5716:	93 81       	ldd	r25, Z+3	; 0x03
    5718:	20 e0       	ldi	r18, 0x00	; 0
    571a:	3f ef       	ldi	r19, 0xFF	; 255
    571c:	4f e7       	ldi	r20, 0x7F	; 127
    571e:	57 e4       	ldi	r21, 0x47	; 71
    5720:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    5724:	18 16       	cp	r1, r24
    5726:	0c f0       	brlt	.+2      	; 0x572a <main+0x1622>
    5728:	43 c0       	rjmp	.+134    	; 0x57b0 <main+0x16a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    572a:	fe 01       	movw	r30, r28
    572c:	e5 5a       	subi	r30, 0xA5	; 165
    572e:	fe 4f       	sbci	r31, 0xFE	; 254
    5730:	60 81       	ld	r22, Z
    5732:	71 81       	ldd	r23, Z+1	; 0x01
    5734:	82 81       	ldd	r24, Z+2	; 0x02
    5736:	93 81       	ldd	r25, Z+3	; 0x03
    5738:	20 e0       	ldi	r18, 0x00	; 0
    573a:	30 e0       	ldi	r19, 0x00	; 0
    573c:	40 e2       	ldi	r20, 0x20	; 32
    573e:	51 e4       	ldi	r21, 0x41	; 65
    5740:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5744:	dc 01       	movw	r26, r24
    5746:	cb 01       	movw	r24, r22
    5748:	8e 01       	movw	r16, r28
    574a:	0b 5a       	subi	r16, 0xAB	; 171
    574c:	1e 4f       	sbci	r17, 0xFE	; 254
    574e:	bc 01       	movw	r22, r24
    5750:	cd 01       	movw	r24, r26
    5752:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5756:	dc 01       	movw	r26, r24
    5758:	cb 01       	movw	r24, r22
    575a:	f8 01       	movw	r30, r16
    575c:	91 83       	std	Z+1, r25	; 0x01
    575e:	80 83       	st	Z, r24
    5760:	1f c0       	rjmp	.+62     	; 0x57a0 <main+0x1698>
    5762:	fe 01       	movw	r30, r28
    5764:	ed 5a       	subi	r30, 0xAD	; 173
    5766:	fe 4f       	sbci	r31, 0xFE	; 254
    5768:	88 ec       	ldi	r24, 0xC8	; 200
    576a:	90 e0       	ldi	r25, 0x00	; 0
    576c:	91 83       	std	Z+1, r25	; 0x01
    576e:	80 83       	st	Z, r24
    5770:	fe 01       	movw	r30, r28
    5772:	ed 5a       	subi	r30, 0xAD	; 173
    5774:	fe 4f       	sbci	r31, 0xFE	; 254
    5776:	80 81       	ld	r24, Z
    5778:	91 81       	ldd	r25, Z+1	; 0x01
    577a:	01 97       	sbiw	r24, 0x01	; 1
    577c:	f1 f7       	brne	.-4      	; 0x577a <main+0x1672>
    577e:	fe 01       	movw	r30, r28
    5780:	ed 5a       	subi	r30, 0xAD	; 173
    5782:	fe 4f       	sbci	r31, 0xFE	; 254
    5784:	91 83       	std	Z+1, r25	; 0x01
    5786:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5788:	de 01       	movw	r26, r28
    578a:	ab 5a       	subi	r26, 0xAB	; 171
    578c:	be 4f       	sbci	r27, 0xFE	; 254
    578e:	fe 01       	movw	r30, r28
    5790:	eb 5a       	subi	r30, 0xAB	; 171
    5792:	fe 4f       	sbci	r31, 0xFE	; 254
    5794:	80 81       	ld	r24, Z
    5796:	91 81       	ldd	r25, Z+1	; 0x01
    5798:	01 97       	sbiw	r24, 0x01	; 1
    579a:	11 96       	adiw	r26, 0x01	; 1
    579c:	9c 93       	st	X, r25
    579e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    57a0:	fe 01       	movw	r30, r28
    57a2:	eb 5a       	subi	r30, 0xAB	; 171
    57a4:	fe 4f       	sbci	r31, 0xFE	; 254
    57a6:	80 81       	ld	r24, Z
    57a8:	91 81       	ldd	r25, Z+1	; 0x01
    57aa:	00 97       	sbiw	r24, 0x00	; 0
    57ac:	d1 f6       	brne	.-76     	; 0x5762 <main+0x165a>
    57ae:	27 c0       	rjmp	.+78     	; 0x57fe <main+0x16f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    57b0:	8e 01       	movw	r16, r28
    57b2:	0b 5a       	subi	r16, 0xAB	; 171
    57b4:	1e 4f       	sbci	r17, 0xFE	; 254
    57b6:	fe 01       	movw	r30, r28
    57b8:	e9 5a       	subi	r30, 0xA9	; 169
    57ba:	fe 4f       	sbci	r31, 0xFE	; 254
    57bc:	60 81       	ld	r22, Z
    57be:	71 81       	ldd	r23, Z+1	; 0x01
    57c0:	82 81       	ldd	r24, Z+2	; 0x02
    57c2:	93 81       	ldd	r25, Z+3	; 0x03
    57c4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    57c8:	dc 01       	movw	r26, r24
    57ca:	cb 01       	movw	r24, r22
    57cc:	f8 01       	movw	r30, r16
    57ce:	91 83       	std	Z+1, r25	; 0x01
    57d0:	80 83       	st	Z, r24
    57d2:	de 01       	movw	r26, r28
    57d4:	af 5a       	subi	r26, 0xAF	; 175
    57d6:	be 4f       	sbci	r27, 0xFE	; 254
    57d8:	fe 01       	movw	r30, r28
    57da:	eb 5a       	subi	r30, 0xAB	; 171
    57dc:	fe 4f       	sbci	r31, 0xFE	; 254
    57de:	80 81       	ld	r24, Z
    57e0:	91 81       	ldd	r25, Z+1	; 0x01
    57e2:	8d 93       	st	X+, r24
    57e4:	9c 93       	st	X, r25
    57e6:	fe 01       	movw	r30, r28
    57e8:	ef 5a       	subi	r30, 0xAF	; 175
    57ea:	fe 4f       	sbci	r31, 0xFE	; 254
    57ec:	80 81       	ld	r24, Z
    57ee:	91 81       	ldd	r25, Z+1	; 0x01
    57f0:	01 97       	sbiw	r24, 0x01	; 1
    57f2:	f1 f7       	brne	.-4      	; 0x57f0 <main+0x16e8>
    57f4:	fe 01       	movw	r30, r28
    57f6:	ef 5a       	subi	r30, 0xAF	; 175
    57f8:	fe 4f       	sbci	r31, 0xFE	; 254
    57fa:	91 83       	std	Z+1, r25	; 0x01
    57fc:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    57fe:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>

			LCD_Goto(1,4);
    5802:	81 e0       	ldi	r24, 0x01	; 1
    5804:	64 e0       	ldi	r22, 0x04	; 4
    5806:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_Goal);
    580a:	89 ec       	ldi	r24, 0xC9	; 201
    580c:	91 e0       	ldi	r25, 0x01	; 1
    580e:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    5812:	fe 01       	movw	r30, r28
    5814:	e3 5b       	subi	r30, 0xB3	; 179
    5816:	fe 4f       	sbci	r31, 0xFE	; 254
    5818:	80 e0       	ldi	r24, 0x00	; 0
    581a:	90 e0       	ldi	r25, 0x00	; 0
    581c:	aa e7       	ldi	r26, 0x7A	; 122
    581e:	b4 e4       	ldi	r27, 0x44	; 68
    5820:	80 83       	st	Z, r24
    5822:	91 83       	std	Z+1, r25	; 0x01
    5824:	a2 83       	std	Z+2, r26	; 0x02
    5826:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5828:	8e 01       	movw	r16, r28
    582a:	07 5b       	subi	r16, 0xB7	; 183
    582c:	1e 4f       	sbci	r17, 0xFE	; 254
    582e:	fe 01       	movw	r30, r28
    5830:	e3 5b       	subi	r30, 0xB3	; 179
    5832:	fe 4f       	sbci	r31, 0xFE	; 254
    5834:	60 81       	ld	r22, Z
    5836:	71 81       	ldd	r23, Z+1	; 0x01
    5838:	82 81       	ldd	r24, Z+2	; 0x02
    583a:	93 81       	ldd	r25, Z+3	; 0x03
    583c:	20 e0       	ldi	r18, 0x00	; 0
    583e:	30 e0       	ldi	r19, 0x00	; 0
    5840:	4a ef       	ldi	r20, 0xFA	; 250
    5842:	54 e4       	ldi	r21, 0x44	; 68
    5844:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5848:	dc 01       	movw	r26, r24
    584a:	cb 01       	movw	r24, r22
    584c:	f8 01       	movw	r30, r16
    584e:	80 83       	st	Z, r24
    5850:	91 83       	std	Z+1, r25	; 0x01
    5852:	a2 83       	std	Z+2, r26	; 0x02
    5854:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5856:	fe 01       	movw	r30, r28
    5858:	e7 5b       	subi	r30, 0xB7	; 183
    585a:	fe 4f       	sbci	r31, 0xFE	; 254
    585c:	60 81       	ld	r22, Z
    585e:	71 81       	ldd	r23, Z+1	; 0x01
    5860:	82 81       	ldd	r24, Z+2	; 0x02
    5862:	93 81       	ldd	r25, Z+3	; 0x03
    5864:	20 e0       	ldi	r18, 0x00	; 0
    5866:	30 e0       	ldi	r19, 0x00	; 0
    5868:	40 e8       	ldi	r20, 0x80	; 128
    586a:	5f e3       	ldi	r21, 0x3F	; 63
    586c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    5870:	88 23       	and	r24, r24
    5872:	44 f4       	brge	.+16     	; 0x5884 <main+0x177c>
		__ticks = 1;
    5874:	fe 01       	movw	r30, r28
    5876:	e9 5b       	subi	r30, 0xB9	; 185
    5878:	fe 4f       	sbci	r31, 0xFE	; 254
    587a:	81 e0       	ldi	r24, 0x01	; 1
    587c:	90 e0       	ldi	r25, 0x00	; 0
    587e:	91 83       	std	Z+1, r25	; 0x01
    5880:	80 83       	st	Z, r24
    5882:	64 c0       	rjmp	.+200    	; 0x594c <main+0x1844>
	else if (__tmp > 65535)
    5884:	fe 01       	movw	r30, r28
    5886:	e7 5b       	subi	r30, 0xB7	; 183
    5888:	fe 4f       	sbci	r31, 0xFE	; 254
    588a:	60 81       	ld	r22, Z
    588c:	71 81       	ldd	r23, Z+1	; 0x01
    588e:	82 81       	ldd	r24, Z+2	; 0x02
    5890:	93 81       	ldd	r25, Z+3	; 0x03
    5892:	20 e0       	ldi	r18, 0x00	; 0
    5894:	3f ef       	ldi	r19, 0xFF	; 255
    5896:	4f e7       	ldi	r20, 0x7F	; 127
    5898:	57 e4       	ldi	r21, 0x47	; 71
    589a:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    589e:	18 16       	cp	r1, r24
    58a0:	0c f0       	brlt	.+2      	; 0x58a4 <main+0x179c>
    58a2:	43 c0       	rjmp	.+134    	; 0x592a <main+0x1822>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    58a4:	fe 01       	movw	r30, r28
    58a6:	e3 5b       	subi	r30, 0xB3	; 179
    58a8:	fe 4f       	sbci	r31, 0xFE	; 254
    58aa:	60 81       	ld	r22, Z
    58ac:	71 81       	ldd	r23, Z+1	; 0x01
    58ae:	82 81       	ldd	r24, Z+2	; 0x02
    58b0:	93 81       	ldd	r25, Z+3	; 0x03
    58b2:	20 e0       	ldi	r18, 0x00	; 0
    58b4:	30 e0       	ldi	r19, 0x00	; 0
    58b6:	40 e2       	ldi	r20, 0x20	; 32
    58b8:	51 e4       	ldi	r21, 0x41	; 65
    58ba:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    58be:	dc 01       	movw	r26, r24
    58c0:	cb 01       	movw	r24, r22
    58c2:	8e 01       	movw	r16, r28
    58c4:	09 5b       	subi	r16, 0xB9	; 185
    58c6:	1e 4f       	sbci	r17, 0xFE	; 254
    58c8:	bc 01       	movw	r22, r24
    58ca:	cd 01       	movw	r24, r26
    58cc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    58d0:	dc 01       	movw	r26, r24
    58d2:	cb 01       	movw	r24, r22
    58d4:	f8 01       	movw	r30, r16
    58d6:	91 83       	std	Z+1, r25	; 0x01
    58d8:	80 83       	st	Z, r24
    58da:	1f c0       	rjmp	.+62     	; 0x591a <main+0x1812>
    58dc:	fe 01       	movw	r30, r28
    58de:	eb 5b       	subi	r30, 0xBB	; 187
    58e0:	fe 4f       	sbci	r31, 0xFE	; 254
    58e2:	88 ec       	ldi	r24, 0xC8	; 200
    58e4:	90 e0       	ldi	r25, 0x00	; 0
    58e6:	91 83       	std	Z+1, r25	; 0x01
    58e8:	80 83       	st	Z, r24
    58ea:	fe 01       	movw	r30, r28
    58ec:	eb 5b       	subi	r30, 0xBB	; 187
    58ee:	fe 4f       	sbci	r31, 0xFE	; 254
    58f0:	80 81       	ld	r24, Z
    58f2:	91 81       	ldd	r25, Z+1	; 0x01
    58f4:	01 97       	sbiw	r24, 0x01	; 1
    58f6:	f1 f7       	brne	.-4      	; 0x58f4 <main+0x17ec>
    58f8:	fe 01       	movw	r30, r28
    58fa:	eb 5b       	subi	r30, 0xBB	; 187
    58fc:	fe 4f       	sbci	r31, 0xFE	; 254
    58fe:	91 83       	std	Z+1, r25	; 0x01
    5900:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5902:	de 01       	movw	r26, r28
    5904:	a9 5b       	subi	r26, 0xB9	; 185
    5906:	be 4f       	sbci	r27, 0xFE	; 254
    5908:	fe 01       	movw	r30, r28
    590a:	e9 5b       	subi	r30, 0xB9	; 185
    590c:	fe 4f       	sbci	r31, 0xFE	; 254
    590e:	80 81       	ld	r24, Z
    5910:	91 81       	ldd	r25, Z+1	; 0x01
    5912:	01 97       	sbiw	r24, 0x01	; 1
    5914:	11 96       	adiw	r26, 0x01	; 1
    5916:	9c 93       	st	X, r25
    5918:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    591a:	fe 01       	movw	r30, r28
    591c:	e9 5b       	subi	r30, 0xB9	; 185
    591e:	fe 4f       	sbci	r31, 0xFE	; 254
    5920:	80 81       	ld	r24, Z
    5922:	91 81       	ldd	r25, Z+1	; 0x01
    5924:	00 97       	sbiw	r24, 0x00	; 0
    5926:	d1 f6       	brne	.-76     	; 0x58dc <main+0x17d4>
    5928:	27 c0       	rjmp	.+78     	; 0x5978 <main+0x1870>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    592a:	8e 01       	movw	r16, r28
    592c:	09 5b       	subi	r16, 0xB9	; 185
    592e:	1e 4f       	sbci	r17, 0xFE	; 254
    5930:	fe 01       	movw	r30, r28
    5932:	e7 5b       	subi	r30, 0xB7	; 183
    5934:	fe 4f       	sbci	r31, 0xFE	; 254
    5936:	60 81       	ld	r22, Z
    5938:	71 81       	ldd	r23, Z+1	; 0x01
    593a:	82 81       	ldd	r24, Z+2	; 0x02
    593c:	93 81       	ldd	r25, Z+3	; 0x03
    593e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5942:	dc 01       	movw	r26, r24
    5944:	cb 01       	movw	r24, r22
    5946:	f8 01       	movw	r30, r16
    5948:	91 83       	std	Z+1, r25	; 0x01
    594a:	80 83       	st	Z, r24
    594c:	de 01       	movw	r26, r28
    594e:	ad 5b       	subi	r26, 0xBD	; 189
    5950:	be 4f       	sbci	r27, 0xFE	; 254
    5952:	fe 01       	movw	r30, r28
    5954:	e9 5b       	subi	r30, 0xB9	; 185
    5956:	fe 4f       	sbci	r31, 0xFE	; 254
    5958:	80 81       	ld	r24, Z
    595a:	91 81       	ldd	r25, Z+1	; 0x01
    595c:	8d 93       	st	X+, r24
    595e:	9c 93       	st	X, r25
    5960:	fe 01       	movw	r30, r28
    5962:	ed 5b       	subi	r30, 0xBD	; 189
    5964:	fe 4f       	sbci	r31, 0xFE	; 254
    5966:	80 81       	ld	r24, Z
    5968:	91 81       	ldd	r25, Z+1	; 0x01
    596a:	01 97       	sbiw	r24, 0x01	; 1
    596c:	f1 f7       	brne	.-4      	; 0x596a <main+0x1862>
    596e:	fe 01       	movw	r30, r28
    5970:	ed 5b       	subi	r30, 0xBD	; 189
    5972:	fe 4f       	sbci	r31, 0xFE	; 254
    5974:	91 83       	std	Z+1, r25	; 0x01
    5976:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    5978:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    597c:	fe 01       	movw	r30, r28
    597e:	e1 5c       	subi	r30, 0xC1	; 193
    5980:	fe 4f       	sbci	r31, 0xFE	; 254
    5982:	80 e0       	ldi	r24, 0x00	; 0
    5984:	90 e0       	ldi	r25, 0x00	; 0
    5986:	aa e7       	ldi	r26, 0x7A	; 122
    5988:	b4 e4       	ldi	r27, 0x44	; 68
    598a:	80 83       	st	Z, r24
    598c:	91 83       	std	Z+1, r25	; 0x01
    598e:	a2 83       	std	Z+2, r26	; 0x02
    5990:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5992:	8e 01       	movw	r16, r28
    5994:	05 5c       	subi	r16, 0xC5	; 197
    5996:	1e 4f       	sbci	r17, 0xFE	; 254
    5998:	fe 01       	movw	r30, r28
    599a:	e1 5c       	subi	r30, 0xC1	; 193
    599c:	fe 4f       	sbci	r31, 0xFE	; 254
    599e:	60 81       	ld	r22, Z
    59a0:	71 81       	ldd	r23, Z+1	; 0x01
    59a2:	82 81       	ldd	r24, Z+2	; 0x02
    59a4:	93 81       	ldd	r25, Z+3	; 0x03
    59a6:	20 e0       	ldi	r18, 0x00	; 0
    59a8:	30 e0       	ldi	r19, 0x00	; 0
    59aa:	4a ef       	ldi	r20, 0xFA	; 250
    59ac:	54 e4       	ldi	r21, 0x44	; 68
    59ae:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    59b2:	dc 01       	movw	r26, r24
    59b4:	cb 01       	movw	r24, r22
    59b6:	f8 01       	movw	r30, r16
    59b8:	80 83       	st	Z, r24
    59ba:	91 83       	std	Z+1, r25	; 0x01
    59bc:	a2 83       	std	Z+2, r26	; 0x02
    59be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    59c0:	fe 01       	movw	r30, r28
    59c2:	e5 5c       	subi	r30, 0xC5	; 197
    59c4:	fe 4f       	sbci	r31, 0xFE	; 254
    59c6:	60 81       	ld	r22, Z
    59c8:	71 81       	ldd	r23, Z+1	; 0x01
    59ca:	82 81       	ldd	r24, Z+2	; 0x02
    59cc:	93 81       	ldd	r25, Z+3	; 0x03
    59ce:	20 e0       	ldi	r18, 0x00	; 0
    59d0:	30 e0       	ldi	r19, 0x00	; 0
    59d2:	40 e8       	ldi	r20, 0x80	; 128
    59d4:	5f e3       	ldi	r21, 0x3F	; 63
    59d6:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    59da:	88 23       	and	r24, r24
    59dc:	44 f4       	brge	.+16     	; 0x59ee <main+0x18e6>
		__ticks = 1;
    59de:	fe 01       	movw	r30, r28
    59e0:	e7 5c       	subi	r30, 0xC7	; 199
    59e2:	fe 4f       	sbci	r31, 0xFE	; 254
    59e4:	81 e0       	ldi	r24, 0x01	; 1
    59e6:	90 e0       	ldi	r25, 0x00	; 0
    59e8:	91 83       	std	Z+1, r25	; 0x01
    59ea:	80 83       	st	Z, r24
    59ec:	64 c0       	rjmp	.+200    	; 0x5ab6 <main+0x19ae>
	else if (__tmp > 65535)
    59ee:	fe 01       	movw	r30, r28
    59f0:	e5 5c       	subi	r30, 0xC5	; 197
    59f2:	fe 4f       	sbci	r31, 0xFE	; 254
    59f4:	60 81       	ld	r22, Z
    59f6:	71 81       	ldd	r23, Z+1	; 0x01
    59f8:	82 81       	ldd	r24, Z+2	; 0x02
    59fa:	93 81       	ldd	r25, Z+3	; 0x03
    59fc:	20 e0       	ldi	r18, 0x00	; 0
    59fe:	3f ef       	ldi	r19, 0xFF	; 255
    5a00:	4f e7       	ldi	r20, 0x7F	; 127
    5a02:	57 e4       	ldi	r21, 0x47	; 71
    5a04:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    5a08:	18 16       	cp	r1, r24
    5a0a:	0c f0       	brlt	.+2      	; 0x5a0e <main+0x1906>
    5a0c:	43 c0       	rjmp	.+134    	; 0x5a94 <main+0x198c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a0e:	fe 01       	movw	r30, r28
    5a10:	e1 5c       	subi	r30, 0xC1	; 193
    5a12:	fe 4f       	sbci	r31, 0xFE	; 254
    5a14:	60 81       	ld	r22, Z
    5a16:	71 81       	ldd	r23, Z+1	; 0x01
    5a18:	82 81       	ldd	r24, Z+2	; 0x02
    5a1a:	93 81       	ldd	r25, Z+3	; 0x03
    5a1c:	20 e0       	ldi	r18, 0x00	; 0
    5a1e:	30 e0       	ldi	r19, 0x00	; 0
    5a20:	40 e2       	ldi	r20, 0x20	; 32
    5a22:	51 e4       	ldi	r21, 0x41	; 65
    5a24:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5a28:	dc 01       	movw	r26, r24
    5a2a:	cb 01       	movw	r24, r22
    5a2c:	8e 01       	movw	r16, r28
    5a2e:	07 5c       	subi	r16, 0xC7	; 199
    5a30:	1e 4f       	sbci	r17, 0xFE	; 254
    5a32:	bc 01       	movw	r22, r24
    5a34:	cd 01       	movw	r24, r26
    5a36:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5a3a:	dc 01       	movw	r26, r24
    5a3c:	cb 01       	movw	r24, r22
    5a3e:	f8 01       	movw	r30, r16
    5a40:	91 83       	std	Z+1, r25	; 0x01
    5a42:	80 83       	st	Z, r24
    5a44:	1f c0       	rjmp	.+62     	; 0x5a84 <main+0x197c>
    5a46:	fe 01       	movw	r30, r28
    5a48:	e9 5c       	subi	r30, 0xC9	; 201
    5a4a:	fe 4f       	sbci	r31, 0xFE	; 254
    5a4c:	88 ec       	ldi	r24, 0xC8	; 200
    5a4e:	90 e0       	ldi	r25, 0x00	; 0
    5a50:	91 83       	std	Z+1, r25	; 0x01
    5a52:	80 83       	st	Z, r24
    5a54:	fe 01       	movw	r30, r28
    5a56:	e9 5c       	subi	r30, 0xC9	; 201
    5a58:	fe 4f       	sbci	r31, 0xFE	; 254
    5a5a:	80 81       	ld	r24, Z
    5a5c:	91 81       	ldd	r25, Z+1	; 0x01
    5a5e:	01 97       	sbiw	r24, 0x01	; 1
    5a60:	f1 f7       	brne	.-4      	; 0x5a5e <main+0x1956>
    5a62:	fe 01       	movw	r30, r28
    5a64:	e9 5c       	subi	r30, 0xC9	; 201
    5a66:	fe 4f       	sbci	r31, 0xFE	; 254
    5a68:	91 83       	std	Z+1, r25	; 0x01
    5a6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5a6c:	de 01       	movw	r26, r28
    5a6e:	a7 5c       	subi	r26, 0xC7	; 199
    5a70:	be 4f       	sbci	r27, 0xFE	; 254
    5a72:	fe 01       	movw	r30, r28
    5a74:	e7 5c       	subi	r30, 0xC7	; 199
    5a76:	fe 4f       	sbci	r31, 0xFE	; 254
    5a78:	80 81       	ld	r24, Z
    5a7a:	91 81       	ldd	r25, Z+1	; 0x01
    5a7c:	01 97       	sbiw	r24, 0x01	; 1
    5a7e:	11 96       	adiw	r26, 0x01	; 1
    5a80:	9c 93       	st	X, r25
    5a82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5a84:	fe 01       	movw	r30, r28
    5a86:	e7 5c       	subi	r30, 0xC7	; 199
    5a88:	fe 4f       	sbci	r31, 0xFE	; 254
    5a8a:	80 81       	ld	r24, Z
    5a8c:	91 81       	ldd	r25, Z+1	; 0x01
    5a8e:	00 97       	sbiw	r24, 0x00	; 0
    5a90:	d1 f6       	brne	.-76     	; 0x5a46 <main+0x193e>
    5a92:	27 c0       	rjmp	.+78     	; 0x5ae2 <main+0x19da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5a94:	8e 01       	movw	r16, r28
    5a96:	07 5c       	subi	r16, 0xC7	; 199
    5a98:	1e 4f       	sbci	r17, 0xFE	; 254
    5a9a:	fe 01       	movw	r30, r28
    5a9c:	e5 5c       	subi	r30, 0xC5	; 197
    5a9e:	fe 4f       	sbci	r31, 0xFE	; 254
    5aa0:	60 81       	ld	r22, Z
    5aa2:	71 81       	ldd	r23, Z+1	; 0x01
    5aa4:	82 81       	ldd	r24, Z+2	; 0x02
    5aa6:	93 81       	ldd	r25, Z+3	; 0x03
    5aa8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5aac:	dc 01       	movw	r26, r24
    5aae:	cb 01       	movw	r24, r22
    5ab0:	f8 01       	movw	r30, r16
    5ab2:	91 83       	std	Z+1, r25	; 0x01
    5ab4:	80 83       	st	Z, r24
    5ab6:	de 01       	movw	r26, r28
    5ab8:	ab 5c       	subi	r26, 0xCB	; 203
    5aba:	be 4f       	sbci	r27, 0xFE	; 254
    5abc:	fe 01       	movw	r30, r28
    5abe:	e7 5c       	subi	r30, 0xC7	; 199
    5ac0:	fe 4f       	sbci	r31, 0xFE	; 254
    5ac2:	80 81       	ld	r24, Z
    5ac4:	91 81       	ldd	r25, Z+1	; 0x01
    5ac6:	8d 93       	st	X+, r24
    5ac8:	9c 93       	st	X, r25
    5aca:	fe 01       	movw	r30, r28
    5acc:	eb 5c       	subi	r30, 0xCB	; 203
    5ace:	fe 4f       	sbci	r31, 0xFE	; 254
    5ad0:	80 81       	ld	r24, Z
    5ad2:	91 81       	ldd	r25, Z+1	; 0x01
    5ad4:	01 97       	sbiw	r24, 0x01	; 1
    5ad6:	f1 f7       	brne	.-4      	; 0x5ad4 <main+0x19cc>
    5ad8:	fe 01       	movw	r30, r28
    5ada:	eb 5c       	subi	r30, 0xCB	; 203
    5adc:	fe 4f       	sbci	r31, 0xFE	; 254
    5ade:	91 83       	std	Z+1, r25	; 0x01
    5ae0:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Goto(1,4);
    5ae2:	81 e0       	ldi	r24, 0x01	; 1
    5ae4:	64 e0       	ldi	r22, 0x04	; 4
    5ae6:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_Goal);
    5aea:	89 ec       	ldi	r24, 0xC9	; 201
    5aec:	91 e0       	ldi	r25, 0x01	; 1
    5aee:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    5af2:	fe 01       	movw	r30, r28
    5af4:	ef 5c       	subi	r30, 0xCF	; 207
    5af6:	fe 4f       	sbci	r31, 0xFE	; 254
    5af8:	80 e0       	ldi	r24, 0x00	; 0
    5afa:	90 e0       	ldi	r25, 0x00	; 0
    5afc:	aa e7       	ldi	r26, 0x7A	; 122
    5afe:	b4 e4       	ldi	r27, 0x44	; 68
    5b00:	80 83       	st	Z, r24
    5b02:	91 83       	std	Z+1, r25	; 0x01
    5b04:	a2 83       	std	Z+2, r26	; 0x02
    5b06:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b08:	8e 01       	movw	r16, r28
    5b0a:	03 5d       	subi	r16, 0xD3	; 211
    5b0c:	1e 4f       	sbci	r17, 0xFE	; 254
    5b0e:	fe 01       	movw	r30, r28
    5b10:	ef 5c       	subi	r30, 0xCF	; 207
    5b12:	fe 4f       	sbci	r31, 0xFE	; 254
    5b14:	60 81       	ld	r22, Z
    5b16:	71 81       	ldd	r23, Z+1	; 0x01
    5b18:	82 81       	ldd	r24, Z+2	; 0x02
    5b1a:	93 81       	ldd	r25, Z+3	; 0x03
    5b1c:	20 e0       	ldi	r18, 0x00	; 0
    5b1e:	30 e0       	ldi	r19, 0x00	; 0
    5b20:	4a ef       	ldi	r20, 0xFA	; 250
    5b22:	54 e4       	ldi	r21, 0x44	; 68
    5b24:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5b28:	dc 01       	movw	r26, r24
    5b2a:	cb 01       	movw	r24, r22
    5b2c:	f8 01       	movw	r30, r16
    5b2e:	80 83       	st	Z, r24
    5b30:	91 83       	std	Z+1, r25	; 0x01
    5b32:	a2 83       	std	Z+2, r26	; 0x02
    5b34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5b36:	fe 01       	movw	r30, r28
    5b38:	e3 5d       	subi	r30, 0xD3	; 211
    5b3a:	fe 4f       	sbci	r31, 0xFE	; 254
    5b3c:	60 81       	ld	r22, Z
    5b3e:	71 81       	ldd	r23, Z+1	; 0x01
    5b40:	82 81       	ldd	r24, Z+2	; 0x02
    5b42:	93 81       	ldd	r25, Z+3	; 0x03
    5b44:	20 e0       	ldi	r18, 0x00	; 0
    5b46:	30 e0       	ldi	r19, 0x00	; 0
    5b48:	40 e8       	ldi	r20, 0x80	; 128
    5b4a:	5f e3       	ldi	r21, 0x3F	; 63
    5b4c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    5b50:	88 23       	and	r24, r24
    5b52:	44 f4       	brge	.+16     	; 0x5b64 <main+0x1a5c>
		__ticks = 1;
    5b54:	fe 01       	movw	r30, r28
    5b56:	e5 5d       	subi	r30, 0xD5	; 213
    5b58:	fe 4f       	sbci	r31, 0xFE	; 254
    5b5a:	81 e0       	ldi	r24, 0x01	; 1
    5b5c:	90 e0       	ldi	r25, 0x00	; 0
    5b5e:	91 83       	std	Z+1, r25	; 0x01
    5b60:	80 83       	st	Z, r24
    5b62:	64 c0       	rjmp	.+200    	; 0x5c2c <main+0x1b24>
	else if (__tmp > 65535)
    5b64:	fe 01       	movw	r30, r28
    5b66:	e3 5d       	subi	r30, 0xD3	; 211
    5b68:	fe 4f       	sbci	r31, 0xFE	; 254
    5b6a:	60 81       	ld	r22, Z
    5b6c:	71 81       	ldd	r23, Z+1	; 0x01
    5b6e:	82 81       	ldd	r24, Z+2	; 0x02
    5b70:	93 81       	ldd	r25, Z+3	; 0x03
    5b72:	20 e0       	ldi	r18, 0x00	; 0
    5b74:	3f ef       	ldi	r19, 0xFF	; 255
    5b76:	4f e7       	ldi	r20, 0x7F	; 127
    5b78:	57 e4       	ldi	r21, 0x47	; 71
    5b7a:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    5b7e:	18 16       	cp	r1, r24
    5b80:	0c f0       	brlt	.+2      	; 0x5b84 <main+0x1a7c>
    5b82:	43 c0       	rjmp	.+134    	; 0x5c0a <main+0x1b02>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b84:	fe 01       	movw	r30, r28
    5b86:	ef 5c       	subi	r30, 0xCF	; 207
    5b88:	fe 4f       	sbci	r31, 0xFE	; 254
    5b8a:	60 81       	ld	r22, Z
    5b8c:	71 81       	ldd	r23, Z+1	; 0x01
    5b8e:	82 81       	ldd	r24, Z+2	; 0x02
    5b90:	93 81       	ldd	r25, Z+3	; 0x03
    5b92:	20 e0       	ldi	r18, 0x00	; 0
    5b94:	30 e0       	ldi	r19, 0x00	; 0
    5b96:	40 e2       	ldi	r20, 0x20	; 32
    5b98:	51 e4       	ldi	r21, 0x41	; 65
    5b9a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5b9e:	dc 01       	movw	r26, r24
    5ba0:	cb 01       	movw	r24, r22
    5ba2:	8e 01       	movw	r16, r28
    5ba4:	05 5d       	subi	r16, 0xD5	; 213
    5ba6:	1e 4f       	sbci	r17, 0xFE	; 254
    5ba8:	bc 01       	movw	r22, r24
    5baa:	cd 01       	movw	r24, r26
    5bac:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5bb0:	dc 01       	movw	r26, r24
    5bb2:	cb 01       	movw	r24, r22
    5bb4:	f8 01       	movw	r30, r16
    5bb6:	91 83       	std	Z+1, r25	; 0x01
    5bb8:	80 83       	st	Z, r24
    5bba:	1f c0       	rjmp	.+62     	; 0x5bfa <main+0x1af2>
    5bbc:	fe 01       	movw	r30, r28
    5bbe:	e7 5d       	subi	r30, 0xD7	; 215
    5bc0:	fe 4f       	sbci	r31, 0xFE	; 254
    5bc2:	88 ec       	ldi	r24, 0xC8	; 200
    5bc4:	90 e0       	ldi	r25, 0x00	; 0
    5bc6:	91 83       	std	Z+1, r25	; 0x01
    5bc8:	80 83       	st	Z, r24
    5bca:	fe 01       	movw	r30, r28
    5bcc:	e7 5d       	subi	r30, 0xD7	; 215
    5bce:	fe 4f       	sbci	r31, 0xFE	; 254
    5bd0:	80 81       	ld	r24, Z
    5bd2:	91 81       	ldd	r25, Z+1	; 0x01
    5bd4:	01 97       	sbiw	r24, 0x01	; 1
    5bd6:	f1 f7       	brne	.-4      	; 0x5bd4 <main+0x1acc>
    5bd8:	fe 01       	movw	r30, r28
    5bda:	e7 5d       	subi	r30, 0xD7	; 215
    5bdc:	fe 4f       	sbci	r31, 0xFE	; 254
    5bde:	91 83       	std	Z+1, r25	; 0x01
    5be0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5be2:	de 01       	movw	r26, r28
    5be4:	a5 5d       	subi	r26, 0xD5	; 213
    5be6:	be 4f       	sbci	r27, 0xFE	; 254
    5be8:	fe 01       	movw	r30, r28
    5bea:	e5 5d       	subi	r30, 0xD5	; 213
    5bec:	fe 4f       	sbci	r31, 0xFE	; 254
    5bee:	80 81       	ld	r24, Z
    5bf0:	91 81       	ldd	r25, Z+1	; 0x01
    5bf2:	01 97       	sbiw	r24, 0x01	; 1
    5bf4:	11 96       	adiw	r26, 0x01	; 1
    5bf6:	9c 93       	st	X, r25
    5bf8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5bfa:	fe 01       	movw	r30, r28
    5bfc:	e5 5d       	subi	r30, 0xD5	; 213
    5bfe:	fe 4f       	sbci	r31, 0xFE	; 254
    5c00:	80 81       	ld	r24, Z
    5c02:	91 81       	ldd	r25, Z+1	; 0x01
    5c04:	00 97       	sbiw	r24, 0x00	; 0
    5c06:	d1 f6       	brne	.-76     	; 0x5bbc <main+0x1ab4>
    5c08:	27 c0       	rjmp	.+78     	; 0x5c58 <main+0x1b50>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5c0a:	8e 01       	movw	r16, r28
    5c0c:	05 5d       	subi	r16, 0xD5	; 213
    5c0e:	1e 4f       	sbci	r17, 0xFE	; 254
    5c10:	fe 01       	movw	r30, r28
    5c12:	e3 5d       	subi	r30, 0xD3	; 211
    5c14:	fe 4f       	sbci	r31, 0xFE	; 254
    5c16:	60 81       	ld	r22, Z
    5c18:	71 81       	ldd	r23, Z+1	; 0x01
    5c1a:	82 81       	ldd	r24, Z+2	; 0x02
    5c1c:	93 81       	ldd	r25, Z+3	; 0x03
    5c1e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5c22:	dc 01       	movw	r26, r24
    5c24:	cb 01       	movw	r24, r22
    5c26:	f8 01       	movw	r30, r16
    5c28:	91 83       	std	Z+1, r25	; 0x01
    5c2a:	80 83       	st	Z, r24
    5c2c:	de 01       	movw	r26, r28
    5c2e:	a9 5d       	subi	r26, 0xD9	; 217
    5c30:	be 4f       	sbci	r27, 0xFE	; 254
    5c32:	fe 01       	movw	r30, r28
    5c34:	e5 5d       	subi	r30, 0xD5	; 213
    5c36:	fe 4f       	sbci	r31, 0xFE	; 254
    5c38:	80 81       	ld	r24, Z
    5c3a:	91 81       	ldd	r25, Z+1	; 0x01
    5c3c:	8d 93       	st	X+, r24
    5c3e:	9c 93       	st	X, r25
    5c40:	fe 01       	movw	r30, r28
    5c42:	e9 5d       	subi	r30, 0xD9	; 217
    5c44:	fe 4f       	sbci	r31, 0xFE	; 254
    5c46:	80 81       	ld	r24, Z
    5c48:	91 81       	ldd	r25, Z+1	; 0x01
    5c4a:	01 97       	sbiw	r24, 0x01	; 1
    5c4c:	f1 f7       	brne	.-4      	; 0x5c4a <main+0x1b42>
    5c4e:	fe 01       	movw	r30, r28
    5c50:	e9 5d       	subi	r30, 0xD9	; 217
    5c52:	fe 4f       	sbci	r31, 0xFE	; 254
    5c54:	91 83       	std	Z+1, r25	; 0x01
    5c56:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    5c58:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    5c5c:	fe 01       	movw	r30, r28
    5c5e:	ed 5d       	subi	r30, 0xDD	; 221
    5c60:	fe 4f       	sbci	r31, 0xFE	; 254
    5c62:	80 e0       	ldi	r24, 0x00	; 0
    5c64:	90 e0       	ldi	r25, 0x00	; 0
    5c66:	aa ef       	ldi	r26, 0xFA	; 250
    5c68:	b3 e4       	ldi	r27, 0x43	; 67
    5c6a:	80 83       	st	Z, r24
    5c6c:	91 83       	std	Z+1, r25	; 0x01
    5c6e:	a2 83       	std	Z+2, r26	; 0x02
    5c70:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c72:	8e 01       	movw	r16, r28
    5c74:	01 5e       	subi	r16, 0xE1	; 225
    5c76:	1e 4f       	sbci	r17, 0xFE	; 254
    5c78:	fe 01       	movw	r30, r28
    5c7a:	ed 5d       	subi	r30, 0xDD	; 221
    5c7c:	fe 4f       	sbci	r31, 0xFE	; 254
    5c7e:	60 81       	ld	r22, Z
    5c80:	71 81       	ldd	r23, Z+1	; 0x01
    5c82:	82 81       	ldd	r24, Z+2	; 0x02
    5c84:	93 81       	ldd	r25, Z+3	; 0x03
    5c86:	20 e0       	ldi	r18, 0x00	; 0
    5c88:	30 e0       	ldi	r19, 0x00	; 0
    5c8a:	4a ef       	ldi	r20, 0xFA	; 250
    5c8c:	54 e4       	ldi	r21, 0x44	; 68
    5c8e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5c92:	dc 01       	movw	r26, r24
    5c94:	cb 01       	movw	r24, r22
    5c96:	f8 01       	movw	r30, r16
    5c98:	80 83       	st	Z, r24
    5c9a:	91 83       	std	Z+1, r25	; 0x01
    5c9c:	a2 83       	std	Z+2, r26	; 0x02
    5c9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ca0:	fe 01       	movw	r30, r28
    5ca2:	e1 5e       	subi	r30, 0xE1	; 225
    5ca4:	fe 4f       	sbci	r31, 0xFE	; 254
    5ca6:	60 81       	ld	r22, Z
    5ca8:	71 81       	ldd	r23, Z+1	; 0x01
    5caa:	82 81       	ldd	r24, Z+2	; 0x02
    5cac:	93 81       	ldd	r25, Z+3	; 0x03
    5cae:	20 e0       	ldi	r18, 0x00	; 0
    5cb0:	30 e0       	ldi	r19, 0x00	; 0
    5cb2:	40 e8       	ldi	r20, 0x80	; 128
    5cb4:	5f e3       	ldi	r21, 0x3F	; 63
    5cb6:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    5cba:	88 23       	and	r24, r24
    5cbc:	44 f4       	brge	.+16     	; 0x5cce <main+0x1bc6>
		__ticks = 1;
    5cbe:	fe 01       	movw	r30, r28
    5cc0:	e3 5e       	subi	r30, 0xE3	; 227
    5cc2:	fe 4f       	sbci	r31, 0xFE	; 254
    5cc4:	81 e0       	ldi	r24, 0x01	; 1
    5cc6:	90 e0       	ldi	r25, 0x00	; 0
    5cc8:	91 83       	std	Z+1, r25	; 0x01
    5cca:	80 83       	st	Z, r24
    5ccc:	64 c0       	rjmp	.+200    	; 0x5d96 <main+0x1c8e>
	else if (__tmp > 65535)
    5cce:	fe 01       	movw	r30, r28
    5cd0:	e1 5e       	subi	r30, 0xE1	; 225
    5cd2:	fe 4f       	sbci	r31, 0xFE	; 254
    5cd4:	60 81       	ld	r22, Z
    5cd6:	71 81       	ldd	r23, Z+1	; 0x01
    5cd8:	82 81       	ldd	r24, Z+2	; 0x02
    5cda:	93 81       	ldd	r25, Z+3	; 0x03
    5cdc:	20 e0       	ldi	r18, 0x00	; 0
    5cde:	3f ef       	ldi	r19, 0xFF	; 255
    5ce0:	4f e7       	ldi	r20, 0x7F	; 127
    5ce2:	57 e4       	ldi	r21, 0x47	; 71
    5ce4:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    5ce8:	18 16       	cp	r1, r24
    5cea:	0c f0       	brlt	.+2      	; 0x5cee <main+0x1be6>
    5cec:	43 c0       	rjmp	.+134    	; 0x5d74 <main+0x1c6c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5cee:	fe 01       	movw	r30, r28
    5cf0:	ed 5d       	subi	r30, 0xDD	; 221
    5cf2:	fe 4f       	sbci	r31, 0xFE	; 254
    5cf4:	60 81       	ld	r22, Z
    5cf6:	71 81       	ldd	r23, Z+1	; 0x01
    5cf8:	82 81       	ldd	r24, Z+2	; 0x02
    5cfa:	93 81       	ldd	r25, Z+3	; 0x03
    5cfc:	20 e0       	ldi	r18, 0x00	; 0
    5cfe:	30 e0       	ldi	r19, 0x00	; 0
    5d00:	40 e2       	ldi	r20, 0x20	; 32
    5d02:	51 e4       	ldi	r21, 0x41	; 65
    5d04:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5d08:	dc 01       	movw	r26, r24
    5d0a:	cb 01       	movw	r24, r22
    5d0c:	8e 01       	movw	r16, r28
    5d0e:	03 5e       	subi	r16, 0xE3	; 227
    5d10:	1e 4f       	sbci	r17, 0xFE	; 254
    5d12:	bc 01       	movw	r22, r24
    5d14:	cd 01       	movw	r24, r26
    5d16:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5d1a:	dc 01       	movw	r26, r24
    5d1c:	cb 01       	movw	r24, r22
    5d1e:	f8 01       	movw	r30, r16
    5d20:	91 83       	std	Z+1, r25	; 0x01
    5d22:	80 83       	st	Z, r24
    5d24:	1f c0       	rjmp	.+62     	; 0x5d64 <main+0x1c5c>
    5d26:	fe 01       	movw	r30, r28
    5d28:	e5 5e       	subi	r30, 0xE5	; 229
    5d2a:	fe 4f       	sbci	r31, 0xFE	; 254
    5d2c:	88 ec       	ldi	r24, 0xC8	; 200
    5d2e:	90 e0       	ldi	r25, 0x00	; 0
    5d30:	91 83       	std	Z+1, r25	; 0x01
    5d32:	80 83       	st	Z, r24
    5d34:	fe 01       	movw	r30, r28
    5d36:	e5 5e       	subi	r30, 0xE5	; 229
    5d38:	fe 4f       	sbci	r31, 0xFE	; 254
    5d3a:	80 81       	ld	r24, Z
    5d3c:	91 81       	ldd	r25, Z+1	; 0x01
    5d3e:	01 97       	sbiw	r24, 0x01	; 1
    5d40:	f1 f7       	brne	.-4      	; 0x5d3e <main+0x1c36>
    5d42:	fe 01       	movw	r30, r28
    5d44:	e5 5e       	subi	r30, 0xE5	; 229
    5d46:	fe 4f       	sbci	r31, 0xFE	; 254
    5d48:	91 83       	std	Z+1, r25	; 0x01
    5d4a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5d4c:	de 01       	movw	r26, r28
    5d4e:	a3 5e       	subi	r26, 0xE3	; 227
    5d50:	be 4f       	sbci	r27, 0xFE	; 254
    5d52:	fe 01       	movw	r30, r28
    5d54:	e3 5e       	subi	r30, 0xE3	; 227
    5d56:	fe 4f       	sbci	r31, 0xFE	; 254
    5d58:	80 81       	ld	r24, Z
    5d5a:	91 81       	ldd	r25, Z+1	; 0x01
    5d5c:	01 97       	sbiw	r24, 0x01	; 1
    5d5e:	11 96       	adiw	r26, 0x01	; 1
    5d60:	9c 93       	st	X, r25
    5d62:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d64:	fe 01       	movw	r30, r28
    5d66:	e3 5e       	subi	r30, 0xE3	; 227
    5d68:	fe 4f       	sbci	r31, 0xFE	; 254
    5d6a:	80 81       	ld	r24, Z
    5d6c:	91 81       	ldd	r25, Z+1	; 0x01
    5d6e:	00 97       	sbiw	r24, 0x00	; 0
    5d70:	d1 f6       	brne	.-76     	; 0x5d26 <main+0x1c1e>
    5d72:	27 c0       	rjmp	.+78     	; 0x5dc2 <main+0x1cba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d74:	8e 01       	movw	r16, r28
    5d76:	03 5e       	subi	r16, 0xE3	; 227
    5d78:	1e 4f       	sbci	r17, 0xFE	; 254
    5d7a:	fe 01       	movw	r30, r28
    5d7c:	e1 5e       	subi	r30, 0xE1	; 225
    5d7e:	fe 4f       	sbci	r31, 0xFE	; 254
    5d80:	60 81       	ld	r22, Z
    5d82:	71 81       	ldd	r23, Z+1	; 0x01
    5d84:	82 81       	ldd	r24, Z+2	; 0x02
    5d86:	93 81       	ldd	r25, Z+3	; 0x03
    5d88:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5d8c:	dc 01       	movw	r26, r24
    5d8e:	cb 01       	movw	r24, r22
    5d90:	f8 01       	movw	r30, r16
    5d92:	91 83       	std	Z+1, r25	; 0x01
    5d94:	80 83       	st	Z, r24
    5d96:	de 01       	movw	r26, r28
    5d98:	a7 5e       	subi	r26, 0xE7	; 231
    5d9a:	be 4f       	sbci	r27, 0xFE	; 254
    5d9c:	fe 01       	movw	r30, r28
    5d9e:	e3 5e       	subi	r30, 0xE3	; 227
    5da0:	fe 4f       	sbci	r31, 0xFE	; 254
    5da2:	80 81       	ld	r24, Z
    5da4:	91 81       	ldd	r25, Z+1	; 0x01
    5da6:	8d 93       	st	X+, r24
    5da8:	9c 93       	st	X, r25
    5daa:	fe 01       	movw	r30, r28
    5dac:	e7 5e       	subi	r30, 0xE7	; 231
    5dae:	fe 4f       	sbci	r31, 0xFE	; 254
    5db0:	80 81       	ld	r24, Z
    5db2:	91 81       	ldd	r25, Z+1	; 0x01
    5db4:	01 97       	sbiw	r24, 0x01	; 1
    5db6:	f1 f7       	brne	.-4      	; 0x5db4 <main+0x1cac>
    5db8:	fe 01       	movw	r30, r28
    5dba:	e7 5e       	subi	r30, 0xE7	; 231
    5dbc:	fe 4f       	sbci	r31, 0xFE	; 254
    5dbe:	91 83       	std	Z+1, r25	; 0x01
    5dc0:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(1,4);
    5dc2:	81 e0       	ldi	r24, 0x01	; 1
    5dc4:	64 e0       	ldi	r22, 0x04	; 4
    5dc6:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_Goal);
    5dca:	89 ec       	ldi	r24, 0xC9	; 201
    5dcc:	91 e0       	ldi	r25, 0x01	; 1
    5dce:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    5dd2:	fe 01       	movw	r30, r28
    5dd4:	eb 5e       	subi	r30, 0xEB	; 235
    5dd6:	fe 4f       	sbci	r31, 0xFE	; 254
    5dd8:	80 e0       	ldi	r24, 0x00	; 0
    5dda:	90 e0       	ldi	r25, 0x00	; 0
    5ddc:	aa e7       	ldi	r26, 0x7A	; 122
    5dde:	b4 e4       	ldi	r27, 0x44	; 68
    5de0:	80 83       	st	Z, r24
    5de2:	91 83       	std	Z+1, r25	; 0x01
    5de4:	a2 83       	std	Z+2, r26	; 0x02
    5de6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5de8:	8e 01       	movw	r16, r28
    5dea:	0f 5e       	subi	r16, 0xEF	; 239
    5dec:	1e 4f       	sbci	r17, 0xFE	; 254
    5dee:	fe 01       	movw	r30, r28
    5df0:	eb 5e       	subi	r30, 0xEB	; 235
    5df2:	fe 4f       	sbci	r31, 0xFE	; 254
    5df4:	60 81       	ld	r22, Z
    5df6:	71 81       	ldd	r23, Z+1	; 0x01
    5df8:	82 81       	ldd	r24, Z+2	; 0x02
    5dfa:	93 81       	ldd	r25, Z+3	; 0x03
    5dfc:	20 e0       	ldi	r18, 0x00	; 0
    5dfe:	30 e0       	ldi	r19, 0x00	; 0
    5e00:	4a ef       	ldi	r20, 0xFA	; 250
    5e02:	54 e4       	ldi	r21, 0x44	; 68
    5e04:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5e08:	dc 01       	movw	r26, r24
    5e0a:	cb 01       	movw	r24, r22
    5e0c:	f8 01       	movw	r30, r16
    5e0e:	80 83       	st	Z, r24
    5e10:	91 83       	std	Z+1, r25	; 0x01
    5e12:	a2 83       	std	Z+2, r26	; 0x02
    5e14:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5e16:	fe 01       	movw	r30, r28
    5e18:	ef 5e       	subi	r30, 0xEF	; 239
    5e1a:	fe 4f       	sbci	r31, 0xFE	; 254
    5e1c:	60 81       	ld	r22, Z
    5e1e:	71 81       	ldd	r23, Z+1	; 0x01
    5e20:	82 81       	ldd	r24, Z+2	; 0x02
    5e22:	93 81       	ldd	r25, Z+3	; 0x03
    5e24:	20 e0       	ldi	r18, 0x00	; 0
    5e26:	30 e0       	ldi	r19, 0x00	; 0
    5e28:	40 e8       	ldi	r20, 0x80	; 128
    5e2a:	5f e3       	ldi	r21, 0x3F	; 63
    5e2c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    5e30:	88 23       	and	r24, r24
    5e32:	44 f4       	brge	.+16     	; 0x5e44 <main+0x1d3c>
		__ticks = 1;
    5e34:	fe 01       	movw	r30, r28
    5e36:	e1 5f       	subi	r30, 0xF1	; 241
    5e38:	fe 4f       	sbci	r31, 0xFE	; 254
    5e3a:	81 e0       	ldi	r24, 0x01	; 1
    5e3c:	90 e0       	ldi	r25, 0x00	; 0
    5e3e:	91 83       	std	Z+1, r25	; 0x01
    5e40:	80 83       	st	Z, r24
    5e42:	64 c0       	rjmp	.+200    	; 0x5f0c <main+0x1e04>
	else if (__tmp > 65535)
    5e44:	fe 01       	movw	r30, r28
    5e46:	ef 5e       	subi	r30, 0xEF	; 239
    5e48:	fe 4f       	sbci	r31, 0xFE	; 254
    5e4a:	60 81       	ld	r22, Z
    5e4c:	71 81       	ldd	r23, Z+1	; 0x01
    5e4e:	82 81       	ldd	r24, Z+2	; 0x02
    5e50:	93 81       	ldd	r25, Z+3	; 0x03
    5e52:	20 e0       	ldi	r18, 0x00	; 0
    5e54:	3f ef       	ldi	r19, 0xFF	; 255
    5e56:	4f e7       	ldi	r20, 0x7F	; 127
    5e58:	57 e4       	ldi	r21, 0x47	; 71
    5e5a:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    5e5e:	18 16       	cp	r1, r24
    5e60:	0c f0       	brlt	.+2      	; 0x5e64 <main+0x1d5c>
    5e62:	43 c0       	rjmp	.+134    	; 0x5eea <main+0x1de2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e64:	fe 01       	movw	r30, r28
    5e66:	eb 5e       	subi	r30, 0xEB	; 235
    5e68:	fe 4f       	sbci	r31, 0xFE	; 254
    5e6a:	60 81       	ld	r22, Z
    5e6c:	71 81       	ldd	r23, Z+1	; 0x01
    5e6e:	82 81       	ldd	r24, Z+2	; 0x02
    5e70:	93 81       	ldd	r25, Z+3	; 0x03
    5e72:	20 e0       	ldi	r18, 0x00	; 0
    5e74:	30 e0       	ldi	r19, 0x00	; 0
    5e76:	40 e2       	ldi	r20, 0x20	; 32
    5e78:	51 e4       	ldi	r21, 0x41	; 65
    5e7a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5e7e:	dc 01       	movw	r26, r24
    5e80:	cb 01       	movw	r24, r22
    5e82:	8e 01       	movw	r16, r28
    5e84:	01 5f       	subi	r16, 0xF1	; 241
    5e86:	1e 4f       	sbci	r17, 0xFE	; 254
    5e88:	bc 01       	movw	r22, r24
    5e8a:	cd 01       	movw	r24, r26
    5e8c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5e90:	dc 01       	movw	r26, r24
    5e92:	cb 01       	movw	r24, r22
    5e94:	f8 01       	movw	r30, r16
    5e96:	91 83       	std	Z+1, r25	; 0x01
    5e98:	80 83       	st	Z, r24
    5e9a:	1f c0       	rjmp	.+62     	; 0x5eda <main+0x1dd2>
    5e9c:	fe 01       	movw	r30, r28
    5e9e:	e3 5f       	subi	r30, 0xF3	; 243
    5ea0:	fe 4f       	sbci	r31, 0xFE	; 254
    5ea2:	88 ec       	ldi	r24, 0xC8	; 200
    5ea4:	90 e0       	ldi	r25, 0x00	; 0
    5ea6:	91 83       	std	Z+1, r25	; 0x01
    5ea8:	80 83       	st	Z, r24
    5eaa:	fe 01       	movw	r30, r28
    5eac:	e3 5f       	subi	r30, 0xF3	; 243
    5eae:	fe 4f       	sbci	r31, 0xFE	; 254
    5eb0:	80 81       	ld	r24, Z
    5eb2:	91 81       	ldd	r25, Z+1	; 0x01
    5eb4:	01 97       	sbiw	r24, 0x01	; 1
    5eb6:	f1 f7       	brne	.-4      	; 0x5eb4 <main+0x1dac>
    5eb8:	fe 01       	movw	r30, r28
    5eba:	e3 5f       	subi	r30, 0xF3	; 243
    5ebc:	fe 4f       	sbci	r31, 0xFE	; 254
    5ebe:	91 83       	std	Z+1, r25	; 0x01
    5ec0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ec2:	de 01       	movw	r26, r28
    5ec4:	a1 5f       	subi	r26, 0xF1	; 241
    5ec6:	be 4f       	sbci	r27, 0xFE	; 254
    5ec8:	fe 01       	movw	r30, r28
    5eca:	e1 5f       	subi	r30, 0xF1	; 241
    5ecc:	fe 4f       	sbci	r31, 0xFE	; 254
    5ece:	80 81       	ld	r24, Z
    5ed0:	91 81       	ldd	r25, Z+1	; 0x01
    5ed2:	01 97       	sbiw	r24, 0x01	; 1
    5ed4:	11 96       	adiw	r26, 0x01	; 1
    5ed6:	9c 93       	st	X, r25
    5ed8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5eda:	fe 01       	movw	r30, r28
    5edc:	e1 5f       	subi	r30, 0xF1	; 241
    5ede:	fe 4f       	sbci	r31, 0xFE	; 254
    5ee0:	80 81       	ld	r24, Z
    5ee2:	91 81       	ldd	r25, Z+1	; 0x01
    5ee4:	00 97       	sbiw	r24, 0x00	; 0
    5ee6:	d1 f6       	brne	.-76     	; 0x5e9c <main+0x1d94>
    5ee8:	27 c0       	rjmp	.+78     	; 0x5f38 <main+0x1e30>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5eea:	8e 01       	movw	r16, r28
    5eec:	01 5f       	subi	r16, 0xF1	; 241
    5eee:	1e 4f       	sbci	r17, 0xFE	; 254
    5ef0:	fe 01       	movw	r30, r28
    5ef2:	ef 5e       	subi	r30, 0xEF	; 239
    5ef4:	fe 4f       	sbci	r31, 0xFE	; 254
    5ef6:	60 81       	ld	r22, Z
    5ef8:	71 81       	ldd	r23, Z+1	; 0x01
    5efa:	82 81       	ldd	r24, Z+2	; 0x02
    5efc:	93 81       	ldd	r25, Z+3	; 0x03
    5efe:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5f02:	dc 01       	movw	r26, r24
    5f04:	cb 01       	movw	r24, r22
    5f06:	f8 01       	movw	r30, r16
    5f08:	91 83       	std	Z+1, r25	; 0x01
    5f0a:	80 83       	st	Z, r24
    5f0c:	de 01       	movw	r26, r28
    5f0e:	a5 5f       	subi	r26, 0xF5	; 245
    5f10:	be 4f       	sbci	r27, 0xFE	; 254
    5f12:	fe 01       	movw	r30, r28
    5f14:	e1 5f       	subi	r30, 0xF1	; 241
    5f16:	fe 4f       	sbci	r31, 0xFE	; 254
    5f18:	80 81       	ld	r24, Z
    5f1a:	91 81       	ldd	r25, Z+1	; 0x01
    5f1c:	8d 93       	st	X+, r24
    5f1e:	9c 93       	st	X, r25
    5f20:	fe 01       	movw	r30, r28
    5f22:	e5 5f       	subi	r30, 0xF5	; 245
    5f24:	fe 4f       	sbci	r31, 0xFE	; 254
    5f26:	80 81       	ld	r24, Z
    5f28:	91 81       	ldd	r25, Z+1	; 0x01
    5f2a:	01 97       	sbiw	r24, 0x01	; 1
    5f2c:	f1 f7       	brne	.-4      	; 0x5f2a <main+0x1e22>
    5f2e:	fe 01       	movw	r30, r28
    5f30:	e5 5f       	subi	r30, 0xF5	; 245
    5f32:	fe 4f       	sbci	r31, 0xFE	; 254
    5f34:	91 83       	std	Z+1, r25	; 0x01
    5f36:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    5f38:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    5f3c:	fe 01       	movw	r30, r28
    5f3e:	e9 5f       	subi	r30, 0xF9	; 249
    5f40:	fe 4f       	sbci	r31, 0xFE	; 254
    5f42:	80 e0       	ldi	r24, 0x00	; 0
    5f44:	90 e0       	ldi	r25, 0x00	; 0
    5f46:	aa ef       	ldi	r26, 0xFA	; 250
    5f48:	b3 e4       	ldi	r27, 0x43	; 67
    5f4a:	80 83       	st	Z, r24
    5f4c:	91 83       	std	Z+1, r25	; 0x01
    5f4e:	a2 83       	std	Z+2, r26	; 0x02
    5f50:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5f52:	8e 01       	movw	r16, r28
    5f54:	0d 5f       	subi	r16, 0xFD	; 253
    5f56:	1e 4f       	sbci	r17, 0xFE	; 254
    5f58:	fe 01       	movw	r30, r28
    5f5a:	e9 5f       	subi	r30, 0xF9	; 249
    5f5c:	fe 4f       	sbci	r31, 0xFE	; 254
    5f5e:	60 81       	ld	r22, Z
    5f60:	71 81       	ldd	r23, Z+1	; 0x01
    5f62:	82 81       	ldd	r24, Z+2	; 0x02
    5f64:	93 81       	ldd	r25, Z+3	; 0x03
    5f66:	20 e0       	ldi	r18, 0x00	; 0
    5f68:	30 e0       	ldi	r19, 0x00	; 0
    5f6a:	4a ef       	ldi	r20, 0xFA	; 250
    5f6c:	54 e4       	ldi	r21, 0x44	; 68
    5f6e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5f72:	dc 01       	movw	r26, r24
    5f74:	cb 01       	movw	r24, r22
    5f76:	f8 01       	movw	r30, r16
    5f78:	80 83       	st	Z, r24
    5f7a:	91 83       	std	Z+1, r25	; 0x01
    5f7c:	a2 83       	std	Z+2, r26	; 0x02
    5f7e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5f80:	fe 01       	movw	r30, r28
    5f82:	ed 5f       	subi	r30, 0xFD	; 253
    5f84:	fe 4f       	sbci	r31, 0xFE	; 254
    5f86:	60 81       	ld	r22, Z
    5f88:	71 81       	ldd	r23, Z+1	; 0x01
    5f8a:	82 81       	ldd	r24, Z+2	; 0x02
    5f8c:	93 81       	ldd	r25, Z+3	; 0x03
    5f8e:	20 e0       	ldi	r18, 0x00	; 0
    5f90:	30 e0       	ldi	r19, 0x00	; 0
    5f92:	40 e8       	ldi	r20, 0x80	; 128
    5f94:	5f e3       	ldi	r21, 0x3F	; 63
    5f96:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    5f9a:	88 23       	and	r24, r24
    5f9c:	44 f4       	brge	.+16     	; 0x5fae <main+0x1ea6>
		__ticks = 1;
    5f9e:	fe 01       	movw	r30, r28
    5fa0:	ef 5f       	subi	r30, 0xFF	; 255
    5fa2:	fe 4f       	sbci	r31, 0xFE	; 254
    5fa4:	81 e0       	ldi	r24, 0x01	; 1
    5fa6:	90 e0       	ldi	r25, 0x00	; 0
    5fa8:	91 83       	std	Z+1, r25	; 0x01
    5faa:	80 83       	st	Z, r24
    5fac:	64 c0       	rjmp	.+200    	; 0x6076 <main+0x1f6e>
	else if (__tmp > 65535)
    5fae:	fe 01       	movw	r30, r28
    5fb0:	ed 5f       	subi	r30, 0xFD	; 253
    5fb2:	fe 4f       	sbci	r31, 0xFE	; 254
    5fb4:	60 81       	ld	r22, Z
    5fb6:	71 81       	ldd	r23, Z+1	; 0x01
    5fb8:	82 81       	ldd	r24, Z+2	; 0x02
    5fba:	93 81       	ldd	r25, Z+3	; 0x03
    5fbc:	20 e0       	ldi	r18, 0x00	; 0
    5fbe:	3f ef       	ldi	r19, 0xFF	; 255
    5fc0:	4f e7       	ldi	r20, 0x7F	; 127
    5fc2:	57 e4       	ldi	r21, 0x47	; 71
    5fc4:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    5fc8:	18 16       	cp	r1, r24
    5fca:	0c f0       	brlt	.+2      	; 0x5fce <main+0x1ec6>
    5fcc:	43 c0       	rjmp	.+134    	; 0x6054 <main+0x1f4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5fce:	fe 01       	movw	r30, r28
    5fd0:	e9 5f       	subi	r30, 0xF9	; 249
    5fd2:	fe 4f       	sbci	r31, 0xFE	; 254
    5fd4:	60 81       	ld	r22, Z
    5fd6:	71 81       	ldd	r23, Z+1	; 0x01
    5fd8:	82 81       	ldd	r24, Z+2	; 0x02
    5fda:	93 81       	ldd	r25, Z+3	; 0x03
    5fdc:	20 e0       	ldi	r18, 0x00	; 0
    5fde:	30 e0       	ldi	r19, 0x00	; 0
    5fe0:	40 e2       	ldi	r20, 0x20	; 32
    5fe2:	51 e4       	ldi	r21, 0x41	; 65
    5fe4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5fe8:	dc 01       	movw	r26, r24
    5fea:	cb 01       	movw	r24, r22
    5fec:	8e 01       	movw	r16, r28
    5fee:	0f 5f       	subi	r16, 0xFF	; 255
    5ff0:	1e 4f       	sbci	r17, 0xFE	; 254
    5ff2:	bc 01       	movw	r22, r24
    5ff4:	cd 01       	movw	r24, r26
    5ff6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5ffa:	dc 01       	movw	r26, r24
    5ffc:	cb 01       	movw	r24, r22
    5ffe:	f8 01       	movw	r30, r16
    6000:	91 83       	std	Z+1, r25	; 0x01
    6002:	80 83       	st	Z, r24
    6004:	1f c0       	rjmp	.+62     	; 0x6044 <main+0x1f3c>
    6006:	fe 01       	movw	r30, r28
    6008:	e1 50       	subi	r30, 0x01	; 1
    600a:	ff 4f       	sbci	r31, 0xFF	; 255
    600c:	88 ec       	ldi	r24, 0xC8	; 200
    600e:	90 e0       	ldi	r25, 0x00	; 0
    6010:	91 83       	std	Z+1, r25	; 0x01
    6012:	80 83       	st	Z, r24
    6014:	fe 01       	movw	r30, r28
    6016:	e1 50       	subi	r30, 0x01	; 1
    6018:	ff 4f       	sbci	r31, 0xFF	; 255
    601a:	80 81       	ld	r24, Z
    601c:	91 81       	ldd	r25, Z+1	; 0x01
    601e:	01 97       	sbiw	r24, 0x01	; 1
    6020:	f1 f7       	brne	.-4      	; 0x601e <main+0x1f16>
    6022:	fe 01       	movw	r30, r28
    6024:	e1 50       	subi	r30, 0x01	; 1
    6026:	ff 4f       	sbci	r31, 0xFF	; 255
    6028:	91 83       	std	Z+1, r25	; 0x01
    602a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    602c:	de 01       	movw	r26, r28
    602e:	af 5f       	subi	r26, 0xFF	; 255
    6030:	be 4f       	sbci	r27, 0xFE	; 254
    6032:	fe 01       	movw	r30, r28
    6034:	ef 5f       	subi	r30, 0xFF	; 255
    6036:	fe 4f       	sbci	r31, 0xFE	; 254
    6038:	80 81       	ld	r24, Z
    603a:	91 81       	ldd	r25, Z+1	; 0x01
    603c:	01 97       	sbiw	r24, 0x01	; 1
    603e:	11 96       	adiw	r26, 0x01	; 1
    6040:	9c 93       	st	X, r25
    6042:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6044:	fe 01       	movw	r30, r28
    6046:	ef 5f       	subi	r30, 0xFF	; 255
    6048:	fe 4f       	sbci	r31, 0xFE	; 254
    604a:	80 81       	ld	r24, Z
    604c:	91 81       	ldd	r25, Z+1	; 0x01
    604e:	00 97       	sbiw	r24, 0x00	; 0
    6050:	d1 f6       	brne	.-76     	; 0x6006 <main+0x1efe>
    6052:	27 c0       	rjmp	.+78     	; 0x60a2 <main+0x1f9a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6054:	8e 01       	movw	r16, r28
    6056:	0f 5f       	subi	r16, 0xFF	; 255
    6058:	1e 4f       	sbci	r17, 0xFE	; 254
    605a:	fe 01       	movw	r30, r28
    605c:	ed 5f       	subi	r30, 0xFD	; 253
    605e:	fe 4f       	sbci	r31, 0xFE	; 254
    6060:	60 81       	ld	r22, Z
    6062:	71 81       	ldd	r23, Z+1	; 0x01
    6064:	82 81       	ldd	r24, Z+2	; 0x02
    6066:	93 81       	ldd	r25, Z+3	; 0x03
    6068:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    606c:	dc 01       	movw	r26, r24
    606e:	cb 01       	movw	r24, r22
    6070:	f8 01       	movw	r30, r16
    6072:	91 83       	std	Z+1, r25	; 0x01
    6074:	80 83       	st	Z, r24
    6076:	de 01       	movw	r26, r28
    6078:	a3 50       	subi	r26, 0x03	; 3
    607a:	bf 4f       	sbci	r27, 0xFF	; 255
    607c:	fe 01       	movw	r30, r28
    607e:	ef 5f       	subi	r30, 0xFF	; 255
    6080:	fe 4f       	sbci	r31, 0xFE	; 254
    6082:	80 81       	ld	r24, Z
    6084:	91 81       	ldd	r25, Z+1	; 0x01
    6086:	8d 93       	st	X+, r24
    6088:	9c 93       	st	X, r25
    608a:	fe 01       	movw	r30, r28
    608c:	e3 50       	subi	r30, 0x03	; 3
    608e:	ff 4f       	sbci	r31, 0xFF	; 255
    6090:	80 81       	ld	r24, Z
    6092:	91 81       	ldd	r25, Z+1	; 0x01
    6094:	01 97       	sbiw	r24, 0x01	; 1
    6096:	f1 f7       	brne	.-4      	; 0x6094 <main+0x1f8c>
    6098:	fe 01       	movw	r30, r28
    609a:	e3 50       	subi	r30, 0x03	; 3
    609c:	ff 4f       	sbci	r31, 0xFF	; 255
    609e:	91 83       	std	Z+1, r25	; 0x01
    60a0:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(1,4);
    60a2:	81 e0       	ldi	r24, 0x01	; 1
    60a4:	64 e0       	ldi	r22, 0x04	; 4
    60a6:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_Goal);
    60aa:	89 ec       	ldi	r24, 0xC9	; 201
    60ac:	91 e0       	ldi	r25, 0x01	; 1
    60ae:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    60b2:	fe 01       	movw	r30, r28
    60b4:	e7 50       	subi	r30, 0x07	; 7
    60b6:	ff 4f       	sbci	r31, 0xFF	; 255
    60b8:	80 e0       	ldi	r24, 0x00	; 0
    60ba:	90 e0       	ldi	r25, 0x00	; 0
    60bc:	aa e7       	ldi	r26, 0x7A	; 122
    60be:	b4 e4       	ldi	r27, 0x44	; 68
    60c0:	80 83       	st	Z, r24
    60c2:	91 83       	std	Z+1, r25	; 0x01
    60c4:	a2 83       	std	Z+2, r26	; 0x02
    60c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    60c8:	8e 01       	movw	r16, r28
    60ca:	0b 50       	subi	r16, 0x0B	; 11
    60cc:	1f 4f       	sbci	r17, 0xFF	; 255
    60ce:	fe 01       	movw	r30, r28
    60d0:	e7 50       	subi	r30, 0x07	; 7
    60d2:	ff 4f       	sbci	r31, 0xFF	; 255
    60d4:	60 81       	ld	r22, Z
    60d6:	71 81       	ldd	r23, Z+1	; 0x01
    60d8:	82 81       	ldd	r24, Z+2	; 0x02
    60da:	93 81       	ldd	r25, Z+3	; 0x03
    60dc:	20 e0       	ldi	r18, 0x00	; 0
    60de:	30 e0       	ldi	r19, 0x00	; 0
    60e0:	4a ef       	ldi	r20, 0xFA	; 250
    60e2:	54 e4       	ldi	r21, 0x44	; 68
    60e4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    60e8:	dc 01       	movw	r26, r24
    60ea:	cb 01       	movw	r24, r22
    60ec:	f8 01       	movw	r30, r16
    60ee:	80 83       	st	Z, r24
    60f0:	91 83       	std	Z+1, r25	; 0x01
    60f2:	a2 83       	std	Z+2, r26	; 0x02
    60f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    60f6:	fe 01       	movw	r30, r28
    60f8:	eb 50       	subi	r30, 0x0B	; 11
    60fa:	ff 4f       	sbci	r31, 0xFF	; 255
    60fc:	60 81       	ld	r22, Z
    60fe:	71 81       	ldd	r23, Z+1	; 0x01
    6100:	82 81       	ldd	r24, Z+2	; 0x02
    6102:	93 81       	ldd	r25, Z+3	; 0x03
    6104:	20 e0       	ldi	r18, 0x00	; 0
    6106:	30 e0       	ldi	r19, 0x00	; 0
    6108:	40 e8       	ldi	r20, 0x80	; 128
    610a:	5f e3       	ldi	r21, 0x3F	; 63
    610c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    6110:	88 23       	and	r24, r24
    6112:	44 f4       	brge	.+16     	; 0x6124 <main+0x201c>
		__ticks = 1;
    6114:	fe 01       	movw	r30, r28
    6116:	ed 50       	subi	r30, 0x0D	; 13
    6118:	ff 4f       	sbci	r31, 0xFF	; 255
    611a:	81 e0       	ldi	r24, 0x01	; 1
    611c:	90 e0       	ldi	r25, 0x00	; 0
    611e:	91 83       	std	Z+1, r25	; 0x01
    6120:	80 83       	st	Z, r24
    6122:	64 c0       	rjmp	.+200    	; 0x61ec <main+0x20e4>
	else if (__tmp > 65535)
    6124:	fe 01       	movw	r30, r28
    6126:	eb 50       	subi	r30, 0x0B	; 11
    6128:	ff 4f       	sbci	r31, 0xFF	; 255
    612a:	60 81       	ld	r22, Z
    612c:	71 81       	ldd	r23, Z+1	; 0x01
    612e:	82 81       	ldd	r24, Z+2	; 0x02
    6130:	93 81       	ldd	r25, Z+3	; 0x03
    6132:	20 e0       	ldi	r18, 0x00	; 0
    6134:	3f ef       	ldi	r19, 0xFF	; 255
    6136:	4f e7       	ldi	r20, 0x7F	; 127
    6138:	57 e4       	ldi	r21, 0x47	; 71
    613a:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    613e:	18 16       	cp	r1, r24
    6140:	0c f0       	brlt	.+2      	; 0x6144 <main+0x203c>
    6142:	43 c0       	rjmp	.+134    	; 0x61ca <main+0x20c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6144:	fe 01       	movw	r30, r28
    6146:	e7 50       	subi	r30, 0x07	; 7
    6148:	ff 4f       	sbci	r31, 0xFF	; 255
    614a:	60 81       	ld	r22, Z
    614c:	71 81       	ldd	r23, Z+1	; 0x01
    614e:	82 81       	ldd	r24, Z+2	; 0x02
    6150:	93 81       	ldd	r25, Z+3	; 0x03
    6152:	20 e0       	ldi	r18, 0x00	; 0
    6154:	30 e0       	ldi	r19, 0x00	; 0
    6156:	40 e2       	ldi	r20, 0x20	; 32
    6158:	51 e4       	ldi	r21, 0x41	; 65
    615a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    615e:	dc 01       	movw	r26, r24
    6160:	cb 01       	movw	r24, r22
    6162:	8e 01       	movw	r16, r28
    6164:	0d 50       	subi	r16, 0x0D	; 13
    6166:	1f 4f       	sbci	r17, 0xFF	; 255
    6168:	bc 01       	movw	r22, r24
    616a:	cd 01       	movw	r24, r26
    616c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6170:	dc 01       	movw	r26, r24
    6172:	cb 01       	movw	r24, r22
    6174:	f8 01       	movw	r30, r16
    6176:	91 83       	std	Z+1, r25	; 0x01
    6178:	80 83       	st	Z, r24
    617a:	1f c0       	rjmp	.+62     	; 0x61ba <main+0x20b2>
    617c:	fe 01       	movw	r30, r28
    617e:	ef 50       	subi	r30, 0x0F	; 15
    6180:	ff 4f       	sbci	r31, 0xFF	; 255
    6182:	88 ec       	ldi	r24, 0xC8	; 200
    6184:	90 e0       	ldi	r25, 0x00	; 0
    6186:	91 83       	std	Z+1, r25	; 0x01
    6188:	80 83       	st	Z, r24
    618a:	fe 01       	movw	r30, r28
    618c:	ef 50       	subi	r30, 0x0F	; 15
    618e:	ff 4f       	sbci	r31, 0xFF	; 255
    6190:	80 81       	ld	r24, Z
    6192:	91 81       	ldd	r25, Z+1	; 0x01
    6194:	01 97       	sbiw	r24, 0x01	; 1
    6196:	f1 f7       	brne	.-4      	; 0x6194 <main+0x208c>
    6198:	fe 01       	movw	r30, r28
    619a:	ef 50       	subi	r30, 0x0F	; 15
    619c:	ff 4f       	sbci	r31, 0xFF	; 255
    619e:	91 83       	std	Z+1, r25	; 0x01
    61a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    61a2:	de 01       	movw	r26, r28
    61a4:	ad 50       	subi	r26, 0x0D	; 13
    61a6:	bf 4f       	sbci	r27, 0xFF	; 255
    61a8:	fe 01       	movw	r30, r28
    61aa:	ed 50       	subi	r30, 0x0D	; 13
    61ac:	ff 4f       	sbci	r31, 0xFF	; 255
    61ae:	80 81       	ld	r24, Z
    61b0:	91 81       	ldd	r25, Z+1	; 0x01
    61b2:	01 97       	sbiw	r24, 0x01	; 1
    61b4:	11 96       	adiw	r26, 0x01	; 1
    61b6:	9c 93       	st	X, r25
    61b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    61ba:	fe 01       	movw	r30, r28
    61bc:	ed 50       	subi	r30, 0x0D	; 13
    61be:	ff 4f       	sbci	r31, 0xFF	; 255
    61c0:	80 81       	ld	r24, Z
    61c2:	91 81       	ldd	r25, Z+1	; 0x01
    61c4:	00 97       	sbiw	r24, 0x00	; 0
    61c6:	d1 f6       	brne	.-76     	; 0x617c <main+0x2074>
    61c8:	27 c0       	rjmp	.+78     	; 0x6218 <main+0x2110>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    61ca:	8e 01       	movw	r16, r28
    61cc:	0d 50       	subi	r16, 0x0D	; 13
    61ce:	1f 4f       	sbci	r17, 0xFF	; 255
    61d0:	fe 01       	movw	r30, r28
    61d2:	eb 50       	subi	r30, 0x0B	; 11
    61d4:	ff 4f       	sbci	r31, 0xFF	; 255
    61d6:	60 81       	ld	r22, Z
    61d8:	71 81       	ldd	r23, Z+1	; 0x01
    61da:	82 81       	ldd	r24, Z+2	; 0x02
    61dc:	93 81       	ldd	r25, Z+3	; 0x03
    61de:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    61e2:	dc 01       	movw	r26, r24
    61e4:	cb 01       	movw	r24, r22
    61e6:	f8 01       	movw	r30, r16
    61e8:	91 83       	std	Z+1, r25	; 0x01
    61ea:	80 83       	st	Z, r24
    61ec:	de 01       	movw	r26, r28
    61ee:	a1 51       	subi	r26, 0x11	; 17
    61f0:	bf 4f       	sbci	r27, 0xFF	; 255
    61f2:	fe 01       	movw	r30, r28
    61f4:	ed 50       	subi	r30, 0x0D	; 13
    61f6:	ff 4f       	sbci	r31, 0xFF	; 255
    61f8:	80 81       	ld	r24, Z
    61fa:	91 81       	ldd	r25, Z+1	; 0x01
    61fc:	8d 93       	st	X+, r24
    61fe:	9c 93       	st	X, r25
    6200:	fe 01       	movw	r30, r28
    6202:	e1 51       	subi	r30, 0x11	; 17
    6204:	ff 4f       	sbci	r31, 0xFF	; 255
    6206:	80 81       	ld	r24, Z
    6208:	91 81       	ldd	r25, Z+1	; 0x01
    620a:	01 97       	sbiw	r24, 0x01	; 1
    620c:	f1 f7       	brne	.-4      	; 0x620a <main+0x2102>
    620e:	fe 01       	movw	r30, r28
    6210:	e1 51       	subi	r30, 0x11	; 17
    6212:	ff 4f       	sbci	r31, 0xFF	; 255
    6214:	91 83       	std	Z+1, r25	; 0x01
    6216:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    6218:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    621c:	fe 01       	movw	r30, r28
    621e:	e5 51       	subi	r30, 0x15	; 21
    6220:	ff 4f       	sbci	r31, 0xFF	; 255
    6222:	80 e0       	ldi	r24, 0x00	; 0
    6224:	90 e0       	ldi	r25, 0x00	; 0
    6226:	aa ef       	ldi	r26, 0xFA	; 250
    6228:	b3 e4       	ldi	r27, 0x43	; 67
    622a:	80 83       	st	Z, r24
    622c:	91 83       	std	Z+1, r25	; 0x01
    622e:	a2 83       	std	Z+2, r26	; 0x02
    6230:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6232:	8e 01       	movw	r16, r28
    6234:	09 51       	subi	r16, 0x19	; 25
    6236:	1f 4f       	sbci	r17, 0xFF	; 255
    6238:	fe 01       	movw	r30, r28
    623a:	e5 51       	subi	r30, 0x15	; 21
    623c:	ff 4f       	sbci	r31, 0xFF	; 255
    623e:	60 81       	ld	r22, Z
    6240:	71 81       	ldd	r23, Z+1	; 0x01
    6242:	82 81       	ldd	r24, Z+2	; 0x02
    6244:	93 81       	ldd	r25, Z+3	; 0x03
    6246:	20 e0       	ldi	r18, 0x00	; 0
    6248:	30 e0       	ldi	r19, 0x00	; 0
    624a:	4a ef       	ldi	r20, 0xFA	; 250
    624c:	54 e4       	ldi	r21, 0x44	; 68
    624e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6252:	dc 01       	movw	r26, r24
    6254:	cb 01       	movw	r24, r22
    6256:	f8 01       	movw	r30, r16
    6258:	80 83       	st	Z, r24
    625a:	91 83       	std	Z+1, r25	; 0x01
    625c:	a2 83       	std	Z+2, r26	; 0x02
    625e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6260:	fe 01       	movw	r30, r28
    6262:	e9 51       	subi	r30, 0x19	; 25
    6264:	ff 4f       	sbci	r31, 0xFF	; 255
    6266:	60 81       	ld	r22, Z
    6268:	71 81       	ldd	r23, Z+1	; 0x01
    626a:	82 81       	ldd	r24, Z+2	; 0x02
    626c:	93 81       	ldd	r25, Z+3	; 0x03
    626e:	20 e0       	ldi	r18, 0x00	; 0
    6270:	30 e0       	ldi	r19, 0x00	; 0
    6272:	40 e8       	ldi	r20, 0x80	; 128
    6274:	5f e3       	ldi	r21, 0x3F	; 63
    6276:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    627a:	88 23       	and	r24, r24
    627c:	44 f4       	brge	.+16     	; 0x628e <main+0x2186>
		__ticks = 1;
    627e:	fe 01       	movw	r30, r28
    6280:	eb 51       	subi	r30, 0x1B	; 27
    6282:	ff 4f       	sbci	r31, 0xFF	; 255
    6284:	81 e0       	ldi	r24, 0x01	; 1
    6286:	90 e0       	ldi	r25, 0x00	; 0
    6288:	91 83       	std	Z+1, r25	; 0x01
    628a:	80 83       	st	Z, r24
    628c:	64 c0       	rjmp	.+200    	; 0x6356 <main+0x224e>
	else if (__tmp > 65535)
    628e:	fe 01       	movw	r30, r28
    6290:	e9 51       	subi	r30, 0x19	; 25
    6292:	ff 4f       	sbci	r31, 0xFF	; 255
    6294:	60 81       	ld	r22, Z
    6296:	71 81       	ldd	r23, Z+1	; 0x01
    6298:	82 81       	ldd	r24, Z+2	; 0x02
    629a:	93 81       	ldd	r25, Z+3	; 0x03
    629c:	20 e0       	ldi	r18, 0x00	; 0
    629e:	3f ef       	ldi	r19, 0xFF	; 255
    62a0:	4f e7       	ldi	r20, 0x7F	; 127
    62a2:	57 e4       	ldi	r21, 0x47	; 71
    62a4:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    62a8:	18 16       	cp	r1, r24
    62aa:	0c f0       	brlt	.+2      	; 0x62ae <main+0x21a6>
    62ac:	43 c0       	rjmp	.+134    	; 0x6334 <main+0x222c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    62ae:	fe 01       	movw	r30, r28
    62b0:	e5 51       	subi	r30, 0x15	; 21
    62b2:	ff 4f       	sbci	r31, 0xFF	; 255
    62b4:	60 81       	ld	r22, Z
    62b6:	71 81       	ldd	r23, Z+1	; 0x01
    62b8:	82 81       	ldd	r24, Z+2	; 0x02
    62ba:	93 81       	ldd	r25, Z+3	; 0x03
    62bc:	20 e0       	ldi	r18, 0x00	; 0
    62be:	30 e0       	ldi	r19, 0x00	; 0
    62c0:	40 e2       	ldi	r20, 0x20	; 32
    62c2:	51 e4       	ldi	r21, 0x41	; 65
    62c4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    62c8:	dc 01       	movw	r26, r24
    62ca:	cb 01       	movw	r24, r22
    62cc:	8e 01       	movw	r16, r28
    62ce:	0b 51       	subi	r16, 0x1B	; 27
    62d0:	1f 4f       	sbci	r17, 0xFF	; 255
    62d2:	bc 01       	movw	r22, r24
    62d4:	cd 01       	movw	r24, r26
    62d6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    62da:	dc 01       	movw	r26, r24
    62dc:	cb 01       	movw	r24, r22
    62de:	f8 01       	movw	r30, r16
    62e0:	91 83       	std	Z+1, r25	; 0x01
    62e2:	80 83       	st	Z, r24
    62e4:	1f c0       	rjmp	.+62     	; 0x6324 <main+0x221c>
    62e6:	fe 01       	movw	r30, r28
    62e8:	ed 51       	subi	r30, 0x1D	; 29
    62ea:	ff 4f       	sbci	r31, 0xFF	; 255
    62ec:	88 ec       	ldi	r24, 0xC8	; 200
    62ee:	90 e0       	ldi	r25, 0x00	; 0
    62f0:	91 83       	std	Z+1, r25	; 0x01
    62f2:	80 83       	st	Z, r24
    62f4:	fe 01       	movw	r30, r28
    62f6:	ed 51       	subi	r30, 0x1D	; 29
    62f8:	ff 4f       	sbci	r31, 0xFF	; 255
    62fa:	80 81       	ld	r24, Z
    62fc:	91 81       	ldd	r25, Z+1	; 0x01
    62fe:	01 97       	sbiw	r24, 0x01	; 1
    6300:	f1 f7       	brne	.-4      	; 0x62fe <main+0x21f6>
    6302:	fe 01       	movw	r30, r28
    6304:	ed 51       	subi	r30, 0x1D	; 29
    6306:	ff 4f       	sbci	r31, 0xFF	; 255
    6308:	91 83       	std	Z+1, r25	; 0x01
    630a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    630c:	de 01       	movw	r26, r28
    630e:	ab 51       	subi	r26, 0x1B	; 27
    6310:	bf 4f       	sbci	r27, 0xFF	; 255
    6312:	fe 01       	movw	r30, r28
    6314:	eb 51       	subi	r30, 0x1B	; 27
    6316:	ff 4f       	sbci	r31, 0xFF	; 255
    6318:	80 81       	ld	r24, Z
    631a:	91 81       	ldd	r25, Z+1	; 0x01
    631c:	01 97       	sbiw	r24, 0x01	; 1
    631e:	11 96       	adiw	r26, 0x01	; 1
    6320:	9c 93       	st	X, r25
    6322:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6324:	fe 01       	movw	r30, r28
    6326:	eb 51       	subi	r30, 0x1B	; 27
    6328:	ff 4f       	sbci	r31, 0xFF	; 255
    632a:	80 81       	ld	r24, Z
    632c:	91 81       	ldd	r25, Z+1	; 0x01
    632e:	00 97       	sbiw	r24, 0x00	; 0
    6330:	d1 f6       	brne	.-76     	; 0x62e6 <main+0x21de>
    6332:	27 c0       	rjmp	.+78     	; 0x6382 <main+0x227a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6334:	8e 01       	movw	r16, r28
    6336:	0b 51       	subi	r16, 0x1B	; 27
    6338:	1f 4f       	sbci	r17, 0xFF	; 255
    633a:	fe 01       	movw	r30, r28
    633c:	e9 51       	subi	r30, 0x19	; 25
    633e:	ff 4f       	sbci	r31, 0xFF	; 255
    6340:	60 81       	ld	r22, Z
    6342:	71 81       	ldd	r23, Z+1	; 0x01
    6344:	82 81       	ldd	r24, Z+2	; 0x02
    6346:	93 81       	ldd	r25, Z+3	; 0x03
    6348:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    634c:	dc 01       	movw	r26, r24
    634e:	cb 01       	movw	r24, r22
    6350:	f8 01       	movw	r30, r16
    6352:	91 83       	std	Z+1, r25	; 0x01
    6354:	80 83       	st	Z, r24
    6356:	de 01       	movw	r26, r28
    6358:	af 51       	subi	r26, 0x1F	; 31
    635a:	bf 4f       	sbci	r27, 0xFF	; 255
    635c:	fe 01       	movw	r30, r28
    635e:	eb 51       	subi	r30, 0x1B	; 27
    6360:	ff 4f       	sbci	r31, 0xFF	; 255
    6362:	80 81       	ld	r24, Z
    6364:	91 81       	ldd	r25, Z+1	; 0x01
    6366:	8d 93       	st	X+, r24
    6368:	9c 93       	st	X, r25
    636a:	fe 01       	movw	r30, r28
    636c:	ef 51       	subi	r30, 0x1F	; 31
    636e:	ff 4f       	sbci	r31, 0xFF	; 255
    6370:	80 81       	ld	r24, Z
    6372:	91 81       	ldd	r25, Z+1	; 0x01
    6374:	01 97       	sbiw	r24, 0x01	; 1
    6376:	f1 f7       	brne	.-4      	; 0x6374 <main+0x226c>
    6378:	fe 01       	movw	r30, r28
    637a:	ef 51       	subi	r30, 0x1F	; 31
    637c:	ff 4f       	sbci	r31, 0xFF	; 255
    637e:	91 83       	std	Z+1, r25	; 0x01
    6380:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(2,4);
    6382:	82 e0       	ldi	r24, 0x02	; 2
    6384:	64 e0       	ldi	r22, 0x04	; 4
    6386:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_EndGame);
    638a:	8b e0       	ldi	r24, 0x0B	; 11
    638c:	92 e0       	ldi	r25, 0x02	; 2
    638e:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    6392:	fe 01       	movw	r30, r28
    6394:	e3 52       	subi	r30, 0x23	; 35
    6396:	ff 4f       	sbci	r31, 0xFF	; 255
    6398:	80 e0       	ldi	r24, 0x00	; 0
    639a:	90 e0       	ldi	r25, 0x00	; 0
    639c:	aa ef       	ldi	r26, 0xFA	; 250
    639e:	b3 e4       	ldi	r27, 0x43	; 67
    63a0:	80 83       	st	Z, r24
    63a2:	91 83       	std	Z+1, r25	; 0x01
    63a4:	a2 83       	std	Z+2, r26	; 0x02
    63a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    63a8:	8e 01       	movw	r16, r28
    63aa:	07 52       	subi	r16, 0x27	; 39
    63ac:	1f 4f       	sbci	r17, 0xFF	; 255
    63ae:	fe 01       	movw	r30, r28
    63b0:	e3 52       	subi	r30, 0x23	; 35
    63b2:	ff 4f       	sbci	r31, 0xFF	; 255
    63b4:	60 81       	ld	r22, Z
    63b6:	71 81       	ldd	r23, Z+1	; 0x01
    63b8:	82 81       	ldd	r24, Z+2	; 0x02
    63ba:	93 81       	ldd	r25, Z+3	; 0x03
    63bc:	20 e0       	ldi	r18, 0x00	; 0
    63be:	30 e0       	ldi	r19, 0x00	; 0
    63c0:	4a ef       	ldi	r20, 0xFA	; 250
    63c2:	54 e4       	ldi	r21, 0x44	; 68
    63c4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    63c8:	dc 01       	movw	r26, r24
    63ca:	cb 01       	movw	r24, r22
    63cc:	f8 01       	movw	r30, r16
    63ce:	80 83       	st	Z, r24
    63d0:	91 83       	std	Z+1, r25	; 0x01
    63d2:	a2 83       	std	Z+2, r26	; 0x02
    63d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    63d6:	fe 01       	movw	r30, r28
    63d8:	e7 52       	subi	r30, 0x27	; 39
    63da:	ff 4f       	sbci	r31, 0xFF	; 255
    63dc:	60 81       	ld	r22, Z
    63de:	71 81       	ldd	r23, Z+1	; 0x01
    63e0:	82 81       	ldd	r24, Z+2	; 0x02
    63e2:	93 81       	ldd	r25, Z+3	; 0x03
    63e4:	20 e0       	ldi	r18, 0x00	; 0
    63e6:	30 e0       	ldi	r19, 0x00	; 0
    63e8:	40 e8       	ldi	r20, 0x80	; 128
    63ea:	5f e3       	ldi	r21, 0x3F	; 63
    63ec:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    63f0:	88 23       	and	r24, r24
    63f2:	44 f4       	brge	.+16     	; 0x6404 <main+0x22fc>
		__ticks = 1;
    63f4:	fe 01       	movw	r30, r28
    63f6:	e9 52       	subi	r30, 0x29	; 41
    63f8:	ff 4f       	sbci	r31, 0xFF	; 255
    63fa:	81 e0       	ldi	r24, 0x01	; 1
    63fc:	90 e0       	ldi	r25, 0x00	; 0
    63fe:	91 83       	std	Z+1, r25	; 0x01
    6400:	80 83       	st	Z, r24
    6402:	64 c0       	rjmp	.+200    	; 0x64cc <main+0x23c4>
	else if (__tmp > 65535)
    6404:	fe 01       	movw	r30, r28
    6406:	e7 52       	subi	r30, 0x27	; 39
    6408:	ff 4f       	sbci	r31, 0xFF	; 255
    640a:	60 81       	ld	r22, Z
    640c:	71 81       	ldd	r23, Z+1	; 0x01
    640e:	82 81       	ldd	r24, Z+2	; 0x02
    6410:	93 81       	ldd	r25, Z+3	; 0x03
    6412:	20 e0       	ldi	r18, 0x00	; 0
    6414:	3f ef       	ldi	r19, 0xFF	; 255
    6416:	4f e7       	ldi	r20, 0x7F	; 127
    6418:	57 e4       	ldi	r21, 0x47	; 71
    641a:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    641e:	18 16       	cp	r1, r24
    6420:	0c f0       	brlt	.+2      	; 0x6424 <main+0x231c>
    6422:	43 c0       	rjmp	.+134    	; 0x64aa <main+0x23a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6424:	fe 01       	movw	r30, r28
    6426:	e3 52       	subi	r30, 0x23	; 35
    6428:	ff 4f       	sbci	r31, 0xFF	; 255
    642a:	60 81       	ld	r22, Z
    642c:	71 81       	ldd	r23, Z+1	; 0x01
    642e:	82 81       	ldd	r24, Z+2	; 0x02
    6430:	93 81       	ldd	r25, Z+3	; 0x03
    6432:	20 e0       	ldi	r18, 0x00	; 0
    6434:	30 e0       	ldi	r19, 0x00	; 0
    6436:	40 e2       	ldi	r20, 0x20	; 32
    6438:	51 e4       	ldi	r21, 0x41	; 65
    643a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    643e:	dc 01       	movw	r26, r24
    6440:	cb 01       	movw	r24, r22
    6442:	8e 01       	movw	r16, r28
    6444:	09 52       	subi	r16, 0x29	; 41
    6446:	1f 4f       	sbci	r17, 0xFF	; 255
    6448:	bc 01       	movw	r22, r24
    644a:	cd 01       	movw	r24, r26
    644c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6450:	dc 01       	movw	r26, r24
    6452:	cb 01       	movw	r24, r22
    6454:	f8 01       	movw	r30, r16
    6456:	91 83       	std	Z+1, r25	; 0x01
    6458:	80 83       	st	Z, r24
    645a:	1f c0       	rjmp	.+62     	; 0x649a <main+0x2392>
    645c:	fe 01       	movw	r30, r28
    645e:	eb 52       	subi	r30, 0x2B	; 43
    6460:	ff 4f       	sbci	r31, 0xFF	; 255
    6462:	88 ec       	ldi	r24, 0xC8	; 200
    6464:	90 e0       	ldi	r25, 0x00	; 0
    6466:	91 83       	std	Z+1, r25	; 0x01
    6468:	80 83       	st	Z, r24
    646a:	fe 01       	movw	r30, r28
    646c:	eb 52       	subi	r30, 0x2B	; 43
    646e:	ff 4f       	sbci	r31, 0xFF	; 255
    6470:	80 81       	ld	r24, Z
    6472:	91 81       	ldd	r25, Z+1	; 0x01
    6474:	01 97       	sbiw	r24, 0x01	; 1
    6476:	f1 f7       	brne	.-4      	; 0x6474 <main+0x236c>
    6478:	fe 01       	movw	r30, r28
    647a:	eb 52       	subi	r30, 0x2B	; 43
    647c:	ff 4f       	sbci	r31, 0xFF	; 255
    647e:	91 83       	std	Z+1, r25	; 0x01
    6480:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6482:	de 01       	movw	r26, r28
    6484:	a9 52       	subi	r26, 0x29	; 41
    6486:	bf 4f       	sbci	r27, 0xFF	; 255
    6488:	fe 01       	movw	r30, r28
    648a:	e9 52       	subi	r30, 0x29	; 41
    648c:	ff 4f       	sbci	r31, 0xFF	; 255
    648e:	80 81       	ld	r24, Z
    6490:	91 81       	ldd	r25, Z+1	; 0x01
    6492:	01 97       	sbiw	r24, 0x01	; 1
    6494:	11 96       	adiw	r26, 0x01	; 1
    6496:	9c 93       	st	X, r25
    6498:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    649a:	fe 01       	movw	r30, r28
    649c:	e9 52       	subi	r30, 0x29	; 41
    649e:	ff 4f       	sbci	r31, 0xFF	; 255
    64a0:	80 81       	ld	r24, Z
    64a2:	91 81       	ldd	r25, Z+1	; 0x01
    64a4:	00 97       	sbiw	r24, 0x00	; 0
    64a6:	d1 f6       	brne	.-76     	; 0x645c <main+0x2354>
    64a8:	27 c0       	rjmp	.+78     	; 0x64f8 <main+0x23f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    64aa:	8e 01       	movw	r16, r28
    64ac:	09 52       	subi	r16, 0x29	; 41
    64ae:	1f 4f       	sbci	r17, 0xFF	; 255
    64b0:	fe 01       	movw	r30, r28
    64b2:	e7 52       	subi	r30, 0x27	; 39
    64b4:	ff 4f       	sbci	r31, 0xFF	; 255
    64b6:	60 81       	ld	r22, Z
    64b8:	71 81       	ldd	r23, Z+1	; 0x01
    64ba:	82 81       	ldd	r24, Z+2	; 0x02
    64bc:	93 81       	ldd	r25, Z+3	; 0x03
    64be:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    64c2:	dc 01       	movw	r26, r24
    64c4:	cb 01       	movw	r24, r22
    64c6:	f8 01       	movw	r30, r16
    64c8:	91 83       	std	Z+1, r25	; 0x01
    64ca:	80 83       	st	Z, r24
    64cc:	de 01       	movw	r26, r28
    64ce:	ad 52       	subi	r26, 0x2D	; 45
    64d0:	bf 4f       	sbci	r27, 0xFF	; 255
    64d2:	fe 01       	movw	r30, r28
    64d4:	e9 52       	subi	r30, 0x29	; 41
    64d6:	ff 4f       	sbci	r31, 0xFF	; 255
    64d8:	80 81       	ld	r24, Z
    64da:	91 81       	ldd	r25, Z+1	; 0x01
    64dc:	8d 93       	st	X+, r24
    64de:	9c 93       	st	X, r25
    64e0:	fe 01       	movw	r30, r28
    64e2:	ed 52       	subi	r30, 0x2D	; 45
    64e4:	ff 4f       	sbci	r31, 0xFF	; 255
    64e6:	80 81       	ld	r24, Z
    64e8:	91 81       	ldd	r25, Z+1	; 0x01
    64ea:	01 97       	sbiw	r24, 0x01	; 1
    64ec:	f1 f7       	brne	.-4      	; 0x64ea <main+0x23e2>
    64ee:	fe 01       	movw	r30, r28
    64f0:	ed 52       	subi	r30, 0x2D	; 45
    64f2:	ff 4f       	sbci	r31, 0xFF	; 255
    64f4:	91 83       	std	Z+1, r25	; 0x01
    64f6:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Clear();
    64f8:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    64fc:	fe 01       	movw	r30, r28
    64fe:	e1 53       	subi	r30, 0x31	; 49
    6500:	ff 4f       	sbci	r31, 0xFF	; 255
    6502:	80 e0       	ldi	r24, 0x00	; 0
    6504:	90 e0       	ldi	r25, 0x00	; 0
    6506:	aa ef       	ldi	r26, 0xFA	; 250
    6508:	b3 e4       	ldi	r27, 0x43	; 67
    650a:	80 83       	st	Z, r24
    650c:	91 83       	std	Z+1, r25	; 0x01
    650e:	a2 83       	std	Z+2, r26	; 0x02
    6510:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6512:	8e 01       	movw	r16, r28
    6514:	05 53       	subi	r16, 0x35	; 53
    6516:	1f 4f       	sbci	r17, 0xFF	; 255
    6518:	fe 01       	movw	r30, r28
    651a:	e1 53       	subi	r30, 0x31	; 49
    651c:	ff 4f       	sbci	r31, 0xFF	; 255
    651e:	60 81       	ld	r22, Z
    6520:	71 81       	ldd	r23, Z+1	; 0x01
    6522:	82 81       	ldd	r24, Z+2	; 0x02
    6524:	93 81       	ldd	r25, Z+3	; 0x03
    6526:	20 e0       	ldi	r18, 0x00	; 0
    6528:	30 e0       	ldi	r19, 0x00	; 0
    652a:	4a ef       	ldi	r20, 0xFA	; 250
    652c:	54 e4       	ldi	r21, 0x44	; 68
    652e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6532:	dc 01       	movw	r26, r24
    6534:	cb 01       	movw	r24, r22
    6536:	f8 01       	movw	r30, r16
    6538:	80 83       	st	Z, r24
    653a:	91 83       	std	Z+1, r25	; 0x01
    653c:	a2 83       	std	Z+2, r26	; 0x02
    653e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6540:	fe 01       	movw	r30, r28
    6542:	e5 53       	subi	r30, 0x35	; 53
    6544:	ff 4f       	sbci	r31, 0xFF	; 255
    6546:	60 81       	ld	r22, Z
    6548:	71 81       	ldd	r23, Z+1	; 0x01
    654a:	82 81       	ldd	r24, Z+2	; 0x02
    654c:	93 81       	ldd	r25, Z+3	; 0x03
    654e:	20 e0       	ldi	r18, 0x00	; 0
    6550:	30 e0       	ldi	r19, 0x00	; 0
    6552:	40 e8       	ldi	r20, 0x80	; 128
    6554:	5f e3       	ldi	r21, 0x3F	; 63
    6556:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    655a:	88 23       	and	r24, r24
    655c:	44 f4       	brge	.+16     	; 0x656e <main+0x2466>
		__ticks = 1;
    655e:	fe 01       	movw	r30, r28
    6560:	e7 53       	subi	r30, 0x37	; 55
    6562:	ff 4f       	sbci	r31, 0xFF	; 255
    6564:	81 e0       	ldi	r24, 0x01	; 1
    6566:	90 e0       	ldi	r25, 0x00	; 0
    6568:	91 83       	std	Z+1, r25	; 0x01
    656a:	80 83       	st	Z, r24
    656c:	65 c0       	rjmp	.+202    	; 0x6638 <main+0x2530>
	else if (__tmp > 65535)
    656e:	fe 01       	movw	r30, r28
    6570:	e5 53       	subi	r30, 0x35	; 53
    6572:	ff 4f       	sbci	r31, 0xFF	; 255
    6574:	60 81       	ld	r22, Z
    6576:	71 81       	ldd	r23, Z+1	; 0x01
    6578:	82 81       	ldd	r24, Z+2	; 0x02
    657a:	93 81       	ldd	r25, Z+3	; 0x03
    657c:	20 e0       	ldi	r18, 0x00	; 0
    657e:	3f ef       	ldi	r19, 0xFF	; 255
    6580:	4f e7       	ldi	r20, 0x7F	; 127
    6582:	57 e4       	ldi	r21, 0x47	; 71
    6584:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    6588:	18 16       	cp	r1, r24
    658a:	0c f0       	brlt	.+2      	; 0x658e <main+0x2486>
    658c:	44 c0       	rjmp	.+136    	; 0x6616 <main+0x250e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    658e:	fe 01       	movw	r30, r28
    6590:	e1 53       	subi	r30, 0x31	; 49
    6592:	ff 4f       	sbci	r31, 0xFF	; 255
    6594:	60 81       	ld	r22, Z
    6596:	71 81       	ldd	r23, Z+1	; 0x01
    6598:	82 81       	ldd	r24, Z+2	; 0x02
    659a:	93 81       	ldd	r25, Z+3	; 0x03
    659c:	20 e0       	ldi	r18, 0x00	; 0
    659e:	30 e0       	ldi	r19, 0x00	; 0
    65a0:	40 e2       	ldi	r20, 0x20	; 32
    65a2:	51 e4       	ldi	r21, 0x41	; 65
    65a4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    65a8:	dc 01       	movw	r26, r24
    65aa:	cb 01       	movw	r24, r22
    65ac:	8e 01       	movw	r16, r28
    65ae:	07 53       	subi	r16, 0x37	; 55
    65b0:	1f 4f       	sbci	r17, 0xFF	; 255
    65b2:	bc 01       	movw	r22, r24
    65b4:	cd 01       	movw	r24, r26
    65b6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    65ba:	dc 01       	movw	r26, r24
    65bc:	cb 01       	movw	r24, r22
    65be:	f8 01       	movw	r30, r16
    65c0:	91 83       	std	Z+1, r25	; 0x01
    65c2:	80 83       	st	Z, r24
    65c4:	1f c0       	rjmp	.+62     	; 0x6604 <main+0x24fc>
    65c6:	fe 01       	movw	r30, r28
    65c8:	e9 53       	subi	r30, 0x39	; 57
    65ca:	ff 4f       	sbci	r31, 0xFF	; 255
    65cc:	88 ec       	ldi	r24, 0xC8	; 200
    65ce:	90 e0       	ldi	r25, 0x00	; 0
    65d0:	91 83       	std	Z+1, r25	; 0x01
    65d2:	80 83       	st	Z, r24
    65d4:	fe 01       	movw	r30, r28
    65d6:	e9 53       	subi	r30, 0x39	; 57
    65d8:	ff 4f       	sbci	r31, 0xFF	; 255
    65da:	80 81       	ld	r24, Z
    65dc:	91 81       	ldd	r25, Z+1	; 0x01
    65de:	01 97       	sbiw	r24, 0x01	; 1
    65e0:	f1 f7       	brne	.-4      	; 0x65de <main+0x24d6>
    65e2:	fe 01       	movw	r30, r28
    65e4:	e9 53       	subi	r30, 0x39	; 57
    65e6:	ff 4f       	sbci	r31, 0xFF	; 255
    65e8:	91 83       	std	Z+1, r25	; 0x01
    65ea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    65ec:	de 01       	movw	r26, r28
    65ee:	a7 53       	subi	r26, 0x37	; 55
    65f0:	bf 4f       	sbci	r27, 0xFF	; 255
    65f2:	fe 01       	movw	r30, r28
    65f4:	e7 53       	subi	r30, 0x37	; 55
    65f6:	ff 4f       	sbci	r31, 0xFF	; 255
    65f8:	80 81       	ld	r24, Z
    65fa:	91 81       	ldd	r25, Z+1	; 0x01
    65fc:	01 97       	sbiw	r24, 0x01	; 1
    65fe:	11 96       	adiw	r26, 0x01	; 1
    6600:	9c 93       	st	X, r25
    6602:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6604:	fe 01       	movw	r30, r28
    6606:	e7 53       	subi	r30, 0x37	; 55
    6608:	ff 4f       	sbci	r31, 0xFF	; 255
    660a:	80 81       	ld	r24, Z
    660c:	91 81       	ldd	r25, Z+1	; 0x01
    660e:	00 97       	sbiw	r24, 0x00	; 0
    6610:	d1 f6       	brne	.-76     	; 0x65c6 <main+0x24be>
    6612:	0c 94 c8 20 	jmp	0x4190	; 0x4190 <main+0x88>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6616:	8e 01       	movw	r16, r28
    6618:	07 53       	subi	r16, 0x37	; 55
    661a:	1f 4f       	sbci	r17, 0xFF	; 255
    661c:	fe 01       	movw	r30, r28
    661e:	e5 53       	subi	r30, 0x35	; 53
    6620:	ff 4f       	sbci	r31, 0xFF	; 255
    6622:	60 81       	ld	r22, Z
    6624:	71 81       	ldd	r23, Z+1	; 0x01
    6626:	82 81       	ldd	r24, Z+2	; 0x02
    6628:	93 81       	ldd	r25, Z+3	; 0x03
    662a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    662e:	dc 01       	movw	r26, r24
    6630:	cb 01       	movw	r24, r22
    6632:	f8 01       	movw	r30, r16
    6634:	91 83       	std	Z+1, r25	; 0x01
    6636:	80 83       	st	Z, r24
    6638:	de 01       	movw	r26, r28
    663a:	ab 53       	subi	r26, 0x3B	; 59
    663c:	bf 4f       	sbci	r27, 0xFF	; 255
    663e:	fe 01       	movw	r30, r28
    6640:	e7 53       	subi	r30, 0x37	; 55
    6642:	ff 4f       	sbci	r31, 0xFF	; 255
    6644:	80 81       	ld	r24, Z
    6646:	91 81       	ldd	r25, Z+1	; 0x01
    6648:	11 96       	adiw	r26, 0x01	; 1
    664a:	9c 93       	st	X, r25
    664c:	8e 93       	st	-X, r24
    664e:	fe 01       	movw	r30, r28
    6650:	eb 53       	subi	r30, 0x3B	; 59
    6652:	ff 4f       	sbci	r31, 0xFF	; 255
    6654:	80 81       	ld	r24, Z
    6656:	91 81       	ldd	r25, Z+1	; 0x01
    6658:	01 97       	sbiw	r24, 0x01	; 1
    665a:	f1 f7       	brne	.-4      	; 0x6658 <main+0x2550>
    665c:	fe 01       	movw	r30, r28
    665e:	eb 53       	subi	r30, 0x3B	; 59
    6660:	ff 4f       	sbci	r31, 0xFF	; 255
    6662:	91 83       	std	Z+1, r25	; 0x01
    6664:	80 83       	st	Z, r24
    6666:	0c 94 c8 20 	jmp	0x4190	; 0x4190 <main+0x88>
			_delay_ms(500);

		}

		else if (Button_1 == 1 && Button_2 == 0){
    666a:	fe 01       	movw	r30, r28
    666c:	ec 5d       	subi	r30, 0xDC	; 220
    666e:	fd 4f       	sbci	r31, 0xFD	; 253
    6670:	80 81       	ld	r24, Z
    6672:	81 30       	cpi	r24, 0x01	; 1
    6674:	11 f0       	breq	.+4      	; 0x667a <main+0x2572>
    6676:	0c 94 c8 20 	jmp	0x4190	; 0x4190 <main+0x88>
    667a:	fe 01       	movw	r30, r28
    667c:	ed 5d       	subi	r30, 0xDD	; 221
    667e:	fd 4f       	sbci	r31, 0xFD	; 253
    6680:	80 81       	ld	r24, Z
    6682:	88 23       	and	r24, r24
    6684:	11 f0       	breq	.+4      	; 0x668a <main+0x2582>
    6686:	0c 94 c8 20 	jmp	0x4190	; 0x4190 <main+0x88>
			LCD_Clear();
    668a:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
			LCD_Goto(1,2);
    668e:	81 e0       	ldi	r24, 0x01	; 1
    6690:	62 e0       	ldi	r22, 0x02	; 2
    6692:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_B2);
    6696:	8c ef       	ldi	r24, 0xFC	; 252
    6698:	91 e0       	ldi	r25, 0x01	; 1
    669a:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    669e:	fe 01       	movw	r30, r28
    66a0:	ef 53       	subi	r30, 0x3F	; 63
    66a2:	ff 4f       	sbci	r31, 0xFF	; 255
    66a4:	80 e0       	ldi	r24, 0x00	; 0
    66a6:	90 e0       	ldi	r25, 0x00	; 0
    66a8:	aa ef       	ldi	r26, 0xFA	; 250
    66aa:	b3 e4       	ldi	r27, 0x43	; 67
    66ac:	80 83       	st	Z, r24
    66ae:	91 83       	std	Z+1, r25	; 0x01
    66b0:	a2 83       	std	Z+2, r26	; 0x02
    66b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    66b4:	8e 01       	movw	r16, r28
    66b6:	03 54       	subi	r16, 0x43	; 67
    66b8:	1f 4f       	sbci	r17, 0xFF	; 255
    66ba:	fe 01       	movw	r30, r28
    66bc:	ef 53       	subi	r30, 0x3F	; 63
    66be:	ff 4f       	sbci	r31, 0xFF	; 255
    66c0:	60 81       	ld	r22, Z
    66c2:	71 81       	ldd	r23, Z+1	; 0x01
    66c4:	82 81       	ldd	r24, Z+2	; 0x02
    66c6:	93 81       	ldd	r25, Z+3	; 0x03
    66c8:	20 e0       	ldi	r18, 0x00	; 0
    66ca:	30 e0       	ldi	r19, 0x00	; 0
    66cc:	4a ef       	ldi	r20, 0xFA	; 250
    66ce:	54 e4       	ldi	r21, 0x44	; 68
    66d0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    66d4:	dc 01       	movw	r26, r24
    66d6:	cb 01       	movw	r24, r22
    66d8:	f8 01       	movw	r30, r16
    66da:	80 83       	st	Z, r24
    66dc:	91 83       	std	Z+1, r25	; 0x01
    66de:	a2 83       	std	Z+2, r26	; 0x02
    66e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    66e2:	fe 01       	movw	r30, r28
    66e4:	e3 54       	subi	r30, 0x43	; 67
    66e6:	ff 4f       	sbci	r31, 0xFF	; 255
    66e8:	60 81       	ld	r22, Z
    66ea:	71 81       	ldd	r23, Z+1	; 0x01
    66ec:	82 81       	ldd	r24, Z+2	; 0x02
    66ee:	93 81       	ldd	r25, Z+3	; 0x03
    66f0:	20 e0       	ldi	r18, 0x00	; 0
    66f2:	30 e0       	ldi	r19, 0x00	; 0
    66f4:	40 e8       	ldi	r20, 0x80	; 128
    66f6:	5f e3       	ldi	r21, 0x3F	; 63
    66f8:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    66fc:	88 23       	and	r24, r24
    66fe:	44 f4       	brge	.+16     	; 0x6710 <main+0x2608>
		__ticks = 1;
    6700:	fe 01       	movw	r30, r28
    6702:	e5 54       	subi	r30, 0x45	; 69
    6704:	ff 4f       	sbci	r31, 0xFF	; 255
    6706:	81 e0       	ldi	r24, 0x01	; 1
    6708:	90 e0       	ldi	r25, 0x00	; 0
    670a:	91 83       	std	Z+1, r25	; 0x01
    670c:	80 83       	st	Z, r24
    670e:	64 c0       	rjmp	.+200    	; 0x67d8 <main+0x26d0>
	else if (__tmp > 65535)
    6710:	fe 01       	movw	r30, r28
    6712:	e3 54       	subi	r30, 0x43	; 67
    6714:	ff 4f       	sbci	r31, 0xFF	; 255
    6716:	60 81       	ld	r22, Z
    6718:	71 81       	ldd	r23, Z+1	; 0x01
    671a:	82 81       	ldd	r24, Z+2	; 0x02
    671c:	93 81       	ldd	r25, Z+3	; 0x03
    671e:	20 e0       	ldi	r18, 0x00	; 0
    6720:	3f ef       	ldi	r19, 0xFF	; 255
    6722:	4f e7       	ldi	r20, 0x7F	; 127
    6724:	57 e4       	ldi	r21, 0x47	; 71
    6726:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    672a:	18 16       	cp	r1, r24
    672c:	0c f0       	brlt	.+2      	; 0x6730 <main+0x2628>
    672e:	43 c0       	rjmp	.+134    	; 0x67b6 <main+0x26ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6730:	fe 01       	movw	r30, r28
    6732:	ef 53       	subi	r30, 0x3F	; 63
    6734:	ff 4f       	sbci	r31, 0xFF	; 255
    6736:	60 81       	ld	r22, Z
    6738:	71 81       	ldd	r23, Z+1	; 0x01
    673a:	82 81       	ldd	r24, Z+2	; 0x02
    673c:	93 81       	ldd	r25, Z+3	; 0x03
    673e:	20 e0       	ldi	r18, 0x00	; 0
    6740:	30 e0       	ldi	r19, 0x00	; 0
    6742:	40 e2       	ldi	r20, 0x20	; 32
    6744:	51 e4       	ldi	r21, 0x41	; 65
    6746:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    674a:	dc 01       	movw	r26, r24
    674c:	cb 01       	movw	r24, r22
    674e:	8e 01       	movw	r16, r28
    6750:	05 54       	subi	r16, 0x45	; 69
    6752:	1f 4f       	sbci	r17, 0xFF	; 255
    6754:	bc 01       	movw	r22, r24
    6756:	cd 01       	movw	r24, r26
    6758:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    675c:	dc 01       	movw	r26, r24
    675e:	cb 01       	movw	r24, r22
    6760:	f8 01       	movw	r30, r16
    6762:	91 83       	std	Z+1, r25	; 0x01
    6764:	80 83       	st	Z, r24
    6766:	1f c0       	rjmp	.+62     	; 0x67a6 <main+0x269e>
    6768:	fe 01       	movw	r30, r28
    676a:	e7 54       	subi	r30, 0x47	; 71
    676c:	ff 4f       	sbci	r31, 0xFF	; 255
    676e:	88 ec       	ldi	r24, 0xC8	; 200
    6770:	90 e0       	ldi	r25, 0x00	; 0
    6772:	91 83       	std	Z+1, r25	; 0x01
    6774:	80 83       	st	Z, r24
    6776:	fe 01       	movw	r30, r28
    6778:	e7 54       	subi	r30, 0x47	; 71
    677a:	ff 4f       	sbci	r31, 0xFF	; 255
    677c:	80 81       	ld	r24, Z
    677e:	91 81       	ldd	r25, Z+1	; 0x01
    6780:	01 97       	sbiw	r24, 0x01	; 1
    6782:	f1 f7       	brne	.-4      	; 0x6780 <main+0x2678>
    6784:	fe 01       	movw	r30, r28
    6786:	e7 54       	subi	r30, 0x47	; 71
    6788:	ff 4f       	sbci	r31, 0xFF	; 255
    678a:	91 83       	std	Z+1, r25	; 0x01
    678c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    678e:	de 01       	movw	r26, r28
    6790:	a5 54       	subi	r26, 0x45	; 69
    6792:	bf 4f       	sbci	r27, 0xFF	; 255
    6794:	fe 01       	movw	r30, r28
    6796:	e5 54       	subi	r30, 0x45	; 69
    6798:	ff 4f       	sbci	r31, 0xFF	; 255
    679a:	80 81       	ld	r24, Z
    679c:	91 81       	ldd	r25, Z+1	; 0x01
    679e:	01 97       	sbiw	r24, 0x01	; 1
    67a0:	11 96       	adiw	r26, 0x01	; 1
    67a2:	9c 93       	st	X, r25
    67a4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    67a6:	fe 01       	movw	r30, r28
    67a8:	e5 54       	subi	r30, 0x45	; 69
    67aa:	ff 4f       	sbci	r31, 0xFF	; 255
    67ac:	80 81       	ld	r24, Z
    67ae:	91 81       	ldd	r25, Z+1	; 0x01
    67b0:	00 97       	sbiw	r24, 0x00	; 0
    67b2:	d1 f6       	brne	.-76     	; 0x6768 <main+0x2660>
    67b4:	27 c0       	rjmp	.+78     	; 0x6804 <main+0x26fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    67b6:	8e 01       	movw	r16, r28
    67b8:	05 54       	subi	r16, 0x45	; 69
    67ba:	1f 4f       	sbci	r17, 0xFF	; 255
    67bc:	fe 01       	movw	r30, r28
    67be:	e3 54       	subi	r30, 0x43	; 67
    67c0:	ff 4f       	sbci	r31, 0xFF	; 255
    67c2:	60 81       	ld	r22, Z
    67c4:	71 81       	ldd	r23, Z+1	; 0x01
    67c6:	82 81       	ldd	r24, Z+2	; 0x02
    67c8:	93 81       	ldd	r25, Z+3	; 0x03
    67ca:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    67ce:	dc 01       	movw	r26, r24
    67d0:	cb 01       	movw	r24, r22
    67d2:	f8 01       	movw	r30, r16
    67d4:	91 83       	std	Z+1, r25	; 0x01
    67d6:	80 83       	st	Z, r24
    67d8:	de 01       	movw	r26, r28
    67da:	a9 54       	subi	r26, 0x49	; 73
    67dc:	bf 4f       	sbci	r27, 0xFF	; 255
    67de:	fe 01       	movw	r30, r28
    67e0:	e5 54       	subi	r30, 0x45	; 69
    67e2:	ff 4f       	sbci	r31, 0xFF	; 255
    67e4:	80 81       	ld	r24, Z
    67e6:	91 81       	ldd	r25, Z+1	; 0x01
    67e8:	8d 93       	st	X+, r24
    67ea:	9c 93       	st	X, r25
    67ec:	fe 01       	movw	r30, r28
    67ee:	e9 54       	subi	r30, 0x49	; 73
    67f0:	ff 4f       	sbci	r31, 0xFF	; 255
    67f2:	80 81       	ld	r24, Z
    67f4:	91 81       	ldd	r25, Z+1	; 0x01
    67f6:	01 97       	sbiw	r24, 0x01	; 1
    67f8:	f1 f7       	brne	.-4      	; 0x67f6 <main+0x26ee>
    67fa:	fe 01       	movw	r30, r28
    67fc:	e9 54       	subi	r30, 0x49	; 73
    67fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6800:	91 83       	std	Z+1, r25	; 0x01
    6802:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Clear();
    6804:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    6808:	fe 01       	movw	r30, r28
    680a:	ed 54       	subi	r30, 0x4D	; 77
    680c:	ff 4f       	sbci	r31, 0xFF	; 255
    680e:	80 e0       	ldi	r24, 0x00	; 0
    6810:	90 e0       	ldi	r25, 0x00	; 0
    6812:	aa ef       	ldi	r26, 0xFA	; 250
    6814:	b3 e4       	ldi	r27, 0x43	; 67
    6816:	80 83       	st	Z, r24
    6818:	91 83       	std	Z+1, r25	; 0x01
    681a:	a2 83       	std	Z+2, r26	; 0x02
    681c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    681e:	8e 01       	movw	r16, r28
    6820:	01 55       	subi	r16, 0x51	; 81
    6822:	1f 4f       	sbci	r17, 0xFF	; 255
    6824:	fe 01       	movw	r30, r28
    6826:	ed 54       	subi	r30, 0x4D	; 77
    6828:	ff 4f       	sbci	r31, 0xFF	; 255
    682a:	60 81       	ld	r22, Z
    682c:	71 81       	ldd	r23, Z+1	; 0x01
    682e:	82 81       	ldd	r24, Z+2	; 0x02
    6830:	93 81       	ldd	r25, Z+3	; 0x03
    6832:	20 e0       	ldi	r18, 0x00	; 0
    6834:	30 e0       	ldi	r19, 0x00	; 0
    6836:	4a ef       	ldi	r20, 0xFA	; 250
    6838:	54 e4       	ldi	r21, 0x44	; 68
    683a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    683e:	dc 01       	movw	r26, r24
    6840:	cb 01       	movw	r24, r22
    6842:	f8 01       	movw	r30, r16
    6844:	80 83       	st	Z, r24
    6846:	91 83       	std	Z+1, r25	; 0x01
    6848:	a2 83       	std	Z+2, r26	; 0x02
    684a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    684c:	fe 01       	movw	r30, r28
    684e:	e1 55       	subi	r30, 0x51	; 81
    6850:	ff 4f       	sbci	r31, 0xFF	; 255
    6852:	60 81       	ld	r22, Z
    6854:	71 81       	ldd	r23, Z+1	; 0x01
    6856:	82 81       	ldd	r24, Z+2	; 0x02
    6858:	93 81       	ldd	r25, Z+3	; 0x03
    685a:	20 e0       	ldi	r18, 0x00	; 0
    685c:	30 e0       	ldi	r19, 0x00	; 0
    685e:	40 e8       	ldi	r20, 0x80	; 128
    6860:	5f e3       	ldi	r21, 0x3F	; 63
    6862:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    6866:	88 23       	and	r24, r24
    6868:	44 f4       	brge	.+16     	; 0x687a <main+0x2772>
		__ticks = 1;
    686a:	fe 01       	movw	r30, r28
    686c:	e3 55       	subi	r30, 0x53	; 83
    686e:	ff 4f       	sbci	r31, 0xFF	; 255
    6870:	81 e0       	ldi	r24, 0x01	; 1
    6872:	90 e0       	ldi	r25, 0x00	; 0
    6874:	91 83       	std	Z+1, r25	; 0x01
    6876:	80 83       	st	Z, r24
    6878:	64 c0       	rjmp	.+200    	; 0x6942 <main+0x283a>
	else if (__tmp > 65535)
    687a:	fe 01       	movw	r30, r28
    687c:	e1 55       	subi	r30, 0x51	; 81
    687e:	ff 4f       	sbci	r31, 0xFF	; 255
    6880:	60 81       	ld	r22, Z
    6882:	71 81       	ldd	r23, Z+1	; 0x01
    6884:	82 81       	ldd	r24, Z+2	; 0x02
    6886:	93 81       	ldd	r25, Z+3	; 0x03
    6888:	20 e0       	ldi	r18, 0x00	; 0
    688a:	3f ef       	ldi	r19, 0xFF	; 255
    688c:	4f e7       	ldi	r20, 0x7F	; 127
    688e:	57 e4       	ldi	r21, 0x47	; 71
    6890:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    6894:	18 16       	cp	r1, r24
    6896:	0c f0       	brlt	.+2      	; 0x689a <main+0x2792>
    6898:	43 c0       	rjmp	.+134    	; 0x6920 <main+0x2818>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    689a:	fe 01       	movw	r30, r28
    689c:	ed 54       	subi	r30, 0x4D	; 77
    689e:	ff 4f       	sbci	r31, 0xFF	; 255
    68a0:	60 81       	ld	r22, Z
    68a2:	71 81       	ldd	r23, Z+1	; 0x01
    68a4:	82 81       	ldd	r24, Z+2	; 0x02
    68a6:	93 81       	ldd	r25, Z+3	; 0x03
    68a8:	20 e0       	ldi	r18, 0x00	; 0
    68aa:	30 e0       	ldi	r19, 0x00	; 0
    68ac:	40 e2       	ldi	r20, 0x20	; 32
    68ae:	51 e4       	ldi	r21, 0x41	; 65
    68b0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    68b4:	dc 01       	movw	r26, r24
    68b6:	cb 01       	movw	r24, r22
    68b8:	8e 01       	movw	r16, r28
    68ba:	03 55       	subi	r16, 0x53	; 83
    68bc:	1f 4f       	sbci	r17, 0xFF	; 255
    68be:	bc 01       	movw	r22, r24
    68c0:	cd 01       	movw	r24, r26
    68c2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    68c6:	dc 01       	movw	r26, r24
    68c8:	cb 01       	movw	r24, r22
    68ca:	f8 01       	movw	r30, r16
    68cc:	91 83       	std	Z+1, r25	; 0x01
    68ce:	80 83       	st	Z, r24
    68d0:	1f c0       	rjmp	.+62     	; 0x6910 <main+0x2808>
    68d2:	fe 01       	movw	r30, r28
    68d4:	e5 55       	subi	r30, 0x55	; 85
    68d6:	ff 4f       	sbci	r31, 0xFF	; 255
    68d8:	88 ec       	ldi	r24, 0xC8	; 200
    68da:	90 e0       	ldi	r25, 0x00	; 0
    68dc:	91 83       	std	Z+1, r25	; 0x01
    68de:	80 83       	st	Z, r24
    68e0:	fe 01       	movw	r30, r28
    68e2:	e5 55       	subi	r30, 0x55	; 85
    68e4:	ff 4f       	sbci	r31, 0xFF	; 255
    68e6:	80 81       	ld	r24, Z
    68e8:	91 81       	ldd	r25, Z+1	; 0x01
    68ea:	01 97       	sbiw	r24, 0x01	; 1
    68ec:	f1 f7       	brne	.-4      	; 0x68ea <main+0x27e2>
    68ee:	fe 01       	movw	r30, r28
    68f0:	e5 55       	subi	r30, 0x55	; 85
    68f2:	ff 4f       	sbci	r31, 0xFF	; 255
    68f4:	91 83       	std	Z+1, r25	; 0x01
    68f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    68f8:	de 01       	movw	r26, r28
    68fa:	a3 55       	subi	r26, 0x53	; 83
    68fc:	bf 4f       	sbci	r27, 0xFF	; 255
    68fe:	fe 01       	movw	r30, r28
    6900:	e3 55       	subi	r30, 0x53	; 83
    6902:	ff 4f       	sbci	r31, 0xFF	; 255
    6904:	80 81       	ld	r24, Z
    6906:	91 81       	ldd	r25, Z+1	; 0x01
    6908:	01 97       	sbiw	r24, 0x01	; 1
    690a:	11 96       	adiw	r26, 0x01	; 1
    690c:	9c 93       	st	X, r25
    690e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6910:	fe 01       	movw	r30, r28
    6912:	e3 55       	subi	r30, 0x53	; 83
    6914:	ff 4f       	sbci	r31, 0xFF	; 255
    6916:	80 81       	ld	r24, Z
    6918:	91 81       	ldd	r25, Z+1	; 0x01
    691a:	00 97       	sbiw	r24, 0x00	; 0
    691c:	d1 f6       	brne	.-76     	; 0x68d2 <main+0x27ca>
    691e:	27 c0       	rjmp	.+78     	; 0x696e <main+0x2866>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6920:	8e 01       	movw	r16, r28
    6922:	03 55       	subi	r16, 0x53	; 83
    6924:	1f 4f       	sbci	r17, 0xFF	; 255
    6926:	fe 01       	movw	r30, r28
    6928:	e1 55       	subi	r30, 0x51	; 81
    692a:	ff 4f       	sbci	r31, 0xFF	; 255
    692c:	60 81       	ld	r22, Z
    692e:	71 81       	ldd	r23, Z+1	; 0x01
    6930:	82 81       	ldd	r24, Z+2	; 0x02
    6932:	93 81       	ldd	r25, Z+3	; 0x03
    6934:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6938:	dc 01       	movw	r26, r24
    693a:	cb 01       	movw	r24, r22
    693c:	f8 01       	movw	r30, r16
    693e:	91 83       	std	Z+1, r25	; 0x01
    6940:	80 83       	st	Z, r24
    6942:	de 01       	movw	r26, r28
    6944:	a7 55       	subi	r26, 0x57	; 87
    6946:	bf 4f       	sbci	r27, 0xFF	; 255
    6948:	fe 01       	movw	r30, r28
    694a:	e3 55       	subi	r30, 0x53	; 83
    694c:	ff 4f       	sbci	r31, 0xFF	; 255
    694e:	80 81       	ld	r24, Z
    6950:	91 81       	ldd	r25, Z+1	; 0x01
    6952:	8d 93       	st	X+, r24
    6954:	9c 93       	st	X, r25
    6956:	fe 01       	movw	r30, r28
    6958:	e7 55       	subi	r30, 0x57	; 87
    695a:	ff 4f       	sbci	r31, 0xFF	; 255
    695c:	80 81       	ld	r24, Z
    695e:	91 81       	ldd	r25, Z+1	; 0x01
    6960:	01 97       	sbiw	r24, 0x01	; 1
    6962:	f1 f7       	brne	.-4      	; 0x6960 <main+0x2858>
    6964:	fe 01       	movw	r30, r28
    6966:	e7 55       	subi	r30, 0x57	; 87
    6968:	ff 4f       	sbci	r31, 0xFF	; 255
    696a:	91 83       	std	Z+1, r25	; 0x01
    696c:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(2,16);
    696e:	82 e0       	ldi	r24, 0x02	; 2
    6970:	60 e1       	ldi	r22, 0x10	; 16
    6972:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(3);
    6976:	83 e0       	ldi	r24, 0x03	; 3
    6978:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
			LCD_Goto(2,3);
    697c:	82 e0       	ldi	r24, 0x02	; 2
    697e:	63 e0       	ldi	r22, 0x03	; 3
    6980:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(2);
    6984:	82 e0       	ldi	r24, 0x02	; 2
    6986:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>

			LCD_Goto(2,1);
    698a:	82 e0       	ldi	r24, 0x02	; 2
    698c:	61 e0       	ldi	r22, 0x01	; 1
    698e:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(1);
    6992:	81 e0       	ldi	r24, 0x01	; 1
    6994:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    6998:	fe 01       	movw	r30, r28
    699a:	eb 55       	subi	r30, 0x5B	; 91
    699c:	ff 4f       	sbci	r31, 0xFF	; 255
    699e:	80 e0       	ldi	r24, 0x00	; 0
    69a0:	90 e0       	ldi	r25, 0x00	; 0
    69a2:	aa ef       	ldi	r26, 0xFA	; 250
    69a4:	b3 e4       	ldi	r27, 0x43	; 67
    69a6:	80 83       	st	Z, r24
    69a8:	91 83       	std	Z+1, r25	; 0x01
    69aa:	a2 83       	std	Z+2, r26	; 0x02
    69ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    69ae:	8e 01       	movw	r16, r28
    69b0:	0f 55       	subi	r16, 0x5F	; 95
    69b2:	1f 4f       	sbci	r17, 0xFF	; 255
    69b4:	fe 01       	movw	r30, r28
    69b6:	eb 55       	subi	r30, 0x5B	; 91
    69b8:	ff 4f       	sbci	r31, 0xFF	; 255
    69ba:	60 81       	ld	r22, Z
    69bc:	71 81       	ldd	r23, Z+1	; 0x01
    69be:	82 81       	ldd	r24, Z+2	; 0x02
    69c0:	93 81       	ldd	r25, Z+3	; 0x03
    69c2:	20 e0       	ldi	r18, 0x00	; 0
    69c4:	30 e0       	ldi	r19, 0x00	; 0
    69c6:	4a ef       	ldi	r20, 0xFA	; 250
    69c8:	54 e4       	ldi	r21, 0x44	; 68
    69ca:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    69ce:	dc 01       	movw	r26, r24
    69d0:	cb 01       	movw	r24, r22
    69d2:	f8 01       	movw	r30, r16
    69d4:	80 83       	st	Z, r24
    69d6:	91 83       	std	Z+1, r25	; 0x01
    69d8:	a2 83       	std	Z+2, r26	; 0x02
    69da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    69dc:	fe 01       	movw	r30, r28
    69de:	ef 55       	subi	r30, 0x5F	; 95
    69e0:	ff 4f       	sbci	r31, 0xFF	; 255
    69e2:	60 81       	ld	r22, Z
    69e4:	71 81       	ldd	r23, Z+1	; 0x01
    69e6:	82 81       	ldd	r24, Z+2	; 0x02
    69e8:	93 81       	ldd	r25, Z+3	; 0x03
    69ea:	20 e0       	ldi	r18, 0x00	; 0
    69ec:	30 e0       	ldi	r19, 0x00	; 0
    69ee:	40 e8       	ldi	r20, 0x80	; 128
    69f0:	5f e3       	ldi	r21, 0x3F	; 63
    69f2:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    69f6:	88 23       	and	r24, r24
    69f8:	44 f4       	brge	.+16     	; 0x6a0a <main+0x2902>
		__ticks = 1;
    69fa:	fe 01       	movw	r30, r28
    69fc:	e1 56       	subi	r30, 0x61	; 97
    69fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6a00:	81 e0       	ldi	r24, 0x01	; 1
    6a02:	90 e0       	ldi	r25, 0x00	; 0
    6a04:	91 83       	std	Z+1, r25	; 0x01
    6a06:	80 83       	st	Z, r24
    6a08:	64 c0       	rjmp	.+200    	; 0x6ad2 <main+0x29ca>
	else if (__tmp > 65535)
    6a0a:	fe 01       	movw	r30, r28
    6a0c:	ef 55       	subi	r30, 0x5F	; 95
    6a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    6a10:	60 81       	ld	r22, Z
    6a12:	71 81       	ldd	r23, Z+1	; 0x01
    6a14:	82 81       	ldd	r24, Z+2	; 0x02
    6a16:	93 81       	ldd	r25, Z+3	; 0x03
    6a18:	20 e0       	ldi	r18, 0x00	; 0
    6a1a:	3f ef       	ldi	r19, 0xFF	; 255
    6a1c:	4f e7       	ldi	r20, 0x7F	; 127
    6a1e:	57 e4       	ldi	r21, 0x47	; 71
    6a20:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    6a24:	18 16       	cp	r1, r24
    6a26:	0c f0       	brlt	.+2      	; 0x6a2a <main+0x2922>
    6a28:	43 c0       	rjmp	.+134    	; 0x6ab0 <main+0x29a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6a2a:	fe 01       	movw	r30, r28
    6a2c:	eb 55       	subi	r30, 0x5B	; 91
    6a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    6a30:	60 81       	ld	r22, Z
    6a32:	71 81       	ldd	r23, Z+1	; 0x01
    6a34:	82 81       	ldd	r24, Z+2	; 0x02
    6a36:	93 81       	ldd	r25, Z+3	; 0x03
    6a38:	20 e0       	ldi	r18, 0x00	; 0
    6a3a:	30 e0       	ldi	r19, 0x00	; 0
    6a3c:	40 e2       	ldi	r20, 0x20	; 32
    6a3e:	51 e4       	ldi	r21, 0x41	; 65
    6a40:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6a44:	dc 01       	movw	r26, r24
    6a46:	cb 01       	movw	r24, r22
    6a48:	8e 01       	movw	r16, r28
    6a4a:	01 56       	subi	r16, 0x61	; 97
    6a4c:	1f 4f       	sbci	r17, 0xFF	; 255
    6a4e:	bc 01       	movw	r22, r24
    6a50:	cd 01       	movw	r24, r26
    6a52:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6a56:	dc 01       	movw	r26, r24
    6a58:	cb 01       	movw	r24, r22
    6a5a:	f8 01       	movw	r30, r16
    6a5c:	91 83       	std	Z+1, r25	; 0x01
    6a5e:	80 83       	st	Z, r24
    6a60:	1f c0       	rjmp	.+62     	; 0x6aa0 <main+0x2998>
    6a62:	fe 01       	movw	r30, r28
    6a64:	e3 56       	subi	r30, 0x63	; 99
    6a66:	ff 4f       	sbci	r31, 0xFF	; 255
    6a68:	88 ec       	ldi	r24, 0xC8	; 200
    6a6a:	90 e0       	ldi	r25, 0x00	; 0
    6a6c:	91 83       	std	Z+1, r25	; 0x01
    6a6e:	80 83       	st	Z, r24
    6a70:	fe 01       	movw	r30, r28
    6a72:	e3 56       	subi	r30, 0x63	; 99
    6a74:	ff 4f       	sbci	r31, 0xFF	; 255
    6a76:	80 81       	ld	r24, Z
    6a78:	91 81       	ldd	r25, Z+1	; 0x01
    6a7a:	01 97       	sbiw	r24, 0x01	; 1
    6a7c:	f1 f7       	brne	.-4      	; 0x6a7a <main+0x2972>
    6a7e:	fe 01       	movw	r30, r28
    6a80:	e3 56       	subi	r30, 0x63	; 99
    6a82:	ff 4f       	sbci	r31, 0xFF	; 255
    6a84:	91 83       	std	Z+1, r25	; 0x01
    6a86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6a88:	de 01       	movw	r26, r28
    6a8a:	a1 56       	subi	r26, 0x61	; 97
    6a8c:	bf 4f       	sbci	r27, 0xFF	; 255
    6a8e:	fe 01       	movw	r30, r28
    6a90:	e1 56       	subi	r30, 0x61	; 97
    6a92:	ff 4f       	sbci	r31, 0xFF	; 255
    6a94:	80 81       	ld	r24, Z
    6a96:	91 81       	ldd	r25, Z+1	; 0x01
    6a98:	01 97       	sbiw	r24, 0x01	; 1
    6a9a:	11 96       	adiw	r26, 0x01	; 1
    6a9c:	9c 93       	st	X, r25
    6a9e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6aa0:	fe 01       	movw	r30, r28
    6aa2:	e1 56       	subi	r30, 0x61	; 97
    6aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    6aa6:	80 81       	ld	r24, Z
    6aa8:	91 81       	ldd	r25, Z+1	; 0x01
    6aaa:	00 97       	sbiw	r24, 0x00	; 0
    6aac:	d1 f6       	brne	.-76     	; 0x6a62 <main+0x295a>
    6aae:	27 c0       	rjmp	.+78     	; 0x6afe <main+0x29f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6ab0:	8e 01       	movw	r16, r28
    6ab2:	01 56       	subi	r16, 0x61	; 97
    6ab4:	1f 4f       	sbci	r17, 0xFF	; 255
    6ab6:	fe 01       	movw	r30, r28
    6ab8:	ef 55       	subi	r30, 0x5F	; 95
    6aba:	ff 4f       	sbci	r31, 0xFF	; 255
    6abc:	60 81       	ld	r22, Z
    6abe:	71 81       	ldd	r23, Z+1	; 0x01
    6ac0:	82 81       	ldd	r24, Z+2	; 0x02
    6ac2:	93 81       	ldd	r25, Z+3	; 0x03
    6ac4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6ac8:	dc 01       	movw	r26, r24
    6aca:	cb 01       	movw	r24, r22
    6acc:	f8 01       	movw	r30, r16
    6ace:	91 83       	std	Z+1, r25	; 0x01
    6ad0:	80 83       	st	Z, r24
    6ad2:	de 01       	movw	r26, r28
    6ad4:	a5 56       	subi	r26, 0x65	; 101
    6ad6:	bf 4f       	sbci	r27, 0xFF	; 255
    6ad8:	fe 01       	movw	r30, r28
    6ada:	e1 56       	subi	r30, 0x61	; 97
    6adc:	ff 4f       	sbci	r31, 0xFF	; 255
    6ade:	80 81       	ld	r24, Z
    6ae0:	91 81       	ldd	r25, Z+1	; 0x01
    6ae2:	8d 93       	st	X+, r24
    6ae4:	9c 93       	st	X, r25
    6ae6:	fe 01       	movw	r30, r28
    6ae8:	e5 56       	subi	r30, 0x65	; 101
    6aea:	ff 4f       	sbci	r31, 0xFF	; 255
    6aec:	80 81       	ld	r24, Z
    6aee:	91 81       	ldd	r25, Z+1	; 0x01
    6af0:	01 97       	sbiw	r24, 0x01	; 1
    6af2:	f1 f7       	brne	.-4      	; 0x6af0 <main+0x29e8>
    6af4:	fe 01       	movw	r30, r28
    6af6:	e5 56       	subi	r30, 0x65	; 101
    6af8:	ff 4f       	sbci	r31, 0xFF	; 255
    6afa:	91 83       	std	Z+1, r25	; 0x01
    6afc:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(2,1);
    6afe:	82 e0       	ldi	r24, 0x02	; 2
    6b00:	61 e0       	ldi	r22, 0x01	; 1
    6b02:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(0);
    6b06:	80 e0       	ldi	r24, 0x00	; 0
    6b08:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
			LCD_Goto(2,2);
    6b0c:	82 e0       	ldi	r24, 0x02	; 2
    6b0e:	62 e0       	ldi	r22, 0x02	; 2
    6b10:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(1);
    6b14:	81 e0       	ldi	r24, 0x01	; 1
    6b16:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    6b1a:	fe 01       	movw	r30, r28
    6b1c:	e9 56       	subi	r30, 0x69	; 105
    6b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    6b20:	80 e0       	ldi	r24, 0x00	; 0
    6b22:	90 e0       	ldi	r25, 0x00	; 0
    6b24:	aa ef       	ldi	r26, 0xFA	; 250
    6b26:	b3 e4       	ldi	r27, 0x43	; 67
    6b28:	80 83       	st	Z, r24
    6b2a:	91 83       	std	Z+1, r25	; 0x01
    6b2c:	a2 83       	std	Z+2, r26	; 0x02
    6b2e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6b30:	8e 01       	movw	r16, r28
    6b32:	0d 56       	subi	r16, 0x6D	; 109
    6b34:	1f 4f       	sbci	r17, 0xFF	; 255
    6b36:	fe 01       	movw	r30, r28
    6b38:	e9 56       	subi	r30, 0x69	; 105
    6b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    6b3c:	60 81       	ld	r22, Z
    6b3e:	71 81       	ldd	r23, Z+1	; 0x01
    6b40:	82 81       	ldd	r24, Z+2	; 0x02
    6b42:	93 81       	ldd	r25, Z+3	; 0x03
    6b44:	20 e0       	ldi	r18, 0x00	; 0
    6b46:	30 e0       	ldi	r19, 0x00	; 0
    6b48:	4a ef       	ldi	r20, 0xFA	; 250
    6b4a:	54 e4       	ldi	r21, 0x44	; 68
    6b4c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6b50:	dc 01       	movw	r26, r24
    6b52:	cb 01       	movw	r24, r22
    6b54:	f8 01       	movw	r30, r16
    6b56:	80 83       	st	Z, r24
    6b58:	91 83       	std	Z+1, r25	; 0x01
    6b5a:	a2 83       	std	Z+2, r26	; 0x02
    6b5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6b5e:	fe 01       	movw	r30, r28
    6b60:	ed 56       	subi	r30, 0x6D	; 109
    6b62:	ff 4f       	sbci	r31, 0xFF	; 255
    6b64:	60 81       	ld	r22, Z
    6b66:	71 81       	ldd	r23, Z+1	; 0x01
    6b68:	82 81       	ldd	r24, Z+2	; 0x02
    6b6a:	93 81       	ldd	r25, Z+3	; 0x03
    6b6c:	20 e0       	ldi	r18, 0x00	; 0
    6b6e:	30 e0       	ldi	r19, 0x00	; 0
    6b70:	40 e8       	ldi	r20, 0x80	; 128
    6b72:	5f e3       	ldi	r21, 0x3F	; 63
    6b74:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    6b78:	88 23       	and	r24, r24
    6b7a:	44 f4       	brge	.+16     	; 0x6b8c <main+0x2a84>
		__ticks = 1;
    6b7c:	fe 01       	movw	r30, r28
    6b7e:	ef 56       	subi	r30, 0x6F	; 111
    6b80:	ff 4f       	sbci	r31, 0xFF	; 255
    6b82:	81 e0       	ldi	r24, 0x01	; 1
    6b84:	90 e0       	ldi	r25, 0x00	; 0
    6b86:	91 83       	std	Z+1, r25	; 0x01
    6b88:	80 83       	st	Z, r24
    6b8a:	64 c0       	rjmp	.+200    	; 0x6c54 <main+0x2b4c>
	else if (__tmp > 65535)
    6b8c:	fe 01       	movw	r30, r28
    6b8e:	ed 56       	subi	r30, 0x6D	; 109
    6b90:	ff 4f       	sbci	r31, 0xFF	; 255
    6b92:	60 81       	ld	r22, Z
    6b94:	71 81       	ldd	r23, Z+1	; 0x01
    6b96:	82 81       	ldd	r24, Z+2	; 0x02
    6b98:	93 81       	ldd	r25, Z+3	; 0x03
    6b9a:	20 e0       	ldi	r18, 0x00	; 0
    6b9c:	3f ef       	ldi	r19, 0xFF	; 255
    6b9e:	4f e7       	ldi	r20, 0x7F	; 127
    6ba0:	57 e4       	ldi	r21, 0x47	; 71
    6ba2:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    6ba6:	18 16       	cp	r1, r24
    6ba8:	0c f0       	brlt	.+2      	; 0x6bac <main+0x2aa4>
    6baa:	43 c0       	rjmp	.+134    	; 0x6c32 <main+0x2b2a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6bac:	fe 01       	movw	r30, r28
    6bae:	e9 56       	subi	r30, 0x69	; 105
    6bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    6bb2:	60 81       	ld	r22, Z
    6bb4:	71 81       	ldd	r23, Z+1	; 0x01
    6bb6:	82 81       	ldd	r24, Z+2	; 0x02
    6bb8:	93 81       	ldd	r25, Z+3	; 0x03
    6bba:	20 e0       	ldi	r18, 0x00	; 0
    6bbc:	30 e0       	ldi	r19, 0x00	; 0
    6bbe:	40 e2       	ldi	r20, 0x20	; 32
    6bc0:	51 e4       	ldi	r21, 0x41	; 65
    6bc2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6bc6:	dc 01       	movw	r26, r24
    6bc8:	cb 01       	movw	r24, r22
    6bca:	8e 01       	movw	r16, r28
    6bcc:	0f 56       	subi	r16, 0x6F	; 111
    6bce:	1f 4f       	sbci	r17, 0xFF	; 255
    6bd0:	bc 01       	movw	r22, r24
    6bd2:	cd 01       	movw	r24, r26
    6bd4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6bd8:	dc 01       	movw	r26, r24
    6bda:	cb 01       	movw	r24, r22
    6bdc:	f8 01       	movw	r30, r16
    6bde:	91 83       	std	Z+1, r25	; 0x01
    6be0:	80 83       	st	Z, r24
    6be2:	1f c0       	rjmp	.+62     	; 0x6c22 <main+0x2b1a>
    6be4:	fe 01       	movw	r30, r28
    6be6:	e1 57       	subi	r30, 0x71	; 113
    6be8:	ff 4f       	sbci	r31, 0xFF	; 255
    6bea:	88 ec       	ldi	r24, 0xC8	; 200
    6bec:	90 e0       	ldi	r25, 0x00	; 0
    6bee:	91 83       	std	Z+1, r25	; 0x01
    6bf0:	80 83       	st	Z, r24
    6bf2:	fe 01       	movw	r30, r28
    6bf4:	e1 57       	subi	r30, 0x71	; 113
    6bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    6bf8:	80 81       	ld	r24, Z
    6bfa:	91 81       	ldd	r25, Z+1	; 0x01
    6bfc:	01 97       	sbiw	r24, 0x01	; 1
    6bfe:	f1 f7       	brne	.-4      	; 0x6bfc <main+0x2af4>
    6c00:	fe 01       	movw	r30, r28
    6c02:	e1 57       	subi	r30, 0x71	; 113
    6c04:	ff 4f       	sbci	r31, 0xFF	; 255
    6c06:	91 83       	std	Z+1, r25	; 0x01
    6c08:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6c0a:	de 01       	movw	r26, r28
    6c0c:	af 56       	subi	r26, 0x6F	; 111
    6c0e:	bf 4f       	sbci	r27, 0xFF	; 255
    6c10:	fe 01       	movw	r30, r28
    6c12:	ef 56       	subi	r30, 0x6F	; 111
    6c14:	ff 4f       	sbci	r31, 0xFF	; 255
    6c16:	80 81       	ld	r24, Z
    6c18:	91 81       	ldd	r25, Z+1	; 0x01
    6c1a:	01 97       	sbiw	r24, 0x01	; 1
    6c1c:	11 96       	adiw	r26, 0x01	; 1
    6c1e:	9c 93       	st	X, r25
    6c20:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6c22:	fe 01       	movw	r30, r28
    6c24:	ef 56       	subi	r30, 0x6F	; 111
    6c26:	ff 4f       	sbci	r31, 0xFF	; 255
    6c28:	80 81       	ld	r24, Z
    6c2a:	91 81       	ldd	r25, Z+1	; 0x01
    6c2c:	00 97       	sbiw	r24, 0x00	; 0
    6c2e:	d1 f6       	brne	.-76     	; 0x6be4 <main+0x2adc>
    6c30:	27 c0       	rjmp	.+78     	; 0x6c80 <main+0x2b78>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6c32:	8e 01       	movw	r16, r28
    6c34:	0f 56       	subi	r16, 0x6F	; 111
    6c36:	1f 4f       	sbci	r17, 0xFF	; 255
    6c38:	fe 01       	movw	r30, r28
    6c3a:	ed 56       	subi	r30, 0x6D	; 109
    6c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    6c3e:	60 81       	ld	r22, Z
    6c40:	71 81       	ldd	r23, Z+1	; 0x01
    6c42:	82 81       	ldd	r24, Z+2	; 0x02
    6c44:	93 81       	ldd	r25, Z+3	; 0x03
    6c46:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6c4a:	dc 01       	movw	r26, r24
    6c4c:	cb 01       	movw	r24, r22
    6c4e:	f8 01       	movw	r30, r16
    6c50:	91 83       	std	Z+1, r25	; 0x01
    6c52:	80 83       	st	Z, r24
    6c54:	de 01       	movw	r26, r28
    6c56:	a3 57       	subi	r26, 0x73	; 115
    6c58:	bf 4f       	sbci	r27, 0xFF	; 255
    6c5a:	fe 01       	movw	r30, r28
    6c5c:	ef 56       	subi	r30, 0x6F	; 111
    6c5e:	ff 4f       	sbci	r31, 0xFF	; 255
    6c60:	80 81       	ld	r24, Z
    6c62:	91 81       	ldd	r25, Z+1	; 0x01
    6c64:	8d 93       	st	X+, r24
    6c66:	9c 93       	st	X, r25
    6c68:	fe 01       	movw	r30, r28
    6c6a:	e3 57       	subi	r30, 0x73	; 115
    6c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    6c6e:	80 81       	ld	r24, Z
    6c70:	91 81       	ldd	r25, Z+1	; 0x01
    6c72:	01 97       	sbiw	r24, 0x01	; 1
    6c74:	f1 f7       	brne	.-4      	; 0x6c72 <main+0x2b6a>
    6c76:	fe 01       	movw	r30, r28
    6c78:	e3 57       	subi	r30, 0x73	; 115
    6c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    6c7c:	91 83       	std	Z+1, r25	; 0x01
    6c7e:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(2,2);
    6c80:	82 e0       	ldi	r24, 0x02	; 2
    6c82:	62 e0       	ldi	r22, 0x02	; 2
    6c84:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(0);
    6c88:	80 e0       	ldi	r24, 0x00	; 0
    6c8a:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    6c8e:	fe 01       	movw	r30, r28
    6c90:	e7 57       	subi	r30, 0x77	; 119
    6c92:	ff 4f       	sbci	r31, 0xFF	; 255
    6c94:	80 e0       	ldi	r24, 0x00	; 0
    6c96:	90 e0       	ldi	r25, 0x00	; 0
    6c98:	a6 e9       	ldi	r26, 0x96	; 150
    6c9a:	b3 e4       	ldi	r27, 0x43	; 67
    6c9c:	80 83       	st	Z, r24
    6c9e:	91 83       	std	Z+1, r25	; 0x01
    6ca0:	a2 83       	std	Z+2, r26	; 0x02
    6ca2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6ca4:	8e 01       	movw	r16, r28
    6ca6:	0b 57       	subi	r16, 0x7B	; 123
    6ca8:	1f 4f       	sbci	r17, 0xFF	; 255
    6caa:	fe 01       	movw	r30, r28
    6cac:	e7 57       	subi	r30, 0x77	; 119
    6cae:	ff 4f       	sbci	r31, 0xFF	; 255
    6cb0:	60 81       	ld	r22, Z
    6cb2:	71 81       	ldd	r23, Z+1	; 0x01
    6cb4:	82 81       	ldd	r24, Z+2	; 0x02
    6cb6:	93 81       	ldd	r25, Z+3	; 0x03
    6cb8:	20 e0       	ldi	r18, 0x00	; 0
    6cba:	30 e0       	ldi	r19, 0x00	; 0
    6cbc:	4a ef       	ldi	r20, 0xFA	; 250
    6cbe:	54 e4       	ldi	r21, 0x44	; 68
    6cc0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6cc4:	dc 01       	movw	r26, r24
    6cc6:	cb 01       	movw	r24, r22
    6cc8:	f8 01       	movw	r30, r16
    6cca:	80 83       	st	Z, r24
    6ccc:	91 83       	std	Z+1, r25	; 0x01
    6cce:	a2 83       	std	Z+2, r26	; 0x02
    6cd0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6cd2:	fe 01       	movw	r30, r28
    6cd4:	eb 57       	subi	r30, 0x7B	; 123
    6cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    6cd8:	60 81       	ld	r22, Z
    6cda:	71 81       	ldd	r23, Z+1	; 0x01
    6cdc:	82 81       	ldd	r24, Z+2	; 0x02
    6cde:	93 81       	ldd	r25, Z+3	; 0x03
    6ce0:	20 e0       	ldi	r18, 0x00	; 0
    6ce2:	30 e0       	ldi	r19, 0x00	; 0
    6ce4:	40 e8       	ldi	r20, 0x80	; 128
    6ce6:	5f e3       	ldi	r21, 0x3F	; 63
    6ce8:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    6cec:	88 23       	and	r24, r24
    6cee:	44 f4       	brge	.+16     	; 0x6d00 <main+0x2bf8>
		__ticks = 1;
    6cf0:	fe 01       	movw	r30, r28
    6cf2:	ed 57       	subi	r30, 0x7D	; 125
    6cf4:	ff 4f       	sbci	r31, 0xFF	; 255
    6cf6:	81 e0       	ldi	r24, 0x01	; 1
    6cf8:	90 e0       	ldi	r25, 0x00	; 0
    6cfa:	91 83       	std	Z+1, r25	; 0x01
    6cfc:	80 83       	st	Z, r24
    6cfe:	64 c0       	rjmp	.+200    	; 0x6dc8 <main+0x2cc0>
	else if (__tmp > 65535)
    6d00:	fe 01       	movw	r30, r28
    6d02:	eb 57       	subi	r30, 0x7B	; 123
    6d04:	ff 4f       	sbci	r31, 0xFF	; 255
    6d06:	60 81       	ld	r22, Z
    6d08:	71 81       	ldd	r23, Z+1	; 0x01
    6d0a:	82 81       	ldd	r24, Z+2	; 0x02
    6d0c:	93 81       	ldd	r25, Z+3	; 0x03
    6d0e:	20 e0       	ldi	r18, 0x00	; 0
    6d10:	3f ef       	ldi	r19, 0xFF	; 255
    6d12:	4f e7       	ldi	r20, 0x7F	; 127
    6d14:	57 e4       	ldi	r21, 0x47	; 71
    6d16:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    6d1a:	18 16       	cp	r1, r24
    6d1c:	0c f0       	brlt	.+2      	; 0x6d20 <main+0x2c18>
    6d1e:	43 c0       	rjmp	.+134    	; 0x6da6 <main+0x2c9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6d20:	fe 01       	movw	r30, r28
    6d22:	e7 57       	subi	r30, 0x77	; 119
    6d24:	ff 4f       	sbci	r31, 0xFF	; 255
    6d26:	60 81       	ld	r22, Z
    6d28:	71 81       	ldd	r23, Z+1	; 0x01
    6d2a:	82 81       	ldd	r24, Z+2	; 0x02
    6d2c:	93 81       	ldd	r25, Z+3	; 0x03
    6d2e:	20 e0       	ldi	r18, 0x00	; 0
    6d30:	30 e0       	ldi	r19, 0x00	; 0
    6d32:	40 e2       	ldi	r20, 0x20	; 32
    6d34:	51 e4       	ldi	r21, 0x41	; 65
    6d36:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6d3a:	dc 01       	movw	r26, r24
    6d3c:	cb 01       	movw	r24, r22
    6d3e:	8e 01       	movw	r16, r28
    6d40:	0d 57       	subi	r16, 0x7D	; 125
    6d42:	1f 4f       	sbci	r17, 0xFF	; 255
    6d44:	bc 01       	movw	r22, r24
    6d46:	cd 01       	movw	r24, r26
    6d48:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6d4c:	dc 01       	movw	r26, r24
    6d4e:	cb 01       	movw	r24, r22
    6d50:	f8 01       	movw	r30, r16
    6d52:	91 83       	std	Z+1, r25	; 0x01
    6d54:	80 83       	st	Z, r24
    6d56:	1f c0       	rjmp	.+62     	; 0x6d96 <main+0x2c8e>
    6d58:	fe 01       	movw	r30, r28
    6d5a:	ef 57       	subi	r30, 0x7F	; 127
    6d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    6d5e:	88 ec       	ldi	r24, 0xC8	; 200
    6d60:	90 e0       	ldi	r25, 0x00	; 0
    6d62:	91 83       	std	Z+1, r25	; 0x01
    6d64:	80 83       	st	Z, r24
    6d66:	fe 01       	movw	r30, r28
    6d68:	ef 57       	subi	r30, 0x7F	; 127
    6d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    6d6c:	80 81       	ld	r24, Z
    6d6e:	91 81       	ldd	r25, Z+1	; 0x01
    6d70:	01 97       	sbiw	r24, 0x01	; 1
    6d72:	f1 f7       	brne	.-4      	; 0x6d70 <main+0x2c68>
    6d74:	fe 01       	movw	r30, r28
    6d76:	ef 57       	subi	r30, 0x7F	; 127
    6d78:	ff 4f       	sbci	r31, 0xFF	; 255
    6d7a:	91 83       	std	Z+1, r25	; 0x01
    6d7c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6d7e:	de 01       	movw	r26, r28
    6d80:	ad 57       	subi	r26, 0x7D	; 125
    6d82:	bf 4f       	sbci	r27, 0xFF	; 255
    6d84:	fe 01       	movw	r30, r28
    6d86:	ed 57       	subi	r30, 0x7D	; 125
    6d88:	ff 4f       	sbci	r31, 0xFF	; 255
    6d8a:	80 81       	ld	r24, Z
    6d8c:	91 81       	ldd	r25, Z+1	; 0x01
    6d8e:	01 97       	sbiw	r24, 0x01	; 1
    6d90:	11 96       	adiw	r26, 0x01	; 1
    6d92:	9c 93       	st	X, r25
    6d94:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6d96:	fe 01       	movw	r30, r28
    6d98:	ed 57       	subi	r30, 0x7D	; 125
    6d9a:	ff 4f       	sbci	r31, 0xFF	; 255
    6d9c:	80 81       	ld	r24, Z
    6d9e:	91 81       	ldd	r25, Z+1	; 0x01
    6da0:	00 97       	sbiw	r24, 0x00	; 0
    6da2:	d1 f6       	brne	.-76     	; 0x6d58 <main+0x2c50>
    6da4:	27 c0       	rjmp	.+78     	; 0x6df4 <main+0x2cec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6da6:	8e 01       	movw	r16, r28
    6da8:	0d 57       	subi	r16, 0x7D	; 125
    6daa:	1f 4f       	sbci	r17, 0xFF	; 255
    6dac:	fe 01       	movw	r30, r28
    6dae:	eb 57       	subi	r30, 0x7B	; 123
    6db0:	ff 4f       	sbci	r31, 0xFF	; 255
    6db2:	60 81       	ld	r22, Z
    6db4:	71 81       	ldd	r23, Z+1	; 0x01
    6db6:	82 81       	ldd	r24, Z+2	; 0x02
    6db8:	93 81       	ldd	r25, Z+3	; 0x03
    6dba:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6dbe:	dc 01       	movw	r26, r24
    6dc0:	cb 01       	movw	r24, r22
    6dc2:	f8 01       	movw	r30, r16
    6dc4:	91 83       	std	Z+1, r25	; 0x01
    6dc6:	80 83       	st	Z, r24
    6dc8:	de 01       	movw	r26, r28
    6dca:	a1 58       	subi	r26, 0x81	; 129
    6dcc:	bf 4f       	sbci	r27, 0xFF	; 255
    6dce:	fe 01       	movw	r30, r28
    6dd0:	ed 57       	subi	r30, 0x7D	; 125
    6dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    6dd4:	80 81       	ld	r24, Z
    6dd6:	91 81       	ldd	r25, Z+1	; 0x01
    6dd8:	8d 93       	st	X+, r24
    6dda:	9c 93       	st	X, r25
    6ddc:	fe 01       	movw	r30, r28
    6dde:	e1 58       	subi	r30, 0x81	; 129
    6de0:	ff 4f       	sbci	r31, 0xFF	; 255
    6de2:	80 81       	ld	r24, Z
    6de4:	91 81       	ldd	r25, Z+1	; 0x01
    6de6:	01 97       	sbiw	r24, 0x01	; 1
    6de8:	f1 f7       	brne	.-4      	; 0x6de6 <main+0x2cde>
    6dea:	fe 01       	movw	r30, r28
    6dec:	e1 58       	subi	r30, 0x81	; 129
    6dee:	ff 4f       	sbci	r31, 0xFF	; 255
    6df0:	91 83       	std	Z+1, r25	; 0x01
    6df2:	80 83       	st	Z, r24
			_delay_ms(300);
			LCD_Goto(2,3);
    6df4:	82 e0       	ldi	r24, 0x02	; 2
    6df6:	63 e0       	ldi	r22, 0x03	; 3
    6df8:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(1);
    6dfc:	81 e0       	ldi	r24, 0x01	; 1
    6dfe:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>

			LCD_Goto(1,16);
    6e02:	81 e0       	ldi	r24, 0x01	; 1
    6e04:	60 e1       	ldi	r22, 0x10	; 16
    6e06:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteData(2);
    6e0a:	82 e0       	ldi	r24, 0x02	; 2
    6e0c:	0e 94 b4 19 	call	0x3368	; 0x3368 <LCD_WriteData>
    6e10:	fe 01       	movw	r30, r28
    6e12:	e5 58       	subi	r30, 0x85	; 133
    6e14:	ff 4f       	sbci	r31, 0xFF	; 255
    6e16:	80 e0       	ldi	r24, 0x00	; 0
    6e18:	90 e0       	ldi	r25, 0x00	; 0
    6e1a:	aa e7       	ldi	r26, 0x7A	; 122
    6e1c:	b4 e4       	ldi	r27, 0x44	; 68
    6e1e:	80 83       	st	Z, r24
    6e20:	91 83       	std	Z+1, r25	; 0x01
    6e22:	a2 83       	std	Z+2, r26	; 0x02
    6e24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6e26:	8e 01       	movw	r16, r28
    6e28:	09 58       	subi	r16, 0x89	; 137
    6e2a:	1f 4f       	sbci	r17, 0xFF	; 255
    6e2c:	fe 01       	movw	r30, r28
    6e2e:	e5 58       	subi	r30, 0x85	; 133
    6e30:	ff 4f       	sbci	r31, 0xFF	; 255
    6e32:	60 81       	ld	r22, Z
    6e34:	71 81       	ldd	r23, Z+1	; 0x01
    6e36:	82 81       	ldd	r24, Z+2	; 0x02
    6e38:	93 81       	ldd	r25, Z+3	; 0x03
    6e3a:	20 e0       	ldi	r18, 0x00	; 0
    6e3c:	30 e0       	ldi	r19, 0x00	; 0
    6e3e:	4a ef       	ldi	r20, 0xFA	; 250
    6e40:	54 e4       	ldi	r21, 0x44	; 68
    6e42:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6e46:	dc 01       	movw	r26, r24
    6e48:	cb 01       	movw	r24, r22
    6e4a:	f8 01       	movw	r30, r16
    6e4c:	80 83       	st	Z, r24
    6e4e:	91 83       	std	Z+1, r25	; 0x01
    6e50:	a2 83       	std	Z+2, r26	; 0x02
    6e52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6e54:	fe 01       	movw	r30, r28
    6e56:	e9 58       	subi	r30, 0x89	; 137
    6e58:	ff 4f       	sbci	r31, 0xFF	; 255
    6e5a:	60 81       	ld	r22, Z
    6e5c:	71 81       	ldd	r23, Z+1	; 0x01
    6e5e:	82 81       	ldd	r24, Z+2	; 0x02
    6e60:	93 81       	ldd	r25, Z+3	; 0x03
    6e62:	20 e0       	ldi	r18, 0x00	; 0
    6e64:	30 e0       	ldi	r19, 0x00	; 0
    6e66:	40 e8       	ldi	r20, 0x80	; 128
    6e68:	5f e3       	ldi	r21, 0x3F	; 63
    6e6a:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    6e6e:	88 23       	and	r24, r24
    6e70:	44 f4       	brge	.+16     	; 0x6e82 <main+0x2d7a>
		__ticks = 1;
    6e72:	fe 01       	movw	r30, r28
    6e74:	eb 58       	subi	r30, 0x8B	; 139
    6e76:	ff 4f       	sbci	r31, 0xFF	; 255
    6e78:	81 e0       	ldi	r24, 0x01	; 1
    6e7a:	90 e0       	ldi	r25, 0x00	; 0
    6e7c:	91 83       	std	Z+1, r25	; 0x01
    6e7e:	80 83       	st	Z, r24
    6e80:	64 c0       	rjmp	.+200    	; 0x6f4a <main+0x2e42>
	else if (__tmp > 65535)
    6e82:	fe 01       	movw	r30, r28
    6e84:	e9 58       	subi	r30, 0x89	; 137
    6e86:	ff 4f       	sbci	r31, 0xFF	; 255
    6e88:	60 81       	ld	r22, Z
    6e8a:	71 81       	ldd	r23, Z+1	; 0x01
    6e8c:	82 81       	ldd	r24, Z+2	; 0x02
    6e8e:	93 81       	ldd	r25, Z+3	; 0x03
    6e90:	20 e0       	ldi	r18, 0x00	; 0
    6e92:	3f ef       	ldi	r19, 0xFF	; 255
    6e94:	4f e7       	ldi	r20, 0x7F	; 127
    6e96:	57 e4       	ldi	r21, 0x47	; 71
    6e98:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    6e9c:	18 16       	cp	r1, r24
    6e9e:	0c f0       	brlt	.+2      	; 0x6ea2 <main+0x2d9a>
    6ea0:	43 c0       	rjmp	.+134    	; 0x6f28 <main+0x2e20>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6ea2:	fe 01       	movw	r30, r28
    6ea4:	e5 58       	subi	r30, 0x85	; 133
    6ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    6ea8:	60 81       	ld	r22, Z
    6eaa:	71 81       	ldd	r23, Z+1	; 0x01
    6eac:	82 81       	ldd	r24, Z+2	; 0x02
    6eae:	93 81       	ldd	r25, Z+3	; 0x03
    6eb0:	20 e0       	ldi	r18, 0x00	; 0
    6eb2:	30 e0       	ldi	r19, 0x00	; 0
    6eb4:	40 e2       	ldi	r20, 0x20	; 32
    6eb6:	51 e4       	ldi	r21, 0x41	; 65
    6eb8:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6ebc:	dc 01       	movw	r26, r24
    6ebe:	cb 01       	movw	r24, r22
    6ec0:	8e 01       	movw	r16, r28
    6ec2:	0b 58       	subi	r16, 0x8B	; 139
    6ec4:	1f 4f       	sbci	r17, 0xFF	; 255
    6ec6:	bc 01       	movw	r22, r24
    6ec8:	cd 01       	movw	r24, r26
    6eca:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6ece:	dc 01       	movw	r26, r24
    6ed0:	cb 01       	movw	r24, r22
    6ed2:	f8 01       	movw	r30, r16
    6ed4:	91 83       	std	Z+1, r25	; 0x01
    6ed6:	80 83       	st	Z, r24
    6ed8:	1f c0       	rjmp	.+62     	; 0x6f18 <main+0x2e10>
    6eda:	fe 01       	movw	r30, r28
    6edc:	ed 58       	subi	r30, 0x8D	; 141
    6ede:	ff 4f       	sbci	r31, 0xFF	; 255
    6ee0:	88 ec       	ldi	r24, 0xC8	; 200
    6ee2:	90 e0       	ldi	r25, 0x00	; 0
    6ee4:	91 83       	std	Z+1, r25	; 0x01
    6ee6:	80 83       	st	Z, r24
    6ee8:	fe 01       	movw	r30, r28
    6eea:	ed 58       	subi	r30, 0x8D	; 141
    6eec:	ff 4f       	sbci	r31, 0xFF	; 255
    6eee:	80 81       	ld	r24, Z
    6ef0:	91 81       	ldd	r25, Z+1	; 0x01
    6ef2:	01 97       	sbiw	r24, 0x01	; 1
    6ef4:	f1 f7       	brne	.-4      	; 0x6ef2 <main+0x2dea>
    6ef6:	fe 01       	movw	r30, r28
    6ef8:	ed 58       	subi	r30, 0x8D	; 141
    6efa:	ff 4f       	sbci	r31, 0xFF	; 255
    6efc:	91 83       	std	Z+1, r25	; 0x01
    6efe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6f00:	de 01       	movw	r26, r28
    6f02:	ab 58       	subi	r26, 0x8B	; 139
    6f04:	bf 4f       	sbci	r27, 0xFF	; 255
    6f06:	fe 01       	movw	r30, r28
    6f08:	eb 58       	subi	r30, 0x8B	; 139
    6f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    6f0c:	80 81       	ld	r24, Z
    6f0e:	91 81       	ldd	r25, Z+1	; 0x01
    6f10:	01 97       	sbiw	r24, 0x01	; 1
    6f12:	11 96       	adiw	r26, 0x01	; 1
    6f14:	9c 93       	st	X, r25
    6f16:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6f18:	fe 01       	movw	r30, r28
    6f1a:	eb 58       	subi	r30, 0x8B	; 139
    6f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    6f1e:	80 81       	ld	r24, Z
    6f20:	91 81       	ldd	r25, Z+1	; 0x01
    6f22:	00 97       	sbiw	r24, 0x00	; 0
    6f24:	d1 f6       	brne	.-76     	; 0x6eda <main+0x2dd2>
    6f26:	27 c0       	rjmp	.+78     	; 0x6f76 <main+0x2e6e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6f28:	8e 01       	movw	r16, r28
    6f2a:	0b 58       	subi	r16, 0x8B	; 139
    6f2c:	1f 4f       	sbci	r17, 0xFF	; 255
    6f2e:	fe 01       	movw	r30, r28
    6f30:	e9 58       	subi	r30, 0x89	; 137
    6f32:	ff 4f       	sbci	r31, 0xFF	; 255
    6f34:	60 81       	ld	r22, Z
    6f36:	71 81       	ldd	r23, Z+1	; 0x01
    6f38:	82 81       	ldd	r24, Z+2	; 0x02
    6f3a:	93 81       	ldd	r25, Z+3	; 0x03
    6f3c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6f40:	dc 01       	movw	r26, r24
    6f42:	cb 01       	movw	r24, r22
    6f44:	f8 01       	movw	r30, r16
    6f46:	91 83       	std	Z+1, r25	; 0x01
    6f48:	80 83       	st	Z, r24
    6f4a:	de 01       	movw	r26, r28
    6f4c:	af 58       	subi	r26, 0x8F	; 143
    6f4e:	bf 4f       	sbci	r27, 0xFF	; 255
    6f50:	fe 01       	movw	r30, r28
    6f52:	eb 58       	subi	r30, 0x8B	; 139
    6f54:	ff 4f       	sbci	r31, 0xFF	; 255
    6f56:	80 81       	ld	r24, Z
    6f58:	91 81       	ldd	r25, Z+1	; 0x01
    6f5a:	8d 93       	st	X+, r24
    6f5c:	9c 93       	st	X, r25
    6f5e:	fe 01       	movw	r30, r28
    6f60:	ef 58       	subi	r30, 0x8F	; 143
    6f62:	ff 4f       	sbci	r31, 0xFF	; 255
    6f64:	80 81       	ld	r24, Z
    6f66:	91 81       	ldd	r25, Z+1	; 0x01
    6f68:	01 97       	sbiw	r24, 0x01	; 1
    6f6a:	f1 f7       	brne	.-4      	; 0x6f68 <main+0x2e60>
    6f6c:	fe 01       	movw	r30, r28
    6f6e:	ef 58       	subi	r30, 0x8F	; 143
    6f70:	ff 4f       	sbci	r31, 0xFF	; 255
    6f72:	91 83       	std	Z+1, r25	; 0x01
    6f74:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    6f76:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>

			LCD_Goto(1,4);
    6f7a:	81 e0       	ldi	r24, 0x01	; 1
    6f7c:	64 e0       	ldi	r22, 0x04	; 4
    6f7e:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_Lose);
    6f82:	84 ed       	ldi	r24, 0xD4	; 212
    6f84:	91 e0       	ldi	r25, 0x01	; 1
    6f86:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    6f8a:	fe 01       	movw	r30, r28
    6f8c:	e3 59       	subi	r30, 0x93	; 147
    6f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    6f90:	80 e0       	ldi	r24, 0x00	; 0
    6f92:	90 e0       	ldi	r25, 0x00	; 0
    6f94:	aa e7       	ldi	r26, 0x7A	; 122
    6f96:	b4 e4       	ldi	r27, 0x44	; 68
    6f98:	80 83       	st	Z, r24
    6f9a:	91 83       	std	Z+1, r25	; 0x01
    6f9c:	a2 83       	std	Z+2, r26	; 0x02
    6f9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6fa0:	8e 01       	movw	r16, r28
    6fa2:	07 59       	subi	r16, 0x97	; 151
    6fa4:	1f 4f       	sbci	r17, 0xFF	; 255
    6fa6:	fe 01       	movw	r30, r28
    6fa8:	e3 59       	subi	r30, 0x93	; 147
    6faa:	ff 4f       	sbci	r31, 0xFF	; 255
    6fac:	60 81       	ld	r22, Z
    6fae:	71 81       	ldd	r23, Z+1	; 0x01
    6fb0:	82 81       	ldd	r24, Z+2	; 0x02
    6fb2:	93 81       	ldd	r25, Z+3	; 0x03
    6fb4:	20 e0       	ldi	r18, 0x00	; 0
    6fb6:	30 e0       	ldi	r19, 0x00	; 0
    6fb8:	4a ef       	ldi	r20, 0xFA	; 250
    6fba:	54 e4       	ldi	r21, 0x44	; 68
    6fbc:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6fc0:	dc 01       	movw	r26, r24
    6fc2:	cb 01       	movw	r24, r22
    6fc4:	f8 01       	movw	r30, r16
    6fc6:	80 83       	st	Z, r24
    6fc8:	91 83       	std	Z+1, r25	; 0x01
    6fca:	a2 83       	std	Z+2, r26	; 0x02
    6fcc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6fce:	fe 01       	movw	r30, r28
    6fd0:	e7 59       	subi	r30, 0x97	; 151
    6fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    6fd4:	60 81       	ld	r22, Z
    6fd6:	71 81       	ldd	r23, Z+1	; 0x01
    6fd8:	82 81       	ldd	r24, Z+2	; 0x02
    6fda:	93 81       	ldd	r25, Z+3	; 0x03
    6fdc:	20 e0       	ldi	r18, 0x00	; 0
    6fde:	30 e0       	ldi	r19, 0x00	; 0
    6fe0:	40 e8       	ldi	r20, 0x80	; 128
    6fe2:	5f e3       	ldi	r21, 0x3F	; 63
    6fe4:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    6fe8:	88 23       	and	r24, r24
    6fea:	44 f4       	brge	.+16     	; 0x6ffc <main+0x2ef4>
		__ticks = 1;
    6fec:	fe 01       	movw	r30, r28
    6fee:	e9 59       	subi	r30, 0x99	; 153
    6ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    6ff2:	81 e0       	ldi	r24, 0x01	; 1
    6ff4:	90 e0       	ldi	r25, 0x00	; 0
    6ff6:	91 83       	std	Z+1, r25	; 0x01
    6ff8:	80 83       	st	Z, r24
    6ffa:	64 c0       	rjmp	.+200    	; 0x70c4 <main+0x2fbc>
	else if (__tmp > 65535)
    6ffc:	fe 01       	movw	r30, r28
    6ffe:	e7 59       	subi	r30, 0x97	; 151
    7000:	ff 4f       	sbci	r31, 0xFF	; 255
    7002:	60 81       	ld	r22, Z
    7004:	71 81       	ldd	r23, Z+1	; 0x01
    7006:	82 81       	ldd	r24, Z+2	; 0x02
    7008:	93 81       	ldd	r25, Z+3	; 0x03
    700a:	20 e0       	ldi	r18, 0x00	; 0
    700c:	3f ef       	ldi	r19, 0xFF	; 255
    700e:	4f e7       	ldi	r20, 0x7F	; 127
    7010:	57 e4       	ldi	r21, 0x47	; 71
    7012:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    7016:	18 16       	cp	r1, r24
    7018:	0c f0       	brlt	.+2      	; 0x701c <main+0x2f14>
    701a:	43 c0       	rjmp	.+134    	; 0x70a2 <main+0x2f9a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    701c:	fe 01       	movw	r30, r28
    701e:	e3 59       	subi	r30, 0x93	; 147
    7020:	ff 4f       	sbci	r31, 0xFF	; 255
    7022:	60 81       	ld	r22, Z
    7024:	71 81       	ldd	r23, Z+1	; 0x01
    7026:	82 81       	ldd	r24, Z+2	; 0x02
    7028:	93 81       	ldd	r25, Z+3	; 0x03
    702a:	20 e0       	ldi	r18, 0x00	; 0
    702c:	30 e0       	ldi	r19, 0x00	; 0
    702e:	40 e2       	ldi	r20, 0x20	; 32
    7030:	51 e4       	ldi	r21, 0x41	; 65
    7032:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    7036:	dc 01       	movw	r26, r24
    7038:	cb 01       	movw	r24, r22
    703a:	8e 01       	movw	r16, r28
    703c:	09 59       	subi	r16, 0x99	; 153
    703e:	1f 4f       	sbci	r17, 0xFF	; 255
    7040:	bc 01       	movw	r22, r24
    7042:	cd 01       	movw	r24, r26
    7044:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7048:	dc 01       	movw	r26, r24
    704a:	cb 01       	movw	r24, r22
    704c:	f8 01       	movw	r30, r16
    704e:	91 83       	std	Z+1, r25	; 0x01
    7050:	80 83       	st	Z, r24
    7052:	1f c0       	rjmp	.+62     	; 0x7092 <main+0x2f8a>
    7054:	fe 01       	movw	r30, r28
    7056:	eb 59       	subi	r30, 0x9B	; 155
    7058:	ff 4f       	sbci	r31, 0xFF	; 255
    705a:	88 ec       	ldi	r24, 0xC8	; 200
    705c:	90 e0       	ldi	r25, 0x00	; 0
    705e:	91 83       	std	Z+1, r25	; 0x01
    7060:	80 83       	st	Z, r24
    7062:	fe 01       	movw	r30, r28
    7064:	eb 59       	subi	r30, 0x9B	; 155
    7066:	ff 4f       	sbci	r31, 0xFF	; 255
    7068:	80 81       	ld	r24, Z
    706a:	91 81       	ldd	r25, Z+1	; 0x01
    706c:	01 97       	sbiw	r24, 0x01	; 1
    706e:	f1 f7       	brne	.-4      	; 0x706c <main+0x2f64>
    7070:	fe 01       	movw	r30, r28
    7072:	eb 59       	subi	r30, 0x9B	; 155
    7074:	ff 4f       	sbci	r31, 0xFF	; 255
    7076:	91 83       	std	Z+1, r25	; 0x01
    7078:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    707a:	de 01       	movw	r26, r28
    707c:	a9 59       	subi	r26, 0x99	; 153
    707e:	bf 4f       	sbci	r27, 0xFF	; 255
    7080:	fe 01       	movw	r30, r28
    7082:	e9 59       	subi	r30, 0x99	; 153
    7084:	ff 4f       	sbci	r31, 0xFF	; 255
    7086:	80 81       	ld	r24, Z
    7088:	91 81       	ldd	r25, Z+1	; 0x01
    708a:	01 97       	sbiw	r24, 0x01	; 1
    708c:	11 96       	adiw	r26, 0x01	; 1
    708e:	9c 93       	st	X, r25
    7090:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7092:	fe 01       	movw	r30, r28
    7094:	e9 59       	subi	r30, 0x99	; 153
    7096:	ff 4f       	sbci	r31, 0xFF	; 255
    7098:	80 81       	ld	r24, Z
    709a:	91 81       	ldd	r25, Z+1	; 0x01
    709c:	00 97       	sbiw	r24, 0x00	; 0
    709e:	d1 f6       	brne	.-76     	; 0x7054 <main+0x2f4c>
    70a0:	27 c0       	rjmp	.+78     	; 0x70f0 <main+0x2fe8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    70a2:	8e 01       	movw	r16, r28
    70a4:	09 59       	subi	r16, 0x99	; 153
    70a6:	1f 4f       	sbci	r17, 0xFF	; 255
    70a8:	fe 01       	movw	r30, r28
    70aa:	e7 59       	subi	r30, 0x97	; 151
    70ac:	ff 4f       	sbci	r31, 0xFF	; 255
    70ae:	60 81       	ld	r22, Z
    70b0:	71 81       	ldd	r23, Z+1	; 0x01
    70b2:	82 81       	ldd	r24, Z+2	; 0x02
    70b4:	93 81       	ldd	r25, Z+3	; 0x03
    70b6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    70ba:	dc 01       	movw	r26, r24
    70bc:	cb 01       	movw	r24, r22
    70be:	f8 01       	movw	r30, r16
    70c0:	91 83       	std	Z+1, r25	; 0x01
    70c2:	80 83       	st	Z, r24
    70c4:	de 01       	movw	r26, r28
    70c6:	ad 59       	subi	r26, 0x9D	; 157
    70c8:	bf 4f       	sbci	r27, 0xFF	; 255
    70ca:	fe 01       	movw	r30, r28
    70cc:	e9 59       	subi	r30, 0x99	; 153
    70ce:	ff 4f       	sbci	r31, 0xFF	; 255
    70d0:	80 81       	ld	r24, Z
    70d2:	91 81       	ldd	r25, Z+1	; 0x01
    70d4:	8d 93       	st	X+, r24
    70d6:	9c 93       	st	X, r25
    70d8:	fe 01       	movw	r30, r28
    70da:	ed 59       	subi	r30, 0x9D	; 157
    70dc:	ff 4f       	sbci	r31, 0xFF	; 255
    70de:	80 81       	ld	r24, Z
    70e0:	91 81       	ldd	r25, Z+1	; 0x01
    70e2:	01 97       	sbiw	r24, 0x01	; 1
    70e4:	f1 f7       	brne	.-4      	; 0x70e2 <main+0x2fda>
    70e6:	fe 01       	movw	r30, r28
    70e8:	ed 59       	subi	r30, 0x9D	; 157
    70ea:	ff 4f       	sbci	r31, 0xFF	; 255
    70ec:	91 83       	std	Z+1, r25	; 0x01
    70ee:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    70f0:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    70f4:	fe 01       	movw	r30, r28
    70f6:	e1 5a       	subi	r30, 0xA1	; 161
    70f8:	ff 4f       	sbci	r31, 0xFF	; 255
    70fa:	80 e0       	ldi	r24, 0x00	; 0
    70fc:	90 e0       	ldi	r25, 0x00	; 0
    70fe:	aa ef       	ldi	r26, 0xFA	; 250
    7100:	b3 e4       	ldi	r27, 0x43	; 67
    7102:	80 83       	st	Z, r24
    7104:	91 83       	std	Z+1, r25	; 0x01
    7106:	a2 83       	std	Z+2, r26	; 0x02
    7108:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    710a:	8e 01       	movw	r16, r28
    710c:	05 5a       	subi	r16, 0xA5	; 165
    710e:	1f 4f       	sbci	r17, 0xFF	; 255
    7110:	fe 01       	movw	r30, r28
    7112:	e1 5a       	subi	r30, 0xA1	; 161
    7114:	ff 4f       	sbci	r31, 0xFF	; 255
    7116:	60 81       	ld	r22, Z
    7118:	71 81       	ldd	r23, Z+1	; 0x01
    711a:	82 81       	ldd	r24, Z+2	; 0x02
    711c:	93 81       	ldd	r25, Z+3	; 0x03
    711e:	20 e0       	ldi	r18, 0x00	; 0
    7120:	30 e0       	ldi	r19, 0x00	; 0
    7122:	4a ef       	ldi	r20, 0xFA	; 250
    7124:	54 e4       	ldi	r21, 0x44	; 68
    7126:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    712a:	dc 01       	movw	r26, r24
    712c:	cb 01       	movw	r24, r22
    712e:	f8 01       	movw	r30, r16
    7130:	80 83       	st	Z, r24
    7132:	91 83       	std	Z+1, r25	; 0x01
    7134:	a2 83       	std	Z+2, r26	; 0x02
    7136:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7138:	fe 01       	movw	r30, r28
    713a:	e5 5a       	subi	r30, 0xA5	; 165
    713c:	ff 4f       	sbci	r31, 0xFF	; 255
    713e:	60 81       	ld	r22, Z
    7140:	71 81       	ldd	r23, Z+1	; 0x01
    7142:	82 81       	ldd	r24, Z+2	; 0x02
    7144:	93 81       	ldd	r25, Z+3	; 0x03
    7146:	20 e0       	ldi	r18, 0x00	; 0
    7148:	30 e0       	ldi	r19, 0x00	; 0
    714a:	40 e8       	ldi	r20, 0x80	; 128
    714c:	5f e3       	ldi	r21, 0x3F	; 63
    714e:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    7152:	88 23       	and	r24, r24
    7154:	44 f4       	brge	.+16     	; 0x7166 <main+0x305e>
		__ticks = 1;
    7156:	fe 01       	movw	r30, r28
    7158:	e7 5a       	subi	r30, 0xA7	; 167
    715a:	ff 4f       	sbci	r31, 0xFF	; 255
    715c:	81 e0       	ldi	r24, 0x01	; 1
    715e:	90 e0       	ldi	r25, 0x00	; 0
    7160:	91 83       	std	Z+1, r25	; 0x01
    7162:	80 83       	st	Z, r24
    7164:	64 c0       	rjmp	.+200    	; 0x722e <main+0x3126>
	else if (__tmp > 65535)
    7166:	fe 01       	movw	r30, r28
    7168:	e5 5a       	subi	r30, 0xA5	; 165
    716a:	ff 4f       	sbci	r31, 0xFF	; 255
    716c:	60 81       	ld	r22, Z
    716e:	71 81       	ldd	r23, Z+1	; 0x01
    7170:	82 81       	ldd	r24, Z+2	; 0x02
    7172:	93 81       	ldd	r25, Z+3	; 0x03
    7174:	20 e0       	ldi	r18, 0x00	; 0
    7176:	3f ef       	ldi	r19, 0xFF	; 255
    7178:	4f e7       	ldi	r20, 0x7F	; 127
    717a:	57 e4       	ldi	r21, 0x47	; 71
    717c:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    7180:	18 16       	cp	r1, r24
    7182:	0c f0       	brlt	.+2      	; 0x7186 <main+0x307e>
    7184:	43 c0       	rjmp	.+134    	; 0x720c <main+0x3104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7186:	fe 01       	movw	r30, r28
    7188:	e1 5a       	subi	r30, 0xA1	; 161
    718a:	ff 4f       	sbci	r31, 0xFF	; 255
    718c:	60 81       	ld	r22, Z
    718e:	71 81       	ldd	r23, Z+1	; 0x01
    7190:	82 81       	ldd	r24, Z+2	; 0x02
    7192:	93 81       	ldd	r25, Z+3	; 0x03
    7194:	20 e0       	ldi	r18, 0x00	; 0
    7196:	30 e0       	ldi	r19, 0x00	; 0
    7198:	40 e2       	ldi	r20, 0x20	; 32
    719a:	51 e4       	ldi	r21, 0x41	; 65
    719c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    71a0:	dc 01       	movw	r26, r24
    71a2:	cb 01       	movw	r24, r22
    71a4:	8e 01       	movw	r16, r28
    71a6:	07 5a       	subi	r16, 0xA7	; 167
    71a8:	1f 4f       	sbci	r17, 0xFF	; 255
    71aa:	bc 01       	movw	r22, r24
    71ac:	cd 01       	movw	r24, r26
    71ae:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    71b2:	dc 01       	movw	r26, r24
    71b4:	cb 01       	movw	r24, r22
    71b6:	f8 01       	movw	r30, r16
    71b8:	91 83       	std	Z+1, r25	; 0x01
    71ba:	80 83       	st	Z, r24
    71bc:	1f c0       	rjmp	.+62     	; 0x71fc <main+0x30f4>
    71be:	fe 01       	movw	r30, r28
    71c0:	e9 5a       	subi	r30, 0xA9	; 169
    71c2:	ff 4f       	sbci	r31, 0xFF	; 255
    71c4:	88 ec       	ldi	r24, 0xC8	; 200
    71c6:	90 e0       	ldi	r25, 0x00	; 0
    71c8:	91 83       	std	Z+1, r25	; 0x01
    71ca:	80 83       	st	Z, r24
    71cc:	fe 01       	movw	r30, r28
    71ce:	e9 5a       	subi	r30, 0xA9	; 169
    71d0:	ff 4f       	sbci	r31, 0xFF	; 255
    71d2:	80 81       	ld	r24, Z
    71d4:	91 81       	ldd	r25, Z+1	; 0x01
    71d6:	01 97       	sbiw	r24, 0x01	; 1
    71d8:	f1 f7       	brne	.-4      	; 0x71d6 <main+0x30ce>
    71da:	fe 01       	movw	r30, r28
    71dc:	e9 5a       	subi	r30, 0xA9	; 169
    71de:	ff 4f       	sbci	r31, 0xFF	; 255
    71e0:	91 83       	std	Z+1, r25	; 0x01
    71e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    71e4:	de 01       	movw	r26, r28
    71e6:	a7 5a       	subi	r26, 0xA7	; 167
    71e8:	bf 4f       	sbci	r27, 0xFF	; 255
    71ea:	fe 01       	movw	r30, r28
    71ec:	e7 5a       	subi	r30, 0xA7	; 167
    71ee:	ff 4f       	sbci	r31, 0xFF	; 255
    71f0:	80 81       	ld	r24, Z
    71f2:	91 81       	ldd	r25, Z+1	; 0x01
    71f4:	01 97       	sbiw	r24, 0x01	; 1
    71f6:	11 96       	adiw	r26, 0x01	; 1
    71f8:	9c 93       	st	X, r25
    71fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    71fc:	fe 01       	movw	r30, r28
    71fe:	e7 5a       	subi	r30, 0xA7	; 167
    7200:	ff 4f       	sbci	r31, 0xFF	; 255
    7202:	80 81       	ld	r24, Z
    7204:	91 81       	ldd	r25, Z+1	; 0x01
    7206:	00 97       	sbiw	r24, 0x00	; 0
    7208:	d1 f6       	brne	.-76     	; 0x71be <main+0x30b6>
    720a:	27 c0       	rjmp	.+78     	; 0x725a <main+0x3152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    720c:	8e 01       	movw	r16, r28
    720e:	07 5a       	subi	r16, 0xA7	; 167
    7210:	1f 4f       	sbci	r17, 0xFF	; 255
    7212:	fe 01       	movw	r30, r28
    7214:	e5 5a       	subi	r30, 0xA5	; 165
    7216:	ff 4f       	sbci	r31, 0xFF	; 255
    7218:	60 81       	ld	r22, Z
    721a:	71 81       	ldd	r23, Z+1	; 0x01
    721c:	82 81       	ldd	r24, Z+2	; 0x02
    721e:	93 81       	ldd	r25, Z+3	; 0x03
    7220:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7224:	dc 01       	movw	r26, r24
    7226:	cb 01       	movw	r24, r22
    7228:	f8 01       	movw	r30, r16
    722a:	91 83       	std	Z+1, r25	; 0x01
    722c:	80 83       	st	Z, r24
    722e:	de 01       	movw	r26, r28
    7230:	ab 5a       	subi	r26, 0xAB	; 171
    7232:	bf 4f       	sbci	r27, 0xFF	; 255
    7234:	fe 01       	movw	r30, r28
    7236:	e7 5a       	subi	r30, 0xA7	; 167
    7238:	ff 4f       	sbci	r31, 0xFF	; 255
    723a:	80 81       	ld	r24, Z
    723c:	91 81       	ldd	r25, Z+1	; 0x01
    723e:	8d 93       	st	X+, r24
    7240:	9c 93       	st	X, r25
    7242:	fe 01       	movw	r30, r28
    7244:	eb 5a       	subi	r30, 0xAB	; 171
    7246:	ff 4f       	sbci	r31, 0xFF	; 255
    7248:	80 81       	ld	r24, Z
    724a:	91 81       	ldd	r25, Z+1	; 0x01
    724c:	01 97       	sbiw	r24, 0x01	; 1
    724e:	f1 f7       	brne	.-4      	; 0x724c <main+0x3144>
    7250:	fe 01       	movw	r30, r28
    7252:	eb 5a       	subi	r30, 0xAB	; 171
    7254:	ff 4f       	sbci	r31, 0xFF	; 255
    7256:	91 83       	std	Z+1, r25	; 0x01
    7258:	80 83       	st	Z, r24
			_delay_ms(500);
			LCD_Goto(1,4);
    725a:	81 e0       	ldi	r24, 0x01	; 1
    725c:	64 e0       	ldi	r22, 0x04	; 4
    725e:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_Lose);
    7262:	84 ed       	ldi	r24, 0xD4	; 212
    7264:	91 e0       	ldi	r25, 0x01	; 1
    7266:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    726a:	fe 01       	movw	r30, r28
    726c:	ef 5a       	subi	r30, 0xAF	; 175
    726e:	ff 4f       	sbci	r31, 0xFF	; 255
    7270:	80 e0       	ldi	r24, 0x00	; 0
    7272:	90 e0       	ldi	r25, 0x00	; 0
    7274:	aa e7       	ldi	r26, 0x7A	; 122
    7276:	b4 e4       	ldi	r27, 0x44	; 68
    7278:	80 83       	st	Z, r24
    727a:	91 83       	std	Z+1, r25	; 0x01
    727c:	a2 83       	std	Z+2, r26	; 0x02
    727e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7280:	8e 01       	movw	r16, r28
    7282:	03 5b       	subi	r16, 0xB3	; 179
    7284:	1f 4f       	sbci	r17, 0xFF	; 255
    7286:	fe 01       	movw	r30, r28
    7288:	ef 5a       	subi	r30, 0xAF	; 175
    728a:	ff 4f       	sbci	r31, 0xFF	; 255
    728c:	60 81       	ld	r22, Z
    728e:	71 81       	ldd	r23, Z+1	; 0x01
    7290:	82 81       	ldd	r24, Z+2	; 0x02
    7292:	93 81       	ldd	r25, Z+3	; 0x03
    7294:	20 e0       	ldi	r18, 0x00	; 0
    7296:	30 e0       	ldi	r19, 0x00	; 0
    7298:	4a ef       	ldi	r20, 0xFA	; 250
    729a:	54 e4       	ldi	r21, 0x44	; 68
    729c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    72a0:	dc 01       	movw	r26, r24
    72a2:	cb 01       	movw	r24, r22
    72a4:	f8 01       	movw	r30, r16
    72a6:	80 83       	st	Z, r24
    72a8:	91 83       	std	Z+1, r25	; 0x01
    72aa:	a2 83       	std	Z+2, r26	; 0x02
    72ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    72ae:	fe 01       	movw	r30, r28
    72b0:	e3 5b       	subi	r30, 0xB3	; 179
    72b2:	ff 4f       	sbci	r31, 0xFF	; 255
    72b4:	60 81       	ld	r22, Z
    72b6:	71 81       	ldd	r23, Z+1	; 0x01
    72b8:	82 81       	ldd	r24, Z+2	; 0x02
    72ba:	93 81       	ldd	r25, Z+3	; 0x03
    72bc:	20 e0       	ldi	r18, 0x00	; 0
    72be:	30 e0       	ldi	r19, 0x00	; 0
    72c0:	40 e8       	ldi	r20, 0x80	; 128
    72c2:	5f e3       	ldi	r21, 0x3F	; 63
    72c4:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    72c8:	88 23       	and	r24, r24
    72ca:	44 f4       	brge	.+16     	; 0x72dc <main+0x31d4>
		__ticks = 1;
    72cc:	fe 01       	movw	r30, r28
    72ce:	e5 5b       	subi	r30, 0xB5	; 181
    72d0:	ff 4f       	sbci	r31, 0xFF	; 255
    72d2:	81 e0       	ldi	r24, 0x01	; 1
    72d4:	90 e0       	ldi	r25, 0x00	; 0
    72d6:	91 83       	std	Z+1, r25	; 0x01
    72d8:	80 83       	st	Z, r24
    72da:	64 c0       	rjmp	.+200    	; 0x73a4 <main+0x329c>
	else if (__tmp > 65535)
    72dc:	fe 01       	movw	r30, r28
    72de:	e3 5b       	subi	r30, 0xB3	; 179
    72e0:	ff 4f       	sbci	r31, 0xFF	; 255
    72e2:	60 81       	ld	r22, Z
    72e4:	71 81       	ldd	r23, Z+1	; 0x01
    72e6:	82 81       	ldd	r24, Z+2	; 0x02
    72e8:	93 81       	ldd	r25, Z+3	; 0x03
    72ea:	20 e0       	ldi	r18, 0x00	; 0
    72ec:	3f ef       	ldi	r19, 0xFF	; 255
    72ee:	4f e7       	ldi	r20, 0x7F	; 127
    72f0:	57 e4       	ldi	r21, 0x47	; 71
    72f2:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    72f6:	18 16       	cp	r1, r24
    72f8:	0c f0       	brlt	.+2      	; 0x72fc <main+0x31f4>
    72fa:	43 c0       	rjmp	.+134    	; 0x7382 <main+0x327a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    72fc:	fe 01       	movw	r30, r28
    72fe:	ef 5a       	subi	r30, 0xAF	; 175
    7300:	ff 4f       	sbci	r31, 0xFF	; 255
    7302:	60 81       	ld	r22, Z
    7304:	71 81       	ldd	r23, Z+1	; 0x01
    7306:	82 81       	ldd	r24, Z+2	; 0x02
    7308:	93 81       	ldd	r25, Z+3	; 0x03
    730a:	20 e0       	ldi	r18, 0x00	; 0
    730c:	30 e0       	ldi	r19, 0x00	; 0
    730e:	40 e2       	ldi	r20, 0x20	; 32
    7310:	51 e4       	ldi	r21, 0x41	; 65
    7312:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    7316:	dc 01       	movw	r26, r24
    7318:	cb 01       	movw	r24, r22
    731a:	8e 01       	movw	r16, r28
    731c:	05 5b       	subi	r16, 0xB5	; 181
    731e:	1f 4f       	sbci	r17, 0xFF	; 255
    7320:	bc 01       	movw	r22, r24
    7322:	cd 01       	movw	r24, r26
    7324:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7328:	dc 01       	movw	r26, r24
    732a:	cb 01       	movw	r24, r22
    732c:	f8 01       	movw	r30, r16
    732e:	91 83       	std	Z+1, r25	; 0x01
    7330:	80 83       	st	Z, r24
    7332:	1f c0       	rjmp	.+62     	; 0x7372 <main+0x326a>
    7334:	fe 01       	movw	r30, r28
    7336:	e7 5b       	subi	r30, 0xB7	; 183
    7338:	ff 4f       	sbci	r31, 0xFF	; 255
    733a:	88 ec       	ldi	r24, 0xC8	; 200
    733c:	90 e0       	ldi	r25, 0x00	; 0
    733e:	91 83       	std	Z+1, r25	; 0x01
    7340:	80 83       	st	Z, r24
    7342:	fe 01       	movw	r30, r28
    7344:	e7 5b       	subi	r30, 0xB7	; 183
    7346:	ff 4f       	sbci	r31, 0xFF	; 255
    7348:	80 81       	ld	r24, Z
    734a:	91 81       	ldd	r25, Z+1	; 0x01
    734c:	01 97       	sbiw	r24, 0x01	; 1
    734e:	f1 f7       	brne	.-4      	; 0x734c <main+0x3244>
    7350:	fe 01       	movw	r30, r28
    7352:	e7 5b       	subi	r30, 0xB7	; 183
    7354:	ff 4f       	sbci	r31, 0xFF	; 255
    7356:	91 83       	std	Z+1, r25	; 0x01
    7358:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    735a:	de 01       	movw	r26, r28
    735c:	a5 5b       	subi	r26, 0xB5	; 181
    735e:	bf 4f       	sbci	r27, 0xFF	; 255
    7360:	fe 01       	movw	r30, r28
    7362:	e5 5b       	subi	r30, 0xB5	; 181
    7364:	ff 4f       	sbci	r31, 0xFF	; 255
    7366:	80 81       	ld	r24, Z
    7368:	91 81       	ldd	r25, Z+1	; 0x01
    736a:	01 97       	sbiw	r24, 0x01	; 1
    736c:	11 96       	adiw	r26, 0x01	; 1
    736e:	9c 93       	st	X, r25
    7370:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7372:	fe 01       	movw	r30, r28
    7374:	e5 5b       	subi	r30, 0xB5	; 181
    7376:	ff 4f       	sbci	r31, 0xFF	; 255
    7378:	80 81       	ld	r24, Z
    737a:	91 81       	ldd	r25, Z+1	; 0x01
    737c:	00 97       	sbiw	r24, 0x00	; 0
    737e:	d1 f6       	brne	.-76     	; 0x7334 <main+0x322c>
    7380:	27 c0       	rjmp	.+78     	; 0x73d0 <main+0x32c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7382:	8e 01       	movw	r16, r28
    7384:	05 5b       	subi	r16, 0xB5	; 181
    7386:	1f 4f       	sbci	r17, 0xFF	; 255
    7388:	fe 01       	movw	r30, r28
    738a:	e3 5b       	subi	r30, 0xB3	; 179
    738c:	ff 4f       	sbci	r31, 0xFF	; 255
    738e:	60 81       	ld	r22, Z
    7390:	71 81       	ldd	r23, Z+1	; 0x01
    7392:	82 81       	ldd	r24, Z+2	; 0x02
    7394:	93 81       	ldd	r25, Z+3	; 0x03
    7396:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    739a:	dc 01       	movw	r26, r24
    739c:	cb 01       	movw	r24, r22
    739e:	f8 01       	movw	r30, r16
    73a0:	91 83       	std	Z+1, r25	; 0x01
    73a2:	80 83       	st	Z, r24
    73a4:	de 01       	movw	r26, r28
    73a6:	a9 5b       	subi	r26, 0xB9	; 185
    73a8:	bf 4f       	sbci	r27, 0xFF	; 255
    73aa:	fe 01       	movw	r30, r28
    73ac:	e5 5b       	subi	r30, 0xB5	; 181
    73ae:	ff 4f       	sbci	r31, 0xFF	; 255
    73b0:	80 81       	ld	r24, Z
    73b2:	91 81       	ldd	r25, Z+1	; 0x01
    73b4:	8d 93       	st	X+, r24
    73b6:	9c 93       	st	X, r25
    73b8:	fe 01       	movw	r30, r28
    73ba:	e9 5b       	subi	r30, 0xB9	; 185
    73bc:	ff 4f       	sbci	r31, 0xFF	; 255
    73be:	80 81       	ld	r24, Z
    73c0:	91 81       	ldd	r25, Z+1	; 0x01
    73c2:	01 97       	sbiw	r24, 0x01	; 1
    73c4:	f1 f7       	brne	.-4      	; 0x73c2 <main+0x32ba>
    73c6:	fe 01       	movw	r30, r28
    73c8:	e9 5b       	subi	r30, 0xB9	; 185
    73ca:	ff 4f       	sbci	r31, 0xFF	; 255
    73cc:	91 83       	std	Z+1, r25	; 0x01
    73ce:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    73d0:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    73d4:	fe 01       	movw	r30, r28
    73d6:	ed 5b       	subi	r30, 0xBD	; 189
    73d8:	ff 4f       	sbci	r31, 0xFF	; 255
    73da:	80 e0       	ldi	r24, 0x00	; 0
    73dc:	90 e0       	ldi	r25, 0x00	; 0
    73de:	aa ef       	ldi	r26, 0xFA	; 250
    73e0:	b3 e4       	ldi	r27, 0x43	; 67
    73e2:	80 83       	st	Z, r24
    73e4:	91 83       	std	Z+1, r25	; 0x01
    73e6:	a2 83       	std	Z+2, r26	; 0x02
    73e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    73ea:	8e 01       	movw	r16, r28
    73ec:	01 5c       	subi	r16, 0xC1	; 193
    73ee:	1f 4f       	sbci	r17, 0xFF	; 255
    73f0:	fe 01       	movw	r30, r28
    73f2:	ed 5b       	subi	r30, 0xBD	; 189
    73f4:	ff 4f       	sbci	r31, 0xFF	; 255
    73f6:	60 81       	ld	r22, Z
    73f8:	71 81       	ldd	r23, Z+1	; 0x01
    73fa:	82 81       	ldd	r24, Z+2	; 0x02
    73fc:	93 81       	ldd	r25, Z+3	; 0x03
    73fe:	20 e0       	ldi	r18, 0x00	; 0
    7400:	30 e0       	ldi	r19, 0x00	; 0
    7402:	4a ef       	ldi	r20, 0xFA	; 250
    7404:	54 e4       	ldi	r21, 0x44	; 68
    7406:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    740a:	dc 01       	movw	r26, r24
    740c:	cb 01       	movw	r24, r22
    740e:	f8 01       	movw	r30, r16
    7410:	80 83       	st	Z, r24
    7412:	91 83       	std	Z+1, r25	; 0x01
    7414:	a2 83       	std	Z+2, r26	; 0x02
    7416:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7418:	fe 01       	movw	r30, r28
    741a:	ff 96       	adiw	r30, 0x3f	; 63
    741c:	60 81       	ld	r22, Z
    741e:	71 81       	ldd	r23, Z+1	; 0x01
    7420:	82 81       	ldd	r24, Z+2	; 0x02
    7422:	93 81       	ldd	r25, Z+3	; 0x03
    7424:	20 e0       	ldi	r18, 0x00	; 0
    7426:	30 e0       	ldi	r19, 0x00	; 0
    7428:	40 e8       	ldi	r20, 0x80	; 128
    742a:	5f e3       	ldi	r21, 0x3F	; 63
    742c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    7430:	88 23       	and	r24, r24
    7432:	2c f4       	brge	.+10     	; 0x743e <main+0x3336>
		__ticks = 1;
    7434:	81 e0       	ldi	r24, 0x01	; 1
    7436:	90 e0       	ldi	r25, 0x00	; 0
    7438:	9e af       	std	Y+62, r25	; 0x3e
    743a:	8d af       	std	Y+61, r24	; 0x3d
    743c:	46 c0       	rjmp	.+140    	; 0x74ca <main+0x33c2>
	else if (__tmp > 65535)
    743e:	fe 01       	movw	r30, r28
    7440:	ff 96       	adiw	r30, 0x3f	; 63
    7442:	60 81       	ld	r22, Z
    7444:	71 81       	ldd	r23, Z+1	; 0x01
    7446:	82 81       	ldd	r24, Z+2	; 0x02
    7448:	93 81       	ldd	r25, Z+3	; 0x03
    744a:	20 e0       	ldi	r18, 0x00	; 0
    744c:	3f ef       	ldi	r19, 0xFF	; 255
    744e:	4f e7       	ldi	r20, 0x7F	; 127
    7450:	57 e4       	ldi	r21, 0x47	; 71
    7452:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    7456:	18 16       	cp	r1, r24
    7458:	64 f5       	brge	.+88     	; 0x74b2 <main+0x33aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    745a:	fe 01       	movw	r30, r28
    745c:	ed 5b       	subi	r30, 0xBD	; 189
    745e:	ff 4f       	sbci	r31, 0xFF	; 255
    7460:	60 81       	ld	r22, Z
    7462:	71 81       	ldd	r23, Z+1	; 0x01
    7464:	82 81       	ldd	r24, Z+2	; 0x02
    7466:	93 81       	ldd	r25, Z+3	; 0x03
    7468:	20 e0       	ldi	r18, 0x00	; 0
    746a:	30 e0       	ldi	r19, 0x00	; 0
    746c:	40 e2       	ldi	r20, 0x20	; 32
    746e:	51 e4       	ldi	r21, 0x41	; 65
    7470:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    7474:	dc 01       	movw	r26, r24
    7476:	cb 01       	movw	r24, r22
    7478:	bc 01       	movw	r22, r24
    747a:	cd 01       	movw	r24, r26
    747c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7480:	dc 01       	movw	r26, r24
    7482:	cb 01       	movw	r24, r22
    7484:	9e af       	std	Y+62, r25	; 0x3e
    7486:	8d af       	std	Y+61, r24	; 0x3d
    7488:	0f c0       	rjmp	.+30     	; 0x74a8 <main+0x33a0>
    748a:	88 ec       	ldi	r24, 0xC8	; 200
    748c:	90 e0       	ldi	r25, 0x00	; 0
    748e:	9c af       	std	Y+60, r25	; 0x3c
    7490:	8b af       	std	Y+59, r24	; 0x3b
    7492:	8b ad       	ldd	r24, Y+59	; 0x3b
    7494:	9c ad       	ldd	r25, Y+60	; 0x3c
    7496:	01 97       	sbiw	r24, 0x01	; 1
    7498:	f1 f7       	brne	.-4      	; 0x7496 <main+0x338e>
    749a:	9c af       	std	Y+60, r25	; 0x3c
    749c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    749e:	8d ad       	ldd	r24, Y+61	; 0x3d
    74a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    74a2:	01 97       	sbiw	r24, 0x01	; 1
    74a4:	9e af       	std	Y+62, r25	; 0x3e
    74a6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    74a8:	8d ad       	ldd	r24, Y+61	; 0x3d
    74aa:	9e ad       	ldd	r25, Y+62	; 0x3e
    74ac:	00 97       	sbiw	r24, 0x00	; 0
    74ae:	69 f7       	brne	.-38     	; 0x748a <main+0x3382>
    74b0:	16 c0       	rjmp	.+44     	; 0x74de <main+0x33d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    74b2:	fe 01       	movw	r30, r28
    74b4:	ff 96       	adiw	r30, 0x3f	; 63
    74b6:	60 81       	ld	r22, Z
    74b8:	71 81       	ldd	r23, Z+1	; 0x01
    74ba:	82 81       	ldd	r24, Z+2	; 0x02
    74bc:	93 81       	ldd	r25, Z+3	; 0x03
    74be:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    74c2:	dc 01       	movw	r26, r24
    74c4:	cb 01       	movw	r24, r22
    74c6:	9e af       	std	Y+62, r25	; 0x3e
    74c8:	8d af       	std	Y+61, r24	; 0x3d
    74ca:	8d ad       	ldd	r24, Y+61	; 0x3d
    74cc:	9e ad       	ldd	r25, Y+62	; 0x3e
    74ce:	9a af       	std	Y+58, r25	; 0x3a
    74d0:	89 af       	std	Y+57, r24	; 0x39
    74d2:	89 ad       	ldd	r24, Y+57	; 0x39
    74d4:	9a ad       	ldd	r25, Y+58	; 0x3a
    74d6:	01 97       	sbiw	r24, 0x01	; 1
    74d8:	f1 f7       	brne	.-4      	; 0x74d6 <main+0x33ce>
    74da:	9a af       	std	Y+58, r25	; 0x3a
    74dc:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(500);
			LCD_Goto(1,4);
    74de:	81 e0       	ldi	r24, 0x01	; 1
    74e0:	64 e0       	ldi	r22, 0x04	; 4
    74e2:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_Lose);
    74e6:	84 ed       	ldi	r24, 0xD4	; 212
    74e8:	91 e0       	ldi	r25, 0x01	; 1
    74ea:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    74ee:	80 e0       	ldi	r24, 0x00	; 0
    74f0:	90 e0       	ldi	r25, 0x00	; 0
    74f2:	aa e7       	ldi	r26, 0x7A	; 122
    74f4:	b4 e4       	ldi	r27, 0x44	; 68
    74f6:	8d ab       	std	Y+53, r24	; 0x35
    74f8:	9e ab       	std	Y+54, r25	; 0x36
    74fa:	af ab       	std	Y+55, r26	; 0x37
    74fc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    74fe:	6d a9       	ldd	r22, Y+53	; 0x35
    7500:	7e a9       	ldd	r23, Y+54	; 0x36
    7502:	8f a9       	ldd	r24, Y+55	; 0x37
    7504:	98 ad       	ldd	r25, Y+56	; 0x38
    7506:	20 e0       	ldi	r18, 0x00	; 0
    7508:	30 e0       	ldi	r19, 0x00	; 0
    750a:	4a ef       	ldi	r20, 0xFA	; 250
    750c:	54 e4       	ldi	r21, 0x44	; 68
    750e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    7512:	dc 01       	movw	r26, r24
    7514:	cb 01       	movw	r24, r22
    7516:	89 ab       	std	Y+49, r24	; 0x31
    7518:	9a ab       	std	Y+50, r25	; 0x32
    751a:	ab ab       	std	Y+51, r26	; 0x33
    751c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    751e:	69 a9       	ldd	r22, Y+49	; 0x31
    7520:	7a a9       	ldd	r23, Y+50	; 0x32
    7522:	8b a9       	ldd	r24, Y+51	; 0x33
    7524:	9c a9       	ldd	r25, Y+52	; 0x34
    7526:	20 e0       	ldi	r18, 0x00	; 0
    7528:	30 e0       	ldi	r19, 0x00	; 0
    752a:	40 e8       	ldi	r20, 0x80	; 128
    752c:	5f e3       	ldi	r21, 0x3F	; 63
    752e:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    7532:	88 23       	and	r24, r24
    7534:	2c f4       	brge	.+10     	; 0x7540 <main+0x3438>
		__ticks = 1;
    7536:	81 e0       	ldi	r24, 0x01	; 1
    7538:	90 e0       	ldi	r25, 0x00	; 0
    753a:	98 ab       	std	Y+48, r25	; 0x30
    753c:	8f a7       	std	Y+47, r24	; 0x2f
    753e:	3f c0       	rjmp	.+126    	; 0x75be <main+0x34b6>
	else if (__tmp > 65535)
    7540:	69 a9       	ldd	r22, Y+49	; 0x31
    7542:	7a a9       	ldd	r23, Y+50	; 0x32
    7544:	8b a9       	ldd	r24, Y+51	; 0x33
    7546:	9c a9       	ldd	r25, Y+52	; 0x34
    7548:	20 e0       	ldi	r18, 0x00	; 0
    754a:	3f ef       	ldi	r19, 0xFF	; 255
    754c:	4f e7       	ldi	r20, 0x7F	; 127
    754e:	57 e4       	ldi	r21, 0x47	; 71
    7550:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    7554:	18 16       	cp	r1, r24
    7556:	4c f5       	brge	.+82     	; 0x75aa <main+0x34a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7558:	6d a9       	ldd	r22, Y+53	; 0x35
    755a:	7e a9       	ldd	r23, Y+54	; 0x36
    755c:	8f a9       	ldd	r24, Y+55	; 0x37
    755e:	98 ad       	ldd	r25, Y+56	; 0x38
    7560:	20 e0       	ldi	r18, 0x00	; 0
    7562:	30 e0       	ldi	r19, 0x00	; 0
    7564:	40 e2       	ldi	r20, 0x20	; 32
    7566:	51 e4       	ldi	r21, 0x41	; 65
    7568:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    756c:	dc 01       	movw	r26, r24
    756e:	cb 01       	movw	r24, r22
    7570:	bc 01       	movw	r22, r24
    7572:	cd 01       	movw	r24, r26
    7574:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7578:	dc 01       	movw	r26, r24
    757a:	cb 01       	movw	r24, r22
    757c:	98 ab       	std	Y+48, r25	; 0x30
    757e:	8f a7       	std	Y+47, r24	; 0x2f
    7580:	0f c0       	rjmp	.+30     	; 0x75a0 <main+0x3498>
    7582:	88 ec       	ldi	r24, 0xC8	; 200
    7584:	90 e0       	ldi	r25, 0x00	; 0
    7586:	9e a7       	std	Y+46, r25	; 0x2e
    7588:	8d a7       	std	Y+45, r24	; 0x2d
    758a:	8d a5       	ldd	r24, Y+45	; 0x2d
    758c:	9e a5       	ldd	r25, Y+46	; 0x2e
    758e:	01 97       	sbiw	r24, 0x01	; 1
    7590:	f1 f7       	brne	.-4      	; 0x758e <main+0x3486>
    7592:	9e a7       	std	Y+46, r25	; 0x2e
    7594:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7596:	8f a5       	ldd	r24, Y+47	; 0x2f
    7598:	98 a9       	ldd	r25, Y+48	; 0x30
    759a:	01 97       	sbiw	r24, 0x01	; 1
    759c:	98 ab       	std	Y+48, r25	; 0x30
    759e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    75a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    75a2:	98 a9       	ldd	r25, Y+48	; 0x30
    75a4:	00 97       	sbiw	r24, 0x00	; 0
    75a6:	69 f7       	brne	.-38     	; 0x7582 <main+0x347a>
    75a8:	14 c0       	rjmp	.+40     	; 0x75d2 <main+0x34ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    75aa:	69 a9       	ldd	r22, Y+49	; 0x31
    75ac:	7a a9       	ldd	r23, Y+50	; 0x32
    75ae:	8b a9       	ldd	r24, Y+51	; 0x33
    75b0:	9c a9       	ldd	r25, Y+52	; 0x34
    75b2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    75b6:	dc 01       	movw	r26, r24
    75b8:	cb 01       	movw	r24, r22
    75ba:	98 ab       	std	Y+48, r25	; 0x30
    75bc:	8f a7       	std	Y+47, r24	; 0x2f
    75be:	8f a5       	ldd	r24, Y+47	; 0x2f
    75c0:	98 a9       	ldd	r25, Y+48	; 0x30
    75c2:	9c a7       	std	Y+44, r25	; 0x2c
    75c4:	8b a7       	std	Y+43, r24	; 0x2b
    75c6:	8b a5       	ldd	r24, Y+43	; 0x2b
    75c8:	9c a5       	ldd	r25, Y+44	; 0x2c
    75ca:	01 97       	sbiw	r24, 0x01	; 1
    75cc:	f1 f7       	brne	.-4      	; 0x75ca <main+0x34c2>
    75ce:	9c a7       	std	Y+44, r25	; 0x2c
    75d0:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(1000);
			LCD_Clear();
    75d2:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    75d6:	80 e0       	ldi	r24, 0x00	; 0
    75d8:	90 e0       	ldi	r25, 0x00	; 0
    75da:	aa ef       	ldi	r26, 0xFA	; 250
    75dc:	b3 e4       	ldi	r27, 0x43	; 67
    75de:	8f a3       	std	Y+39, r24	; 0x27
    75e0:	98 a7       	std	Y+40, r25	; 0x28
    75e2:	a9 a7       	std	Y+41, r26	; 0x29
    75e4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    75e6:	6f a1       	ldd	r22, Y+39	; 0x27
    75e8:	78 a5       	ldd	r23, Y+40	; 0x28
    75ea:	89 a5       	ldd	r24, Y+41	; 0x29
    75ec:	9a a5       	ldd	r25, Y+42	; 0x2a
    75ee:	20 e0       	ldi	r18, 0x00	; 0
    75f0:	30 e0       	ldi	r19, 0x00	; 0
    75f2:	4a ef       	ldi	r20, 0xFA	; 250
    75f4:	54 e4       	ldi	r21, 0x44	; 68
    75f6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    75fa:	dc 01       	movw	r26, r24
    75fc:	cb 01       	movw	r24, r22
    75fe:	8b a3       	std	Y+35, r24	; 0x23
    7600:	9c a3       	std	Y+36, r25	; 0x24
    7602:	ad a3       	std	Y+37, r26	; 0x25
    7604:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    7606:	6b a1       	ldd	r22, Y+35	; 0x23
    7608:	7c a1       	ldd	r23, Y+36	; 0x24
    760a:	8d a1       	ldd	r24, Y+37	; 0x25
    760c:	9e a1       	ldd	r25, Y+38	; 0x26
    760e:	20 e0       	ldi	r18, 0x00	; 0
    7610:	30 e0       	ldi	r19, 0x00	; 0
    7612:	40 e8       	ldi	r20, 0x80	; 128
    7614:	5f e3       	ldi	r21, 0x3F	; 63
    7616:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    761a:	88 23       	and	r24, r24
    761c:	2c f4       	brge	.+10     	; 0x7628 <main+0x3520>
		__ticks = 1;
    761e:	81 e0       	ldi	r24, 0x01	; 1
    7620:	90 e0       	ldi	r25, 0x00	; 0
    7622:	9a a3       	std	Y+34, r25	; 0x22
    7624:	89 a3       	std	Y+33, r24	; 0x21
    7626:	3f c0       	rjmp	.+126    	; 0x76a6 <main+0x359e>
	else if (__tmp > 65535)
    7628:	6b a1       	ldd	r22, Y+35	; 0x23
    762a:	7c a1       	ldd	r23, Y+36	; 0x24
    762c:	8d a1       	ldd	r24, Y+37	; 0x25
    762e:	9e a1       	ldd	r25, Y+38	; 0x26
    7630:	20 e0       	ldi	r18, 0x00	; 0
    7632:	3f ef       	ldi	r19, 0xFF	; 255
    7634:	4f e7       	ldi	r20, 0x7F	; 127
    7636:	57 e4       	ldi	r21, 0x47	; 71
    7638:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    763c:	18 16       	cp	r1, r24
    763e:	4c f5       	brge	.+82     	; 0x7692 <main+0x358a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7640:	6f a1       	ldd	r22, Y+39	; 0x27
    7642:	78 a5       	ldd	r23, Y+40	; 0x28
    7644:	89 a5       	ldd	r24, Y+41	; 0x29
    7646:	9a a5       	ldd	r25, Y+42	; 0x2a
    7648:	20 e0       	ldi	r18, 0x00	; 0
    764a:	30 e0       	ldi	r19, 0x00	; 0
    764c:	40 e2       	ldi	r20, 0x20	; 32
    764e:	51 e4       	ldi	r21, 0x41	; 65
    7650:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    7654:	dc 01       	movw	r26, r24
    7656:	cb 01       	movw	r24, r22
    7658:	bc 01       	movw	r22, r24
    765a:	cd 01       	movw	r24, r26
    765c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7660:	dc 01       	movw	r26, r24
    7662:	cb 01       	movw	r24, r22
    7664:	9a a3       	std	Y+34, r25	; 0x22
    7666:	89 a3       	std	Y+33, r24	; 0x21
    7668:	0f c0       	rjmp	.+30     	; 0x7688 <main+0x3580>
    766a:	88 ec       	ldi	r24, 0xC8	; 200
    766c:	90 e0       	ldi	r25, 0x00	; 0
    766e:	98 a3       	std	Y+32, r25	; 0x20
    7670:	8f 8f       	std	Y+31, r24	; 0x1f
    7672:	8f 8d       	ldd	r24, Y+31	; 0x1f
    7674:	98 a1       	ldd	r25, Y+32	; 0x20
    7676:	01 97       	sbiw	r24, 0x01	; 1
    7678:	f1 f7       	brne	.-4      	; 0x7676 <main+0x356e>
    767a:	98 a3       	std	Y+32, r25	; 0x20
    767c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    767e:	89 a1       	ldd	r24, Y+33	; 0x21
    7680:	9a a1       	ldd	r25, Y+34	; 0x22
    7682:	01 97       	sbiw	r24, 0x01	; 1
    7684:	9a a3       	std	Y+34, r25	; 0x22
    7686:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7688:	89 a1       	ldd	r24, Y+33	; 0x21
    768a:	9a a1       	ldd	r25, Y+34	; 0x22
    768c:	00 97       	sbiw	r24, 0x00	; 0
    768e:	69 f7       	brne	.-38     	; 0x766a <main+0x3562>
    7690:	14 c0       	rjmp	.+40     	; 0x76ba <main+0x35b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7692:	6b a1       	ldd	r22, Y+35	; 0x23
    7694:	7c a1       	ldd	r23, Y+36	; 0x24
    7696:	8d a1       	ldd	r24, Y+37	; 0x25
    7698:	9e a1       	ldd	r25, Y+38	; 0x26
    769a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    769e:	dc 01       	movw	r26, r24
    76a0:	cb 01       	movw	r24, r22
    76a2:	9a a3       	std	Y+34, r25	; 0x22
    76a4:	89 a3       	std	Y+33, r24	; 0x21
    76a6:	89 a1       	ldd	r24, Y+33	; 0x21
    76a8:	9a a1       	ldd	r25, Y+34	; 0x22
    76aa:	9e 8f       	std	Y+30, r25	; 0x1e
    76ac:	8d 8f       	std	Y+29, r24	; 0x1d
    76ae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    76b0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    76b2:	01 97       	sbiw	r24, 0x01	; 1
    76b4:	f1 f7       	brne	.-4      	; 0x76b2 <main+0x35aa>
    76b6:	9e 8f       	std	Y+30, r25	; 0x1e
    76b8:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(500);
			LCD_Goto(2,4);
    76ba:	82 e0       	ldi	r24, 0x02	; 2
    76bc:	64 e0       	ldi	r22, 0x04	; 4
    76be:	0e 94 ed 1a 	call	0x35da	; 0x35da <LCD_Goto>
			LCD_WriteString(word_EndGame);
    76c2:	8b e0       	ldi	r24, 0x0B	; 11
    76c4:	92 e0       	ldi	r25, 0x02	; 2
    76c6:	0e 94 bf 1a 	call	0x357e	; 0x357e <LCD_WriteString>
    76ca:	80 e0       	ldi	r24, 0x00	; 0
    76cc:	90 e0       	ldi	r25, 0x00	; 0
    76ce:	aa ef       	ldi	r26, 0xFA	; 250
    76d0:	b3 e4       	ldi	r27, 0x43	; 67
    76d2:	89 8f       	std	Y+25, r24	; 0x19
    76d4:	9a 8f       	std	Y+26, r25	; 0x1a
    76d6:	ab 8f       	std	Y+27, r26	; 0x1b
    76d8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    76da:	69 8d       	ldd	r22, Y+25	; 0x19
    76dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    76de:	8b 8d       	ldd	r24, Y+27	; 0x1b
    76e0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    76e2:	20 e0       	ldi	r18, 0x00	; 0
    76e4:	30 e0       	ldi	r19, 0x00	; 0
    76e6:	4a ef       	ldi	r20, 0xFA	; 250
    76e8:	54 e4       	ldi	r21, 0x44	; 68
    76ea:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    76ee:	dc 01       	movw	r26, r24
    76f0:	cb 01       	movw	r24, r22
    76f2:	8d 8b       	std	Y+21, r24	; 0x15
    76f4:	9e 8b       	std	Y+22, r25	; 0x16
    76f6:	af 8b       	std	Y+23, r26	; 0x17
    76f8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    76fa:	6d 89       	ldd	r22, Y+21	; 0x15
    76fc:	7e 89       	ldd	r23, Y+22	; 0x16
    76fe:	8f 89       	ldd	r24, Y+23	; 0x17
    7700:	98 8d       	ldd	r25, Y+24	; 0x18
    7702:	20 e0       	ldi	r18, 0x00	; 0
    7704:	30 e0       	ldi	r19, 0x00	; 0
    7706:	40 e8       	ldi	r20, 0x80	; 128
    7708:	5f e3       	ldi	r21, 0x3F	; 63
    770a:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    770e:	88 23       	and	r24, r24
    7710:	2c f4       	brge	.+10     	; 0x771c <main+0x3614>
		__ticks = 1;
    7712:	81 e0       	ldi	r24, 0x01	; 1
    7714:	90 e0       	ldi	r25, 0x00	; 0
    7716:	9c 8b       	std	Y+20, r25	; 0x14
    7718:	8b 8b       	std	Y+19, r24	; 0x13
    771a:	3f c0       	rjmp	.+126    	; 0x779a <main+0x3692>
	else if (__tmp > 65535)
    771c:	6d 89       	ldd	r22, Y+21	; 0x15
    771e:	7e 89       	ldd	r23, Y+22	; 0x16
    7720:	8f 89       	ldd	r24, Y+23	; 0x17
    7722:	98 8d       	ldd	r25, Y+24	; 0x18
    7724:	20 e0       	ldi	r18, 0x00	; 0
    7726:	3f ef       	ldi	r19, 0xFF	; 255
    7728:	4f e7       	ldi	r20, 0x7F	; 127
    772a:	57 e4       	ldi	r21, 0x47	; 71
    772c:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    7730:	18 16       	cp	r1, r24
    7732:	4c f5       	brge	.+82     	; 0x7786 <main+0x367e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7734:	69 8d       	ldd	r22, Y+25	; 0x19
    7736:	7a 8d       	ldd	r23, Y+26	; 0x1a
    7738:	8b 8d       	ldd	r24, Y+27	; 0x1b
    773a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    773c:	20 e0       	ldi	r18, 0x00	; 0
    773e:	30 e0       	ldi	r19, 0x00	; 0
    7740:	40 e2       	ldi	r20, 0x20	; 32
    7742:	51 e4       	ldi	r21, 0x41	; 65
    7744:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    7748:	dc 01       	movw	r26, r24
    774a:	cb 01       	movw	r24, r22
    774c:	bc 01       	movw	r22, r24
    774e:	cd 01       	movw	r24, r26
    7750:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7754:	dc 01       	movw	r26, r24
    7756:	cb 01       	movw	r24, r22
    7758:	9c 8b       	std	Y+20, r25	; 0x14
    775a:	8b 8b       	std	Y+19, r24	; 0x13
    775c:	0f c0       	rjmp	.+30     	; 0x777c <main+0x3674>
    775e:	88 ec       	ldi	r24, 0xC8	; 200
    7760:	90 e0       	ldi	r25, 0x00	; 0
    7762:	9a 8b       	std	Y+18, r25	; 0x12
    7764:	89 8b       	std	Y+17, r24	; 0x11
    7766:	89 89       	ldd	r24, Y+17	; 0x11
    7768:	9a 89       	ldd	r25, Y+18	; 0x12
    776a:	01 97       	sbiw	r24, 0x01	; 1
    776c:	f1 f7       	brne	.-4      	; 0x776a <main+0x3662>
    776e:	9a 8b       	std	Y+18, r25	; 0x12
    7770:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7772:	8b 89       	ldd	r24, Y+19	; 0x13
    7774:	9c 89       	ldd	r25, Y+20	; 0x14
    7776:	01 97       	sbiw	r24, 0x01	; 1
    7778:	9c 8b       	std	Y+20, r25	; 0x14
    777a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    777c:	8b 89       	ldd	r24, Y+19	; 0x13
    777e:	9c 89       	ldd	r25, Y+20	; 0x14
    7780:	00 97       	sbiw	r24, 0x00	; 0
    7782:	69 f7       	brne	.-38     	; 0x775e <main+0x3656>
    7784:	14 c0       	rjmp	.+40     	; 0x77ae <main+0x36a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7786:	6d 89       	ldd	r22, Y+21	; 0x15
    7788:	7e 89       	ldd	r23, Y+22	; 0x16
    778a:	8f 89       	ldd	r24, Y+23	; 0x17
    778c:	98 8d       	ldd	r25, Y+24	; 0x18
    778e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    7792:	dc 01       	movw	r26, r24
    7794:	cb 01       	movw	r24, r22
    7796:	9c 8b       	std	Y+20, r25	; 0x14
    7798:	8b 8b       	std	Y+19, r24	; 0x13
    779a:	8b 89       	ldd	r24, Y+19	; 0x13
    779c:	9c 89       	ldd	r25, Y+20	; 0x14
    779e:	98 8b       	std	Y+16, r25	; 0x10
    77a0:	8f 87       	std	Y+15, r24	; 0x0f
    77a2:	8f 85       	ldd	r24, Y+15	; 0x0f
    77a4:	98 89       	ldd	r25, Y+16	; 0x10
    77a6:	01 97       	sbiw	r24, 0x01	; 1
    77a8:	f1 f7       	brne	.-4      	; 0x77a6 <main+0x369e>
    77aa:	98 8b       	std	Y+16, r25	; 0x10
    77ac:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(500);
			LCD_Clear();
    77ae:	0e 94 0e 20 	call	0x401c	; 0x401c <LCD_Clear>
    77b2:	80 e0       	ldi	r24, 0x00	; 0
    77b4:	90 e0       	ldi	r25, 0x00	; 0
    77b6:	aa ef       	ldi	r26, 0xFA	; 250
    77b8:	b3 e4       	ldi	r27, 0x43	; 67
    77ba:	8b 87       	std	Y+11, r24	; 0x0b
    77bc:	9c 87       	std	Y+12, r25	; 0x0c
    77be:	ad 87       	std	Y+13, r26	; 0x0d
    77c0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    77c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    77c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    77c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    77c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    77ca:	20 e0       	ldi	r18, 0x00	; 0
    77cc:	30 e0       	ldi	r19, 0x00	; 0
    77ce:	4a ef       	ldi	r20, 0xFA	; 250
    77d0:	54 e4       	ldi	r21, 0x44	; 68
    77d2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    77d6:	dc 01       	movw	r26, r24
    77d8:	cb 01       	movw	r24, r22
    77da:	8f 83       	std	Y+7, r24	; 0x07
    77dc:	98 87       	std	Y+8, r25	; 0x08
    77de:	a9 87       	std	Y+9, r26	; 0x09
    77e0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    77e2:	6f 81       	ldd	r22, Y+7	; 0x07
    77e4:	78 85       	ldd	r23, Y+8	; 0x08
    77e6:	89 85       	ldd	r24, Y+9	; 0x09
    77e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    77ea:	20 e0       	ldi	r18, 0x00	; 0
    77ec:	30 e0       	ldi	r19, 0x00	; 0
    77ee:	40 e8       	ldi	r20, 0x80	; 128
    77f0:	5f e3       	ldi	r21, 0x3F	; 63
    77f2:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    77f6:	88 23       	and	r24, r24
    77f8:	2c f4       	brge	.+10     	; 0x7804 <main+0x36fc>
		__ticks = 1;
    77fa:	81 e0       	ldi	r24, 0x01	; 1
    77fc:	90 e0       	ldi	r25, 0x00	; 0
    77fe:	9e 83       	std	Y+6, r25	; 0x06
    7800:	8d 83       	std	Y+5, r24	; 0x05
    7802:	40 c0       	rjmp	.+128    	; 0x7884 <main+0x377c>
	else if (__tmp > 65535)
    7804:	6f 81       	ldd	r22, Y+7	; 0x07
    7806:	78 85       	ldd	r23, Y+8	; 0x08
    7808:	89 85       	ldd	r24, Y+9	; 0x09
    780a:	9a 85       	ldd	r25, Y+10	; 0x0a
    780c:	20 e0       	ldi	r18, 0x00	; 0
    780e:	3f ef       	ldi	r19, 0xFF	; 255
    7810:	4f e7       	ldi	r20, 0x7F	; 127
    7812:	57 e4       	ldi	r21, 0x47	; 71
    7814:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    7818:	18 16       	cp	r1, r24
    781a:	54 f5       	brge	.+84     	; 0x7870 <main+0x3768>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    781c:	6b 85       	ldd	r22, Y+11	; 0x0b
    781e:	7c 85       	ldd	r23, Y+12	; 0x0c
    7820:	8d 85       	ldd	r24, Y+13	; 0x0d
    7822:	9e 85       	ldd	r25, Y+14	; 0x0e
    7824:	20 e0       	ldi	r18, 0x00	; 0
    7826:	30 e0       	ldi	r19, 0x00	; 0
    7828:	40 e2       	ldi	r20, 0x20	; 32
    782a:	51 e4       	ldi	r21, 0x41	; 65
    782c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    7830:	dc 01       	movw	r26, r24
    7832:	cb 01       	movw	r24, r22
    7834:	bc 01       	movw	r22, r24
    7836:	cd 01       	movw	r24, r26
    7838:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    783c:	dc 01       	movw	r26, r24
    783e:	cb 01       	movw	r24, r22
    7840:	9e 83       	std	Y+6, r25	; 0x06
    7842:	8d 83       	std	Y+5, r24	; 0x05
    7844:	0f c0       	rjmp	.+30     	; 0x7864 <main+0x375c>
    7846:	88 ec       	ldi	r24, 0xC8	; 200
    7848:	90 e0       	ldi	r25, 0x00	; 0
    784a:	9c 83       	std	Y+4, r25	; 0x04
    784c:	8b 83       	std	Y+3, r24	; 0x03
    784e:	8b 81       	ldd	r24, Y+3	; 0x03
    7850:	9c 81       	ldd	r25, Y+4	; 0x04
    7852:	01 97       	sbiw	r24, 0x01	; 1
    7854:	f1 f7       	brne	.-4      	; 0x7852 <main+0x374a>
    7856:	9c 83       	std	Y+4, r25	; 0x04
    7858:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    785a:	8d 81       	ldd	r24, Y+5	; 0x05
    785c:	9e 81       	ldd	r25, Y+6	; 0x06
    785e:	01 97       	sbiw	r24, 0x01	; 1
    7860:	9e 83       	std	Y+6, r25	; 0x06
    7862:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7864:	8d 81       	ldd	r24, Y+5	; 0x05
    7866:	9e 81       	ldd	r25, Y+6	; 0x06
    7868:	00 97       	sbiw	r24, 0x00	; 0
    786a:	69 f7       	brne	.-38     	; 0x7846 <main+0x373e>
    786c:	0c 94 c8 20 	jmp	0x4190	; 0x4190 <main+0x88>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7870:	6f 81       	ldd	r22, Y+7	; 0x07
    7872:	78 85       	ldd	r23, Y+8	; 0x08
    7874:	89 85       	ldd	r24, Y+9	; 0x09
    7876:	9a 85       	ldd	r25, Y+10	; 0x0a
    7878:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    787c:	dc 01       	movw	r26, r24
    787e:	cb 01       	movw	r24, r22
    7880:	9e 83       	std	Y+6, r25	; 0x06
    7882:	8d 83       	std	Y+5, r24	; 0x05
    7884:	8d 81       	ldd	r24, Y+5	; 0x05
    7886:	9e 81       	ldd	r25, Y+6	; 0x06
    7888:	9a 83       	std	Y+2, r25	; 0x02
    788a:	89 83       	std	Y+1, r24	; 0x01
    788c:	89 81       	ldd	r24, Y+1	; 0x01
    788e:	9a 81       	ldd	r25, Y+2	; 0x02
    7890:	01 97       	sbiw	r24, 0x01	; 1
    7892:	f1 f7       	brne	.-4      	; 0x7890 <main+0x3788>
    7894:	9a 83       	std	Y+2, r25	; 0x02
    7896:	89 83       	std	Y+1, r24	; 0x01
    7898:	0c 94 c8 20 	jmp	0x4190	; 0x4190 <main+0x88>

0000789c <__mulsi3>:
    789c:	62 9f       	mul	r22, r18
    789e:	d0 01       	movw	r26, r0
    78a0:	73 9f       	mul	r23, r19
    78a2:	f0 01       	movw	r30, r0
    78a4:	82 9f       	mul	r24, r18
    78a6:	e0 0d       	add	r30, r0
    78a8:	f1 1d       	adc	r31, r1
    78aa:	64 9f       	mul	r22, r20
    78ac:	e0 0d       	add	r30, r0
    78ae:	f1 1d       	adc	r31, r1
    78b0:	92 9f       	mul	r25, r18
    78b2:	f0 0d       	add	r31, r0
    78b4:	83 9f       	mul	r24, r19
    78b6:	f0 0d       	add	r31, r0
    78b8:	74 9f       	mul	r23, r20
    78ba:	f0 0d       	add	r31, r0
    78bc:	65 9f       	mul	r22, r21
    78be:	f0 0d       	add	r31, r0
    78c0:	99 27       	eor	r25, r25
    78c2:	72 9f       	mul	r23, r18
    78c4:	b0 0d       	add	r27, r0
    78c6:	e1 1d       	adc	r30, r1
    78c8:	f9 1f       	adc	r31, r25
    78ca:	63 9f       	mul	r22, r19
    78cc:	b0 0d       	add	r27, r0
    78ce:	e1 1d       	adc	r30, r1
    78d0:	f9 1f       	adc	r31, r25
    78d2:	bd 01       	movw	r22, r26
    78d4:	cf 01       	movw	r24, r30
    78d6:	11 24       	eor	r1, r1
    78d8:	08 95       	ret

000078da <__divmodsi4>:
    78da:	97 fb       	bst	r25, 7
    78dc:	09 2e       	mov	r0, r25
    78de:	05 26       	eor	r0, r21
    78e0:	0e d0       	rcall	.+28     	; 0x78fe <__divmodsi4_neg1>
    78e2:	57 fd       	sbrc	r21, 7
    78e4:	04 d0       	rcall	.+8      	; 0x78ee <__divmodsi4_neg2>
    78e6:	14 d0       	rcall	.+40     	; 0x7910 <__udivmodsi4>
    78e8:	0a d0       	rcall	.+20     	; 0x78fe <__divmodsi4_neg1>
    78ea:	00 1c       	adc	r0, r0
    78ec:	38 f4       	brcc	.+14     	; 0x78fc <__divmodsi4_exit>

000078ee <__divmodsi4_neg2>:
    78ee:	50 95       	com	r21
    78f0:	40 95       	com	r20
    78f2:	30 95       	com	r19
    78f4:	21 95       	neg	r18
    78f6:	3f 4f       	sbci	r19, 0xFF	; 255
    78f8:	4f 4f       	sbci	r20, 0xFF	; 255
    78fa:	5f 4f       	sbci	r21, 0xFF	; 255

000078fc <__divmodsi4_exit>:
    78fc:	08 95       	ret

000078fe <__divmodsi4_neg1>:
    78fe:	f6 f7       	brtc	.-4      	; 0x78fc <__divmodsi4_exit>
    7900:	90 95       	com	r25
    7902:	80 95       	com	r24
    7904:	70 95       	com	r23
    7906:	61 95       	neg	r22
    7908:	7f 4f       	sbci	r23, 0xFF	; 255
    790a:	8f 4f       	sbci	r24, 0xFF	; 255
    790c:	9f 4f       	sbci	r25, 0xFF	; 255
    790e:	08 95       	ret

00007910 <__udivmodsi4>:
    7910:	a1 e2       	ldi	r26, 0x21	; 33
    7912:	1a 2e       	mov	r1, r26
    7914:	aa 1b       	sub	r26, r26
    7916:	bb 1b       	sub	r27, r27
    7918:	fd 01       	movw	r30, r26
    791a:	0d c0       	rjmp	.+26     	; 0x7936 <__udivmodsi4_ep>

0000791c <__udivmodsi4_loop>:
    791c:	aa 1f       	adc	r26, r26
    791e:	bb 1f       	adc	r27, r27
    7920:	ee 1f       	adc	r30, r30
    7922:	ff 1f       	adc	r31, r31
    7924:	a2 17       	cp	r26, r18
    7926:	b3 07       	cpc	r27, r19
    7928:	e4 07       	cpc	r30, r20
    792a:	f5 07       	cpc	r31, r21
    792c:	20 f0       	brcs	.+8      	; 0x7936 <__udivmodsi4_ep>
    792e:	a2 1b       	sub	r26, r18
    7930:	b3 0b       	sbc	r27, r19
    7932:	e4 0b       	sbc	r30, r20
    7934:	f5 0b       	sbc	r31, r21

00007936 <__udivmodsi4_ep>:
    7936:	66 1f       	adc	r22, r22
    7938:	77 1f       	adc	r23, r23
    793a:	88 1f       	adc	r24, r24
    793c:	99 1f       	adc	r25, r25
    793e:	1a 94       	dec	r1
    7940:	69 f7       	brne	.-38     	; 0x791c <__udivmodsi4_loop>
    7942:	60 95       	com	r22
    7944:	70 95       	com	r23
    7946:	80 95       	com	r24
    7948:	90 95       	com	r25
    794a:	9b 01       	movw	r18, r22
    794c:	ac 01       	movw	r20, r24
    794e:	bd 01       	movw	r22, r26
    7950:	cf 01       	movw	r24, r30
    7952:	08 95       	ret

00007954 <__prologue_saves__>:
    7954:	2f 92       	push	r2
    7956:	3f 92       	push	r3
    7958:	4f 92       	push	r4
    795a:	5f 92       	push	r5
    795c:	6f 92       	push	r6
    795e:	7f 92       	push	r7
    7960:	8f 92       	push	r8
    7962:	9f 92       	push	r9
    7964:	af 92       	push	r10
    7966:	bf 92       	push	r11
    7968:	cf 92       	push	r12
    796a:	df 92       	push	r13
    796c:	ef 92       	push	r14
    796e:	ff 92       	push	r15
    7970:	0f 93       	push	r16
    7972:	1f 93       	push	r17
    7974:	cf 93       	push	r28
    7976:	df 93       	push	r29
    7978:	cd b7       	in	r28, 0x3d	; 61
    797a:	de b7       	in	r29, 0x3e	; 62
    797c:	ca 1b       	sub	r28, r26
    797e:	db 0b       	sbc	r29, r27
    7980:	0f b6       	in	r0, 0x3f	; 63
    7982:	f8 94       	cli
    7984:	de bf       	out	0x3e, r29	; 62
    7986:	0f be       	out	0x3f, r0	; 63
    7988:	cd bf       	out	0x3d, r28	; 61
    798a:	09 94       	ijmp

0000798c <__epilogue_restores__>:
    798c:	2a 88       	ldd	r2, Y+18	; 0x12
    798e:	39 88       	ldd	r3, Y+17	; 0x11
    7990:	48 88       	ldd	r4, Y+16	; 0x10
    7992:	5f 84       	ldd	r5, Y+15	; 0x0f
    7994:	6e 84       	ldd	r6, Y+14	; 0x0e
    7996:	7d 84       	ldd	r7, Y+13	; 0x0d
    7998:	8c 84       	ldd	r8, Y+12	; 0x0c
    799a:	9b 84       	ldd	r9, Y+11	; 0x0b
    799c:	aa 84       	ldd	r10, Y+10	; 0x0a
    799e:	b9 84       	ldd	r11, Y+9	; 0x09
    79a0:	c8 84       	ldd	r12, Y+8	; 0x08
    79a2:	df 80       	ldd	r13, Y+7	; 0x07
    79a4:	ee 80       	ldd	r14, Y+6	; 0x06
    79a6:	fd 80       	ldd	r15, Y+5	; 0x05
    79a8:	0c 81       	ldd	r16, Y+4	; 0x04
    79aa:	1b 81       	ldd	r17, Y+3	; 0x03
    79ac:	aa 81       	ldd	r26, Y+2	; 0x02
    79ae:	b9 81       	ldd	r27, Y+1	; 0x01
    79b0:	ce 0f       	add	r28, r30
    79b2:	d1 1d       	adc	r29, r1
    79b4:	0f b6       	in	r0, 0x3f	; 63
    79b6:	f8 94       	cli
    79b8:	de bf       	out	0x3e, r29	; 62
    79ba:	0f be       	out	0x3f, r0	; 63
    79bc:	cd bf       	out	0x3d, r28	; 61
    79be:	ed 01       	movw	r28, r26
    79c0:	08 95       	ret

000079c2 <strlen>:
    79c2:	fc 01       	movw	r30, r24
    79c4:	01 90       	ld	r0, Z+
    79c6:	00 20       	and	r0, r0
    79c8:	e9 f7       	brne	.-6      	; 0x79c4 <strlen+0x2>
    79ca:	80 95       	com	r24
    79cc:	90 95       	com	r25
    79ce:	8e 0f       	add	r24, r30
    79d0:	9f 1f       	adc	r25, r31
    79d2:	08 95       	ret

000079d4 <_exit>:
    79d4:	f8 94       	cli

000079d6 <__stop_program>:
    79d6:	ff cf       	rjmp	.-2      	; 0x79d6 <__stop_program>
