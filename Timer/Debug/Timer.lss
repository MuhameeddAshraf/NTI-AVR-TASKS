
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005d52  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000154  00800060  00005d52  00005de6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  008001b4  008001b4  00005f3a  2**0
                  ALLOC
  3 .stab         00003ee8  00000000  00000000  00005f3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001fa2  00000000  00000000  00009e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000240  00000000  00000000  0000bdc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000299  00000000  00000000  0000c006  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000034eb  00000000  00000000  0000c29f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001878  00000000  00000000  0000f78a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000017e9  00000000  00000000  00011002  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000260  00000000  00000000  000127ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000393  00000000  00000000  00012a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000265a  00000000  00000000  00012ddf  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00015439  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3e 29 	jmp	0x527c	; 0x527c <__vector_1>
       8:	0c 94 6b 29 	jmp	0x52d6	; 0x52d6 <__vector_2>
       c:	0c 94 98 29 	jmp	0x5330	; 0x5330 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 52 27 	jmp	0x4ea4	; 0x4ea4 <__vector_10>
      2c:	0c 94 bd 26 	jmp	0x4d7a	; 0x4d7a <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e5       	ldi	r30, 0x52	; 82
      68:	fd e5       	ldi	r31, 0x5D	; 93
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3b       	cpi	r26, 0xB4	; 180
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a4 eb       	ldi	r26, 0xB4	; 180
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 3b       	cpi	r26, 0xBF	; 191
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <main>
      8a:	0c 94 a7 2e 	jmp	0x5d4e	; 0x5d4e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 89 11 	call	0x2312	; 0x2312 <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 01 10 	call	0x2002	; 0x2002 <__subsf3>
     1bc:	0e 94 47 12 	call	0x248e	; 0x248e <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 47 12 	call	0x248e	; 0x248e <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__floatundisf>:
     1e8:	a2 e0       	ldi	r26, 0x02	; 2
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 67 2e 	jmp	0x5cce	; 0x5cce <__prologue_saves__>
     1f4:	12 2f       	mov	r17, r18
     1f6:	b3 2e       	mov	r11, r19
     1f8:	a4 2e       	mov	r10, r20
     1fa:	95 2e       	mov	r9, r21
     1fc:	86 2e       	mov	r8, r22
     1fe:	37 2e       	mov	r3, r23
     200:	28 2e       	mov	r2, r24
     202:	9a 83       	std	Y+2, r25	; 0x02
     204:	c2 2e       	mov	r12, r18
     206:	d3 2e       	mov	r13, r19
     208:	e4 2e       	mov	r14, r20
     20a:	f5 2e       	mov	r15, r21
     20c:	a7 01       	movw	r20, r14
     20e:	96 01       	movw	r18, r12
     210:	60 e0       	ldi	r22, 0x00	; 0
     212:	70 e0       	ldi	r23, 0x00	; 0
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	21 17       	cp	r18, r17
     21a:	a1 f4       	brne	.+40     	; 0x244 <__floatundisf+0x5c>
     21c:	3b 15       	cp	r19, r11
     21e:	91 f4       	brne	.+36     	; 0x244 <__floatundisf+0x5c>
     220:	4a 15       	cp	r20, r10
     222:	81 f4       	brne	.+32     	; 0x244 <__floatundisf+0x5c>
     224:	59 15       	cp	r21, r9
     226:	71 f4       	brne	.+28     	; 0x244 <__floatundisf+0x5c>
     228:	68 15       	cp	r22, r8
     22a:	61 f4       	brne	.+24     	; 0x244 <__floatundisf+0x5c>
     22c:	73 15       	cp	r23, r3
     22e:	51 f4       	brne	.+20     	; 0x244 <__floatundisf+0x5c>
     230:	82 15       	cp	r24, r2
     232:	41 f4       	brne	.+16     	; 0x244 <__floatundisf+0x5c>
     234:	aa 81       	ldd	r26, Y+2	; 0x02
     236:	9a 17       	cp	r25, r26
     238:	29 f4       	brne	.+10     	; 0x244 <__floatundisf+0x5c>
     23a:	c7 01       	movw	r24, r14
     23c:	b6 01       	movw	r22, r12
     23e:	0e 94 9b 12 	call	0x2536	; 0x2536 <__floatunsisf>
     242:	aa c0       	rjmp	.+340    	; 0x398 <__floatundisf+0x1b0>
     244:	21 2f       	mov	r18, r17
     246:	3b 2d       	mov	r19, r11
     248:	4a 2d       	mov	r20, r10
     24a:	59 2d       	mov	r21, r9
     24c:	68 2d       	mov	r22, r8
     24e:	73 2d       	mov	r23, r3
     250:	82 2d       	mov	r24, r2
     252:	9a 81       	ldd	r25, Y+2	; 0x02
     254:	00 e2       	ldi	r16, 0x20	; 32
     256:	0e 94 14 13 	call	0x2628	; 0x2628 <__lshrdi3>
     25a:	c9 01       	movw	r24, r18
     25c:	da 01       	movw	r26, r20
     25e:	80 30       	cpi	r24, 0x00	; 0
     260:	e0 e0       	ldi	r30, 0x00	; 0
     262:	9e 07       	cpc	r25, r30
     264:	e1 e0       	ldi	r30, 0x01	; 1
     266:	ae 07       	cpc	r26, r30
     268:	e0 e0       	ldi	r30, 0x00	; 0
     26a:	be 07       	cpc	r27, r30
     26c:	80 f4       	brcc	.+32     	; 0x28e <__floatundisf+0xa6>
     26e:	8f 3f       	cpi	r24, 0xFF	; 255
     270:	91 05       	cpc	r25, r1
     272:	a1 05       	cpc	r26, r1
     274:	b1 05       	cpc	r27, r1
     276:	31 f0       	breq	.+12     	; 0x284 <__floatundisf+0x9c>
     278:	28 f0       	brcs	.+10     	; 0x284 <__floatundisf+0x9c>
     27a:	28 e0       	ldi	r18, 0x08	; 8
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	40 e0       	ldi	r20, 0x00	; 0
     280:	50 e0       	ldi	r21, 0x00	; 0
     282:	16 c0       	rjmp	.+44     	; 0x2b0 <__floatundisf+0xc8>
     284:	20 e0       	ldi	r18, 0x00	; 0
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	40 e0       	ldi	r20, 0x00	; 0
     28a:	50 e0       	ldi	r21, 0x00	; 0
     28c:	11 c0       	rjmp	.+34     	; 0x2b0 <__floatundisf+0xc8>
     28e:	80 30       	cpi	r24, 0x00	; 0
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	9f 07       	cpc	r25, r31
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	af 07       	cpc	r26, r31
     298:	f1 e0       	ldi	r31, 0x01	; 1
     29a:	bf 07       	cpc	r27, r31
     29c:	28 f0       	brcs	.+10     	; 0x2a8 <__floatundisf+0xc0>
     29e:	28 e1       	ldi	r18, 0x18	; 24
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	40 e0       	ldi	r20, 0x00	; 0
     2a4:	50 e0       	ldi	r21, 0x00	; 0
     2a6:	04 c0       	rjmp	.+8      	; 0x2b0 <__floatundisf+0xc8>
     2a8:	20 e1       	ldi	r18, 0x10	; 16
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	02 2e       	mov	r0, r18
     2b2:	04 c0       	rjmp	.+8      	; 0x2bc <__floatundisf+0xd4>
     2b4:	b6 95       	lsr	r27
     2b6:	a7 95       	ror	r26
     2b8:	97 95       	ror	r25
     2ba:	87 95       	ror	r24
     2bc:	0a 94       	dec	r0
     2be:	d2 f7       	brpl	.-12     	; 0x2b4 <__floatundisf+0xcc>
     2c0:	fc 01       	movw	r30, r24
     2c2:	e5 59       	subi	r30, 0x95	; 149
     2c4:	ff 4f       	sbci	r31, 0xFF	; 255
     2c6:	80 81       	ld	r24, Z
     2c8:	29 01       	movw	r4, r18
     2ca:	3a 01       	movw	r6, r20
     2cc:	48 0e       	add	r4, r24
     2ce:	51 1c       	adc	r5, r1
     2d0:	61 1c       	adc	r6, r1
     2d2:	71 1c       	adc	r7, r1
     2d4:	49 82       	std	Y+1, r4	; 0x01
     2d6:	21 2f       	mov	r18, r17
     2d8:	3b 2d       	mov	r19, r11
     2da:	4a 2d       	mov	r20, r10
     2dc:	59 2d       	mov	r21, r9
     2de:	68 2d       	mov	r22, r8
     2e0:	73 2d       	mov	r23, r3
     2e2:	82 2d       	mov	r24, r2
     2e4:	9a 81       	ldd	r25, Y+2	; 0x02
     2e6:	04 2d       	mov	r16, r4
     2e8:	0e 94 14 13 	call	0x2628	; 0x2628 <__lshrdi3>
     2ec:	c9 01       	movw	r24, r18
     2ee:	da 01       	movw	r26, r20
     2f0:	4c 01       	movw	r8, r24
     2f2:	5d 01       	movw	r10, r26
     2f4:	80 e2       	ldi	r24, 0x20	; 32
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	84 19       	sub	r24, r4
     2fa:	95 09       	sbc	r25, r5
     2fc:	04 c0       	rjmp	.+8      	; 0x306 <__floatundisf+0x11e>
     2fe:	cc 0c       	add	r12, r12
     300:	dd 1c       	adc	r13, r13
     302:	ee 1c       	adc	r14, r14
     304:	ff 1c       	adc	r15, r15
     306:	8a 95       	dec	r24
     308:	d2 f7       	brpl	.-12     	; 0x2fe <__floatundisf+0x116>
     30a:	c1 14       	cp	r12, r1
     30c:	d1 04       	cpc	r13, r1
     30e:	e1 04       	cpc	r14, r1
     310:	f1 04       	cpc	r15, r1
     312:	41 f0       	breq	.+16     	; 0x324 <__floatundisf+0x13c>
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	a0 e0       	ldi	r26, 0x00	; 0
     31a:	b0 e0       	ldi	r27, 0x00	; 0
     31c:	88 2a       	or	r8, r24
     31e:	99 2a       	or	r9, r25
     320:	aa 2a       	or	r10, r26
     322:	bb 2a       	or	r11, r27
     324:	90 e2       	ldi	r25, 0x20	; 32
     326:	49 16       	cp	r4, r25
     328:	51 04       	cpc	r5, r1
     32a:	61 04       	cpc	r6, r1
     32c:	71 04       	cpc	r7, r1
     32e:	59 f4       	brne	.+22     	; 0x346 <__floatundisf+0x15e>
     330:	0f 2e       	mov	r0, r31
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	ef 2e       	mov	r14, r31
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	ff 2e       	mov	r15, r31
     33a:	f0 e8       	ldi	r31, 0x80	; 128
     33c:	0f 2f       	mov	r16, r31
     33e:	ff e4       	ldi	r31, 0x4F	; 79
     340:	1f 2f       	mov	r17, r31
     342:	f0 2d       	mov	r31, r0
     344:	21 c0       	rjmp	.+66     	; 0x388 <__floatundisf+0x1a0>
     346:	af e1       	ldi	r26, 0x1F	; 31
     348:	4a 16       	cp	r4, r26
     34a:	51 04       	cpc	r5, r1
     34c:	61 04       	cpc	r6, r1
     34e:	71 04       	cpc	r7, r1
     350:	59 f4       	brne	.+22     	; 0x368 <__floatundisf+0x180>
     352:	0f 2e       	mov	r0, r31
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	ef 2e       	mov	r14, r31
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	ff 2e       	mov	r15, r31
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	0f 2f       	mov	r16, r31
     360:	ff e4       	ldi	r31, 0x4F	; 79
     362:	1f 2f       	mov	r17, r31
     364:	f0 2d       	mov	r31, r0
     366:	10 c0       	rjmp	.+32     	; 0x388 <__floatundisf+0x1a0>
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	09 80       	ldd	r0, Y+1	; 0x01
     372:	04 c0       	rjmp	.+8      	; 0x37c <__floatundisf+0x194>
     374:	66 0f       	add	r22, r22
     376:	77 1f       	adc	r23, r23
     378:	88 1f       	adc	r24, r24
     37a:	99 1f       	adc	r25, r25
     37c:	0a 94       	dec	r0
     37e:	d2 f7       	brpl	.-12     	; 0x374 <__floatundisf+0x18c>
     380:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__floatsisf>
     384:	7b 01       	movw	r14, r22
     386:	8c 01       	movw	r16, r24
     388:	c5 01       	movw	r24, r10
     38a:	b4 01       	movw	r22, r8
     38c:	0e 94 9b 12 	call	0x2536	; 0x2536 <__floatunsisf>
     390:	a8 01       	movw	r20, r16
     392:	97 01       	movw	r18, r14
     394:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
     398:	22 96       	adiw	r28, 0x02	; 2
     39a:	e2 e1       	ldi	r30, 0x12	; 18
     39c:	0c 94 83 2e 	jmp	0x5d06	; 0x5d06 <__epilogue_restores__>

000003a0 <__udivdi3>:
     3a0:	ae e5       	ldi	r26, 0x5E	; 94
     3a2:	b0 e0       	ldi	r27, 0x00	; 0
     3a4:	e6 ed       	ldi	r30, 0xD6	; 214
     3a6:	f1 e0       	ldi	r31, 0x01	; 1
     3a8:	0c 94 67 2e 	jmp	0x5cce	; 0x5cce <__prologue_saves__>
     3ac:	a8 e0       	ldi	r26, 0x08	; 8
     3ae:	4e 01       	movw	r8, r28
     3b0:	08 94       	sec
     3b2:	81 1c       	adc	r8, r1
     3b4:	91 1c       	adc	r9, r1
     3b6:	f4 01       	movw	r30, r8
     3b8:	6a 2e       	mov	r6, r26
     3ba:	11 92       	st	Z+, r1
     3bc:	6a 94       	dec	r6
     3be:	e9 f7       	brne	.-6      	; 0x3ba <__udivdi3+0x1a>
     3c0:	29 83       	std	Y+1, r18	; 0x01
     3c2:	3a 83       	std	Y+2, r19	; 0x02
     3c4:	4b 83       	std	Y+3, r20	; 0x03
     3c6:	5c 83       	std	Y+4, r21	; 0x04
     3c8:	6d 83       	std	Y+5, r22	; 0x05
     3ca:	7e 83       	std	Y+6, r23	; 0x06
     3cc:	8f 83       	std	Y+7, r24	; 0x07
     3ce:	98 87       	std	Y+8, r25	; 0x08
     3d0:	ce 01       	movw	r24, r28
     3d2:	09 96       	adiw	r24, 0x09	; 9
     3d4:	fc 01       	movw	r30, r24
     3d6:	11 92       	st	Z+, r1
     3d8:	aa 95       	dec	r26
     3da:	e9 f7       	brne	.-6      	; 0x3d6 <__udivdi3+0x36>
     3dc:	a9 86       	std	Y+9, r10	; 0x09
     3de:	ba 86       	std	Y+10, r11	; 0x0a
     3e0:	cb 86       	std	Y+11, r12	; 0x0b
     3e2:	dc 86       	std	Y+12, r13	; 0x0c
     3e4:	ed 86       	std	Y+13, r14	; 0x0d
     3e6:	fe 86       	std	Y+14, r15	; 0x0e
     3e8:	0f 87       	std	Y+15, r16	; 0x0f
     3ea:	18 8b       	std	Y+16, r17	; 0x10
     3ec:	29 84       	ldd	r2, Y+9	; 0x09
     3ee:	3a 84       	ldd	r3, Y+10	; 0x0a
     3f0:	4b 84       	ldd	r4, Y+11	; 0x0b
     3f2:	5c 84       	ldd	r5, Y+12	; 0x0c
     3f4:	ed 84       	ldd	r14, Y+13	; 0x0d
     3f6:	fe 84       	ldd	r15, Y+14	; 0x0e
     3f8:	0f 85       	ldd	r16, Y+15	; 0x0f
     3fa:	18 89       	ldd	r17, Y+16	; 0x10
     3fc:	69 80       	ldd	r6, Y+1	; 0x01
     3fe:	7a 80       	ldd	r7, Y+2	; 0x02
     400:	8b 80       	ldd	r8, Y+3	; 0x03
     402:	9c 80       	ldd	r9, Y+4	; 0x04
     404:	6d a6       	std	Y+45, r6	; 0x2d
     406:	7e a6       	std	Y+46, r7	; 0x2e
     408:	8f a6       	std	Y+47, r8	; 0x2f
     40a:	98 aa       	std	Y+48, r9	; 0x30
     40c:	6d 80       	ldd	r6, Y+5	; 0x05
     40e:	7e 80       	ldd	r7, Y+6	; 0x06
     410:	8f 80       	ldd	r8, Y+7	; 0x07
     412:	98 84       	ldd	r9, Y+8	; 0x08
     414:	e1 14       	cp	r14, r1
     416:	f1 04       	cpc	r15, r1
     418:	01 05       	cpc	r16, r1
     41a:	11 05       	cpc	r17, r1
     41c:	09 f0       	breq	.+2      	; 0x420 <__udivdi3+0x80>
     41e:	b3 c3       	rjmp	.+1894   	; 0xb86 <__stack+0x327>
     420:	62 14       	cp	r6, r2
     422:	73 04       	cpc	r7, r3
     424:	84 04       	cpc	r8, r4
     426:	95 04       	cpc	r9, r5
     428:	08 f0       	brcs	.+2      	; 0x42c <__udivdi3+0x8c>
     42a:	3d c1       	rjmp	.+634    	; 0x6a6 <__udivdi3+0x306>
     42c:	00 e0       	ldi	r16, 0x00	; 0
     42e:	20 16       	cp	r2, r16
     430:	00 e0       	ldi	r16, 0x00	; 0
     432:	30 06       	cpc	r3, r16
     434:	01 e0       	ldi	r16, 0x01	; 1
     436:	40 06       	cpc	r4, r16
     438:	00 e0       	ldi	r16, 0x00	; 0
     43a:	50 06       	cpc	r5, r16
     43c:	88 f4       	brcc	.+34     	; 0x460 <__udivdi3+0xc0>
     43e:	1f ef       	ldi	r17, 0xFF	; 255
     440:	21 16       	cp	r2, r17
     442:	31 04       	cpc	r3, r1
     444:	41 04       	cpc	r4, r1
     446:	51 04       	cpc	r5, r1
     448:	39 f0       	breq	.+14     	; 0x458 <__udivdi3+0xb8>
     44a:	30 f0       	brcs	.+12     	; 0x458 <__udivdi3+0xb8>
     44c:	48 e0       	ldi	r20, 0x08	; 8
     44e:	e4 2e       	mov	r14, r20
     450:	f1 2c       	mov	r15, r1
     452:	01 2d       	mov	r16, r1
     454:	11 2d       	mov	r17, r1
     456:	18 c0       	rjmp	.+48     	; 0x488 <__udivdi3+0xe8>
     458:	ee 24       	eor	r14, r14
     45a:	ff 24       	eor	r15, r15
     45c:	87 01       	movw	r16, r14
     45e:	14 c0       	rjmp	.+40     	; 0x488 <__udivdi3+0xe8>
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	22 16       	cp	r2, r18
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	32 06       	cpc	r3, r18
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	42 06       	cpc	r4, r18
     46c:	21 e0       	ldi	r18, 0x01	; 1
     46e:	52 06       	cpc	r5, r18
     470:	30 f0       	brcs	.+12     	; 0x47e <__udivdi3+0xde>
     472:	38 e1       	ldi	r19, 0x18	; 24
     474:	e3 2e       	mov	r14, r19
     476:	f1 2c       	mov	r15, r1
     478:	01 2d       	mov	r16, r1
     47a:	11 2d       	mov	r17, r1
     47c:	05 c0       	rjmp	.+10     	; 0x488 <__udivdi3+0xe8>
     47e:	20 e1       	ldi	r18, 0x10	; 16
     480:	e2 2e       	mov	r14, r18
     482:	f1 2c       	mov	r15, r1
     484:	01 2d       	mov	r16, r1
     486:	11 2d       	mov	r17, r1
     488:	d2 01       	movw	r26, r4
     48a:	c1 01       	movw	r24, r2
     48c:	0e 2c       	mov	r0, r14
     48e:	04 c0       	rjmp	.+8      	; 0x498 <__udivdi3+0xf8>
     490:	b6 95       	lsr	r27
     492:	a7 95       	ror	r26
     494:	97 95       	ror	r25
     496:	87 95       	ror	r24
     498:	0a 94       	dec	r0
     49a:	d2 f7       	brpl	.-12     	; 0x490 <__udivdi3+0xf0>
     49c:	85 59       	subi	r24, 0x95	; 149
     49e:	9f 4f       	sbci	r25, 0xFF	; 255
     4a0:	dc 01       	movw	r26, r24
     4a2:	2c 91       	ld	r18, X
     4a4:	80 e2       	ldi	r24, 0x20	; 32
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	a0 e0       	ldi	r26, 0x00	; 0
     4aa:	b0 e0       	ldi	r27, 0x00	; 0
     4ac:	8e 19       	sub	r24, r14
     4ae:	9f 09       	sbc	r25, r15
     4b0:	a0 0b       	sbc	r26, r16
     4b2:	b1 0b       	sbc	r27, r17
     4b4:	7c 01       	movw	r14, r24
     4b6:	8d 01       	movw	r16, r26
     4b8:	e2 1a       	sub	r14, r18
     4ba:	f1 08       	sbc	r15, r1
     4bc:	01 09       	sbc	r16, r1
     4be:	11 09       	sbc	r17, r1
     4c0:	e1 14       	cp	r14, r1
     4c2:	f1 04       	cpc	r15, r1
     4c4:	01 05       	cpc	r16, r1
     4c6:	11 05       	cpc	r17, r1
     4c8:	a1 f1       	breq	.+104    	; 0x532 <__udivdi3+0x192>
     4ca:	0e 2c       	mov	r0, r14
     4cc:	04 c0       	rjmp	.+8      	; 0x4d6 <__udivdi3+0x136>
     4ce:	22 0c       	add	r2, r2
     4d0:	33 1c       	adc	r3, r3
     4d2:	44 1c       	adc	r4, r4
     4d4:	55 1c       	adc	r5, r5
     4d6:	0a 94       	dec	r0
     4d8:	d2 f7       	brpl	.-12     	; 0x4ce <__udivdi3+0x12e>
     4da:	a4 01       	movw	r20, r8
     4dc:	93 01       	movw	r18, r6
     4de:	0e 2c       	mov	r0, r14
     4e0:	04 c0       	rjmp	.+8      	; 0x4ea <__udivdi3+0x14a>
     4e2:	22 0f       	add	r18, r18
     4e4:	33 1f       	adc	r19, r19
     4e6:	44 1f       	adc	r20, r20
     4e8:	55 1f       	adc	r21, r21
     4ea:	0a 94       	dec	r0
     4ec:	d2 f7       	brpl	.-12     	; 0x4e2 <__udivdi3+0x142>
     4ee:	80 e2       	ldi	r24, 0x20	; 32
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	8e 19       	sub	r24, r14
     4f4:	9f 09       	sbc	r25, r15
     4f6:	6d a4       	ldd	r6, Y+45	; 0x2d
     4f8:	7e a4       	ldd	r7, Y+46	; 0x2e
     4fa:	8f a4       	ldd	r8, Y+47	; 0x2f
     4fc:	98 a8       	ldd	r9, Y+48	; 0x30
     4fe:	04 c0       	rjmp	.+8      	; 0x508 <__udivdi3+0x168>
     500:	96 94       	lsr	r9
     502:	87 94       	ror	r8
     504:	77 94       	ror	r7
     506:	67 94       	ror	r6
     508:	8a 95       	dec	r24
     50a:	d2 f7       	brpl	.-12     	; 0x500 <__udivdi3+0x160>
     50c:	62 2a       	or	r6, r18
     50e:	73 2a       	or	r7, r19
     510:	84 2a       	or	r8, r20
     512:	95 2a       	or	r9, r21
     514:	ad a4       	ldd	r10, Y+45	; 0x2d
     516:	be a4       	ldd	r11, Y+46	; 0x2e
     518:	cf a4       	ldd	r12, Y+47	; 0x2f
     51a:	d8 a8       	ldd	r13, Y+48	; 0x30
     51c:	04 c0       	rjmp	.+8      	; 0x526 <__udivdi3+0x186>
     51e:	aa 0c       	add	r10, r10
     520:	bb 1c       	adc	r11, r11
     522:	cc 1c       	adc	r12, r12
     524:	dd 1c       	adc	r13, r13
     526:	ea 94       	dec	r14
     528:	d2 f7       	brpl	.-12     	; 0x51e <__udivdi3+0x17e>
     52a:	ad a6       	std	Y+45, r10	; 0x2d
     52c:	be a6       	std	Y+46, r11	; 0x2e
     52e:	cf a6       	std	Y+47, r12	; 0x2f
     530:	d8 aa       	std	Y+48, r13	; 0x30
     532:	62 01       	movw	r12, r4
     534:	ee 24       	eor	r14, r14
     536:	ff 24       	eor	r15, r15
     538:	cd aa       	std	Y+53, r12	; 0x35
     53a:	de aa       	std	Y+54, r13	; 0x36
     53c:	ef aa       	std	Y+55, r14	; 0x37
     53e:	f8 ae       	std	Y+56, r15	; 0x38
     540:	92 01       	movw	r18, r4
     542:	81 01       	movw	r16, r2
     544:	20 70       	andi	r18, 0x00	; 0
     546:	30 70       	andi	r19, 0x00	; 0
     548:	09 af       	std	Y+57, r16	; 0x39
     54a:	1a af       	std	Y+58, r17	; 0x3a
     54c:	2b af       	std	Y+59, r18	; 0x3b
     54e:	3c af       	std	Y+60, r19	; 0x3c
     550:	c4 01       	movw	r24, r8
     552:	b3 01       	movw	r22, r6
     554:	a7 01       	movw	r20, r14
     556:	96 01       	movw	r18, r12
     558:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     55c:	7b 01       	movw	r14, r22
     55e:	8c 01       	movw	r16, r24
     560:	c4 01       	movw	r24, r8
     562:	b3 01       	movw	r22, r6
     564:	2d a9       	ldd	r18, Y+53	; 0x35
     566:	3e a9       	ldd	r19, Y+54	; 0x36
     568:	4f a9       	ldd	r20, Y+55	; 0x37
     56a:	58 ad       	ldd	r21, Y+56	; 0x38
     56c:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     570:	c9 01       	movw	r24, r18
     572:	da 01       	movw	r26, r20
     574:	3c 01       	movw	r6, r24
     576:	4d 01       	movw	r8, r26
     578:	c4 01       	movw	r24, r8
     57a:	b3 01       	movw	r22, r6
     57c:	29 ad       	ldd	r18, Y+57	; 0x39
     57e:	3a ad       	ldd	r19, Y+58	; 0x3a
     580:	4b ad       	ldd	r20, Y+59	; 0x3b
     582:	5c ad       	ldd	r21, Y+60	; 0x3c
     584:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     588:	9b 01       	movw	r18, r22
     58a:	ac 01       	movw	r20, r24
     58c:	87 01       	movw	r16, r14
     58e:	ff 24       	eor	r15, r15
     590:	ee 24       	eor	r14, r14
     592:	ad a4       	ldd	r10, Y+45	; 0x2d
     594:	be a4       	ldd	r11, Y+46	; 0x2e
     596:	cf a4       	ldd	r12, Y+47	; 0x2f
     598:	d8 a8       	ldd	r13, Y+48	; 0x30
     59a:	c6 01       	movw	r24, r12
     59c:	aa 27       	eor	r26, r26
     59e:	bb 27       	eor	r27, r27
     5a0:	57 01       	movw	r10, r14
     5a2:	68 01       	movw	r12, r16
     5a4:	a8 2a       	or	r10, r24
     5a6:	b9 2a       	or	r11, r25
     5a8:	ca 2a       	or	r12, r26
     5aa:	db 2a       	or	r13, r27
     5ac:	a2 16       	cp	r10, r18
     5ae:	b3 06       	cpc	r11, r19
     5b0:	c4 06       	cpc	r12, r20
     5b2:	d5 06       	cpc	r13, r21
     5b4:	e0 f4       	brcc	.+56     	; 0x5ee <__udivdi3+0x24e>
     5b6:	08 94       	sec
     5b8:	61 08       	sbc	r6, r1
     5ba:	71 08       	sbc	r7, r1
     5bc:	81 08       	sbc	r8, r1
     5be:	91 08       	sbc	r9, r1
     5c0:	a2 0c       	add	r10, r2
     5c2:	b3 1c       	adc	r11, r3
     5c4:	c4 1c       	adc	r12, r4
     5c6:	d5 1c       	adc	r13, r5
     5c8:	a2 14       	cp	r10, r2
     5ca:	b3 04       	cpc	r11, r3
     5cc:	c4 04       	cpc	r12, r4
     5ce:	d5 04       	cpc	r13, r5
     5d0:	70 f0       	brcs	.+28     	; 0x5ee <__udivdi3+0x24e>
     5d2:	a2 16       	cp	r10, r18
     5d4:	b3 06       	cpc	r11, r19
     5d6:	c4 06       	cpc	r12, r20
     5d8:	d5 06       	cpc	r13, r21
     5da:	48 f4       	brcc	.+18     	; 0x5ee <__udivdi3+0x24e>
     5dc:	08 94       	sec
     5de:	61 08       	sbc	r6, r1
     5e0:	71 08       	sbc	r7, r1
     5e2:	81 08       	sbc	r8, r1
     5e4:	91 08       	sbc	r9, r1
     5e6:	a2 0c       	add	r10, r2
     5e8:	b3 1c       	adc	r11, r3
     5ea:	c4 1c       	adc	r12, r4
     5ec:	d5 1c       	adc	r13, r5
     5ee:	a2 1a       	sub	r10, r18
     5f0:	b3 0a       	sbc	r11, r19
     5f2:	c4 0a       	sbc	r12, r20
     5f4:	d5 0a       	sbc	r13, r21
     5f6:	c6 01       	movw	r24, r12
     5f8:	b5 01       	movw	r22, r10
     5fa:	2d a9       	ldd	r18, Y+53	; 0x35
     5fc:	3e a9       	ldd	r19, Y+54	; 0x36
     5fe:	4f a9       	ldd	r20, Y+55	; 0x37
     600:	58 ad       	ldd	r21, Y+56	; 0x38
     602:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     606:	7b 01       	movw	r14, r22
     608:	8c 01       	movw	r16, r24
     60a:	c6 01       	movw	r24, r12
     60c:	b5 01       	movw	r22, r10
     60e:	2d a9       	ldd	r18, Y+53	; 0x35
     610:	3e a9       	ldd	r19, Y+54	; 0x36
     612:	4f a9       	ldd	r20, Y+55	; 0x37
     614:	58 ad       	ldd	r21, Y+56	; 0x38
     616:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     61a:	c9 01       	movw	r24, r18
     61c:	da 01       	movw	r26, r20
     61e:	5c 01       	movw	r10, r24
     620:	6d 01       	movw	r12, r26
     622:	c6 01       	movw	r24, r12
     624:	b5 01       	movw	r22, r10
     626:	29 ad       	ldd	r18, Y+57	; 0x39
     628:	3a ad       	ldd	r19, Y+58	; 0x3a
     62a:	4b ad       	ldd	r20, Y+59	; 0x3b
     62c:	5c ad       	ldd	r21, Y+60	; 0x3c
     62e:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     632:	9b 01       	movw	r18, r22
     634:	ac 01       	movw	r20, r24
     636:	87 01       	movw	r16, r14
     638:	ff 24       	eor	r15, r15
     63a:	ee 24       	eor	r14, r14
     63c:	8d a5       	ldd	r24, Y+45	; 0x2d
     63e:	9e a5       	ldd	r25, Y+46	; 0x2e
     640:	af a5       	ldd	r26, Y+47	; 0x2f
     642:	b8 a9       	ldd	r27, Y+48	; 0x30
     644:	a0 70       	andi	r26, 0x00	; 0
     646:	b0 70       	andi	r27, 0x00	; 0
     648:	e8 2a       	or	r14, r24
     64a:	f9 2a       	or	r15, r25
     64c:	0a 2b       	or	r16, r26
     64e:	1b 2b       	or	r17, r27
     650:	e2 16       	cp	r14, r18
     652:	f3 06       	cpc	r15, r19
     654:	04 07       	cpc	r16, r20
     656:	15 07       	cpc	r17, r21
     658:	c0 f4       	brcc	.+48     	; 0x68a <__udivdi3+0x2ea>
     65a:	08 94       	sec
     65c:	a1 08       	sbc	r10, r1
     65e:	b1 08       	sbc	r11, r1
     660:	c1 08       	sbc	r12, r1
     662:	d1 08       	sbc	r13, r1
     664:	e2 0c       	add	r14, r2
     666:	f3 1c       	adc	r15, r3
     668:	04 1d       	adc	r16, r4
     66a:	15 1d       	adc	r17, r5
     66c:	e2 14       	cp	r14, r2
     66e:	f3 04       	cpc	r15, r3
     670:	04 05       	cpc	r16, r4
     672:	15 05       	cpc	r17, r5
     674:	50 f0       	brcs	.+20     	; 0x68a <__udivdi3+0x2ea>
     676:	e2 16       	cp	r14, r18
     678:	f3 06       	cpc	r15, r19
     67a:	04 07       	cpc	r16, r20
     67c:	15 07       	cpc	r17, r21
     67e:	28 f4       	brcc	.+10     	; 0x68a <__udivdi3+0x2ea>
     680:	08 94       	sec
     682:	a1 08       	sbc	r10, r1
     684:	b1 08       	sbc	r11, r1
     686:	c1 08       	sbc	r12, r1
     688:	d1 08       	sbc	r13, r1
     68a:	d3 01       	movw	r26, r6
     68c:	99 27       	eor	r25, r25
     68e:	88 27       	eor	r24, r24
     690:	86 01       	movw	r16, r12
     692:	75 01       	movw	r14, r10
     694:	e8 2a       	or	r14, r24
     696:	f9 2a       	or	r15, r25
     698:	0a 2b       	or	r16, r26
     69a:	1b 2b       	or	r17, r27
     69c:	e9 aa       	std	Y+49, r14	; 0x31
     69e:	fa aa       	std	Y+50, r15	; 0x32
     6a0:	0b ab       	std	Y+51, r16	; 0x33
     6a2:	1c ab       	std	Y+52, r17	; 0x34
     6a4:	cf c4       	rjmp	.+2462   	; 0x1044 <__stack+0x7e5>
     6a6:	21 14       	cp	r2, r1
     6a8:	31 04       	cpc	r3, r1
     6aa:	41 04       	cpc	r4, r1
     6ac:	51 04       	cpc	r5, r1
     6ae:	71 f4       	brne	.+28     	; 0x6cc <__udivdi3+0x32c>
     6b0:	61 e0       	ldi	r22, 0x01	; 1
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	40 e0       	ldi	r20, 0x00	; 0
     6be:	50 e0       	ldi	r21, 0x00	; 0
     6c0:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     6c4:	c9 01       	movw	r24, r18
     6c6:	da 01       	movw	r26, r20
     6c8:	1c 01       	movw	r2, r24
     6ca:	2d 01       	movw	r4, r26
     6cc:	00 e0       	ldi	r16, 0x00	; 0
     6ce:	20 16       	cp	r2, r16
     6d0:	00 e0       	ldi	r16, 0x00	; 0
     6d2:	30 06       	cpc	r3, r16
     6d4:	01 e0       	ldi	r16, 0x01	; 1
     6d6:	40 06       	cpc	r4, r16
     6d8:	00 e0       	ldi	r16, 0x00	; 0
     6da:	50 06       	cpc	r5, r16
     6dc:	88 f4       	brcc	.+34     	; 0x700 <__udivdi3+0x360>
     6de:	1f ef       	ldi	r17, 0xFF	; 255
     6e0:	21 16       	cp	r2, r17
     6e2:	31 04       	cpc	r3, r1
     6e4:	41 04       	cpc	r4, r1
     6e6:	51 04       	cpc	r5, r1
     6e8:	31 f0       	breq	.+12     	; 0x6f6 <__udivdi3+0x356>
     6ea:	28 f0       	brcs	.+10     	; 0x6f6 <__udivdi3+0x356>
     6ec:	48 e0       	ldi	r20, 0x08	; 8
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	60 e0       	ldi	r22, 0x00	; 0
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	17 c0       	rjmp	.+46     	; 0x724 <__udivdi3+0x384>
     6f6:	40 e0       	ldi	r20, 0x00	; 0
     6f8:	50 e0       	ldi	r21, 0x00	; 0
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	70 e0       	ldi	r23, 0x00	; 0
     6fe:	12 c0       	rjmp	.+36     	; 0x724 <__udivdi3+0x384>
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	22 16       	cp	r2, r18
     704:	20 e0       	ldi	r18, 0x00	; 0
     706:	32 06       	cpc	r3, r18
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	42 06       	cpc	r4, r18
     70c:	21 e0       	ldi	r18, 0x01	; 1
     70e:	52 06       	cpc	r5, r18
     710:	28 f0       	brcs	.+10     	; 0x71c <__udivdi3+0x37c>
     712:	48 e1       	ldi	r20, 0x18	; 24
     714:	50 e0       	ldi	r21, 0x00	; 0
     716:	60 e0       	ldi	r22, 0x00	; 0
     718:	70 e0       	ldi	r23, 0x00	; 0
     71a:	04 c0       	rjmp	.+8      	; 0x724 <__udivdi3+0x384>
     71c:	40 e1       	ldi	r20, 0x10	; 16
     71e:	50 e0       	ldi	r21, 0x00	; 0
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	d2 01       	movw	r26, r4
     726:	c1 01       	movw	r24, r2
     728:	04 2e       	mov	r0, r20
     72a:	04 c0       	rjmp	.+8      	; 0x734 <__udivdi3+0x394>
     72c:	b6 95       	lsr	r27
     72e:	a7 95       	ror	r26
     730:	97 95       	ror	r25
     732:	87 95       	ror	r24
     734:	0a 94       	dec	r0
     736:	d2 f7       	brpl	.-12     	; 0x72c <__udivdi3+0x38c>
     738:	85 59       	subi	r24, 0x95	; 149
     73a:	9f 4f       	sbci	r25, 0xFF	; 255
     73c:	dc 01       	movw	r26, r24
     73e:	2c 91       	ld	r18, X
     740:	e0 e2       	ldi	r30, 0x20	; 32
     742:	ee 2e       	mov	r14, r30
     744:	f1 2c       	mov	r15, r1
     746:	01 2d       	mov	r16, r1
     748:	11 2d       	mov	r17, r1
     74a:	d8 01       	movw	r26, r16
     74c:	c7 01       	movw	r24, r14
     74e:	84 1b       	sub	r24, r20
     750:	95 0b       	sbc	r25, r21
     752:	a6 0b       	sbc	r26, r22
     754:	b7 0b       	sbc	r27, r23
     756:	82 1b       	sub	r24, r18
     758:	91 09       	sbc	r25, r1
     75a:	a1 09       	sbc	r26, r1
     75c:	b1 09       	sbc	r27, r1
     75e:	00 97       	sbiw	r24, 0x00	; 0
     760:	a1 05       	cpc	r26, r1
     762:	b1 05       	cpc	r27, r1
     764:	61 f4       	brne	.+24     	; 0x77e <__udivdi3+0x3de>
     766:	64 01       	movw	r12, r8
     768:	53 01       	movw	r10, r6
     76a:	a2 18       	sub	r10, r2
     76c:	b3 08       	sbc	r11, r3
     76e:	c4 08       	sbc	r12, r4
     770:	d5 08       	sbc	r13, r5
     772:	31 e0       	ldi	r19, 0x01	; 1
     774:	63 2e       	mov	r6, r19
     776:	71 2c       	mov	r7, r1
     778:	81 2c       	mov	r8, r1
     77a:	91 2c       	mov	r9, r1
     77c:	1e c1       	rjmp	.+572    	; 0x9ba <__stack+0x15b>
     77e:	6f 96       	adiw	r28, 0x1f	; 31
     780:	8f af       	std	Y+63, r24	; 0x3f
     782:	6f 97       	sbiw	r28, 0x1f	; 31
     784:	08 2e       	mov	r0, r24
     786:	04 c0       	rjmp	.+8      	; 0x790 <__udivdi3+0x3f0>
     788:	22 0c       	add	r2, r2
     78a:	33 1c       	adc	r3, r3
     78c:	44 1c       	adc	r4, r4
     78e:	55 1c       	adc	r5, r5
     790:	0a 94       	dec	r0
     792:	d2 f7       	brpl	.-12     	; 0x788 <__udivdi3+0x3e8>
     794:	ee 2d       	mov	r30, r14
     796:	e8 1b       	sub	r30, r24
     798:	64 01       	movw	r12, r8
     79a:	53 01       	movw	r10, r6
     79c:	0e 2e       	mov	r0, r30
     79e:	04 c0       	rjmp	.+8      	; 0x7a8 <__udivdi3+0x408>
     7a0:	d6 94       	lsr	r13
     7a2:	c7 94       	ror	r12
     7a4:	b7 94       	ror	r11
     7a6:	a7 94       	ror	r10
     7a8:	0a 94       	dec	r0
     7aa:	d2 f7       	brpl	.-12     	; 0x7a0 <__udivdi3+0x400>
     7ac:	a4 01       	movw	r20, r8
     7ae:	93 01       	movw	r18, r6
     7b0:	6f 96       	adiw	r28, 0x1f	; 31
     7b2:	0f ac       	ldd	r0, Y+63	; 0x3f
     7b4:	6f 97       	sbiw	r28, 0x1f	; 31
     7b6:	04 c0       	rjmp	.+8      	; 0x7c0 <__udivdi3+0x420>
     7b8:	22 0f       	add	r18, r18
     7ba:	33 1f       	adc	r19, r19
     7bc:	44 1f       	adc	r20, r20
     7be:	55 1f       	adc	r21, r21
     7c0:	0a 94       	dec	r0
     7c2:	d2 f7       	brpl	.-12     	; 0x7b8 <__udivdi3+0x418>
     7c4:	6d a4       	ldd	r6, Y+45	; 0x2d
     7c6:	7e a4       	ldd	r7, Y+46	; 0x2e
     7c8:	8f a4       	ldd	r8, Y+47	; 0x2f
     7ca:	98 a8       	ldd	r9, Y+48	; 0x30
     7cc:	0e 2e       	mov	r0, r30
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <__udivdi3+0x438>
     7d0:	96 94       	lsr	r9
     7d2:	87 94       	ror	r8
     7d4:	77 94       	ror	r7
     7d6:	67 94       	ror	r6
     7d8:	0a 94       	dec	r0
     7da:	d2 f7       	brpl	.-12     	; 0x7d0 <__udivdi3+0x430>
     7dc:	84 01       	movw	r16, r8
     7de:	73 01       	movw	r14, r6
     7e0:	e2 2a       	or	r14, r18
     7e2:	f3 2a       	or	r15, r19
     7e4:	04 2b       	or	r16, r20
     7e6:	15 2b       	or	r17, r21
     7e8:	e9 a6       	std	Y+41, r14	; 0x29
     7ea:	fa a6       	std	Y+42, r15	; 0x2a
     7ec:	0b a7       	std	Y+43, r16	; 0x2b
     7ee:	1c a7       	std	Y+44, r17	; 0x2c
     7f0:	32 01       	movw	r6, r4
     7f2:	88 24       	eor	r8, r8
     7f4:	99 24       	eor	r9, r9
     7f6:	92 01       	movw	r18, r4
     7f8:	81 01       	movw	r16, r2
     7fa:	20 70       	andi	r18, 0x00	; 0
     7fc:	30 70       	andi	r19, 0x00	; 0
     7fe:	21 96       	adiw	r28, 0x01	; 1
     800:	0c af       	std	Y+60, r16	; 0x3c
     802:	1d af       	std	Y+61, r17	; 0x3d
     804:	2e af       	std	Y+62, r18	; 0x3e
     806:	3f af       	std	Y+63, r19	; 0x3f
     808:	21 97       	sbiw	r28, 0x01	; 1
     80a:	c6 01       	movw	r24, r12
     80c:	b5 01       	movw	r22, r10
     80e:	a4 01       	movw	r20, r8
     810:	93 01       	movw	r18, r6
     812:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     816:	7b 01       	movw	r14, r22
     818:	8c 01       	movw	r16, r24
     81a:	c6 01       	movw	r24, r12
     81c:	b5 01       	movw	r22, r10
     81e:	a4 01       	movw	r20, r8
     820:	93 01       	movw	r18, r6
     822:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     826:	c9 01       	movw	r24, r18
     828:	da 01       	movw	r26, r20
     82a:	25 96       	adiw	r28, 0x05	; 5
     82c:	8c af       	std	Y+60, r24	; 0x3c
     82e:	9d af       	std	Y+61, r25	; 0x3d
     830:	ae af       	std	Y+62, r26	; 0x3e
     832:	bf af       	std	Y+63, r27	; 0x3f
     834:	25 97       	sbiw	r28, 0x05	; 5
     836:	bc 01       	movw	r22, r24
     838:	cd 01       	movw	r24, r26
     83a:	21 96       	adiw	r28, 0x01	; 1
     83c:	2c ad       	ldd	r18, Y+60	; 0x3c
     83e:	3d ad       	ldd	r19, Y+61	; 0x3d
     840:	4e ad       	ldd	r20, Y+62	; 0x3e
     842:	5f ad       	ldd	r21, Y+63	; 0x3f
     844:	21 97       	sbiw	r28, 0x01	; 1
     846:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     84a:	9b 01       	movw	r18, r22
     84c:	ac 01       	movw	r20, r24
     84e:	87 01       	movw	r16, r14
     850:	ff 24       	eor	r15, r15
     852:	ee 24       	eor	r14, r14
     854:	a9 a4       	ldd	r10, Y+41	; 0x29
     856:	ba a4       	ldd	r11, Y+42	; 0x2a
     858:	cb a4       	ldd	r12, Y+43	; 0x2b
     85a:	dc a4       	ldd	r13, Y+44	; 0x2c
     85c:	c6 01       	movw	r24, r12
     85e:	aa 27       	eor	r26, r26
     860:	bb 27       	eor	r27, r27
     862:	5c 01       	movw	r10, r24
     864:	6d 01       	movw	r12, r26
     866:	ae 28       	or	r10, r14
     868:	bf 28       	or	r11, r15
     86a:	c0 2a       	or	r12, r16
     86c:	d1 2a       	or	r13, r17
     86e:	a2 16       	cp	r10, r18
     870:	b3 06       	cpc	r11, r19
     872:	c4 06       	cpc	r12, r20
     874:	d5 06       	cpc	r13, r21
     876:	60 f5       	brcc	.+88     	; 0x8d0 <__stack+0x71>
     878:	25 96       	adiw	r28, 0x05	; 5
     87a:	6c ad       	ldd	r22, Y+60	; 0x3c
     87c:	7d ad       	ldd	r23, Y+61	; 0x3d
     87e:	8e ad       	ldd	r24, Y+62	; 0x3e
     880:	9f ad       	ldd	r25, Y+63	; 0x3f
     882:	25 97       	sbiw	r28, 0x05	; 5
     884:	61 50       	subi	r22, 0x01	; 1
     886:	70 40       	sbci	r23, 0x00	; 0
     888:	80 40       	sbci	r24, 0x00	; 0
     88a:	90 40       	sbci	r25, 0x00	; 0
     88c:	25 96       	adiw	r28, 0x05	; 5
     88e:	6c af       	std	Y+60, r22	; 0x3c
     890:	7d af       	std	Y+61, r23	; 0x3d
     892:	8e af       	std	Y+62, r24	; 0x3e
     894:	9f af       	std	Y+63, r25	; 0x3f
     896:	25 97       	sbiw	r28, 0x05	; 5
     898:	a2 0c       	add	r10, r2
     89a:	b3 1c       	adc	r11, r3
     89c:	c4 1c       	adc	r12, r4
     89e:	d5 1c       	adc	r13, r5
     8a0:	a2 14       	cp	r10, r2
     8a2:	b3 04       	cpc	r11, r3
     8a4:	c4 04       	cpc	r12, r4
     8a6:	d5 04       	cpc	r13, r5
     8a8:	98 f0       	brcs	.+38     	; 0x8d0 <__stack+0x71>
     8aa:	a2 16       	cp	r10, r18
     8ac:	b3 06       	cpc	r11, r19
     8ae:	c4 06       	cpc	r12, r20
     8b0:	d5 06       	cpc	r13, r21
     8b2:	70 f4       	brcc	.+28     	; 0x8d0 <__stack+0x71>
     8b4:	61 50       	subi	r22, 0x01	; 1
     8b6:	70 40       	sbci	r23, 0x00	; 0
     8b8:	80 40       	sbci	r24, 0x00	; 0
     8ba:	90 40       	sbci	r25, 0x00	; 0
     8bc:	25 96       	adiw	r28, 0x05	; 5
     8be:	6c af       	std	Y+60, r22	; 0x3c
     8c0:	7d af       	std	Y+61, r23	; 0x3d
     8c2:	8e af       	std	Y+62, r24	; 0x3e
     8c4:	9f af       	std	Y+63, r25	; 0x3f
     8c6:	25 97       	sbiw	r28, 0x05	; 5
     8c8:	a2 0c       	add	r10, r2
     8ca:	b3 1c       	adc	r11, r3
     8cc:	c4 1c       	adc	r12, r4
     8ce:	d5 1c       	adc	r13, r5
     8d0:	a2 1a       	sub	r10, r18
     8d2:	b3 0a       	sbc	r11, r19
     8d4:	c4 0a       	sbc	r12, r20
     8d6:	d5 0a       	sbc	r13, r21
     8d8:	c6 01       	movw	r24, r12
     8da:	b5 01       	movw	r22, r10
     8dc:	a4 01       	movw	r20, r8
     8de:	93 01       	movw	r18, r6
     8e0:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	c6 01       	movw	r24, r12
     8ea:	b5 01       	movw	r22, r10
     8ec:	a4 01       	movw	r20, r8
     8ee:	93 01       	movw	r18, r6
     8f0:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     8f4:	c9 01       	movw	r24, r18
     8f6:	da 01       	movw	r26, r20
     8f8:	3c 01       	movw	r6, r24
     8fa:	4d 01       	movw	r8, r26
     8fc:	c4 01       	movw	r24, r8
     8fe:	b3 01       	movw	r22, r6
     900:	21 96       	adiw	r28, 0x01	; 1
     902:	2c ad       	ldd	r18, Y+60	; 0x3c
     904:	3d ad       	ldd	r19, Y+61	; 0x3d
     906:	4e ad       	ldd	r20, Y+62	; 0x3e
     908:	5f ad       	ldd	r21, Y+63	; 0x3f
     90a:	21 97       	sbiw	r28, 0x01	; 1
     90c:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     910:	9b 01       	movw	r18, r22
     912:	ac 01       	movw	r20, r24
     914:	87 01       	movw	r16, r14
     916:	ff 24       	eor	r15, r15
     918:	ee 24       	eor	r14, r14
     91a:	89 a5       	ldd	r24, Y+41	; 0x29
     91c:	9a a5       	ldd	r25, Y+42	; 0x2a
     91e:	ab a5       	ldd	r26, Y+43	; 0x2b
     920:	bc a5       	ldd	r27, Y+44	; 0x2c
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	57 01       	movw	r10, r14
     928:	68 01       	movw	r12, r16
     92a:	a8 2a       	or	r10, r24
     92c:	b9 2a       	or	r11, r25
     92e:	ca 2a       	or	r12, r26
     930:	db 2a       	or	r13, r27
     932:	a2 16       	cp	r10, r18
     934:	b3 06       	cpc	r11, r19
     936:	c4 06       	cpc	r12, r20
     938:	d5 06       	cpc	r13, r21
     93a:	e0 f4       	brcc	.+56     	; 0x974 <__stack+0x115>
     93c:	08 94       	sec
     93e:	61 08       	sbc	r6, r1
     940:	71 08       	sbc	r7, r1
     942:	81 08       	sbc	r8, r1
     944:	91 08       	sbc	r9, r1
     946:	a2 0c       	add	r10, r2
     948:	b3 1c       	adc	r11, r3
     94a:	c4 1c       	adc	r12, r4
     94c:	d5 1c       	adc	r13, r5
     94e:	a2 14       	cp	r10, r2
     950:	b3 04       	cpc	r11, r3
     952:	c4 04       	cpc	r12, r4
     954:	d5 04       	cpc	r13, r5
     956:	70 f0       	brcs	.+28     	; 0x974 <__stack+0x115>
     958:	a2 16       	cp	r10, r18
     95a:	b3 06       	cpc	r11, r19
     95c:	c4 06       	cpc	r12, r20
     95e:	d5 06       	cpc	r13, r21
     960:	48 f4       	brcc	.+18     	; 0x974 <__stack+0x115>
     962:	08 94       	sec
     964:	61 08       	sbc	r6, r1
     966:	71 08       	sbc	r7, r1
     968:	81 08       	sbc	r8, r1
     96a:	91 08       	sbc	r9, r1
     96c:	a2 0c       	add	r10, r2
     96e:	b3 1c       	adc	r11, r3
     970:	c4 1c       	adc	r12, r4
     972:	d5 1c       	adc	r13, r5
     974:	8d a5       	ldd	r24, Y+45	; 0x2d
     976:	9e a5       	ldd	r25, Y+46	; 0x2e
     978:	af a5       	ldd	r26, Y+47	; 0x2f
     97a:	b8 a9       	ldd	r27, Y+48	; 0x30
     97c:	6f 96       	adiw	r28, 0x1f	; 31
     97e:	0f ac       	ldd	r0, Y+63	; 0x3f
     980:	6f 97       	sbiw	r28, 0x1f	; 31
     982:	04 c0       	rjmp	.+8      	; 0x98c <__stack+0x12d>
     984:	88 0f       	add	r24, r24
     986:	99 1f       	adc	r25, r25
     988:	aa 1f       	adc	r26, r26
     98a:	bb 1f       	adc	r27, r27
     98c:	0a 94       	dec	r0
     98e:	d2 f7       	brpl	.-12     	; 0x984 <__stack+0x125>
     990:	8d a7       	std	Y+45, r24	; 0x2d
     992:	9e a7       	std	Y+46, r25	; 0x2e
     994:	af a7       	std	Y+47, r26	; 0x2f
     996:	b8 ab       	std	Y+48, r27	; 0x30
     998:	a2 1a       	sub	r10, r18
     99a:	b3 0a       	sbc	r11, r19
     99c:	c4 0a       	sbc	r12, r20
     99e:	d5 0a       	sbc	r13, r21
     9a0:	25 96       	adiw	r28, 0x05	; 5
     9a2:	ec ac       	ldd	r14, Y+60	; 0x3c
     9a4:	fd ac       	ldd	r15, Y+61	; 0x3d
     9a6:	0e ad       	ldd	r16, Y+62	; 0x3e
     9a8:	1f ad       	ldd	r17, Y+63	; 0x3f
     9aa:	25 97       	sbiw	r28, 0x05	; 5
     9ac:	d7 01       	movw	r26, r14
     9ae:	99 27       	eor	r25, r25
     9b0:	88 27       	eor	r24, r24
     9b2:	68 2a       	or	r6, r24
     9b4:	79 2a       	or	r7, r25
     9b6:	8a 2a       	or	r8, r26
     9b8:	9b 2a       	or	r9, r27
     9ba:	82 01       	movw	r16, r4
     9bc:	22 27       	eor	r18, r18
     9be:	33 27       	eor	r19, r19
     9c0:	29 96       	adiw	r28, 0x09	; 9
     9c2:	0c af       	std	Y+60, r16	; 0x3c
     9c4:	1d af       	std	Y+61, r17	; 0x3d
     9c6:	2e af       	std	Y+62, r18	; 0x3e
     9c8:	3f af       	std	Y+63, r19	; 0x3f
     9ca:	29 97       	sbiw	r28, 0x09	; 9
     9cc:	a2 01       	movw	r20, r4
     9ce:	91 01       	movw	r18, r2
     9d0:	40 70       	andi	r20, 0x00	; 0
     9d2:	50 70       	andi	r21, 0x00	; 0
     9d4:	2d 96       	adiw	r28, 0x0d	; 13
     9d6:	2c af       	std	Y+60, r18	; 0x3c
     9d8:	3d af       	std	Y+61, r19	; 0x3d
     9da:	4e af       	std	Y+62, r20	; 0x3e
     9dc:	5f af       	std	Y+63, r21	; 0x3f
     9de:	2d 97       	sbiw	r28, 0x0d	; 13
     9e0:	c6 01       	movw	r24, r12
     9e2:	b5 01       	movw	r22, r10
     9e4:	29 96       	adiw	r28, 0x09	; 9
     9e6:	2c ad       	ldd	r18, Y+60	; 0x3c
     9e8:	3d ad       	ldd	r19, Y+61	; 0x3d
     9ea:	4e ad       	ldd	r20, Y+62	; 0x3e
     9ec:	5f ad       	ldd	r21, Y+63	; 0x3f
     9ee:	29 97       	sbiw	r28, 0x09	; 9
     9f0:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     9f4:	7b 01       	movw	r14, r22
     9f6:	8c 01       	movw	r16, r24
     9f8:	c6 01       	movw	r24, r12
     9fa:	b5 01       	movw	r22, r10
     9fc:	29 96       	adiw	r28, 0x09	; 9
     9fe:	2c ad       	ldd	r18, Y+60	; 0x3c
     a00:	3d ad       	ldd	r19, Y+61	; 0x3d
     a02:	4e ad       	ldd	r20, Y+62	; 0x3e
     a04:	5f ad       	ldd	r21, Y+63	; 0x3f
     a06:	29 97       	sbiw	r28, 0x09	; 9
     a08:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     a0c:	c9 01       	movw	r24, r18
     a0e:	da 01       	movw	r26, r20
     a10:	61 96       	adiw	r28, 0x11	; 17
     a12:	8c af       	std	Y+60, r24	; 0x3c
     a14:	9d af       	std	Y+61, r25	; 0x3d
     a16:	ae af       	std	Y+62, r26	; 0x3e
     a18:	bf af       	std	Y+63, r27	; 0x3f
     a1a:	61 97       	sbiw	r28, 0x11	; 17
     a1c:	bc 01       	movw	r22, r24
     a1e:	cd 01       	movw	r24, r26
     a20:	2d 96       	adiw	r28, 0x0d	; 13
     a22:	2c ad       	ldd	r18, Y+60	; 0x3c
     a24:	3d ad       	ldd	r19, Y+61	; 0x3d
     a26:	4e ad       	ldd	r20, Y+62	; 0x3e
     a28:	5f ad       	ldd	r21, Y+63	; 0x3f
     a2a:	2d 97       	sbiw	r28, 0x0d	; 13
     a2c:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     a30:	9b 01       	movw	r18, r22
     a32:	ac 01       	movw	r20, r24
     a34:	87 01       	movw	r16, r14
     a36:	ff 24       	eor	r15, r15
     a38:	ee 24       	eor	r14, r14
     a3a:	ad a4       	ldd	r10, Y+45	; 0x2d
     a3c:	be a4       	ldd	r11, Y+46	; 0x2e
     a3e:	cf a4       	ldd	r12, Y+47	; 0x2f
     a40:	d8 a8       	ldd	r13, Y+48	; 0x30
     a42:	c6 01       	movw	r24, r12
     a44:	aa 27       	eor	r26, r26
     a46:	bb 27       	eor	r27, r27
     a48:	57 01       	movw	r10, r14
     a4a:	68 01       	movw	r12, r16
     a4c:	a8 2a       	or	r10, r24
     a4e:	b9 2a       	or	r11, r25
     a50:	ca 2a       	or	r12, r26
     a52:	db 2a       	or	r13, r27
     a54:	a2 16       	cp	r10, r18
     a56:	b3 06       	cpc	r11, r19
     a58:	c4 06       	cpc	r12, r20
     a5a:	d5 06       	cpc	r13, r21
     a5c:	60 f5       	brcc	.+88     	; 0xab6 <__stack+0x257>
     a5e:	61 96       	adiw	r28, 0x11	; 17
     a60:	6c ad       	ldd	r22, Y+60	; 0x3c
     a62:	7d ad       	ldd	r23, Y+61	; 0x3d
     a64:	8e ad       	ldd	r24, Y+62	; 0x3e
     a66:	9f ad       	ldd	r25, Y+63	; 0x3f
     a68:	61 97       	sbiw	r28, 0x11	; 17
     a6a:	61 50       	subi	r22, 0x01	; 1
     a6c:	70 40       	sbci	r23, 0x00	; 0
     a6e:	80 40       	sbci	r24, 0x00	; 0
     a70:	90 40       	sbci	r25, 0x00	; 0
     a72:	61 96       	adiw	r28, 0x11	; 17
     a74:	6c af       	std	Y+60, r22	; 0x3c
     a76:	7d af       	std	Y+61, r23	; 0x3d
     a78:	8e af       	std	Y+62, r24	; 0x3e
     a7a:	9f af       	std	Y+63, r25	; 0x3f
     a7c:	61 97       	sbiw	r28, 0x11	; 17
     a7e:	a2 0c       	add	r10, r2
     a80:	b3 1c       	adc	r11, r3
     a82:	c4 1c       	adc	r12, r4
     a84:	d5 1c       	adc	r13, r5
     a86:	a2 14       	cp	r10, r2
     a88:	b3 04       	cpc	r11, r3
     a8a:	c4 04       	cpc	r12, r4
     a8c:	d5 04       	cpc	r13, r5
     a8e:	98 f0       	brcs	.+38     	; 0xab6 <__stack+0x257>
     a90:	a2 16       	cp	r10, r18
     a92:	b3 06       	cpc	r11, r19
     a94:	c4 06       	cpc	r12, r20
     a96:	d5 06       	cpc	r13, r21
     a98:	70 f4       	brcc	.+28     	; 0xab6 <__stack+0x257>
     a9a:	61 50       	subi	r22, 0x01	; 1
     a9c:	70 40       	sbci	r23, 0x00	; 0
     a9e:	80 40       	sbci	r24, 0x00	; 0
     aa0:	90 40       	sbci	r25, 0x00	; 0
     aa2:	61 96       	adiw	r28, 0x11	; 17
     aa4:	6c af       	std	Y+60, r22	; 0x3c
     aa6:	7d af       	std	Y+61, r23	; 0x3d
     aa8:	8e af       	std	Y+62, r24	; 0x3e
     aaa:	9f af       	std	Y+63, r25	; 0x3f
     aac:	61 97       	sbiw	r28, 0x11	; 17
     aae:	a2 0c       	add	r10, r2
     ab0:	b3 1c       	adc	r11, r3
     ab2:	c4 1c       	adc	r12, r4
     ab4:	d5 1c       	adc	r13, r5
     ab6:	a2 1a       	sub	r10, r18
     ab8:	b3 0a       	sbc	r11, r19
     aba:	c4 0a       	sbc	r12, r20
     abc:	d5 0a       	sbc	r13, r21
     abe:	c6 01       	movw	r24, r12
     ac0:	b5 01       	movw	r22, r10
     ac2:	29 96       	adiw	r28, 0x09	; 9
     ac4:	2c ad       	ldd	r18, Y+60	; 0x3c
     ac6:	3d ad       	ldd	r19, Y+61	; 0x3d
     ac8:	4e ad       	ldd	r20, Y+62	; 0x3e
     aca:	5f ad       	ldd	r21, Y+63	; 0x3f
     acc:	29 97       	sbiw	r28, 0x09	; 9
     ace:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     ad2:	7b 01       	movw	r14, r22
     ad4:	8c 01       	movw	r16, r24
     ad6:	c6 01       	movw	r24, r12
     ad8:	b5 01       	movw	r22, r10
     ada:	29 96       	adiw	r28, 0x09	; 9
     adc:	2c ad       	ldd	r18, Y+60	; 0x3c
     ade:	3d ad       	ldd	r19, Y+61	; 0x3d
     ae0:	4e ad       	ldd	r20, Y+62	; 0x3e
     ae2:	5f ad       	ldd	r21, Y+63	; 0x3f
     ae4:	29 97       	sbiw	r28, 0x09	; 9
     ae6:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     aea:	c9 01       	movw	r24, r18
     aec:	da 01       	movw	r26, r20
     aee:	5c 01       	movw	r10, r24
     af0:	6d 01       	movw	r12, r26
     af2:	c6 01       	movw	r24, r12
     af4:	b5 01       	movw	r22, r10
     af6:	2d 96       	adiw	r28, 0x0d	; 13
     af8:	2c ad       	ldd	r18, Y+60	; 0x3c
     afa:	3d ad       	ldd	r19, Y+61	; 0x3d
     afc:	4e ad       	ldd	r20, Y+62	; 0x3e
     afe:	5f ad       	ldd	r21, Y+63	; 0x3f
     b00:	2d 97       	sbiw	r28, 0x0d	; 13
     b02:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     b06:	9b 01       	movw	r18, r22
     b08:	ac 01       	movw	r20, r24
     b0a:	87 01       	movw	r16, r14
     b0c:	ff 24       	eor	r15, r15
     b0e:	ee 24       	eor	r14, r14
     b10:	8d a5       	ldd	r24, Y+45	; 0x2d
     b12:	9e a5       	ldd	r25, Y+46	; 0x2e
     b14:	af a5       	ldd	r26, Y+47	; 0x2f
     b16:	b8 a9       	ldd	r27, Y+48	; 0x30
     b18:	a0 70       	andi	r26, 0x00	; 0
     b1a:	b0 70       	andi	r27, 0x00	; 0
     b1c:	e8 2a       	or	r14, r24
     b1e:	f9 2a       	or	r15, r25
     b20:	0a 2b       	or	r16, r26
     b22:	1b 2b       	or	r17, r27
     b24:	e2 16       	cp	r14, r18
     b26:	f3 06       	cpc	r15, r19
     b28:	04 07       	cpc	r16, r20
     b2a:	15 07       	cpc	r17, r21
     b2c:	c0 f4       	brcc	.+48     	; 0xb5e <__stack+0x2ff>
     b2e:	08 94       	sec
     b30:	a1 08       	sbc	r10, r1
     b32:	b1 08       	sbc	r11, r1
     b34:	c1 08       	sbc	r12, r1
     b36:	d1 08       	sbc	r13, r1
     b38:	e2 0c       	add	r14, r2
     b3a:	f3 1c       	adc	r15, r3
     b3c:	04 1d       	adc	r16, r4
     b3e:	15 1d       	adc	r17, r5
     b40:	e2 14       	cp	r14, r2
     b42:	f3 04       	cpc	r15, r3
     b44:	04 05       	cpc	r16, r4
     b46:	15 05       	cpc	r17, r5
     b48:	50 f0       	brcs	.+20     	; 0xb5e <__stack+0x2ff>
     b4a:	e2 16       	cp	r14, r18
     b4c:	f3 06       	cpc	r15, r19
     b4e:	04 07       	cpc	r16, r20
     b50:	15 07       	cpc	r17, r21
     b52:	28 f4       	brcc	.+10     	; 0xb5e <__stack+0x2ff>
     b54:	08 94       	sec
     b56:	a1 08       	sbc	r10, r1
     b58:	b1 08       	sbc	r11, r1
     b5a:	c1 08       	sbc	r12, r1
     b5c:	d1 08       	sbc	r13, r1
     b5e:	61 96       	adiw	r28, 0x11	; 17
     b60:	ec ac       	ldd	r14, Y+60	; 0x3c
     b62:	fd ac       	ldd	r15, Y+61	; 0x3d
     b64:	0e ad       	ldd	r16, Y+62	; 0x3e
     b66:	1f ad       	ldd	r17, Y+63	; 0x3f
     b68:	61 97       	sbiw	r28, 0x11	; 17
     b6a:	d7 01       	movw	r26, r14
     b6c:	99 27       	eor	r25, r25
     b6e:	88 27       	eor	r24, r24
     b70:	96 01       	movw	r18, r12
     b72:	85 01       	movw	r16, r10
     b74:	08 2b       	or	r16, r24
     b76:	19 2b       	or	r17, r25
     b78:	2a 2b       	or	r18, r26
     b7a:	3b 2b       	or	r19, r27
     b7c:	09 ab       	std	Y+49, r16	; 0x31
     b7e:	1a ab       	std	Y+50, r17	; 0x32
     b80:	2b ab       	std	Y+51, r18	; 0x33
     b82:	3c ab       	std	Y+52, r19	; 0x34
     b84:	62 c2       	rjmp	.+1220   	; 0x104a <__stack+0x7eb>
     b86:	6e 14       	cp	r6, r14
     b88:	7f 04       	cpc	r7, r15
     b8a:	80 06       	cpc	r8, r16
     b8c:	91 06       	cpc	r9, r17
     b8e:	08 f4       	brcc	.+2      	; 0xb92 <__stack+0x333>
     b90:	51 c2       	rjmp	.+1186   	; 0x1034 <__stack+0x7d5>
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	e2 16       	cp	r14, r18
     b96:	20 e0       	ldi	r18, 0x00	; 0
     b98:	f2 06       	cpc	r15, r18
     b9a:	21 e0       	ldi	r18, 0x01	; 1
     b9c:	02 07       	cpc	r16, r18
     b9e:	20 e0       	ldi	r18, 0x00	; 0
     ba0:	12 07       	cpc	r17, r18
     ba2:	88 f4       	brcc	.+34     	; 0xbc6 <__stack+0x367>
     ba4:	3f ef       	ldi	r19, 0xFF	; 255
     ba6:	e3 16       	cp	r14, r19
     ba8:	f1 04       	cpc	r15, r1
     baa:	01 05       	cpc	r16, r1
     bac:	11 05       	cpc	r17, r1
     bae:	31 f0       	breq	.+12     	; 0xbbc <__stack+0x35d>
     bb0:	28 f0       	brcs	.+10     	; 0xbbc <__stack+0x35d>
     bb2:	48 e0       	ldi	r20, 0x08	; 8
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	60 e0       	ldi	r22, 0x00	; 0
     bb8:	70 e0       	ldi	r23, 0x00	; 0
     bba:	17 c0       	rjmp	.+46     	; 0xbea <__stack+0x38b>
     bbc:	40 e0       	ldi	r20, 0x00	; 0
     bbe:	50 e0       	ldi	r21, 0x00	; 0
     bc0:	60 e0       	ldi	r22, 0x00	; 0
     bc2:	70 e0       	ldi	r23, 0x00	; 0
     bc4:	12 c0       	rjmp	.+36     	; 0xbea <__stack+0x38b>
     bc6:	40 e0       	ldi	r20, 0x00	; 0
     bc8:	e4 16       	cp	r14, r20
     bca:	40 e0       	ldi	r20, 0x00	; 0
     bcc:	f4 06       	cpc	r15, r20
     bce:	40 e0       	ldi	r20, 0x00	; 0
     bd0:	04 07       	cpc	r16, r20
     bd2:	41 e0       	ldi	r20, 0x01	; 1
     bd4:	14 07       	cpc	r17, r20
     bd6:	28 f0       	brcs	.+10     	; 0xbe2 <__stack+0x383>
     bd8:	48 e1       	ldi	r20, 0x18	; 24
     bda:	50 e0       	ldi	r21, 0x00	; 0
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	04 c0       	rjmp	.+8      	; 0xbea <__stack+0x38b>
     be2:	40 e1       	ldi	r20, 0x10	; 16
     be4:	50 e0       	ldi	r21, 0x00	; 0
     be6:	60 e0       	ldi	r22, 0x00	; 0
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	d8 01       	movw	r26, r16
     bec:	c7 01       	movw	r24, r14
     bee:	04 2e       	mov	r0, r20
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__stack+0x39b>
     bf2:	b6 95       	lsr	r27
     bf4:	a7 95       	ror	r26
     bf6:	97 95       	ror	r25
     bf8:	87 95       	ror	r24
     bfa:	0a 94       	dec	r0
     bfc:	d2 f7       	brpl	.-12     	; 0xbf2 <__stack+0x393>
     bfe:	85 59       	subi	r24, 0x95	; 149
     c00:	9f 4f       	sbci	r25, 0xFF	; 255
     c02:	dc 01       	movw	r26, r24
     c04:	2c 91       	ld	r18, X
     c06:	30 e2       	ldi	r19, 0x20	; 32
     c08:	a3 2e       	mov	r10, r19
     c0a:	b1 2c       	mov	r11, r1
     c0c:	c1 2c       	mov	r12, r1
     c0e:	d1 2c       	mov	r13, r1
     c10:	d6 01       	movw	r26, r12
     c12:	c5 01       	movw	r24, r10
     c14:	84 1b       	sub	r24, r20
     c16:	95 0b       	sbc	r25, r21
     c18:	a6 0b       	sbc	r26, r22
     c1a:	b7 0b       	sbc	r27, r23
     c1c:	82 1b       	sub	r24, r18
     c1e:	91 09       	sbc	r25, r1
     c20:	a1 09       	sbc	r26, r1
     c22:	b1 09       	sbc	r27, r1
     c24:	00 97       	sbiw	r24, 0x00	; 0
     c26:	a1 05       	cpc	r26, r1
     c28:	b1 05       	cpc	r27, r1
     c2a:	89 f4       	brne	.+34     	; 0xc4e <__stack+0x3ef>
     c2c:	e6 14       	cp	r14, r6
     c2e:	f7 04       	cpc	r15, r7
     c30:	08 05       	cpc	r16, r8
     c32:	19 05       	cpc	r17, r9
     c34:	08 f4       	brcc	.+2      	; 0xc38 <__stack+0x3d9>
     c36:	f2 c1       	rjmp	.+996    	; 0x101c <__stack+0x7bd>
     c38:	6d a4       	ldd	r6, Y+45	; 0x2d
     c3a:	7e a4       	ldd	r7, Y+46	; 0x2e
     c3c:	8f a4       	ldd	r8, Y+47	; 0x2f
     c3e:	98 a8       	ldd	r9, Y+48	; 0x30
     c40:	62 14       	cp	r6, r2
     c42:	73 04       	cpc	r7, r3
     c44:	84 04       	cpc	r8, r4
     c46:	95 04       	cpc	r9, r5
     c48:	08 f0       	brcs	.+2      	; 0xc4c <__stack+0x3ed>
     c4a:	e8 c1       	rjmp	.+976    	; 0x101c <__stack+0x7bd>
     c4c:	f3 c1       	rjmp	.+998    	; 0x1034 <__stack+0x7d5>
     c4e:	6e 96       	adiw	r28, 0x1e	; 30
     c50:	8f af       	std	Y+63, r24	; 0x3f
     c52:	6e 97       	sbiw	r28, 0x1e	; 30
     c54:	08 2e       	mov	r0, r24
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <__stack+0x401>
     c58:	ee 0c       	add	r14, r14
     c5a:	ff 1c       	adc	r15, r15
     c5c:	00 1f       	adc	r16, r16
     c5e:	11 1f       	adc	r17, r17
     c60:	0a 94       	dec	r0
     c62:	d2 f7       	brpl	.-12     	; 0xc58 <__stack+0x3f9>
     c64:	6a 2d       	mov	r22, r10
     c66:	68 1b       	sub	r22, r24
     c68:	d2 01       	movw	r26, r4
     c6a:	c1 01       	movw	r24, r2
     c6c:	06 2e       	mov	r0, r22
     c6e:	04 c0       	rjmp	.+8      	; 0xc78 <__stack+0x419>
     c70:	b6 95       	lsr	r27
     c72:	a7 95       	ror	r26
     c74:	97 95       	ror	r25
     c76:	87 95       	ror	r24
     c78:	0a 94       	dec	r0
     c7a:	d2 f7       	brpl	.-12     	; 0xc70 <__stack+0x411>
     c7c:	5c 01       	movw	r10, r24
     c7e:	6d 01       	movw	r12, r26
     c80:	ae 28       	or	r10, r14
     c82:	bf 28       	or	r11, r15
     c84:	c0 2a       	or	r12, r16
     c86:	d1 2a       	or	r13, r17
     c88:	ad a2       	std	Y+37, r10	; 0x25
     c8a:	be a2       	std	Y+38, r11	; 0x26
     c8c:	cf a2       	std	Y+39, r12	; 0x27
     c8e:	d8 a6       	std	Y+40, r13	; 0x28
     c90:	72 01       	movw	r14, r4
     c92:	61 01       	movw	r12, r2
     c94:	6e 96       	adiw	r28, 0x1e	; 30
     c96:	0f ac       	ldd	r0, Y+63	; 0x3f
     c98:	6e 97       	sbiw	r28, 0x1e	; 30
     c9a:	04 c0       	rjmp	.+8      	; 0xca4 <__stack+0x445>
     c9c:	cc 0c       	add	r12, r12
     c9e:	dd 1c       	adc	r13, r13
     ca0:	ee 1c       	adc	r14, r14
     ca2:	ff 1c       	adc	r15, r15
     ca4:	0a 94       	dec	r0
     ca6:	d2 f7       	brpl	.-12     	; 0xc9c <__stack+0x43d>
     ca8:	c9 a2       	std	Y+33, r12	; 0x21
     caa:	da a2       	std	Y+34, r13	; 0x22
     cac:	eb a2       	std	Y+35, r14	; 0x23
     cae:	fc a2       	std	Y+36, r15	; 0x24
     cb0:	64 01       	movw	r12, r8
     cb2:	53 01       	movw	r10, r6
     cb4:	06 2e       	mov	r0, r22
     cb6:	04 c0       	rjmp	.+8      	; 0xcc0 <__stack+0x461>
     cb8:	d6 94       	lsr	r13
     cba:	c7 94       	ror	r12
     cbc:	b7 94       	ror	r11
     cbe:	a7 94       	ror	r10
     cc0:	0a 94       	dec	r0
     cc2:	d2 f7       	brpl	.-12     	; 0xcb8 <__stack+0x459>
     cc4:	d4 01       	movw	r26, r8
     cc6:	c3 01       	movw	r24, r6
     cc8:	6e 96       	adiw	r28, 0x1e	; 30
     cca:	0f ac       	ldd	r0, Y+63	; 0x3f
     ccc:	6e 97       	sbiw	r28, 0x1e	; 30
     cce:	04 c0       	rjmp	.+8      	; 0xcd8 <__stack+0x479>
     cd0:	88 0f       	add	r24, r24
     cd2:	99 1f       	adc	r25, r25
     cd4:	aa 1f       	adc	r26, r26
     cd6:	bb 1f       	adc	r27, r27
     cd8:	0a 94       	dec	r0
     cda:	d2 f7       	brpl	.-12     	; 0xcd0 <__stack+0x471>
     cdc:	ed a4       	ldd	r14, Y+45	; 0x2d
     cde:	fe a4       	ldd	r15, Y+46	; 0x2e
     ce0:	0f a5       	ldd	r16, Y+47	; 0x2f
     ce2:	18 a9       	ldd	r17, Y+48	; 0x30
     ce4:	04 c0       	rjmp	.+8      	; 0xcee <__stack+0x48f>
     ce6:	16 95       	lsr	r17
     ce8:	07 95       	ror	r16
     cea:	f7 94       	ror	r15
     cec:	e7 94       	ror	r14
     cee:	6a 95       	dec	r22
     cf0:	d2 f7       	brpl	.-12     	; 0xce6 <__stack+0x487>
     cf2:	37 01       	movw	r6, r14
     cf4:	48 01       	movw	r8, r16
     cf6:	68 2a       	or	r6, r24
     cf8:	79 2a       	or	r7, r25
     cfa:	8a 2a       	or	r8, r26
     cfc:	9b 2a       	or	r9, r27
     cfe:	6d 8e       	std	Y+29, r6	; 0x1d
     d00:	7e 8e       	std	Y+30, r7	; 0x1e
     d02:	8f 8e       	std	Y+31, r8	; 0x1f
     d04:	98 a2       	std	Y+32, r9	; 0x20
     d06:	ed a0       	ldd	r14, Y+37	; 0x25
     d08:	fe a0       	ldd	r15, Y+38	; 0x26
     d0a:	0f a1       	ldd	r16, Y+39	; 0x27
     d0c:	18 a5       	ldd	r17, Y+40	; 0x28
     d0e:	38 01       	movw	r6, r16
     d10:	88 24       	eor	r8, r8
     d12:	99 24       	eor	r9, r9
     d14:	98 01       	movw	r18, r16
     d16:	87 01       	movw	r16, r14
     d18:	20 70       	andi	r18, 0x00	; 0
     d1a:	30 70       	andi	r19, 0x00	; 0
     d1c:	65 96       	adiw	r28, 0x15	; 21
     d1e:	0c af       	std	Y+60, r16	; 0x3c
     d20:	1d af       	std	Y+61, r17	; 0x3d
     d22:	2e af       	std	Y+62, r18	; 0x3e
     d24:	3f af       	std	Y+63, r19	; 0x3f
     d26:	65 97       	sbiw	r28, 0x15	; 21
     d28:	c6 01       	movw	r24, r12
     d2a:	b5 01       	movw	r22, r10
     d2c:	a4 01       	movw	r20, r8
     d2e:	93 01       	movw	r18, r6
     d30:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     d34:	7b 01       	movw	r14, r22
     d36:	8c 01       	movw	r16, r24
     d38:	c6 01       	movw	r24, r12
     d3a:	b5 01       	movw	r22, r10
     d3c:	a4 01       	movw	r20, r8
     d3e:	93 01       	movw	r18, r6
     d40:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     d44:	c9 01       	movw	r24, r18
     d46:	da 01       	movw	r26, r20
     d48:	1c 01       	movw	r2, r24
     d4a:	2d 01       	movw	r4, r26
     d4c:	c2 01       	movw	r24, r4
     d4e:	b1 01       	movw	r22, r2
     d50:	65 96       	adiw	r28, 0x15	; 21
     d52:	2c ad       	ldd	r18, Y+60	; 0x3c
     d54:	3d ad       	ldd	r19, Y+61	; 0x3d
     d56:	4e ad       	ldd	r20, Y+62	; 0x3e
     d58:	5f ad       	ldd	r21, Y+63	; 0x3f
     d5a:	65 97       	sbiw	r28, 0x15	; 21
     d5c:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     d60:	9b 01       	movw	r18, r22
     d62:	ac 01       	movw	r20, r24
     d64:	87 01       	movw	r16, r14
     d66:	ff 24       	eor	r15, r15
     d68:	ee 24       	eor	r14, r14
     d6a:	ad 8c       	ldd	r10, Y+29	; 0x1d
     d6c:	be 8c       	ldd	r11, Y+30	; 0x1e
     d6e:	cf 8c       	ldd	r12, Y+31	; 0x1f
     d70:	d8 a0       	ldd	r13, Y+32	; 0x20
     d72:	c6 01       	movw	r24, r12
     d74:	aa 27       	eor	r26, r26
     d76:	bb 27       	eor	r27, r27
     d78:	57 01       	movw	r10, r14
     d7a:	68 01       	movw	r12, r16
     d7c:	a8 2a       	or	r10, r24
     d7e:	b9 2a       	or	r11, r25
     d80:	ca 2a       	or	r12, r26
     d82:	db 2a       	or	r13, r27
     d84:	a2 16       	cp	r10, r18
     d86:	b3 06       	cpc	r11, r19
     d88:	c4 06       	cpc	r12, r20
     d8a:	d5 06       	cpc	r13, r21
     d8c:	00 f5       	brcc	.+64     	; 0xdce <__stack+0x56f>
     d8e:	08 94       	sec
     d90:	21 08       	sbc	r2, r1
     d92:	31 08       	sbc	r3, r1
     d94:	41 08       	sbc	r4, r1
     d96:	51 08       	sbc	r5, r1
     d98:	ed a0       	ldd	r14, Y+37	; 0x25
     d9a:	fe a0       	ldd	r15, Y+38	; 0x26
     d9c:	0f a1       	ldd	r16, Y+39	; 0x27
     d9e:	18 a5       	ldd	r17, Y+40	; 0x28
     da0:	ae 0c       	add	r10, r14
     da2:	bf 1c       	adc	r11, r15
     da4:	c0 1e       	adc	r12, r16
     da6:	d1 1e       	adc	r13, r17
     da8:	ae 14       	cp	r10, r14
     daa:	bf 04       	cpc	r11, r15
     dac:	c0 06       	cpc	r12, r16
     dae:	d1 06       	cpc	r13, r17
     db0:	70 f0       	brcs	.+28     	; 0xdce <__stack+0x56f>
     db2:	a2 16       	cp	r10, r18
     db4:	b3 06       	cpc	r11, r19
     db6:	c4 06       	cpc	r12, r20
     db8:	d5 06       	cpc	r13, r21
     dba:	48 f4       	brcc	.+18     	; 0xdce <__stack+0x56f>
     dbc:	08 94       	sec
     dbe:	21 08       	sbc	r2, r1
     dc0:	31 08       	sbc	r3, r1
     dc2:	41 08       	sbc	r4, r1
     dc4:	51 08       	sbc	r5, r1
     dc6:	ae 0c       	add	r10, r14
     dc8:	bf 1c       	adc	r11, r15
     dca:	c0 1e       	adc	r12, r16
     dcc:	d1 1e       	adc	r13, r17
     dce:	a2 1a       	sub	r10, r18
     dd0:	b3 0a       	sbc	r11, r19
     dd2:	c4 0a       	sbc	r12, r20
     dd4:	d5 0a       	sbc	r13, r21
     dd6:	c6 01       	movw	r24, r12
     dd8:	b5 01       	movw	r22, r10
     dda:	a4 01       	movw	r20, r8
     ddc:	93 01       	movw	r18, r6
     dde:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     de2:	7b 01       	movw	r14, r22
     de4:	8c 01       	movw	r16, r24
     de6:	c6 01       	movw	r24, r12
     de8:	b5 01       	movw	r22, r10
     dea:	a4 01       	movw	r20, r8
     dec:	93 01       	movw	r18, r6
     dee:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
     df2:	c9 01       	movw	r24, r18
     df4:	da 01       	movw	r26, r20
     df6:	3c 01       	movw	r6, r24
     df8:	4d 01       	movw	r8, r26
     dfa:	c4 01       	movw	r24, r8
     dfc:	b3 01       	movw	r22, r6
     dfe:	65 96       	adiw	r28, 0x15	; 21
     e00:	2c ad       	ldd	r18, Y+60	; 0x3c
     e02:	3d ad       	ldd	r19, Y+61	; 0x3d
     e04:	4e ad       	ldd	r20, Y+62	; 0x3e
     e06:	5f ad       	ldd	r21, Y+63	; 0x3f
     e08:	65 97       	sbiw	r28, 0x15	; 21
     e0a:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     e0e:	9b 01       	movw	r18, r22
     e10:	ac 01       	movw	r20, r24
     e12:	87 01       	movw	r16, r14
     e14:	ff 24       	eor	r15, r15
     e16:	ee 24       	eor	r14, r14
     e18:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e1a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e1c:	af 8d       	ldd	r26, Y+31	; 0x1f
     e1e:	b8 a1       	ldd	r27, Y+32	; 0x20
     e20:	a0 70       	andi	r26, 0x00	; 0
     e22:	b0 70       	andi	r27, 0x00	; 0
     e24:	57 01       	movw	r10, r14
     e26:	68 01       	movw	r12, r16
     e28:	a8 2a       	or	r10, r24
     e2a:	b9 2a       	or	r11, r25
     e2c:	ca 2a       	or	r12, r26
     e2e:	db 2a       	or	r13, r27
     e30:	a2 16       	cp	r10, r18
     e32:	b3 06       	cpc	r11, r19
     e34:	c4 06       	cpc	r12, r20
     e36:	d5 06       	cpc	r13, r21
     e38:	00 f5       	brcc	.+64     	; 0xe7a <__stack+0x61b>
     e3a:	08 94       	sec
     e3c:	61 08       	sbc	r6, r1
     e3e:	71 08       	sbc	r7, r1
     e40:	81 08       	sbc	r8, r1
     e42:	91 08       	sbc	r9, r1
     e44:	6d a1       	ldd	r22, Y+37	; 0x25
     e46:	7e a1       	ldd	r23, Y+38	; 0x26
     e48:	8f a1       	ldd	r24, Y+39	; 0x27
     e4a:	98 a5       	ldd	r25, Y+40	; 0x28
     e4c:	a6 0e       	add	r10, r22
     e4e:	b7 1e       	adc	r11, r23
     e50:	c8 1e       	adc	r12, r24
     e52:	d9 1e       	adc	r13, r25
     e54:	a6 16       	cp	r10, r22
     e56:	b7 06       	cpc	r11, r23
     e58:	c8 06       	cpc	r12, r24
     e5a:	d9 06       	cpc	r13, r25
     e5c:	70 f0       	brcs	.+28     	; 0xe7a <__stack+0x61b>
     e5e:	a2 16       	cp	r10, r18
     e60:	b3 06       	cpc	r11, r19
     e62:	c4 06       	cpc	r12, r20
     e64:	d5 06       	cpc	r13, r21
     e66:	48 f4       	brcc	.+18     	; 0xe7a <__stack+0x61b>
     e68:	08 94       	sec
     e6a:	61 08       	sbc	r6, r1
     e6c:	71 08       	sbc	r7, r1
     e6e:	81 08       	sbc	r8, r1
     e70:	91 08       	sbc	r9, r1
     e72:	a6 0e       	add	r10, r22
     e74:	b7 1e       	adc	r11, r23
     e76:	c8 1e       	adc	r12, r24
     e78:	d9 1e       	adc	r13, r25
     e7a:	d6 01       	movw	r26, r12
     e7c:	c5 01       	movw	r24, r10
     e7e:	82 1b       	sub	r24, r18
     e80:	93 0b       	sbc	r25, r19
     e82:	a4 0b       	sbc	r26, r20
     e84:	b5 0b       	sbc	r27, r21
     e86:	89 8f       	std	Y+25, r24	; 0x19
     e88:	9a 8f       	std	Y+26, r25	; 0x1a
     e8a:	ab 8f       	std	Y+27, r26	; 0x1b
     e8c:	bc 8f       	std	Y+28, r27	; 0x1c
     e8e:	d1 01       	movw	r26, r2
     e90:	99 27       	eor	r25, r25
     e92:	88 27       	eor	r24, r24
     e94:	64 01       	movw	r12, r8
     e96:	53 01       	movw	r10, r6
     e98:	a8 2a       	or	r10, r24
     e9a:	b9 2a       	or	r11, r25
     e9c:	ca 2a       	or	r12, r26
     e9e:	db 2a       	or	r13, r27
     ea0:	a9 aa       	std	Y+49, r10	; 0x31
     ea2:	ba aa       	std	Y+50, r11	; 0x32
     ea4:	cb aa       	std	Y+51, r12	; 0x33
     ea6:	dc aa       	std	Y+52, r13	; 0x34
     ea8:	86 01       	movw	r16, r12
     eaa:	75 01       	movw	r14, r10
     eac:	2f ef       	ldi	r18, 0xFF	; 255
     eae:	3f ef       	ldi	r19, 0xFF	; 255
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	e2 22       	and	r14, r18
     eb6:	f3 22       	and	r15, r19
     eb8:	04 23       	and	r16, r20
     eba:	15 23       	and	r17, r21
     ebc:	a6 01       	movw	r20, r12
     ebe:	66 27       	eor	r22, r22
     ec0:	77 27       	eor	r23, r23
     ec2:	6d 96       	adiw	r28, 0x1d	; 29
     ec4:	4c af       	std	Y+60, r20	; 0x3c
     ec6:	5d af       	std	Y+61, r21	; 0x3d
     ec8:	6e af       	std	Y+62, r22	; 0x3e
     eca:	7f af       	std	Y+63, r23	; 0x3f
     ecc:	6d 97       	sbiw	r28, 0x1d	; 29
     ece:	a9 a0       	ldd	r10, Y+33	; 0x21
     ed0:	ba a0       	ldd	r11, Y+34	; 0x22
     ed2:	cb a0       	ldd	r12, Y+35	; 0x23
     ed4:	dc a0       	ldd	r13, Y+36	; 0x24
     ed6:	6f ef       	ldi	r22, 0xFF	; 255
     ed8:	7f ef       	ldi	r23, 0xFF	; 255
     eda:	80 e0       	ldi	r24, 0x00	; 0
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a6 22       	and	r10, r22
     ee0:	b7 22       	and	r11, r23
     ee2:	c8 22       	and	r12, r24
     ee4:	d9 22       	and	r13, r25
     ee6:	89 a1       	ldd	r24, Y+33	; 0x21
     ee8:	9a a1       	ldd	r25, Y+34	; 0x22
     eea:	ab a1       	ldd	r26, Y+35	; 0x23
     eec:	bc a1       	ldd	r27, Y+36	; 0x24
     eee:	1d 01       	movw	r2, r26
     ef0:	44 24       	eor	r4, r4
     ef2:	55 24       	eor	r5, r5
     ef4:	c8 01       	movw	r24, r16
     ef6:	b7 01       	movw	r22, r14
     ef8:	a6 01       	movw	r20, r12
     efa:	95 01       	movw	r18, r10
     efc:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     f00:	69 96       	adiw	r28, 0x19	; 25
     f02:	6c af       	std	Y+60, r22	; 0x3c
     f04:	7d af       	std	Y+61, r23	; 0x3d
     f06:	8e af       	std	Y+62, r24	; 0x3e
     f08:	9f af       	std	Y+63, r25	; 0x3f
     f0a:	69 97       	sbiw	r28, 0x19	; 25
     f0c:	c8 01       	movw	r24, r16
     f0e:	b7 01       	movw	r22, r14
     f10:	a2 01       	movw	r20, r4
     f12:	91 01       	movw	r18, r2
     f14:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     f18:	3b 01       	movw	r6, r22
     f1a:	4c 01       	movw	r8, r24
     f1c:	6d 96       	adiw	r28, 0x1d	; 29
     f1e:	6c ad       	ldd	r22, Y+60	; 0x3c
     f20:	7d ad       	ldd	r23, Y+61	; 0x3d
     f22:	8e ad       	ldd	r24, Y+62	; 0x3e
     f24:	9f ad       	ldd	r25, Y+63	; 0x3f
     f26:	6d 97       	sbiw	r28, 0x1d	; 29
     f28:	a6 01       	movw	r20, r12
     f2a:	95 01       	movw	r18, r10
     f2c:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     f30:	7b 01       	movw	r14, r22
     f32:	8c 01       	movw	r16, r24
     f34:	6d 96       	adiw	r28, 0x1d	; 29
     f36:	6c ad       	ldd	r22, Y+60	; 0x3c
     f38:	7d ad       	ldd	r23, Y+61	; 0x3d
     f3a:	8e ad       	ldd	r24, Y+62	; 0x3e
     f3c:	9f ad       	ldd	r25, Y+63	; 0x3f
     f3e:	6d 97       	sbiw	r28, 0x1d	; 29
     f40:	a2 01       	movw	r20, r4
     f42:	91 01       	movw	r18, r2
     f44:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
     f48:	5b 01       	movw	r10, r22
     f4a:	6c 01       	movw	r12, r24
     f4c:	a8 01       	movw	r20, r16
     f4e:	97 01       	movw	r18, r14
     f50:	26 0d       	add	r18, r6
     f52:	37 1d       	adc	r19, r7
     f54:	48 1d       	adc	r20, r8
     f56:	59 1d       	adc	r21, r9
     f58:	69 96       	adiw	r28, 0x19	; 25
     f5a:	6c ac       	ldd	r6, Y+60	; 0x3c
     f5c:	7d ac       	ldd	r7, Y+61	; 0x3d
     f5e:	8e ac       	ldd	r8, Y+62	; 0x3e
     f60:	9f ac       	ldd	r9, Y+63	; 0x3f
     f62:	69 97       	sbiw	r28, 0x19	; 25
     f64:	c4 01       	movw	r24, r8
     f66:	aa 27       	eor	r26, r26
     f68:	bb 27       	eor	r27, r27
     f6a:	28 0f       	add	r18, r24
     f6c:	39 1f       	adc	r19, r25
     f6e:	4a 1f       	adc	r20, r26
     f70:	5b 1f       	adc	r21, r27
     f72:	2e 15       	cp	r18, r14
     f74:	3f 05       	cpc	r19, r15
     f76:	40 07       	cpc	r20, r16
     f78:	51 07       	cpc	r21, r17
     f7a:	48 f4       	brcc	.+18     	; 0xf8e <__stack+0x72f>
     f7c:	e1 2c       	mov	r14, r1
     f7e:	f1 2c       	mov	r15, r1
     f80:	61 e0       	ldi	r22, 0x01	; 1
     f82:	06 2f       	mov	r16, r22
     f84:	11 2d       	mov	r17, r1
     f86:	ae 0c       	add	r10, r14
     f88:	bf 1c       	adc	r11, r15
     f8a:	c0 1e       	adc	r12, r16
     f8c:	d1 1e       	adc	r13, r17
     f8e:	ca 01       	movw	r24, r20
     f90:	aa 27       	eor	r26, r26
     f92:	bb 27       	eor	r27, r27
     f94:	bc 01       	movw	r22, r24
     f96:	cd 01       	movw	r24, r26
     f98:	6a 0d       	add	r22, r10
     f9a:	7b 1d       	adc	r23, r11
     f9c:	8c 1d       	adc	r24, r12
     f9e:	9d 1d       	adc	r25, r13
     fa0:	69 8c       	ldd	r6, Y+25	; 0x19
     fa2:	7a 8c       	ldd	r7, Y+26	; 0x1a
     fa4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     fa6:	9c 8c       	ldd	r9, Y+28	; 0x1c
     fa8:	66 16       	cp	r6, r22
     faa:	77 06       	cpc	r7, r23
     fac:	88 06       	cpc	r8, r24
     fae:	99 06       	cpc	r9, r25
     fb0:	40 f1       	brcs	.+80     	; 0x1002 <__stack+0x7a3>
     fb2:	66 15       	cp	r22, r6
     fb4:	77 05       	cpc	r23, r7
     fb6:	88 05       	cpc	r24, r8
     fb8:	99 05       	cpc	r25, r9
     fba:	09 f0       	breq	.+2      	; 0xfbe <__stack+0x75f>
     fbc:	43 c0       	rjmp	.+134    	; 0x1044 <__stack+0x7e5>
     fbe:	d9 01       	movw	r26, r18
     fc0:	99 27       	eor	r25, r25
     fc2:	88 27       	eor	r24, r24
     fc4:	69 96       	adiw	r28, 0x19	; 25
     fc6:	2c ad       	ldd	r18, Y+60	; 0x3c
     fc8:	3d ad       	ldd	r19, Y+61	; 0x3d
     fca:	4e ad       	ldd	r20, Y+62	; 0x3e
     fcc:	5f ad       	ldd	r21, Y+63	; 0x3f
     fce:	69 97       	sbiw	r28, 0x19	; 25
     fd0:	40 70       	andi	r20, 0x00	; 0
     fd2:	50 70       	andi	r21, 0x00	; 0
     fd4:	82 0f       	add	r24, r18
     fd6:	93 1f       	adc	r25, r19
     fd8:	a4 1f       	adc	r26, r20
     fda:	b5 1f       	adc	r27, r21
     fdc:	2d a5       	ldd	r18, Y+45	; 0x2d
     fde:	3e a5       	ldd	r19, Y+46	; 0x2e
     fe0:	4f a5       	ldd	r20, Y+47	; 0x2f
     fe2:	58 a9       	ldd	r21, Y+48	; 0x30
     fe4:	6e 96       	adiw	r28, 0x1e	; 30
     fe6:	0f ac       	ldd	r0, Y+63	; 0x3f
     fe8:	6e 97       	sbiw	r28, 0x1e	; 30
     fea:	04 c0       	rjmp	.+8      	; 0xff4 <__stack+0x795>
     fec:	22 0f       	add	r18, r18
     fee:	33 1f       	adc	r19, r19
     ff0:	44 1f       	adc	r20, r20
     ff2:	55 1f       	adc	r21, r21
     ff4:	0a 94       	dec	r0
     ff6:	d2 f7       	brpl	.-12     	; 0xfec <__stack+0x78d>
     ff8:	28 17       	cp	r18, r24
     ffa:	39 07       	cpc	r19, r25
     ffc:	4a 07       	cpc	r20, r26
     ffe:	5b 07       	cpc	r21, r27
    1000:	08 f5       	brcc	.+66     	; 0x1044 <__stack+0x7e5>
    1002:	09 a9       	ldd	r16, Y+49	; 0x31
    1004:	1a a9       	ldd	r17, Y+50	; 0x32
    1006:	2b a9       	ldd	r18, Y+51	; 0x33
    1008:	3c a9       	ldd	r19, Y+52	; 0x34
    100a:	01 50       	subi	r16, 0x01	; 1
    100c:	10 40       	sbci	r17, 0x00	; 0
    100e:	20 40       	sbci	r18, 0x00	; 0
    1010:	30 40       	sbci	r19, 0x00	; 0
    1012:	09 ab       	std	Y+49, r16	; 0x31
    1014:	1a ab       	std	Y+50, r17	; 0x32
    1016:	2b ab       	std	Y+51, r18	; 0x33
    1018:	3c ab       	std	Y+52, r19	; 0x34
    101a:	14 c0       	rjmp	.+40     	; 0x1044 <__stack+0x7e5>
    101c:	66 24       	eor	r6, r6
    101e:	77 24       	eor	r7, r7
    1020:	43 01       	movw	r8, r6
    1022:	21 e0       	ldi	r18, 0x01	; 1
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	40 e0       	ldi	r20, 0x00	; 0
    1028:	50 e0       	ldi	r21, 0x00	; 0
    102a:	29 ab       	std	Y+49, r18	; 0x31
    102c:	3a ab       	std	Y+50, r19	; 0x32
    102e:	4b ab       	std	Y+51, r20	; 0x33
    1030:	5c ab       	std	Y+52, r21	; 0x34
    1032:	0b c0       	rjmp	.+22     	; 0x104a <__stack+0x7eb>
    1034:	66 24       	eor	r6, r6
    1036:	77 24       	eor	r7, r7
    1038:	43 01       	movw	r8, r6
    103a:	19 aa       	std	Y+49, r1	; 0x31
    103c:	1a aa       	std	Y+50, r1	; 0x32
    103e:	1b aa       	std	Y+51, r1	; 0x33
    1040:	1c aa       	std	Y+52, r1	; 0x34
    1042:	03 c0       	rjmp	.+6      	; 0x104a <__stack+0x7eb>
    1044:	66 24       	eor	r6, r6
    1046:	77 24       	eor	r7, r7
    1048:	43 01       	movw	r8, r6
    104a:	fe 01       	movw	r30, r28
    104c:	71 96       	adiw	r30, 0x11	; 17
    104e:	88 e0       	ldi	r24, 0x08	; 8
    1050:	df 01       	movw	r26, r30
    1052:	1d 92       	st	X+, r1
    1054:	8a 95       	dec	r24
    1056:	e9 f7       	brne	.-6      	; 0x1052 <__stack+0x7f3>
    1058:	a9 a8       	ldd	r10, Y+49	; 0x31
    105a:	ba a8       	ldd	r11, Y+50	; 0x32
    105c:	cb a8       	ldd	r12, Y+51	; 0x33
    105e:	dc a8       	ldd	r13, Y+52	; 0x34
    1060:	a9 8a       	std	Y+17, r10	; 0x11
    1062:	ba 8a       	std	Y+18, r11	; 0x12
    1064:	cb 8a       	std	Y+19, r12	; 0x13
    1066:	dc 8a       	std	Y+20, r13	; 0x14
    1068:	6d 8a       	std	Y+21, r6	; 0x15
    106a:	7e 8a       	std	Y+22, r7	; 0x16
    106c:	8f 8a       	std	Y+23, r8	; 0x17
    106e:	98 8e       	std	Y+24, r9	; 0x18
    1070:	29 a9       	ldd	r18, Y+49	; 0x31
    1072:	3a 89       	ldd	r19, Y+18	; 0x12
    1074:	4b 89       	ldd	r20, Y+19	; 0x13
    1076:	5c 89       	ldd	r21, Y+20	; 0x14
    1078:	66 2d       	mov	r22, r6
    107a:	7e 89       	ldd	r23, Y+22	; 0x16
    107c:	8f 89       	ldd	r24, Y+23	; 0x17
    107e:	98 8d       	ldd	r25, Y+24	; 0x18
    1080:	c2 5a       	subi	r28, 0xA2	; 162
    1082:	df 4f       	sbci	r29, 0xFF	; 255
    1084:	e2 e1       	ldi	r30, 0x12	; 18
    1086:	0c 94 83 2e 	jmp	0x5d06	; 0x5d06 <__epilogue_restores__>

0000108a <__umoddi3>:
    108a:	ab e5       	ldi	r26, 0x5B	; 91
    108c:	b0 e0       	ldi	r27, 0x00	; 0
    108e:	eb e4       	ldi	r30, 0x4B	; 75
    1090:	f8 e0       	ldi	r31, 0x08	; 8
    1092:	0c 94 67 2e 	jmp	0x5cce	; 0x5cce <__prologue_saves__>
    1096:	a8 e0       	ldi	r26, 0x08	; 8
    1098:	4e 01       	movw	r8, r28
    109a:	08 94       	sec
    109c:	81 1c       	adc	r8, r1
    109e:	91 1c       	adc	r9, r1
    10a0:	f4 01       	movw	r30, r8
    10a2:	6a 2e       	mov	r6, r26
    10a4:	11 92       	st	Z+, r1
    10a6:	6a 94       	dec	r6
    10a8:	e9 f7       	brne	.-6      	; 0x10a4 <__umoddi3+0x1a>
    10aa:	29 83       	std	Y+1, r18	; 0x01
    10ac:	3a 83       	std	Y+2, r19	; 0x02
    10ae:	4b 83       	std	Y+3, r20	; 0x03
    10b0:	5c 83       	std	Y+4, r21	; 0x04
    10b2:	6d 83       	std	Y+5, r22	; 0x05
    10b4:	7e 83       	std	Y+6, r23	; 0x06
    10b6:	8f 83       	std	Y+7, r24	; 0x07
    10b8:	98 87       	std	Y+8, r25	; 0x08
    10ba:	ce 01       	movw	r24, r28
    10bc:	09 96       	adiw	r24, 0x09	; 9
    10be:	fc 01       	movw	r30, r24
    10c0:	11 92       	st	Z+, r1
    10c2:	aa 95       	dec	r26
    10c4:	e9 f7       	brne	.-6      	; 0x10c0 <__umoddi3+0x36>
    10c6:	a9 86       	std	Y+9, r10	; 0x09
    10c8:	ba 86       	std	Y+10, r11	; 0x0a
    10ca:	cb 86       	std	Y+11, r12	; 0x0b
    10cc:	dc 86       	std	Y+12, r13	; 0x0c
    10ce:	ed 86       	std	Y+13, r14	; 0x0d
    10d0:	fe 86       	std	Y+14, r15	; 0x0e
    10d2:	0f 87       	std	Y+15, r16	; 0x0f
    10d4:	18 8b       	std	Y+16, r17	; 0x10
    10d6:	29 84       	ldd	r2, Y+9	; 0x09
    10d8:	3a 84       	ldd	r3, Y+10	; 0x0a
    10da:	4b 84       	ldd	r4, Y+11	; 0x0b
    10dc:	5c 84       	ldd	r5, Y+12	; 0x0c
    10de:	ad 84       	ldd	r10, Y+13	; 0x0d
    10e0:	be 84       	ldd	r11, Y+14	; 0x0e
    10e2:	cf 84       	ldd	r12, Y+15	; 0x0f
    10e4:	d8 88       	ldd	r13, Y+16	; 0x10
    10e6:	29 81       	ldd	r18, Y+1	; 0x01
    10e8:	3a 81       	ldd	r19, Y+2	; 0x02
    10ea:	4b 81       	ldd	r20, Y+3	; 0x03
    10ec:	5c 81       	ldd	r21, Y+4	; 0x04
    10ee:	69 96       	adiw	r28, 0x19	; 25
    10f0:	2f af       	std	Y+63, r18	; 0x3f
    10f2:	69 97       	sbiw	r28, 0x19	; 25
    10f4:	6a 96       	adiw	r28, 0x1a	; 26
    10f6:	3f af       	std	Y+63, r19	; 0x3f
    10f8:	6a 97       	sbiw	r28, 0x1a	; 26
    10fa:	6b 96       	adiw	r28, 0x1b	; 27
    10fc:	4f af       	std	Y+63, r20	; 0x3f
    10fe:	6b 97       	sbiw	r28, 0x1b	; 27
    1100:	6c 96       	adiw	r28, 0x1c	; 28
    1102:	5f af       	std	Y+63, r21	; 0x3f
    1104:	6c 97       	sbiw	r28, 0x1c	; 28
    1106:	6c 96       	adiw	r28, 0x1c	; 28
    1108:	6c ac       	ldd	r6, Y+60	; 0x3c
    110a:	7d ac       	ldd	r7, Y+61	; 0x3d
    110c:	8e ac       	ldd	r8, Y+62	; 0x3e
    110e:	9f ac       	ldd	r9, Y+63	; 0x3f
    1110:	6c 97       	sbiw	r28, 0x1c	; 28
    1112:	69 aa       	std	Y+49, r6	; 0x31
    1114:	7a aa       	std	Y+50, r7	; 0x32
    1116:	8b aa       	std	Y+51, r8	; 0x33
    1118:	9c aa       	std	Y+52, r9	; 0x34
    111a:	6d 81       	ldd	r22, Y+5	; 0x05
    111c:	7e 81       	ldd	r23, Y+6	; 0x06
    111e:	8f 81       	ldd	r24, Y+7	; 0x07
    1120:	98 85       	ldd	r25, Y+8	; 0x08
    1122:	3b 01       	movw	r6, r22
    1124:	4c 01       	movw	r8, r24
    1126:	6d aa       	std	Y+53, r6	; 0x35
    1128:	7e aa       	std	Y+54, r7	; 0x36
    112a:	8f aa       	std	Y+55, r8	; 0x37
    112c:	98 ae       	std	Y+56, r9	; 0x38
    112e:	a1 14       	cp	r10, r1
    1130:	b1 04       	cpc	r11, r1
    1132:	c1 04       	cpc	r12, r1
    1134:	d1 04       	cpc	r13, r1
    1136:	09 f0       	breq	.+2      	; 0x113a <__umoddi3+0xb0>
    1138:	04 c3       	rjmp	.+1544   	; 0x1742 <__umoddi3+0x6b8>
    113a:	62 14       	cp	r6, r2
    113c:	73 04       	cpc	r7, r3
    113e:	84 04       	cpc	r8, r4
    1140:	95 04       	cpc	r9, r5
    1142:	08 f0       	brcs	.+2      	; 0x1146 <__umoddi3+0xbc>
    1144:	00 c1       	rjmp	.+512    	; 0x1346 <__umoddi3+0x2bc>
    1146:	00 e0       	ldi	r16, 0x00	; 0
    1148:	20 16       	cp	r2, r16
    114a:	00 e0       	ldi	r16, 0x00	; 0
    114c:	30 06       	cpc	r3, r16
    114e:	01 e0       	ldi	r16, 0x01	; 1
    1150:	40 06       	cpc	r4, r16
    1152:	00 e0       	ldi	r16, 0x00	; 0
    1154:	50 06       	cpc	r5, r16
    1156:	88 f4       	brcc	.+34     	; 0x117a <__umoddi3+0xf0>
    1158:	1f ef       	ldi	r17, 0xFF	; 255
    115a:	21 16       	cp	r2, r17
    115c:	31 04       	cpc	r3, r1
    115e:	41 04       	cpc	r4, r1
    1160:	51 04       	cpc	r5, r1
    1162:	39 f0       	breq	.+14     	; 0x1172 <__umoddi3+0xe8>
    1164:	30 f0       	brcs	.+12     	; 0x1172 <__umoddi3+0xe8>
    1166:	88 e0       	ldi	r24, 0x08	; 8
    1168:	e8 2e       	mov	r14, r24
    116a:	f1 2c       	mov	r15, r1
    116c:	01 2d       	mov	r16, r1
    116e:	11 2d       	mov	r17, r1
    1170:	18 c0       	rjmp	.+48     	; 0x11a2 <__umoddi3+0x118>
    1172:	ee 24       	eor	r14, r14
    1174:	ff 24       	eor	r15, r15
    1176:	87 01       	movw	r16, r14
    1178:	14 c0       	rjmp	.+40     	; 0x11a2 <__umoddi3+0x118>
    117a:	40 e0       	ldi	r20, 0x00	; 0
    117c:	24 16       	cp	r2, r20
    117e:	40 e0       	ldi	r20, 0x00	; 0
    1180:	34 06       	cpc	r3, r20
    1182:	40 e0       	ldi	r20, 0x00	; 0
    1184:	44 06       	cpc	r4, r20
    1186:	41 e0       	ldi	r20, 0x01	; 1
    1188:	54 06       	cpc	r5, r20
    118a:	30 f0       	brcs	.+12     	; 0x1198 <__umoddi3+0x10e>
    118c:	b8 e1       	ldi	r27, 0x18	; 24
    118e:	eb 2e       	mov	r14, r27
    1190:	f1 2c       	mov	r15, r1
    1192:	01 2d       	mov	r16, r1
    1194:	11 2d       	mov	r17, r1
    1196:	05 c0       	rjmp	.+10     	; 0x11a2 <__umoddi3+0x118>
    1198:	a0 e1       	ldi	r26, 0x10	; 16
    119a:	ea 2e       	mov	r14, r26
    119c:	f1 2c       	mov	r15, r1
    119e:	01 2d       	mov	r16, r1
    11a0:	11 2d       	mov	r17, r1
    11a2:	d2 01       	movw	r26, r4
    11a4:	c1 01       	movw	r24, r2
    11a6:	0e 2c       	mov	r0, r14
    11a8:	04 c0       	rjmp	.+8      	; 0x11b2 <__umoddi3+0x128>
    11aa:	b6 95       	lsr	r27
    11ac:	a7 95       	ror	r26
    11ae:	97 95       	ror	r25
    11b0:	87 95       	ror	r24
    11b2:	0a 94       	dec	r0
    11b4:	d2 f7       	brpl	.-12     	; 0x11aa <__umoddi3+0x120>
    11b6:	85 59       	subi	r24, 0x95	; 149
    11b8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ba:	dc 01       	movw	r26, r24
    11bc:	2c 91       	ld	r18, X
    11be:	80 e2       	ldi	r24, 0x20	; 32
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	a0 e0       	ldi	r26, 0x00	; 0
    11c4:	b0 e0       	ldi	r27, 0x00	; 0
    11c6:	8e 19       	sub	r24, r14
    11c8:	9f 09       	sbc	r25, r15
    11ca:	a0 0b       	sbc	r26, r16
    11cc:	b1 0b       	sbc	r27, r17
    11ce:	5c 01       	movw	r10, r24
    11d0:	6d 01       	movw	r12, r26
    11d2:	a2 1a       	sub	r10, r18
    11d4:	b1 08       	sbc	r11, r1
    11d6:	c1 08       	sbc	r12, r1
    11d8:	d1 08       	sbc	r13, r1
    11da:	a9 ae       	std	Y+57, r10	; 0x39
    11dc:	ba ae       	std	Y+58, r11	; 0x3a
    11de:	cb ae       	std	Y+59, r12	; 0x3b
    11e0:	dc ae       	std	Y+60, r13	; 0x3c
    11e2:	a1 14       	cp	r10, r1
    11e4:	b1 04       	cpc	r11, r1
    11e6:	c1 04       	cpc	r12, r1
    11e8:	d1 04       	cpc	r13, r1
    11ea:	09 f4       	brne	.+2      	; 0x11ee <__umoddi3+0x164>
    11ec:	3f c0       	rjmp	.+126    	; 0x126c <__umoddi3+0x1e2>
    11ee:	69 ad       	ldd	r22, Y+57	; 0x39
    11f0:	06 2e       	mov	r0, r22
    11f2:	04 c0       	rjmp	.+8      	; 0x11fc <__umoddi3+0x172>
    11f4:	22 0c       	add	r2, r2
    11f6:	33 1c       	adc	r3, r3
    11f8:	44 1c       	adc	r4, r4
    11fa:	55 1c       	adc	r5, r5
    11fc:	0a 94       	dec	r0
    11fe:	d2 f7       	brpl	.-12     	; 0x11f4 <__umoddi3+0x16a>
    1200:	a4 01       	movw	r20, r8
    1202:	93 01       	movw	r18, r6
    1204:	06 2e       	mov	r0, r22
    1206:	04 c0       	rjmp	.+8      	; 0x1210 <__umoddi3+0x186>
    1208:	22 0f       	add	r18, r18
    120a:	33 1f       	adc	r19, r19
    120c:	44 1f       	adc	r20, r20
    120e:	55 1f       	adc	r21, r21
    1210:	0a 94       	dec	r0
    1212:	d2 f7       	brpl	.-12     	; 0x1208 <__umoddi3+0x17e>
    1214:	80 e2       	ldi	r24, 0x20	; 32
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	8a 19       	sub	r24, r10
    121a:	9b 09       	sbc	r25, r11
    121c:	6c 96       	adiw	r28, 0x1c	; 28
    121e:	cc ac       	ldd	r12, Y+60	; 0x3c
    1220:	dd ac       	ldd	r13, Y+61	; 0x3d
    1222:	ee ac       	ldd	r14, Y+62	; 0x3e
    1224:	ff ac       	ldd	r15, Y+63	; 0x3f
    1226:	6c 97       	sbiw	r28, 0x1c	; 28
    1228:	04 c0       	rjmp	.+8      	; 0x1232 <__umoddi3+0x1a8>
    122a:	f6 94       	lsr	r15
    122c:	e7 94       	ror	r14
    122e:	d7 94       	ror	r13
    1230:	c7 94       	ror	r12
    1232:	8a 95       	dec	r24
    1234:	d2 f7       	brpl	.-12     	; 0x122a <__umoddi3+0x1a0>
    1236:	87 01       	movw	r16, r14
    1238:	76 01       	movw	r14, r12
    123a:	e2 2a       	or	r14, r18
    123c:	f3 2a       	or	r15, r19
    123e:	04 2b       	or	r16, r20
    1240:	15 2b       	or	r17, r21
    1242:	ed aa       	std	Y+53, r14	; 0x35
    1244:	fe aa       	std	Y+54, r15	; 0x36
    1246:	0f ab       	std	Y+55, r16	; 0x37
    1248:	18 af       	std	Y+56, r17	; 0x38
    124a:	6c 96       	adiw	r28, 0x1c	; 28
    124c:	8c ad       	ldd	r24, Y+60	; 0x3c
    124e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1250:	ae ad       	ldd	r26, Y+62	; 0x3e
    1252:	bf ad       	ldd	r27, Y+63	; 0x3f
    1254:	6c 97       	sbiw	r28, 0x1c	; 28
    1256:	04 c0       	rjmp	.+8      	; 0x1260 <__umoddi3+0x1d6>
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	aa 1f       	adc	r26, r26
    125e:	bb 1f       	adc	r27, r27
    1260:	6a 95       	dec	r22
    1262:	d2 f7       	brpl	.-12     	; 0x1258 <__umoddi3+0x1ce>
    1264:	89 ab       	std	Y+49, r24	; 0x31
    1266:	9a ab       	std	Y+50, r25	; 0x32
    1268:	ab ab       	std	Y+51, r26	; 0x33
    126a:	bc ab       	std	Y+52, r27	; 0x34
    126c:	32 01       	movw	r6, r4
    126e:	88 24       	eor	r8, r8
    1270:	99 24       	eor	r9, r9
    1272:	b2 01       	movw	r22, r4
    1274:	a1 01       	movw	r20, r2
    1276:	60 70       	andi	r22, 0x00	; 0
    1278:	70 70       	andi	r23, 0x00	; 0
    127a:	21 96       	adiw	r28, 0x01	; 1
    127c:	4c af       	std	Y+60, r20	; 0x3c
    127e:	5d af       	std	Y+61, r21	; 0x3d
    1280:	6e af       	std	Y+62, r22	; 0x3e
    1282:	7f af       	std	Y+63, r23	; 0x3f
    1284:	21 97       	sbiw	r28, 0x01	; 1
    1286:	6d a9       	ldd	r22, Y+53	; 0x35
    1288:	7e a9       	ldd	r23, Y+54	; 0x36
    128a:	8f a9       	ldd	r24, Y+55	; 0x37
    128c:	98 ad       	ldd	r25, Y+56	; 0x38
    128e:	a4 01       	movw	r20, r8
    1290:	93 01       	movw	r18, r6
    1292:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1296:	7b 01       	movw	r14, r22
    1298:	8c 01       	movw	r16, r24
    129a:	6d a9       	ldd	r22, Y+53	; 0x35
    129c:	7e a9       	ldd	r23, Y+54	; 0x36
    129e:	8f a9       	ldd	r24, Y+55	; 0x37
    12a0:	98 ad       	ldd	r25, Y+56	; 0x38
    12a2:	a4 01       	movw	r20, r8
    12a4:	93 01       	movw	r18, r6
    12a6:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    12aa:	ca 01       	movw	r24, r20
    12ac:	b9 01       	movw	r22, r18
    12ae:	21 96       	adiw	r28, 0x01	; 1
    12b0:	2c ad       	ldd	r18, Y+60	; 0x3c
    12b2:	3d ad       	ldd	r19, Y+61	; 0x3d
    12b4:	4e ad       	ldd	r20, Y+62	; 0x3e
    12b6:	5f ad       	ldd	r21, Y+63	; 0x3f
    12b8:	21 97       	sbiw	r28, 0x01	; 1
    12ba:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    12be:	9b 01       	movw	r18, r22
    12c0:	ac 01       	movw	r20, r24
    12c2:	87 01       	movw	r16, r14
    12c4:	ff 24       	eor	r15, r15
    12c6:	ee 24       	eor	r14, r14
    12c8:	a9 a8       	ldd	r10, Y+49	; 0x31
    12ca:	ba a8       	ldd	r11, Y+50	; 0x32
    12cc:	cb a8       	ldd	r12, Y+51	; 0x33
    12ce:	dc a8       	ldd	r13, Y+52	; 0x34
    12d0:	c6 01       	movw	r24, r12
    12d2:	aa 27       	eor	r26, r26
    12d4:	bb 27       	eor	r27, r27
    12d6:	57 01       	movw	r10, r14
    12d8:	68 01       	movw	r12, r16
    12da:	a8 2a       	or	r10, r24
    12dc:	b9 2a       	or	r11, r25
    12de:	ca 2a       	or	r12, r26
    12e0:	db 2a       	or	r13, r27
    12e2:	a2 16       	cp	r10, r18
    12e4:	b3 06       	cpc	r11, r19
    12e6:	c4 06       	cpc	r12, r20
    12e8:	d5 06       	cpc	r13, r21
    12ea:	90 f4       	brcc	.+36     	; 0x1310 <__umoddi3+0x286>
    12ec:	a2 0c       	add	r10, r2
    12ee:	b3 1c       	adc	r11, r3
    12f0:	c4 1c       	adc	r12, r4
    12f2:	d5 1c       	adc	r13, r5
    12f4:	a2 14       	cp	r10, r2
    12f6:	b3 04       	cpc	r11, r3
    12f8:	c4 04       	cpc	r12, r4
    12fa:	d5 04       	cpc	r13, r5
    12fc:	48 f0       	brcs	.+18     	; 0x1310 <__umoddi3+0x286>
    12fe:	a2 16       	cp	r10, r18
    1300:	b3 06       	cpc	r11, r19
    1302:	c4 06       	cpc	r12, r20
    1304:	d5 06       	cpc	r13, r21
    1306:	20 f4       	brcc	.+8      	; 0x1310 <__umoddi3+0x286>
    1308:	a2 0c       	add	r10, r2
    130a:	b3 1c       	adc	r11, r3
    130c:	c4 1c       	adc	r12, r4
    130e:	d5 1c       	adc	r13, r5
    1310:	a2 1a       	sub	r10, r18
    1312:	b3 0a       	sbc	r11, r19
    1314:	c4 0a       	sbc	r12, r20
    1316:	d5 0a       	sbc	r13, r21
    1318:	c6 01       	movw	r24, r12
    131a:	b5 01       	movw	r22, r10
    131c:	a4 01       	movw	r20, r8
    131e:	93 01       	movw	r18, r6
    1320:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1324:	7b 01       	movw	r14, r22
    1326:	8c 01       	movw	r16, r24
    1328:	c6 01       	movw	r24, r12
    132a:	b5 01       	movw	r22, r10
    132c:	a4 01       	movw	r20, r8
    132e:	93 01       	movw	r18, r6
    1330:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1334:	ca 01       	movw	r24, r20
    1336:	b9 01       	movw	r22, r18
    1338:	21 96       	adiw	r28, 0x01	; 1
    133a:	2c ad       	ldd	r18, Y+60	; 0x3c
    133c:	3d ad       	ldd	r19, Y+61	; 0x3d
    133e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1340:	5f ad       	ldd	r21, Y+63	; 0x3f
    1342:	21 97       	sbiw	r28, 0x01	; 1
    1344:	ba c1       	rjmp	.+884    	; 0x16ba <__umoddi3+0x630>
    1346:	21 14       	cp	r2, r1
    1348:	31 04       	cpc	r3, r1
    134a:	41 04       	cpc	r4, r1
    134c:	51 04       	cpc	r5, r1
    134e:	71 f4       	brne	.+28     	; 0x136c <__umoddi3+0x2e2>
    1350:	61 e0       	ldi	r22, 0x01	; 1
    1352:	70 e0       	ldi	r23, 0x00	; 0
    1354:	80 e0       	ldi	r24, 0x00	; 0
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	20 e0       	ldi	r18, 0x00	; 0
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	40 e0       	ldi	r20, 0x00	; 0
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1364:	c9 01       	movw	r24, r18
    1366:	da 01       	movw	r26, r20
    1368:	1c 01       	movw	r2, r24
    136a:	2d 01       	movw	r4, r26
    136c:	00 e0       	ldi	r16, 0x00	; 0
    136e:	20 16       	cp	r2, r16
    1370:	00 e0       	ldi	r16, 0x00	; 0
    1372:	30 06       	cpc	r3, r16
    1374:	01 e0       	ldi	r16, 0x01	; 1
    1376:	40 06       	cpc	r4, r16
    1378:	00 e0       	ldi	r16, 0x00	; 0
    137a:	50 06       	cpc	r5, r16
    137c:	88 f4       	brcc	.+34     	; 0x13a0 <__umoddi3+0x316>
    137e:	1f ef       	ldi	r17, 0xFF	; 255
    1380:	21 16       	cp	r2, r17
    1382:	31 04       	cpc	r3, r1
    1384:	41 04       	cpc	r4, r1
    1386:	51 04       	cpc	r5, r1
    1388:	39 f0       	breq	.+14     	; 0x1398 <__umoddi3+0x30e>
    138a:	30 f0       	brcs	.+12     	; 0x1398 <__umoddi3+0x30e>
    138c:	68 e0       	ldi	r22, 0x08	; 8
    138e:	e6 2e       	mov	r14, r22
    1390:	f1 2c       	mov	r15, r1
    1392:	01 2d       	mov	r16, r1
    1394:	11 2d       	mov	r17, r1
    1396:	18 c0       	rjmp	.+48     	; 0x13c8 <__umoddi3+0x33e>
    1398:	ee 24       	eor	r14, r14
    139a:	ff 24       	eor	r15, r15
    139c:	87 01       	movw	r16, r14
    139e:	14 c0       	rjmp	.+40     	; 0x13c8 <__umoddi3+0x33e>
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	24 16       	cp	r2, r20
    13a4:	40 e0       	ldi	r20, 0x00	; 0
    13a6:	34 06       	cpc	r3, r20
    13a8:	40 e0       	ldi	r20, 0x00	; 0
    13aa:	44 06       	cpc	r4, r20
    13ac:	41 e0       	ldi	r20, 0x01	; 1
    13ae:	54 06       	cpc	r5, r20
    13b0:	30 f0       	brcs	.+12     	; 0x13be <__umoddi3+0x334>
    13b2:	58 e1       	ldi	r21, 0x18	; 24
    13b4:	e5 2e       	mov	r14, r21
    13b6:	f1 2c       	mov	r15, r1
    13b8:	01 2d       	mov	r16, r1
    13ba:	11 2d       	mov	r17, r1
    13bc:	05 c0       	rjmp	.+10     	; 0x13c8 <__umoddi3+0x33e>
    13be:	40 e1       	ldi	r20, 0x10	; 16
    13c0:	e4 2e       	mov	r14, r20
    13c2:	f1 2c       	mov	r15, r1
    13c4:	01 2d       	mov	r16, r1
    13c6:	11 2d       	mov	r17, r1
    13c8:	d2 01       	movw	r26, r4
    13ca:	c1 01       	movw	r24, r2
    13cc:	0e 2c       	mov	r0, r14
    13ce:	04 c0       	rjmp	.+8      	; 0x13d8 <__umoddi3+0x34e>
    13d0:	b6 95       	lsr	r27
    13d2:	a7 95       	ror	r26
    13d4:	97 95       	ror	r25
    13d6:	87 95       	ror	r24
    13d8:	0a 94       	dec	r0
    13da:	d2 f7       	brpl	.-12     	; 0x13d0 <__umoddi3+0x346>
    13dc:	85 59       	subi	r24, 0x95	; 149
    13de:	9f 4f       	sbci	r25, 0xFF	; 255
    13e0:	dc 01       	movw	r26, r24
    13e2:	2c 91       	ld	r18, X
    13e4:	30 e2       	ldi	r19, 0x20	; 32
    13e6:	a3 2e       	mov	r10, r19
    13e8:	b1 2c       	mov	r11, r1
    13ea:	c1 2c       	mov	r12, r1
    13ec:	d1 2c       	mov	r13, r1
    13ee:	d6 01       	movw	r26, r12
    13f0:	c5 01       	movw	r24, r10
    13f2:	8e 19       	sub	r24, r14
    13f4:	9f 09       	sbc	r25, r15
    13f6:	a0 0b       	sbc	r26, r16
    13f8:	b1 0b       	sbc	r27, r17
    13fa:	7c 01       	movw	r14, r24
    13fc:	8d 01       	movw	r16, r26
    13fe:	e2 1a       	sub	r14, r18
    1400:	f1 08       	sbc	r15, r1
    1402:	01 09       	sbc	r16, r1
    1404:	11 09       	sbc	r17, r1
    1406:	e9 ae       	std	Y+57, r14	; 0x39
    1408:	fa ae       	std	Y+58, r15	; 0x3a
    140a:	0b af       	std	Y+59, r16	; 0x3b
    140c:	1c af       	std	Y+60, r17	; 0x3c
    140e:	e1 14       	cp	r14, r1
    1410:	f1 04       	cpc	r15, r1
    1412:	01 05       	cpc	r16, r1
    1414:	11 05       	cpc	r17, r1
    1416:	39 f4       	brne	.+14     	; 0x1426 <__umoddi3+0x39c>
    1418:	64 01       	movw	r12, r8
    141a:	53 01       	movw	r10, r6
    141c:	a2 18       	sub	r10, r2
    141e:	b3 08       	sbc	r11, r3
    1420:	c4 08       	sbc	r12, r4
    1422:	d5 08       	sbc	r13, r5
    1424:	e2 c0       	rjmp	.+452    	; 0x15ea <__umoddi3+0x560>
    1426:	f9 ac       	ldd	r15, Y+57	; 0x39
    1428:	68 96       	adiw	r28, 0x18	; 24
    142a:	ff ae       	std	Y+63, r15	; 0x3f
    142c:	68 97       	sbiw	r28, 0x18	; 24
    142e:	0f 2c       	mov	r0, r15
    1430:	04 c0       	rjmp	.+8      	; 0x143a <__umoddi3+0x3b0>
    1432:	22 0c       	add	r2, r2
    1434:	33 1c       	adc	r3, r3
    1436:	44 1c       	adc	r4, r4
    1438:	55 1c       	adc	r5, r5
    143a:	0a 94       	dec	r0
    143c:	d2 f7       	brpl	.-12     	; 0x1432 <__umoddi3+0x3a8>
    143e:	8a 2d       	mov	r24, r10
    1440:	8f 19       	sub	r24, r15
    1442:	64 01       	movw	r12, r8
    1444:	53 01       	movw	r10, r6
    1446:	08 2e       	mov	r0, r24
    1448:	04 c0       	rjmp	.+8      	; 0x1452 <__umoddi3+0x3c8>
    144a:	d6 94       	lsr	r13
    144c:	c7 94       	ror	r12
    144e:	b7 94       	ror	r11
    1450:	a7 94       	ror	r10
    1452:	0a 94       	dec	r0
    1454:	d2 f7       	brpl	.-12     	; 0x144a <__umoddi3+0x3c0>
    1456:	a4 01       	movw	r20, r8
    1458:	93 01       	movw	r18, r6
    145a:	04 c0       	rjmp	.+8      	; 0x1464 <__umoddi3+0x3da>
    145c:	22 0f       	add	r18, r18
    145e:	33 1f       	adc	r19, r19
    1460:	44 1f       	adc	r20, r20
    1462:	55 1f       	adc	r21, r21
    1464:	fa 94       	dec	r15
    1466:	d2 f7       	brpl	.-12     	; 0x145c <__umoddi3+0x3d2>
    1468:	6c 96       	adiw	r28, 0x1c	; 28
    146a:	6c ac       	ldd	r6, Y+60	; 0x3c
    146c:	7d ac       	ldd	r7, Y+61	; 0x3d
    146e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1470:	9f ac       	ldd	r9, Y+63	; 0x3f
    1472:	6c 97       	sbiw	r28, 0x1c	; 28
    1474:	04 c0       	rjmp	.+8      	; 0x147e <__umoddi3+0x3f4>
    1476:	96 94       	lsr	r9
    1478:	87 94       	ror	r8
    147a:	77 94       	ror	r7
    147c:	67 94       	ror	r6
    147e:	8a 95       	dec	r24
    1480:	d2 f7       	brpl	.-12     	; 0x1476 <__umoddi3+0x3ec>
    1482:	84 01       	movw	r16, r8
    1484:	73 01       	movw	r14, r6
    1486:	e2 2a       	or	r14, r18
    1488:	f3 2a       	or	r15, r19
    148a:	04 2b       	or	r16, r20
    148c:	15 2b       	or	r17, r21
    148e:	ed a6       	std	Y+45, r14	; 0x2d
    1490:	fe a6       	std	Y+46, r15	; 0x2e
    1492:	0f a7       	std	Y+47, r16	; 0x2f
    1494:	18 ab       	std	Y+48, r17	; 0x30
    1496:	32 01       	movw	r6, r4
    1498:	88 24       	eor	r8, r8
    149a:	99 24       	eor	r9, r9
    149c:	b2 01       	movw	r22, r4
    149e:	a1 01       	movw	r20, r2
    14a0:	60 70       	andi	r22, 0x00	; 0
    14a2:	70 70       	andi	r23, 0x00	; 0
    14a4:	25 96       	adiw	r28, 0x05	; 5
    14a6:	4c af       	std	Y+60, r20	; 0x3c
    14a8:	5d af       	std	Y+61, r21	; 0x3d
    14aa:	6e af       	std	Y+62, r22	; 0x3e
    14ac:	7f af       	std	Y+63, r23	; 0x3f
    14ae:	25 97       	sbiw	r28, 0x05	; 5
    14b0:	c6 01       	movw	r24, r12
    14b2:	b5 01       	movw	r22, r10
    14b4:	a4 01       	movw	r20, r8
    14b6:	93 01       	movw	r18, r6
    14b8:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    14bc:	7b 01       	movw	r14, r22
    14be:	8c 01       	movw	r16, r24
    14c0:	c6 01       	movw	r24, r12
    14c2:	b5 01       	movw	r22, r10
    14c4:	a4 01       	movw	r20, r8
    14c6:	93 01       	movw	r18, r6
    14c8:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    14cc:	ca 01       	movw	r24, r20
    14ce:	b9 01       	movw	r22, r18
    14d0:	25 96       	adiw	r28, 0x05	; 5
    14d2:	2c ad       	ldd	r18, Y+60	; 0x3c
    14d4:	3d ad       	ldd	r19, Y+61	; 0x3d
    14d6:	4e ad       	ldd	r20, Y+62	; 0x3e
    14d8:	5f ad       	ldd	r21, Y+63	; 0x3f
    14da:	25 97       	sbiw	r28, 0x05	; 5
    14dc:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    14e0:	9b 01       	movw	r18, r22
    14e2:	ac 01       	movw	r20, r24
    14e4:	87 01       	movw	r16, r14
    14e6:	ff 24       	eor	r15, r15
    14e8:	ee 24       	eor	r14, r14
    14ea:	ad a4       	ldd	r10, Y+45	; 0x2d
    14ec:	be a4       	ldd	r11, Y+46	; 0x2e
    14ee:	cf a4       	ldd	r12, Y+47	; 0x2f
    14f0:	d8 a8       	ldd	r13, Y+48	; 0x30
    14f2:	c6 01       	movw	r24, r12
    14f4:	aa 27       	eor	r26, r26
    14f6:	bb 27       	eor	r27, r27
    14f8:	5c 01       	movw	r10, r24
    14fa:	6d 01       	movw	r12, r26
    14fc:	ae 28       	or	r10, r14
    14fe:	bf 28       	or	r11, r15
    1500:	c0 2a       	or	r12, r16
    1502:	d1 2a       	or	r13, r17
    1504:	a2 16       	cp	r10, r18
    1506:	b3 06       	cpc	r11, r19
    1508:	c4 06       	cpc	r12, r20
    150a:	d5 06       	cpc	r13, r21
    150c:	90 f4       	brcc	.+36     	; 0x1532 <__umoddi3+0x4a8>
    150e:	a2 0c       	add	r10, r2
    1510:	b3 1c       	adc	r11, r3
    1512:	c4 1c       	adc	r12, r4
    1514:	d5 1c       	adc	r13, r5
    1516:	a2 14       	cp	r10, r2
    1518:	b3 04       	cpc	r11, r3
    151a:	c4 04       	cpc	r12, r4
    151c:	d5 04       	cpc	r13, r5
    151e:	48 f0       	brcs	.+18     	; 0x1532 <__umoddi3+0x4a8>
    1520:	a2 16       	cp	r10, r18
    1522:	b3 06       	cpc	r11, r19
    1524:	c4 06       	cpc	r12, r20
    1526:	d5 06       	cpc	r13, r21
    1528:	20 f4       	brcc	.+8      	; 0x1532 <__umoddi3+0x4a8>
    152a:	a2 0c       	add	r10, r2
    152c:	b3 1c       	adc	r11, r3
    152e:	c4 1c       	adc	r12, r4
    1530:	d5 1c       	adc	r13, r5
    1532:	a2 1a       	sub	r10, r18
    1534:	b3 0a       	sbc	r11, r19
    1536:	c4 0a       	sbc	r12, r20
    1538:	d5 0a       	sbc	r13, r21
    153a:	c6 01       	movw	r24, r12
    153c:	b5 01       	movw	r22, r10
    153e:	a4 01       	movw	r20, r8
    1540:	93 01       	movw	r18, r6
    1542:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1546:	7b 01       	movw	r14, r22
    1548:	8c 01       	movw	r16, r24
    154a:	c6 01       	movw	r24, r12
    154c:	b5 01       	movw	r22, r10
    154e:	a4 01       	movw	r20, r8
    1550:	93 01       	movw	r18, r6
    1552:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1556:	ca 01       	movw	r24, r20
    1558:	b9 01       	movw	r22, r18
    155a:	25 96       	adiw	r28, 0x05	; 5
    155c:	2c ad       	ldd	r18, Y+60	; 0x3c
    155e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1560:	4e ad       	ldd	r20, Y+62	; 0x3e
    1562:	5f ad       	ldd	r21, Y+63	; 0x3f
    1564:	25 97       	sbiw	r28, 0x05	; 5
    1566:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    156a:	9b 01       	movw	r18, r22
    156c:	ac 01       	movw	r20, r24
    156e:	87 01       	movw	r16, r14
    1570:	ff 24       	eor	r15, r15
    1572:	ee 24       	eor	r14, r14
    1574:	8d a5       	ldd	r24, Y+45	; 0x2d
    1576:	9e a5       	ldd	r25, Y+46	; 0x2e
    1578:	af a5       	ldd	r26, Y+47	; 0x2f
    157a:	b8 a9       	ldd	r27, Y+48	; 0x30
    157c:	a0 70       	andi	r26, 0x00	; 0
    157e:	b0 70       	andi	r27, 0x00	; 0
    1580:	57 01       	movw	r10, r14
    1582:	68 01       	movw	r12, r16
    1584:	a8 2a       	or	r10, r24
    1586:	b9 2a       	or	r11, r25
    1588:	ca 2a       	or	r12, r26
    158a:	db 2a       	or	r13, r27
    158c:	a2 16       	cp	r10, r18
    158e:	b3 06       	cpc	r11, r19
    1590:	c4 06       	cpc	r12, r20
    1592:	d5 06       	cpc	r13, r21
    1594:	90 f4       	brcc	.+36     	; 0x15ba <__umoddi3+0x530>
    1596:	a2 0c       	add	r10, r2
    1598:	b3 1c       	adc	r11, r3
    159a:	c4 1c       	adc	r12, r4
    159c:	d5 1c       	adc	r13, r5
    159e:	a2 14       	cp	r10, r2
    15a0:	b3 04       	cpc	r11, r3
    15a2:	c4 04       	cpc	r12, r4
    15a4:	d5 04       	cpc	r13, r5
    15a6:	48 f0       	brcs	.+18     	; 0x15ba <__umoddi3+0x530>
    15a8:	a2 16       	cp	r10, r18
    15aa:	b3 06       	cpc	r11, r19
    15ac:	c4 06       	cpc	r12, r20
    15ae:	d5 06       	cpc	r13, r21
    15b0:	20 f4       	brcc	.+8      	; 0x15ba <__umoddi3+0x530>
    15b2:	a2 0c       	add	r10, r2
    15b4:	b3 1c       	adc	r11, r3
    15b6:	c4 1c       	adc	r12, r4
    15b8:	d5 1c       	adc	r13, r5
    15ba:	6c 96       	adiw	r28, 0x1c	; 28
    15bc:	ec ac       	ldd	r14, Y+60	; 0x3c
    15be:	fd ac       	ldd	r15, Y+61	; 0x3d
    15c0:	0e ad       	ldd	r16, Y+62	; 0x3e
    15c2:	1f ad       	ldd	r17, Y+63	; 0x3f
    15c4:	6c 97       	sbiw	r28, 0x1c	; 28
    15c6:	68 96       	adiw	r28, 0x18	; 24
    15c8:	0f ac       	ldd	r0, Y+63	; 0x3f
    15ca:	68 97       	sbiw	r28, 0x18	; 24
    15cc:	04 c0       	rjmp	.+8      	; 0x15d6 <__umoddi3+0x54c>
    15ce:	ee 0c       	add	r14, r14
    15d0:	ff 1c       	adc	r15, r15
    15d2:	00 1f       	adc	r16, r16
    15d4:	11 1f       	adc	r17, r17
    15d6:	0a 94       	dec	r0
    15d8:	d2 f7       	brpl	.-12     	; 0x15ce <__umoddi3+0x544>
    15da:	e9 aa       	std	Y+49, r14	; 0x31
    15dc:	fa aa       	std	Y+50, r15	; 0x32
    15de:	0b ab       	std	Y+51, r16	; 0x33
    15e0:	1c ab       	std	Y+52, r17	; 0x34
    15e2:	a2 1a       	sub	r10, r18
    15e4:	b3 0a       	sbc	r11, r19
    15e6:	c4 0a       	sbc	r12, r20
    15e8:	d5 0a       	sbc	r13, r21
    15ea:	32 01       	movw	r6, r4
    15ec:	88 24       	eor	r8, r8
    15ee:	99 24       	eor	r9, r9
    15f0:	b2 01       	movw	r22, r4
    15f2:	a1 01       	movw	r20, r2
    15f4:	60 70       	andi	r22, 0x00	; 0
    15f6:	70 70       	andi	r23, 0x00	; 0
    15f8:	29 96       	adiw	r28, 0x09	; 9
    15fa:	4c af       	std	Y+60, r20	; 0x3c
    15fc:	5d af       	std	Y+61, r21	; 0x3d
    15fe:	6e af       	std	Y+62, r22	; 0x3e
    1600:	7f af       	std	Y+63, r23	; 0x3f
    1602:	29 97       	sbiw	r28, 0x09	; 9
    1604:	c6 01       	movw	r24, r12
    1606:	b5 01       	movw	r22, r10
    1608:	a4 01       	movw	r20, r8
    160a:	93 01       	movw	r18, r6
    160c:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1610:	7b 01       	movw	r14, r22
    1612:	8c 01       	movw	r16, r24
    1614:	c6 01       	movw	r24, r12
    1616:	b5 01       	movw	r22, r10
    1618:	a4 01       	movw	r20, r8
    161a:	93 01       	movw	r18, r6
    161c:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1620:	ca 01       	movw	r24, r20
    1622:	b9 01       	movw	r22, r18
    1624:	29 96       	adiw	r28, 0x09	; 9
    1626:	2c ad       	ldd	r18, Y+60	; 0x3c
    1628:	3d ad       	ldd	r19, Y+61	; 0x3d
    162a:	4e ad       	ldd	r20, Y+62	; 0x3e
    162c:	5f ad       	ldd	r21, Y+63	; 0x3f
    162e:	29 97       	sbiw	r28, 0x09	; 9
    1630:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    1634:	9b 01       	movw	r18, r22
    1636:	ac 01       	movw	r20, r24
    1638:	87 01       	movw	r16, r14
    163a:	ff 24       	eor	r15, r15
    163c:	ee 24       	eor	r14, r14
    163e:	a9 a8       	ldd	r10, Y+49	; 0x31
    1640:	ba a8       	ldd	r11, Y+50	; 0x32
    1642:	cb a8       	ldd	r12, Y+51	; 0x33
    1644:	dc a8       	ldd	r13, Y+52	; 0x34
    1646:	c6 01       	movw	r24, r12
    1648:	aa 27       	eor	r26, r26
    164a:	bb 27       	eor	r27, r27
    164c:	57 01       	movw	r10, r14
    164e:	68 01       	movw	r12, r16
    1650:	a8 2a       	or	r10, r24
    1652:	b9 2a       	or	r11, r25
    1654:	ca 2a       	or	r12, r26
    1656:	db 2a       	or	r13, r27
    1658:	a2 16       	cp	r10, r18
    165a:	b3 06       	cpc	r11, r19
    165c:	c4 06       	cpc	r12, r20
    165e:	d5 06       	cpc	r13, r21
    1660:	90 f4       	brcc	.+36     	; 0x1686 <__umoddi3+0x5fc>
    1662:	a2 0c       	add	r10, r2
    1664:	b3 1c       	adc	r11, r3
    1666:	c4 1c       	adc	r12, r4
    1668:	d5 1c       	adc	r13, r5
    166a:	a2 14       	cp	r10, r2
    166c:	b3 04       	cpc	r11, r3
    166e:	c4 04       	cpc	r12, r4
    1670:	d5 04       	cpc	r13, r5
    1672:	48 f0       	brcs	.+18     	; 0x1686 <__umoddi3+0x5fc>
    1674:	a2 16       	cp	r10, r18
    1676:	b3 06       	cpc	r11, r19
    1678:	c4 06       	cpc	r12, r20
    167a:	d5 06       	cpc	r13, r21
    167c:	20 f4       	brcc	.+8      	; 0x1686 <__umoddi3+0x5fc>
    167e:	a2 0c       	add	r10, r2
    1680:	b3 1c       	adc	r11, r3
    1682:	c4 1c       	adc	r12, r4
    1684:	d5 1c       	adc	r13, r5
    1686:	a2 1a       	sub	r10, r18
    1688:	b3 0a       	sbc	r11, r19
    168a:	c4 0a       	sbc	r12, r20
    168c:	d5 0a       	sbc	r13, r21
    168e:	c6 01       	movw	r24, r12
    1690:	b5 01       	movw	r22, r10
    1692:	a4 01       	movw	r20, r8
    1694:	93 01       	movw	r18, r6
    1696:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    169a:	7b 01       	movw	r14, r22
    169c:	8c 01       	movw	r16, r24
    169e:	c6 01       	movw	r24, r12
    16a0:	b5 01       	movw	r22, r10
    16a2:	a4 01       	movw	r20, r8
    16a4:	93 01       	movw	r18, r6
    16a6:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    16aa:	ca 01       	movw	r24, r20
    16ac:	b9 01       	movw	r22, r18
    16ae:	29 96       	adiw	r28, 0x09	; 9
    16b0:	2c ad       	ldd	r18, Y+60	; 0x3c
    16b2:	3d ad       	ldd	r19, Y+61	; 0x3d
    16b4:	4e ad       	ldd	r20, Y+62	; 0x3e
    16b6:	5f ad       	ldd	r21, Y+63	; 0x3f
    16b8:	29 97       	sbiw	r28, 0x09	; 9
    16ba:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    16be:	9b 01       	movw	r18, r22
    16c0:	ac 01       	movw	r20, r24
    16c2:	87 01       	movw	r16, r14
    16c4:	ff 24       	eor	r15, r15
    16c6:	ee 24       	eor	r14, r14
    16c8:	89 a9       	ldd	r24, Y+49	; 0x31
    16ca:	9a a9       	ldd	r25, Y+50	; 0x32
    16cc:	ab a9       	ldd	r26, Y+51	; 0x33
    16ce:	bc a9       	ldd	r27, Y+52	; 0x34
    16d0:	a0 70       	andi	r26, 0x00	; 0
    16d2:	b0 70       	andi	r27, 0x00	; 0
    16d4:	e8 2a       	or	r14, r24
    16d6:	f9 2a       	or	r15, r25
    16d8:	0a 2b       	or	r16, r26
    16da:	1b 2b       	or	r17, r27
    16dc:	e2 16       	cp	r14, r18
    16de:	f3 06       	cpc	r15, r19
    16e0:	04 07       	cpc	r16, r20
    16e2:	15 07       	cpc	r17, r21
    16e4:	90 f4       	brcc	.+36     	; 0x170a <__umoddi3+0x680>
    16e6:	e2 0c       	add	r14, r2
    16e8:	f3 1c       	adc	r15, r3
    16ea:	04 1d       	adc	r16, r4
    16ec:	15 1d       	adc	r17, r5
    16ee:	e2 14       	cp	r14, r2
    16f0:	f3 04       	cpc	r15, r3
    16f2:	04 05       	cpc	r16, r4
    16f4:	15 05       	cpc	r17, r5
    16f6:	48 f0       	brcs	.+18     	; 0x170a <__umoddi3+0x680>
    16f8:	e2 16       	cp	r14, r18
    16fa:	f3 06       	cpc	r15, r19
    16fc:	04 07       	cpc	r16, r20
    16fe:	15 07       	cpc	r17, r21
    1700:	20 f4       	brcc	.+8      	; 0x170a <__umoddi3+0x680>
    1702:	e2 0c       	add	r14, r2
    1704:	f3 1c       	adc	r15, r3
    1706:	04 1d       	adc	r16, r4
    1708:	15 1d       	adc	r17, r5
    170a:	e2 1a       	sub	r14, r18
    170c:	f3 0a       	sbc	r15, r19
    170e:	04 0b       	sbc	r16, r20
    1710:	15 0b       	sbc	r17, r21
    1712:	d8 01       	movw	r26, r16
    1714:	c7 01       	movw	r24, r14
    1716:	09 ac       	ldd	r0, Y+57	; 0x39
    1718:	04 c0       	rjmp	.+8      	; 0x1722 <__umoddi3+0x698>
    171a:	b6 95       	lsr	r27
    171c:	a7 95       	ror	r26
    171e:	97 95       	ror	r25
    1720:	87 95       	ror	r24
    1722:	0a 94       	dec	r0
    1724:	d2 f7       	brpl	.-12     	; 0x171a <__umoddi3+0x690>
    1726:	89 8b       	std	Y+17, r24	; 0x11
    1728:	9a 8b       	std	Y+18, r25	; 0x12
    172a:	ab 8b       	std	Y+19, r26	; 0x13
    172c:	bc 8b       	std	Y+20, r27	; 0x14
    172e:	1d 8a       	std	Y+21, r1	; 0x15
    1730:	1e 8a       	std	Y+22, r1	; 0x16
    1732:	1f 8a       	std	Y+23, r1	; 0x17
    1734:	18 8e       	std	Y+24, r1	; 0x18
    1736:	28 2f       	mov	r18, r24
    1738:	3a 89       	ldd	r19, Y+18	; 0x12
    173a:	4b 89       	ldd	r20, Y+19	; 0x13
    173c:	5c 89       	ldd	r21, Y+20	; 0x14
    173e:	6d 89       	ldd	r22, Y+21	; 0x15
    1740:	0c c3       	rjmp	.+1560   	; 0x1d5a <__umoddi3+0xcd0>
    1742:	6a 14       	cp	r6, r10
    1744:	7b 04       	cpc	r7, r11
    1746:	8c 04       	cpc	r8, r12
    1748:	9d 04       	cpc	r9, r13
    174a:	08 f4       	brcc	.+2      	; 0x174e <__umoddi3+0x6c4>
    174c:	09 c3       	rjmp	.+1554   	; 0x1d60 <__umoddi3+0xcd6>
    174e:	00 e0       	ldi	r16, 0x00	; 0
    1750:	a0 16       	cp	r10, r16
    1752:	00 e0       	ldi	r16, 0x00	; 0
    1754:	b0 06       	cpc	r11, r16
    1756:	01 e0       	ldi	r16, 0x01	; 1
    1758:	c0 06       	cpc	r12, r16
    175a:	00 e0       	ldi	r16, 0x00	; 0
    175c:	d0 06       	cpc	r13, r16
    175e:	88 f4       	brcc	.+34     	; 0x1782 <__umoddi3+0x6f8>
    1760:	1f ef       	ldi	r17, 0xFF	; 255
    1762:	a1 16       	cp	r10, r17
    1764:	b1 04       	cpc	r11, r1
    1766:	c1 04       	cpc	r12, r1
    1768:	d1 04       	cpc	r13, r1
    176a:	39 f0       	breq	.+14     	; 0x177a <__umoddi3+0x6f0>
    176c:	30 f0       	brcs	.+12     	; 0x177a <__umoddi3+0x6f0>
    176e:	28 e0       	ldi	r18, 0x08	; 8
    1770:	e2 2e       	mov	r14, r18
    1772:	f1 2c       	mov	r15, r1
    1774:	01 2d       	mov	r16, r1
    1776:	11 2d       	mov	r17, r1
    1778:	18 c0       	rjmp	.+48     	; 0x17aa <__umoddi3+0x720>
    177a:	ee 24       	eor	r14, r14
    177c:	ff 24       	eor	r15, r15
    177e:	87 01       	movw	r16, r14
    1780:	14 c0       	rjmp	.+40     	; 0x17aa <__umoddi3+0x720>
    1782:	40 e0       	ldi	r20, 0x00	; 0
    1784:	a4 16       	cp	r10, r20
    1786:	40 e0       	ldi	r20, 0x00	; 0
    1788:	b4 06       	cpc	r11, r20
    178a:	40 e0       	ldi	r20, 0x00	; 0
    178c:	c4 06       	cpc	r12, r20
    178e:	41 e0       	ldi	r20, 0x01	; 1
    1790:	d4 06       	cpc	r13, r20
    1792:	30 f0       	brcs	.+12     	; 0x17a0 <__umoddi3+0x716>
    1794:	98 e1       	ldi	r25, 0x18	; 24
    1796:	e9 2e       	mov	r14, r25
    1798:	f1 2c       	mov	r15, r1
    179a:	01 2d       	mov	r16, r1
    179c:	11 2d       	mov	r17, r1
    179e:	05 c0       	rjmp	.+10     	; 0x17aa <__umoddi3+0x720>
    17a0:	80 e1       	ldi	r24, 0x10	; 16
    17a2:	e8 2e       	mov	r14, r24
    17a4:	f1 2c       	mov	r15, r1
    17a6:	01 2d       	mov	r16, r1
    17a8:	11 2d       	mov	r17, r1
    17aa:	d6 01       	movw	r26, r12
    17ac:	c5 01       	movw	r24, r10
    17ae:	0e 2c       	mov	r0, r14
    17b0:	04 c0       	rjmp	.+8      	; 0x17ba <__umoddi3+0x730>
    17b2:	b6 95       	lsr	r27
    17b4:	a7 95       	ror	r26
    17b6:	97 95       	ror	r25
    17b8:	87 95       	ror	r24
    17ba:	0a 94       	dec	r0
    17bc:	d2 f7       	brpl	.-12     	; 0x17b2 <__umoddi3+0x728>
    17be:	85 59       	subi	r24, 0x95	; 149
    17c0:	9f 4f       	sbci	r25, 0xFF	; 255
    17c2:	dc 01       	movw	r26, r24
    17c4:	2c 91       	ld	r18, X
    17c6:	80 e2       	ldi	r24, 0x20	; 32
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	a0 e0       	ldi	r26, 0x00	; 0
    17cc:	b0 e0       	ldi	r27, 0x00	; 0
    17ce:	8e 19       	sub	r24, r14
    17d0:	9f 09       	sbc	r25, r15
    17d2:	a0 0b       	sbc	r26, r16
    17d4:	b1 0b       	sbc	r27, r17
    17d6:	82 1b       	sub	r24, r18
    17d8:	91 09       	sbc	r25, r1
    17da:	a1 09       	sbc	r26, r1
    17dc:	b1 09       	sbc	r27, r1
    17de:	00 97       	sbiw	r24, 0x00	; 0
    17e0:	a1 05       	cpc	r26, r1
    17e2:	b1 05       	cpc	r27, r1
    17e4:	09 f0       	breq	.+2      	; 0x17e8 <__umoddi3+0x75e>
    17e6:	4f c0       	rjmp	.+158    	; 0x1886 <__umoddi3+0x7fc>
    17e8:	a6 14       	cp	r10, r6
    17ea:	b7 04       	cpc	r11, r7
    17ec:	c8 04       	cpc	r12, r8
    17ee:	d9 04       	cpc	r13, r9
    17f0:	58 f0       	brcs	.+22     	; 0x1808 <__umoddi3+0x77e>
    17f2:	6c 96       	adiw	r28, 0x1c	; 28
    17f4:	ec ac       	ldd	r14, Y+60	; 0x3c
    17f6:	fd ac       	ldd	r15, Y+61	; 0x3d
    17f8:	0e ad       	ldd	r16, Y+62	; 0x3e
    17fa:	1f ad       	ldd	r17, Y+63	; 0x3f
    17fc:	6c 97       	sbiw	r28, 0x1c	; 28
    17fe:	e2 14       	cp	r14, r2
    1800:	f3 04       	cpc	r15, r3
    1802:	04 05       	cpc	r16, r4
    1804:	15 05       	cpc	r17, r5
    1806:	68 f1       	brcs	.+90     	; 0x1862 <__umoddi3+0x7d8>
    1808:	6c 96       	adiw	r28, 0x1c	; 28
    180a:	ec ac       	ldd	r14, Y+60	; 0x3c
    180c:	fd ac       	ldd	r15, Y+61	; 0x3d
    180e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1810:	1f ad       	ldd	r17, Y+63	; 0x3f
    1812:	6c 97       	sbiw	r28, 0x1c	; 28
    1814:	e2 18       	sub	r14, r2
    1816:	f3 08       	sbc	r15, r3
    1818:	04 09       	sbc	r16, r4
    181a:	15 09       	sbc	r17, r5
    181c:	a4 01       	movw	r20, r8
    181e:	93 01       	movw	r18, r6
    1820:	2a 19       	sub	r18, r10
    1822:	3b 09       	sbc	r19, r11
    1824:	4c 09       	sbc	r20, r12
    1826:	5d 09       	sbc	r21, r13
    1828:	aa 24       	eor	r10, r10
    182a:	bb 24       	eor	r11, r11
    182c:	65 01       	movw	r12, r10
    182e:	6c 96       	adiw	r28, 0x1c	; 28
    1830:	6c ad       	ldd	r22, Y+60	; 0x3c
    1832:	7d ad       	ldd	r23, Y+61	; 0x3d
    1834:	8e ad       	ldd	r24, Y+62	; 0x3e
    1836:	9f ad       	ldd	r25, Y+63	; 0x3f
    1838:	6c 97       	sbiw	r28, 0x1c	; 28
    183a:	6e 15       	cp	r22, r14
    183c:	7f 05       	cpc	r23, r15
    183e:	80 07       	cpc	r24, r16
    1840:	91 07       	cpc	r25, r17
    1842:	28 f4       	brcc	.+10     	; 0x184e <__umoddi3+0x7c4>
    1844:	b1 e0       	ldi	r27, 0x01	; 1
    1846:	ab 2e       	mov	r10, r27
    1848:	b1 2c       	mov	r11, r1
    184a:	c1 2c       	mov	r12, r1
    184c:	d1 2c       	mov	r13, r1
    184e:	da 01       	movw	r26, r20
    1850:	c9 01       	movw	r24, r18
    1852:	8a 19       	sub	r24, r10
    1854:	9b 09       	sbc	r25, r11
    1856:	ac 09       	sbc	r26, r12
    1858:	bd 09       	sbc	r27, r13
    185a:	8d ab       	std	Y+53, r24	; 0x35
    185c:	9e ab       	std	Y+54, r25	; 0x36
    185e:	af ab       	std	Y+55, r26	; 0x37
    1860:	b8 af       	std	Y+56, r27	; 0x38
    1862:	e9 8a       	std	Y+17, r14	; 0x11
    1864:	fa 8a       	std	Y+18, r15	; 0x12
    1866:	0b 8b       	std	Y+19, r16	; 0x13
    1868:	1c 8b       	std	Y+20, r17	; 0x14
    186a:	6d a8       	ldd	r6, Y+53	; 0x35
    186c:	7e a8       	ldd	r7, Y+54	; 0x36
    186e:	8f a8       	ldd	r8, Y+55	; 0x37
    1870:	98 ac       	ldd	r9, Y+56	; 0x38
    1872:	6d 8a       	std	Y+21, r6	; 0x15
    1874:	7e 8a       	std	Y+22, r7	; 0x16
    1876:	8f 8a       	std	Y+23, r8	; 0x17
    1878:	98 8e       	std	Y+24, r9	; 0x18
    187a:	2e 2d       	mov	r18, r14
    187c:	3a 89       	ldd	r19, Y+18	; 0x12
    187e:	4b 89       	ldd	r20, Y+19	; 0x13
    1880:	5c 89       	ldd	r21, Y+20	; 0x14
    1882:	6d a9       	ldd	r22, Y+53	; 0x35
    1884:	6a c2       	rjmp	.+1236   	; 0x1d5a <__umoddi3+0xcd0>
    1886:	67 96       	adiw	r28, 0x17	; 23
    1888:	8f af       	std	Y+63, r24	; 0x3f
    188a:	67 97       	sbiw	r28, 0x17	; 23
    188c:	a6 01       	movw	r20, r12
    188e:	95 01       	movw	r18, r10
    1890:	08 2e       	mov	r0, r24
    1892:	04 c0       	rjmp	.+8      	; 0x189c <__umoddi3+0x812>
    1894:	22 0f       	add	r18, r18
    1896:	33 1f       	adc	r19, r19
    1898:	44 1f       	adc	r20, r20
    189a:	55 1f       	adc	r21, r21
    189c:	0a 94       	dec	r0
    189e:	d2 f7       	brpl	.-12     	; 0x1894 <__umoddi3+0x80a>
    18a0:	a0 e2       	ldi	r26, 0x20	; 32
    18a2:	aa 2e       	mov	r10, r26
    18a4:	a8 1a       	sub	r10, r24
    18a6:	66 96       	adiw	r28, 0x16	; 22
    18a8:	af ae       	std	Y+63, r10	; 0x3f
    18aa:	66 97       	sbiw	r28, 0x16	; 22
    18ac:	d2 01       	movw	r26, r4
    18ae:	c1 01       	movw	r24, r2
    18b0:	04 c0       	rjmp	.+8      	; 0x18ba <__umoddi3+0x830>
    18b2:	b6 95       	lsr	r27
    18b4:	a7 95       	ror	r26
    18b6:	97 95       	ror	r25
    18b8:	87 95       	ror	r24
    18ba:	aa 94       	dec	r10
    18bc:	d2 f7       	brpl	.-12     	; 0x18b2 <__umoddi3+0x828>
    18be:	6c 01       	movw	r12, r24
    18c0:	7d 01       	movw	r14, r26
    18c2:	c2 2a       	or	r12, r18
    18c4:	d3 2a       	or	r13, r19
    18c6:	e4 2a       	or	r14, r20
    18c8:	f5 2a       	or	r15, r21
    18ca:	c9 a6       	std	Y+41, r12	; 0x29
    18cc:	da a6       	std	Y+42, r13	; 0x2a
    18ce:	eb a6       	std	Y+43, r14	; 0x2b
    18d0:	fc a6       	std	Y+44, r15	; 0x2c
    18d2:	82 01       	movw	r16, r4
    18d4:	71 01       	movw	r14, r2
    18d6:	67 96       	adiw	r28, 0x17	; 23
    18d8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18da:	67 97       	sbiw	r28, 0x17	; 23
    18dc:	04 c0       	rjmp	.+8      	; 0x18e6 <__umoddi3+0x85c>
    18de:	ee 0c       	add	r14, r14
    18e0:	ff 1c       	adc	r15, r15
    18e2:	00 1f       	adc	r16, r16
    18e4:	11 1f       	adc	r17, r17
    18e6:	0a 94       	dec	r0
    18e8:	d2 f7       	brpl	.-12     	; 0x18de <__umoddi3+0x854>
    18ea:	ed a2       	std	Y+37, r14	; 0x25
    18ec:	fe a2       	std	Y+38, r15	; 0x26
    18ee:	0f a3       	std	Y+39, r16	; 0x27
    18f0:	18 a7       	std	Y+40, r17	; 0x28
    18f2:	64 01       	movw	r12, r8
    18f4:	53 01       	movw	r10, r6
    18f6:	66 96       	adiw	r28, 0x16	; 22
    18f8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18fa:	66 97       	sbiw	r28, 0x16	; 22
    18fc:	04 c0       	rjmp	.+8      	; 0x1906 <__umoddi3+0x87c>
    18fe:	d6 94       	lsr	r13
    1900:	c7 94       	ror	r12
    1902:	b7 94       	ror	r11
    1904:	a7 94       	ror	r10
    1906:	0a 94       	dec	r0
    1908:	d2 f7       	brpl	.-12     	; 0x18fe <__umoddi3+0x874>
    190a:	a4 01       	movw	r20, r8
    190c:	93 01       	movw	r18, r6
    190e:	67 96       	adiw	r28, 0x17	; 23
    1910:	0f ac       	ldd	r0, Y+63	; 0x3f
    1912:	67 97       	sbiw	r28, 0x17	; 23
    1914:	04 c0       	rjmp	.+8      	; 0x191e <__umoddi3+0x894>
    1916:	22 0f       	add	r18, r18
    1918:	33 1f       	adc	r19, r19
    191a:	44 1f       	adc	r20, r20
    191c:	55 1f       	adc	r21, r21
    191e:	0a 94       	dec	r0
    1920:	d2 f7       	brpl	.-12     	; 0x1916 <__umoddi3+0x88c>
    1922:	6c 96       	adiw	r28, 0x1c	; 28
    1924:	8c ad       	ldd	r24, Y+60	; 0x3c
    1926:	9d ad       	ldd	r25, Y+61	; 0x3d
    1928:	ae ad       	ldd	r26, Y+62	; 0x3e
    192a:	bf ad       	ldd	r27, Y+63	; 0x3f
    192c:	6c 97       	sbiw	r28, 0x1c	; 28
    192e:	66 96       	adiw	r28, 0x16	; 22
    1930:	0f ac       	ldd	r0, Y+63	; 0x3f
    1932:	66 97       	sbiw	r28, 0x16	; 22
    1934:	04 c0       	rjmp	.+8      	; 0x193e <__umoddi3+0x8b4>
    1936:	b6 95       	lsr	r27
    1938:	a7 95       	ror	r26
    193a:	97 95       	ror	r25
    193c:	87 95       	ror	r24
    193e:	0a 94       	dec	r0
    1940:	d2 f7       	brpl	.-12     	; 0x1936 <__umoddi3+0x8ac>
    1942:	3c 01       	movw	r6, r24
    1944:	4d 01       	movw	r8, r26
    1946:	62 2a       	or	r6, r18
    1948:	73 2a       	or	r7, r19
    194a:	84 2a       	or	r8, r20
    194c:	95 2a       	or	r9, r21
    194e:	69 a2       	std	Y+33, r6	; 0x21
    1950:	7a a2       	std	Y+34, r7	; 0x22
    1952:	8b a2       	std	Y+35, r8	; 0x23
    1954:	9c a2       	std	Y+36, r9	; 0x24
    1956:	6c 96       	adiw	r28, 0x1c	; 28
    1958:	ec ac       	ldd	r14, Y+60	; 0x3c
    195a:	fd ac       	ldd	r15, Y+61	; 0x3d
    195c:	0e ad       	ldd	r16, Y+62	; 0x3e
    195e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1960:	6c 97       	sbiw	r28, 0x1c	; 28
    1962:	67 96       	adiw	r28, 0x17	; 23
    1964:	0f ac       	ldd	r0, Y+63	; 0x3f
    1966:	67 97       	sbiw	r28, 0x17	; 23
    1968:	04 c0       	rjmp	.+8      	; 0x1972 <__umoddi3+0x8e8>
    196a:	ee 0c       	add	r14, r14
    196c:	ff 1c       	adc	r15, r15
    196e:	00 1f       	adc	r16, r16
    1970:	11 1f       	adc	r17, r17
    1972:	0a 94       	dec	r0
    1974:	d2 f7       	brpl	.-12     	; 0x196a <__umoddi3+0x8e0>
    1976:	ed 8e       	std	Y+29, r14	; 0x1d
    1978:	fe 8e       	std	Y+30, r15	; 0x1e
    197a:	0f 8f       	std	Y+31, r16	; 0x1f
    197c:	18 a3       	std	Y+32, r17	; 0x20
    197e:	49 a5       	ldd	r20, Y+41	; 0x29
    1980:	5a a5       	ldd	r21, Y+42	; 0x2a
    1982:	6b a5       	ldd	r22, Y+43	; 0x2b
    1984:	7c a5       	ldd	r23, Y+44	; 0x2c
    1986:	3b 01       	movw	r6, r22
    1988:	88 24       	eor	r8, r8
    198a:	99 24       	eor	r9, r9
    198c:	60 70       	andi	r22, 0x00	; 0
    198e:	70 70       	andi	r23, 0x00	; 0
    1990:	2d 96       	adiw	r28, 0x0d	; 13
    1992:	4c af       	std	Y+60, r20	; 0x3c
    1994:	5d af       	std	Y+61, r21	; 0x3d
    1996:	6e af       	std	Y+62, r22	; 0x3e
    1998:	7f af       	std	Y+63, r23	; 0x3f
    199a:	2d 97       	sbiw	r28, 0x0d	; 13
    199c:	c6 01       	movw	r24, r12
    199e:	b5 01       	movw	r22, r10
    19a0:	a4 01       	movw	r20, r8
    19a2:	93 01       	movw	r18, r6
    19a4:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    19a8:	7b 01       	movw	r14, r22
    19aa:	8c 01       	movw	r16, r24
    19ac:	c6 01       	movw	r24, r12
    19ae:	b5 01       	movw	r22, r10
    19b0:	a4 01       	movw	r20, r8
    19b2:	93 01       	movw	r18, r6
    19b4:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    19b8:	c9 01       	movw	r24, r18
    19ba:	da 01       	movw	r26, r20
    19bc:	1c 01       	movw	r2, r24
    19be:	2d 01       	movw	r4, r26
    19c0:	c2 01       	movw	r24, r4
    19c2:	b1 01       	movw	r22, r2
    19c4:	2d 96       	adiw	r28, 0x0d	; 13
    19c6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19c8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ca:	4e ad       	ldd	r20, Y+62	; 0x3e
    19cc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19ce:	2d 97       	sbiw	r28, 0x0d	; 13
    19d0:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    19d4:	9b 01       	movw	r18, r22
    19d6:	ac 01       	movw	r20, r24
    19d8:	87 01       	movw	r16, r14
    19da:	ff 24       	eor	r15, r15
    19dc:	ee 24       	eor	r14, r14
    19de:	a9 a0       	ldd	r10, Y+33	; 0x21
    19e0:	ba a0       	ldd	r11, Y+34	; 0x22
    19e2:	cb a0       	ldd	r12, Y+35	; 0x23
    19e4:	dc a0       	ldd	r13, Y+36	; 0x24
    19e6:	c6 01       	movw	r24, r12
    19e8:	aa 27       	eor	r26, r26
    19ea:	bb 27       	eor	r27, r27
    19ec:	57 01       	movw	r10, r14
    19ee:	68 01       	movw	r12, r16
    19f0:	a8 2a       	or	r10, r24
    19f2:	b9 2a       	or	r11, r25
    19f4:	ca 2a       	or	r12, r26
    19f6:	db 2a       	or	r13, r27
    19f8:	a2 16       	cp	r10, r18
    19fa:	b3 06       	cpc	r11, r19
    19fc:	c4 06       	cpc	r12, r20
    19fe:	d5 06       	cpc	r13, r21
    1a00:	00 f5       	brcc	.+64     	; 0x1a42 <__umoddi3+0x9b8>
    1a02:	08 94       	sec
    1a04:	21 08       	sbc	r2, r1
    1a06:	31 08       	sbc	r3, r1
    1a08:	41 08       	sbc	r4, r1
    1a0a:	51 08       	sbc	r5, r1
    1a0c:	e9 a4       	ldd	r14, Y+41	; 0x29
    1a0e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1a10:	0b a5       	ldd	r16, Y+43	; 0x2b
    1a12:	1c a5       	ldd	r17, Y+44	; 0x2c
    1a14:	ae 0c       	add	r10, r14
    1a16:	bf 1c       	adc	r11, r15
    1a18:	c0 1e       	adc	r12, r16
    1a1a:	d1 1e       	adc	r13, r17
    1a1c:	ae 14       	cp	r10, r14
    1a1e:	bf 04       	cpc	r11, r15
    1a20:	c0 06       	cpc	r12, r16
    1a22:	d1 06       	cpc	r13, r17
    1a24:	70 f0       	brcs	.+28     	; 0x1a42 <__umoddi3+0x9b8>
    1a26:	a2 16       	cp	r10, r18
    1a28:	b3 06       	cpc	r11, r19
    1a2a:	c4 06       	cpc	r12, r20
    1a2c:	d5 06       	cpc	r13, r21
    1a2e:	48 f4       	brcc	.+18     	; 0x1a42 <__umoddi3+0x9b8>
    1a30:	08 94       	sec
    1a32:	21 08       	sbc	r2, r1
    1a34:	31 08       	sbc	r3, r1
    1a36:	41 08       	sbc	r4, r1
    1a38:	51 08       	sbc	r5, r1
    1a3a:	ae 0c       	add	r10, r14
    1a3c:	bf 1c       	adc	r11, r15
    1a3e:	c0 1e       	adc	r12, r16
    1a40:	d1 1e       	adc	r13, r17
    1a42:	a2 1a       	sub	r10, r18
    1a44:	b3 0a       	sbc	r11, r19
    1a46:	c4 0a       	sbc	r12, r20
    1a48:	d5 0a       	sbc	r13, r21
    1a4a:	c6 01       	movw	r24, r12
    1a4c:	b5 01       	movw	r22, r10
    1a4e:	a4 01       	movw	r20, r8
    1a50:	93 01       	movw	r18, r6
    1a52:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1a56:	7b 01       	movw	r14, r22
    1a58:	8c 01       	movw	r16, r24
    1a5a:	c6 01       	movw	r24, r12
    1a5c:	b5 01       	movw	r22, r10
    1a5e:	a4 01       	movw	r20, r8
    1a60:	93 01       	movw	r18, r6
    1a62:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    1a66:	c9 01       	movw	r24, r18
    1a68:	da 01       	movw	r26, r20
    1a6a:	3c 01       	movw	r6, r24
    1a6c:	4d 01       	movw	r8, r26
    1a6e:	c4 01       	movw	r24, r8
    1a70:	b3 01       	movw	r22, r6
    1a72:	2d 96       	adiw	r28, 0x0d	; 13
    1a74:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a76:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a78:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a7a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a7c:	2d 97       	sbiw	r28, 0x0d	; 13
    1a7e:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    1a82:	9b 01       	movw	r18, r22
    1a84:	ac 01       	movw	r20, r24
    1a86:	87 01       	movw	r16, r14
    1a88:	ff 24       	eor	r15, r15
    1a8a:	ee 24       	eor	r14, r14
    1a8c:	89 a1       	ldd	r24, Y+33	; 0x21
    1a8e:	9a a1       	ldd	r25, Y+34	; 0x22
    1a90:	ab a1       	ldd	r26, Y+35	; 0x23
    1a92:	bc a1       	ldd	r27, Y+36	; 0x24
    1a94:	a0 70       	andi	r26, 0x00	; 0
    1a96:	b0 70       	andi	r27, 0x00	; 0
    1a98:	57 01       	movw	r10, r14
    1a9a:	68 01       	movw	r12, r16
    1a9c:	a8 2a       	or	r10, r24
    1a9e:	b9 2a       	or	r11, r25
    1aa0:	ca 2a       	or	r12, r26
    1aa2:	db 2a       	or	r13, r27
    1aa4:	a2 16       	cp	r10, r18
    1aa6:	b3 06       	cpc	r11, r19
    1aa8:	c4 06       	cpc	r12, r20
    1aaa:	d5 06       	cpc	r13, r21
    1aac:	00 f5       	brcc	.+64     	; 0x1aee <__umoddi3+0xa64>
    1aae:	08 94       	sec
    1ab0:	61 08       	sbc	r6, r1
    1ab2:	71 08       	sbc	r7, r1
    1ab4:	81 08       	sbc	r8, r1
    1ab6:	91 08       	sbc	r9, r1
    1ab8:	69 a5       	ldd	r22, Y+41	; 0x29
    1aba:	7a a5       	ldd	r23, Y+42	; 0x2a
    1abc:	8b a5       	ldd	r24, Y+43	; 0x2b
    1abe:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ac0:	a6 0e       	add	r10, r22
    1ac2:	b7 1e       	adc	r11, r23
    1ac4:	c8 1e       	adc	r12, r24
    1ac6:	d9 1e       	adc	r13, r25
    1ac8:	a6 16       	cp	r10, r22
    1aca:	b7 06       	cpc	r11, r23
    1acc:	c8 06       	cpc	r12, r24
    1ace:	d9 06       	cpc	r13, r25
    1ad0:	70 f0       	brcs	.+28     	; 0x1aee <__umoddi3+0xa64>
    1ad2:	a2 16       	cp	r10, r18
    1ad4:	b3 06       	cpc	r11, r19
    1ad6:	c4 06       	cpc	r12, r20
    1ad8:	d5 06       	cpc	r13, r21
    1ada:	48 f4       	brcc	.+18     	; 0x1aee <__umoddi3+0xa64>
    1adc:	08 94       	sec
    1ade:	61 08       	sbc	r6, r1
    1ae0:	71 08       	sbc	r7, r1
    1ae2:	81 08       	sbc	r8, r1
    1ae4:	91 08       	sbc	r9, r1
    1ae6:	a6 0e       	add	r10, r22
    1ae8:	b7 1e       	adc	r11, r23
    1aea:	c8 1e       	adc	r12, r24
    1aec:	d9 1e       	adc	r13, r25
    1aee:	d6 01       	movw	r26, r12
    1af0:	c5 01       	movw	r24, r10
    1af2:	82 1b       	sub	r24, r18
    1af4:	93 0b       	sbc	r25, r19
    1af6:	a4 0b       	sbc	r26, r20
    1af8:	b5 0b       	sbc	r27, r21
    1afa:	89 8f       	std	Y+25, r24	; 0x19
    1afc:	9a 8f       	std	Y+26, r25	; 0x1a
    1afe:	ab 8f       	std	Y+27, r26	; 0x1b
    1b00:	bc 8f       	std	Y+28, r27	; 0x1c
    1b02:	d1 01       	movw	r26, r2
    1b04:	99 27       	eor	r25, r25
    1b06:	88 27       	eor	r24, r24
    1b08:	84 01       	movw	r16, r8
    1b0a:	73 01       	movw	r14, r6
    1b0c:	e8 2a       	or	r14, r24
    1b0e:	f9 2a       	or	r15, r25
    1b10:	0a 2b       	or	r16, r26
    1b12:	1b 2b       	or	r17, r27
    1b14:	4f ef       	ldi	r20, 0xFF	; 255
    1b16:	a4 2e       	mov	r10, r20
    1b18:	4f ef       	ldi	r20, 0xFF	; 255
    1b1a:	b4 2e       	mov	r11, r20
    1b1c:	c1 2c       	mov	r12, r1
    1b1e:	d1 2c       	mov	r13, r1
    1b20:	ae 20       	and	r10, r14
    1b22:	bf 20       	and	r11, r15
    1b24:	c0 22       	and	r12, r16
    1b26:	d1 22       	and	r13, r17
    1b28:	78 01       	movw	r14, r16
    1b2a:	00 27       	eor	r16, r16
    1b2c:	11 27       	eor	r17, r17
    1b2e:	6d a0       	ldd	r6, Y+37	; 0x25
    1b30:	7e a0       	ldd	r7, Y+38	; 0x26
    1b32:	8f a0       	ldd	r8, Y+39	; 0x27
    1b34:	98 a4       	ldd	r9, Y+40	; 0x28
    1b36:	4f ef       	ldi	r20, 0xFF	; 255
    1b38:	5f ef       	ldi	r21, 0xFF	; 255
    1b3a:	60 e0       	ldi	r22, 0x00	; 0
    1b3c:	70 e0       	ldi	r23, 0x00	; 0
    1b3e:	64 22       	and	r6, r20
    1b40:	75 22       	and	r7, r21
    1b42:	86 22       	and	r8, r22
    1b44:	97 22       	and	r9, r23
    1b46:	8d a1       	ldd	r24, Y+37	; 0x25
    1b48:	9e a1       	ldd	r25, Y+38	; 0x26
    1b4a:	af a1       	ldd	r26, Y+39	; 0x27
    1b4c:	b8 a5       	ldd	r27, Y+40	; 0x28
    1b4e:	bd 01       	movw	r22, r26
    1b50:	88 27       	eor	r24, r24
    1b52:	99 27       	eor	r25, r25
    1b54:	65 96       	adiw	r28, 0x15	; 21
    1b56:	6c af       	std	Y+60, r22	; 0x3c
    1b58:	7d af       	std	Y+61, r23	; 0x3d
    1b5a:	8e af       	std	Y+62, r24	; 0x3e
    1b5c:	9f af       	std	Y+63, r25	; 0x3f
    1b5e:	65 97       	sbiw	r28, 0x15	; 21
    1b60:	c6 01       	movw	r24, r12
    1b62:	b5 01       	movw	r22, r10
    1b64:	a4 01       	movw	r20, r8
    1b66:	93 01       	movw	r18, r6
    1b68:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    1b6c:	61 96       	adiw	r28, 0x11	; 17
    1b6e:	6c af       	std	Y+60, r22	; 0x3c
    1b70:	7d af       	std	Y+61, r23	; 0x3d
    1b72:	8e af       	std	Y+62, r24	; 0x3e
    1b74:	9f af       	std	Y+63, r25	; 0x3f
    1b76:	61 97       	sbiw	r28, 0x11	; 17
    1b78:	c6 01       	movw	r24, r12
    1b7a:	b5 01       	movw	r22, r10
    1b7c:	65 96       	adiw	r28, 0x15	; 21
    1b7e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b80:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b82:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b84:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b86:	65 97       	sbiw	r28, 0x15	; 21
    1b88:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    1b8c:	1b 01       	movw	r2, r22
    1b8e:	2c 01       	movw	r4, r24
    1b90:	c8 01       	movw	r24, r16
    1b92:	b7 01       	movw	r22, r14
    1b94:	a4 01       	movw	r20, r8
    1b96:	93 01       	movw	r18, r6
    1b98:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    1b9c:	5b 01       	movw	r10, r22
    1b9e:	6c 01       	movw	r12, r24
    1ba0:	c8 01       	movw	r24, r16
    1ba2:	b7 01       	movw	r22, r14
    1ba4:	65 96       	adiw	r28, 0x15	; 21
    1ba6:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ba8:	3d ad       	ldd	r19, Y+61	; 0x3d
    1baa:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bac:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bae:	65 97       	sbiw	r28, 0x15	; 21
    1bb0:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    1bb4:	7b 01       	movw	r14, r22
    1bb6:	8c 01       	movw	r16, r24
    1bb8:	a6 01       	movw	r20, r12
    1bba:	95 01       	movw	r18, r10
    1bbc:	22 0d       	add	r18, r2
    1bbe:	33 1d       	adc	r19, r3
    1bc0:	44 1d       	adc	r20, r4
    1bc2:	55 1d       	adc	r21, r5
    1bc4:	61 96       	adiw	r28, 0x11	; 17
    1bc6:	6c ac       	ldd	r6, Y+60	; 0x3c
    1bc8:	7d ac       	ldd	r7, Y+61	; 0x3d
    1bca:	8e ac       	ldd	r8, Y+62	; 0x3e
    1bcc:	9f ac       	ldd	r9, Y+63	; 0x3f
    1bce:	61 97       	sbiw	r28, 0x11	; 17
    1bd0:	c4 01       	movw	r24, r8
    1bd2:	aa 27       	eor	r26, r26
    1bd4:	bb 27       	eor	r27, r27
    1bd6:	28 0f       	add	r18, r24
    1bd8:	39 1f       	adc	r19, r25
    1bda:	4a 1f       	adc	r20, r26
    1bdc:	5b 1f       	adc	r21, r27
    1bde:	2a 15       	cp	r18, r10
    1be0:	3b 05       	cpc	r19, r11
    1be2:	4c 05       	cpc	r20, r12
    1be4:	5d 05       	cpc	r21, r13
    1be6:	48 f4       	brcc	.+18     	; 0x1bfa <__umoddi3+0xb70>
    1be8:	81 2c       	mov	r8, r1
    1bea:	91 2c       	mov	r9, r1
    1bec:	e1 e0       	ldi	r30, 0x01	; 1
    1bee:	ae 2e       	mov	r10, r30
    1bf0:	b1 2c       	mov	r11, r1
    1bf2:	e8 0c       	add	r14, r8
    1bf4:	f9 1c       	adc	r15, r9
    1bf6:	0a 1d       	adc	r16, r10
    1bf8:	1b 1d       	adc	r17, r11
    1bfa:	ca 01       	movw	r24, r20
    1bfc:	aa 27       	eor	r26, r26
    1bfe:	bb 27       	eor	r27, r27
    1c00:	57 01       	movw	r10, r14
    1c02:	68 01       	movw	r12, r16
    1c04:	a8 0e       	add	r10, r24
    1c06:	b9 1e       	adc	r11, r25
    1c08:	ca 1e       	adc	r12, r26
    1c0a:	db 1e       	adc	r13, r27
    1c0c:	a9 01       	movw	r20, r18
    1c0e:	33 27       	eor	r19, r19
    1c10:	22 27       	eor	r18, r18
    1c12:	61 96       	adiw	r28, 0x11	; 17
    1c14:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c16:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c18:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c1a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c1c:	61 97       	sbiw	r28, 0x11	; 17
    1c1e:	a0 70       	andi	r26, 0x00	; 0
    1c20:	b0 70       	andi	r27, 0x00	; 0
    1c22:	28 0f       	add	r18, r24
    1c24:	39 1f       	adc	r19, r25
    1c26:	4a 1f       	adc	r20, r26
    1c28:	5b 1f       	adc	r21, r27
    1c2a:	e9 8c       	ldd	r14, Y+25	; 0x19
    1c2c:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1c2e:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1c30:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1c32:	ea 14       	cp	r14, r10
    1c34:	fb 04       	cpc	r15, r11
    1c36:	0c 05       	cpc	r16, r12
    1c38:	1d 05       	cpc	r17, r13
    1c3a:	70 f0       	brcs	.+28     	; 0x1c58 <__umoddi3+0xbce>
    1c3c:	ae 14       	cp	r10, r14
    1c3e:	bf 04       	cpc	r11, r15
    1c40:	c0 06       	cpc	r12, r16
    1c42:	d1 06       	cpc	r13, r17
    1c44:	69 f5       	brne	.+90     	; 0x1ca0 <__umoddi3+0xc16>
    1c46:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c48:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c4a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c4c:	98 a1       	ldd	r25, Y+32	; 0x20
    1c4e:	62 17       	cp	r22, r18
    1c50:	73 07       	cpc	r23, r19
    1c52:	84 07       	cpc	r24, r20
    1c54:	95 07       	cpc	r25, r21
    1c56:	20 f5       	brcc	.+72     	; 0x1ca0 <__umoddi3+0xc16>
    1c58:	da 01       	movw	r26, r20
    1c5a:	c9 01       	movw	r24, r18
    1c5c:	6d a0       	ldd	r6, Y+37	; 0x25
    1c5e:	7e a0       	ldd	r7, Y+38	; 0x26
    1c60:	8f a0       	ldd	r8, Y+39	; 0x27
    1c62:	98 a4       	ldd	r9, Y+40	; 0x28
    1c64:	86 19       	sub	r24, r6
    1c66:	97 09       	sbc	r25, r7
    1c68:	a8 09       	sbc	r26, r8
    1c6a:	b9 09       	sbc	r27, r9
    1c6c:	e9 a4       	ldd	r14, Y+41	; 0x29
    1c6e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1c70:	0b a5       	ldd	r16, Y+43	; 0x2b
    1c72:	1c a5       	ldd	r17, Y+44	; 0x2c
    1c74:	ae 18       	sub	r10, r14
    1c76:	bf 08       	sbc	r11, r15
    1c78:	c0 0a       	sbc	r12, r16
    1c7a:	d1 0a       	sbc	r13, r17
    1c7c:	ee 24       	eor	r14, r14
    1c7e:	ff 24       	eor	r15, r15
    1c80:	87 01       	movw	r16, r14
    1c82:	28 17       	cp	r18, r24
    1c84:	39 07       	cpc	r19, r25
    1c86:	4a 07       	cpc	r20, r26
    1c88:	5b 07       	cpc	r21, r27
    1c8a:	28 f4       	brcc	.+10     	; 0x1c96 <__umoddi3+0xc0c>
    1c8c:	21 e0       	ldi	r18, 0x01	; 1
    1c8e:	e2 2e       	mov	r14, r18
    1c90:	f1 2c       	mov	r15, r1
    1c92:	01 2d       	mov	r16, r1
    1c94:	11 2d       	mov	r17, r1
    1c96:	ae 18       	sub	r10, r14
    1c98:	bf 08       	sbc	r11, r15
    1c9a:	c0 0a       	sbc	r12, r16
    1c9c:	d1 0a       	sbc	r13, r17
    1c9e:	02 c0       	rjmp	.+4      	; 0x1ca4 <__umoddi3+0xc1a>
    1ca0:	da 01       	movw	r26, r20
    1ca2:	c9 01       	movw	r24, r18
    1ca4:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1ca6:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1ca8:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1caa:	98 a0       	ldd	r9, Y+32	; 0x20
    1cac:	68 1a       	sub	r6, r24
    1cae:	79 0a       	sbc	r7, r25
    1cb0:	8a 0a       	sbc	r8, r26
    1cb2:	9b 0a       	sbc	r9, r27
    1cb4:	49 8d       	ldd	r20, Y+25	; 0x19
    1cb6:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1cb8:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1cba:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1cbc:	4a 19       	sub	r20, r10
    1cbe:	5b 09       	sbc	r21, r11
    1cc0:	6c 09       	sbc	r22, r12
    1cc2:	7d 09       	sbc	r23, r13
    1cc4:	5a 01       	movw	r10, r20
    1cc6:	6b 01       	movw	r12, r22
    1cc8:	22 24       	eor	r2, r2
    1cca:	33 24       	eor	r3, r3
    1ccc:	21 01       	movw	r4, r2
    1cce:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1cd0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1cd2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1cd4:	98 a1       	ldd	r25, Y+32	; 0x20
    1cd6:	66 15       	cp	r22, r6
    1cd8:	77 05       	cpc	r23, r7
    1cda:	88 05       	cpc	r24, r8
    1cdc:	99 05       	cpc	r25, r9
    1cde:	28 f4       	brcc	.+10     	; 0x1cea <__umoddi3+0xc60>
    1ce0:	81 e0       	ldi	r24, 0x01	; 1
    1ce2:	28 2e       	mov	r2, r24
    1ce4:	31 2c       	mov	r3, r1
    1ce6:	41 2c       	mov	r4, r1
    1ce8:	51 2c       	mov	r5, r1
    1cea:	86 01       	movw	r16, r12
    1cec:	75 01       	movw	r14, r10
    1cee:	e2 18       	sub	r14, r2
    1cf0:	f3 08       	sbc	r15, r3
    1cf2:	04 09       	sbc	r16, r4
    1cf4:	15 09       	sbc	r17, r5
    1cf6:	a8 01       	movw	r20, r16
    1cf8:	97 01       	movw	r18, r14
    1cfa:	66 96       	adiw	r28, 0x16	; 22
    1cfc:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cfe:	66 97       	sbiw	r28, 0x16	; 22
    1d00:	04 c0       	rjmp	.+8      	; 0x1d0a <__umoddi3+0xc80>
    1d02:	22 0f       	add	r18, r18
    1d04:	33 1f       	adc	r19, r19
    1d06:	44 1f       	adc	r20, r20
    1d08:	55 1f       	adc	r21, r21
    1d0a:	0a 94       	dec	r0
    1d0c:	d2 f7       	brpl	.-12     	; 0x1d02 <__umoddi3+0xc78>
    1d0e:	d4 01       	movw	r26, r8
    1d10:	c3 01       	movw	r24, r6
    1d12:	67 96       	adiw	r28, 0x17	; 23
    1d14:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d16:	67 97       	sbiw	r28, 0x17	; 23
    1d18:	04 c0       	rjmp	.+8      	; 0x1d22 <__umoddi3+0xc98>
    1d1a:	b6 95       	lsr	r27
    1d1c:	a7 95       	ror	r26
    1d1e:	97 95       	ror	r25
    1d20:	87 95       	ror	r24
    1d22:	0a 94       	dec	r0
    1d24:	d2 f7       	brpl	.-12     	; 0x1d1a <__umoddi3+0xc90>
    1d26:	28 2b       	or	r18, r24
    1d28:	39 2b       	or	r19, r25
    1d2a:	4a 2b       	or	r20, r26
    1d2c:	5b 2b       	or	r21, r27
    1d2e:	29 8b       	std	Y+17, r18	; 0x11
    1d30:	3a 8b       	std	Y+18, r19	; 0x12
    1d32:	4b 8b       	std	Y+19, r20	; 0x13
    1d34:	5c 8b       	std	Y+20, r21	; 0x14
    1d36:	67 96       	adiw	r28, 0x17	; 23
    1d38:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d3a:	67 97       	sbiw	r28, 0x17	; 23
    1d3c:	04 c0       	rjmp	.+8      	; 0x1d46 <__umoddi3+0xcbc>
    1d3e:	16 95       	lsr	r17
    1d40:	07 95       	ror	r16
    1d42:	f7 94       	ror	r15
    1d44:	e7 94       	ror	r14
    1d46:	0a 94       	dec	r0
    1d48:	d2 f7       	brpl	.-12     	; 0x1d3e <__umoddi3+0xcb4>
    1d4a:	ed 8a       	std	Y+21, r14	; 0x15
    1d4c:	fe 8a       	std	Y+22, r15	; 0x16
    1d4e:	0f 8b       	std	Y+23, r16	; 0x17
    1d50:	18 8f       	std	Y+24, r17	; 0x18
    1d52:	3a 89       	ldd	r19, Y+18	; 0x12
    1d54:	4b 89       	ldd	r20, Y+19	; 0x13
    1d56:	5c 89       	ldd	r21, Y+20	; 0x14
    1d58:	6e 2d       	mov	r22, r14
    1d5a:	7e 89       	ldd	r23, Y+22	; 0x16
    1d5c:	8f 89       	ldd	r24, Y+23	; 0x17
    1d5e:	98 8d       	ldd	r25, Y+24	; 0x18
    1d60:	c5 5a       	subi	r28, 0xA5	; 165
    1d62:	df 4f       	sbci	r29, 0xFF	; 255
    1d64:	e2 e1       	ldi	r30, 0x12	; 18
    1d66:	0c 94 83 2e 	jmp	0x5d06	; 0x5d06 <__epilogue_restores__>

00001d6a <_fpadd_parts>:
    1d6a:	a0 e0       	ldi	r26, 0x00	; 0
    1d6c:	b0 e0       	ldi	r27, 0x00	; 0
    1d6e:	eb eb       	ldi	r30, 0xBB	; 187
    1d70:	fe e0       	ldi	r31, 0x0E	; 14
    1d72:	0c 94 67 2e 	jmp	0x5cce	; 0x5cce <__prologue_saves__>
    1d76:	dc 01       	movw	r26, r24
    1d78:	2b 01       	movw	r4, r22
    1d7a:	fa 01       	movw	r30, r20
    1d7c:	9c 91       	ld	r25, X
    1d7e:	92 30       	cpi	r25, 0x02	; 2
    1d80:	08 f4       	brcc	.+2      	; 0x1d84 <_fpadd_parts+0x1a>
    1d82:	39 c1       	rjmp	.+626    	; 0x1ff6 <_fpadd_parts+0x28c>
    1d84:	eb 01       	movw	r28, r22
    1d86:	88 81       	ld	r24, Y
    1d88:	82 30       	cpi	r24, 0x02	; 2
    1d8a:	08 f4       	brcc	.+2      	; 0x1d8e <_fpadd_parts+0x24>
    1d8c:	33 c1       	rjmp	.+614    	; 0x1ff4 <_fpadd_parts+0x28a>
    1d8e:	94 30       	cpi	r25, 0x04	; 4
    1d90:	69 f4       	brne	.+26     	; 0x1dac <_fpadd_parts+0x42>
    1d92:	84 30       	cpi	r24, 0x04	; 4
    1d94:	09 f0       	breq	.+2      	; 0x1d98 <_fpadd_parts+0x2e>
    1d96:	2f c1       	rjmp	.+606    	; 0x1ff6 <_fpadd_parts+0x28c>
    1d98:	11 96       	adiw	r26, 0x01	; 1
    1d9a:	9c 91       	ld	r25, X
    1d9c:	11 97       	sbiw	r26, 0x01	; 1
    1d9e:	89 81       	ldd	r24, Y+1	; 0x01
    1da0:	98 17       	cp	r25, r24
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <_fpadd_parts+0x3c>
    1da4:	28 c1       	rjmp	.+592    	; 0x1ff6 <_fpadd_parts+0x28c>
    1da6:	a3 e6       	ldi	r26, 0x63	; 99
    1da8:	b0 e0       	ldi	r27, 0x00	; 0
    1daa:	25 c1       	rjmp	.+586    	; 0x1ff6 <_fpadd_parts+0x28c>
    1dac:	84 30       	cpi	r24, 0x04	; 4
    1dae:	09 f4       	brne	.+2      	; 0x1db2 <_fpadd_parts+0x48>
    1db0:	21 c1       	rjmp	.+578    	; 0x1ff4 <_fpadd_parts+0x28a>
    1db2:	82 30       	cpi	r24, 0x02	; 2
    1db4:	a9 f4       	brne	.+42     	; 0x1de0 <_fpadd_parts+0x76>
    1db6:	92 30       	cpi	r25, 0x02	; 2
    1db8:	09 f0       	breq	.+2      	; 0x1dbc <_fpadd_parts+0x52>
    1dba:	1d c1       	rjmp	.+570    	; 0x1ff6 <_fpadd_parts+0x28c>
    1dbc:	9a 01       	movw	r18, r20
    1dbe:	ad 01       	movw	r20, r26
    1dc0:	88 e0       	ldi	r24, 0x08	; 8
    1dc2:	ea 01       	movw	r28, r20
    1dc4:	09 90       	ld	r0, Y+
    1dc6:	ae 01       	movw	r20, r28
    1dc8:	e9 01       	movw	r28, r18
    1dca:	09 92       	st	Y+, r0
    1dcc:	9e 01       	movw	r18, r28
    1dce:	81 50       	subi	r24, 0x01	; 1
    1dd0:	c1 f7       	brne	.-16     	; 0x1dc2 <_fpadd_parts+0x58>
    1dd2:	e2 01       	movw	r28, r4
    1dd4:	89 81       	ldd	r24, Y+1	; 0x01
    1dd6:	11 96       	adiw	r26, 0x01	; 1
    1dd8:	9c 91       	ld	r25, X
    1dda:	89 23       	and	r24, r25
    1ddc:	81 83       	std	Z+1, r24	; 0x01
    1dde:	08 c1       	rjmp	.+528    	; 0x1ff0 <_fpadd_parts+0x286>
    1de0:	92 30       	cpi	r25, 0x02	; 2
    1de2:	09 f4       	brne	.+2      	; 0x1de6 <_fpadd_parts+0x7c>
    1de4:	07 c1       	rjmp	.+526    	; 0x1ff4 <_fpadd_parts+0x28a>
    1de6:	12 96       	adiw	r26, 0x02	; 2
    1de8:	2d 90       	ld	r2, X+
    1dea:	3c 90       	ld	r3, X
    1dec:	13 97       	sbiw	r26, 0x03	; 3
    1dee:	eb 01       	movw	r28, r22
    1df0:	8a 81       	ldd	r24, Y+2	; 0x02
    1df2:	9b 81       	ldd	r25, Y+3	; 0x03
    1df4:	14 96       	adiw	r26, 0x04	; 4
    1df6:	ad 90       	ld	r10, X+
    1df8:	bd 90       	ld	r11, X+
    1dfa:	cd 90       	ld	r12, X+
    1dfc:	dc 90       	ld	r13, X
    1dfe:	17 97       	sbiw	r26, 0x07	; 7
    1e00:	ec 80       	ldd	r14, Y+4	; 0x04
    1e02:	fd 80       	ldd	r15, Y+5	; 0x05
    1e04:	0e 81       	ldd	r16, Y+6	; 0x06
    1e06:	1f 81       	ldd	r17, Y+7	; 0x07
    1e08:	91 01       	movw	r18, r2
    1e0a:	28 1b       	sub	r18, r24
    1e0c:	39 0b       	sbc	r19, r25
    1e0e:	b9 01       	movw	r22, r18
    1e10:	37 ff       	sbrs	r19, 7
    1e12:	04 c0       	rjmp	.+8      	; 0x1e1c <_fpadd_parts+0xb2>
    1e14:	66 27       	eor	r22, r22
    1e16:	77 27       	eor	r23, r23
    1e18:	62 1b       	sub	r22, r18
    1e1a:	73 0b       	sbc	r23, r19
    1e1c:	60 32       	cpi	r22, 0x20	; 32
    1e1e:	71 05       	cpc	r23, r1
    1e20:	0c f0       	brlt	.+2      	; 0x1e24 <_fpadd_parts+0xba>
    1e22:	61 c0       	rjmp	.+194    	; 0x1ee6 <_fpadd_parts+0x17c>
    1e24:	12 16       	cp	r1, r18
    1e26:	13 06       	cpc	r1, r19
    1e28:	6c f5       	brge	.+90     	; 0x1e84 <_fpadd_parts+0x11a>
    1e2a:	37 01       	movw	r6, r14
    1e2c:	48 01       	movw	r8, r16
    1e2e:	06 2e       	mov	r0, r22
    1e30:	04 c0       	rjmp	.+8      	; 0x1e3a <_fpadd_parts+0xd0>
    1e32:	96 94       	lsr	r9
    1e34:	87 94       	ror	r8
    1e36:	77 94       	ror	r7
    1e38:	67 94       	ror	r6
    1e3a:	0a 94       	dec	r0
    1e3c:	d2 f7       	brpl	.-12     	; 0x1e32 <_fpadd_parts+0xc8>
    1e3e:	21 e0       	ldi	r18, 0x01	; 1
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	40 e0       	ldi	r20, 0x00	; 0
    1e44:	50 e0       	ldi	r21, 0x00	; 0
    1e46:	04 c0       	rjmp	.+8      	; 0x1e50 <_fpadd_parts+0xe6>
    1e48:	22 0f       	add	r18, r18
    1e4a:	33 1f       	adc	r19, r19
    1e4c:	44 1f       	adc	r20, r20
    1e4e:	55 1f       	adc	r21, r21
    1e50:	6a 95       	dec	r22
    1e52:	d2 f7       	brpl	.-12     	; 0x1e48 <_fpadd_parts+0xde>
    1e54:	21 50       	subi	r18, 0x01	; 1
    1e56:	30 40       	sbci	r19, 0x00	; 0
    1e58:	40 40       	sbci	r20, 0x00	; 0
    1e5a:	50 40       	sbci	r21, 0x00	; 0
    1e5c:	2e 21       	and	r18, r14
    1e5e:	3f 21       	and	r19, r15
    1e60:	40 23       	and	r20, r16
    1e62:	51 23       	and	r21, r17
    1e64:	21 15       	cp	r18, r1
    1e66:	31 05       	cpc	r19, r1
    1e68:	41 05       	cpc	r20, r1
    1e6a:	51 05       	cpc	r21, r1
    1e6c:	21 f0       	breq	.+8      	; 0x1e76 <_fpadd_parts+0x10c>
    1e6e:	21 e0       	ldi	r18, 0x01	; 1
    1e70:	30 e0       	ldi	r19, 0x00	; 0
    1e72:	40 e0       	ldi	r20, 0x00	; 0
    1e74:	50 e0       	ldi	r21, 0x00	; 0
    1e76:	79 01       	movw	r14, r18
    1e78:	8a 01       	movw	r16, r20
    1e7a:	e6 28       	or	r14, r6
    1e7c:	f7 28       	or	r15, r7
    1e7e:	08 29       	or	r16, r8
    1e80:	19 29       	or	r17, r9
    1e82:	3c c0       	rjmp	.+120    	; 0x1efc <_fpadd_parts+0x192>
    1e84:	23 2b       	or	r18, r19
    1e86:	d1 f1       	breq	.+116    	; 0x1efc <_fpadd_parts+0x192>
    1e88:	26 0e       	add	r2, r22
    1e8a:	37 1e       	adc	r3, r23
    1e8c:	35 01       	movw	r6, r10
    1e8e:	46 01       	movw	r8, r12
    1e90:	06 2e       	mov	r0, r22
    1e92:	04 c0       	rjmp	.+8      	; 0x1e9c <_fpadd_parts+0x132>
    1e94:	96 94       	lsr	r9
    1e96:	87 94       	ror	r8
    1e98:	77 94       	ror	r7
    1e9a:	67 94       	ror	r6
    1e9c:	0a 94       	dec	r0
    1e9e:	d2 f7       	brpl	.-12     	; 0x1e94 <_fpadd_parts+0x12a>
    1ea0:	21 e0       	ldi	r18, 0x01	; 1
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	40 e0       	ldi	r20, 0x00	; 0
    1ea6:	50 e0       	ldi	r21, 0x00	; 0
    1ea8:	04 c0       	rjmp	.+8      	; 0x1eb2 <_fpadd_parts+0x148>
    1eaa:	22 0f       	add	r18, r18
    1eac:	33 1f       	adc	r19, r19
    1eae:	44 1f       	adc	r20, r20
    1eb0:	55 1f       	adc	r21, r21
    1eb2:	6a 95       	dec	r22
    1eb4:	d2 f7       	brpl	.-12     	; 0x1eaa <_fpadd_parts+0x140>
    1eb6:	21 50       	subi	r18, 0x01	; 1
    1eb8:	30 40       	sbci	r19, 0x00	; 0
    1eba:	40 40       	sbci	r20, 0x00	; 0
    1ebc:	50 40       	sbci	r21, 0x00	; 0
    1ebe:	2a 21       	and	r18, r10
    1ec0:	3b 21       	and	r19, r11
    1ec2:	4c 21       	and	r20, r12
    1ec4:	5d 21       	and	r21, r13
    1ec6:	21 15       	cp	r18, r1
    1ec8:	31 05       	cpc	r19, r1
    1eca:	41 05       	cpc	r20, r1
    1ecc:	51 05       	cpc	r21, r1
    1ece:	21 f0       	breq	.+8      	; 0x1ed8 <_fpadd_parts+0x16e>
    1ed0:	21 e0       	ldi	r18, 0x01	; 1
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	40 e0       	ldi	r20, 0x00	; 0
    1ed6:	50 e0       	ldi	r21, 0x00	; 0
    1ed8:	59 01       	movw	r10, r18
    1eda:	6a 01       	movw	r12, r20
    1edc:	a6 28       	or	r10, r6
    1ede:	b7 28       	or	r11, r7
    1ee0:	c8 28       	or	r12, r8
    1ee2:	d9 28       	or	r13, r9
    1ee4:	0b c0       	rjmp	.+22     	; 0x1efc <_fpadd_parts+0x192>
    1ee6:	82 15       	cp	r24, r2
    1ee8:	93 05       	cpc	r25, r3
    1eea:	2c f0       	brlt	.+10     	; 0x1ef6 <_fpadd_parts+0x18c>
    1eec:	1c 01       	movw	r2, r24
    1eee:	aa 24       	eor	r10, r10
    1ef0:	bb 24       	eor	r11, r11
    1ef2:	65 01       	movw	r12, r10
    1ef4:	03 c0       	rjmp	.+6      	; 0x1efc <_fpadd_parts+0x192>
    1ef6:	ee 24       	eor	r14, r14
    1ef8:	ff 24       	eor	r15, r15
    1efa:	87 01       	movw	r16, r14
    1efc:	11 96       	adiw	r26, 0x01	; 1
    1efe:	9c 91       	ld	r25, X
    1f00:	d2 01       	movw	r26, r4
    1f02:	11 96       	adiw	r26, 0x01	; 1
    1f04:	8c 91       	ld	r24, X
    1f06:	98 17       	cp	r25, r24
    1f08:	09 f4       	brne	.+2      	; 0x1f0c <_fpadd_parts+0x1a2>
    1f0a:	45 c0       	rjmp	.+138    	; 0x1f96 <_fpadd_parts+0x22c>
    1f0c:	99 23       	and	r25, r25
    1f0e:	39 f0       	breq	.+14     	; 0x1f1e <_fpadd_parts+0x1b4>
    1f10:	a8 01       	movw	r20, r16
    1f12:	97 01       	movw	r18, r14
    1f14:	2a 19       	sub	r18, r10
    1f16:	3b 09       	sbc	r19, r11
    1f18:	4c 09       	sbc	r20, r12
    1f1a:	5d 09       	sbc	r21, r13
    1f1c:	06 c0       	rjmp	.+12     	; 0x1f2a <_fpadd_parts+0x1c0>
    1f1e:	a6 01       	movw	r20, r12
    1f20:	95 01       	movw	r18, r10
    1f22:	2e 19       	sub	r18, r14
    1f24:	3f 09       	sbc	r19, r15
    1f26:	40 0b       	sbc	r20, r16
    1f28:	51 0b       	sbc	r21, r17
    1f2a:	57 fd       	sbrc	r21, 7
    1f2c:	08 c0       	rjmp	.+16     	; 0x1f3e <_fpadd_parts+0x1d4>
    1f2e:	11 82       	std	Z+1, r1	; 0x01
    1f30:	33 82       	std	Z+3, r3	; 0x03
    1f32:	22 82       	std	Z+2, r2	; 0x02
    1f34:	24 83       	std	Z+4, r18	; 0x04
    1f36:	35 83       	std	Z+5, r19	; 0x05
    1f38:	46 83       	std	Z+6, r20	; 0x06
    1f3a:	57 83       	std	Z+7, r21	; 0x07
    1f3c:	1d c0       	rjmp	.+58     	; 0x1f78 <_fpadd_parts+0x20e>
    1f3e:	81 e0       	ldi	r24, 0x01	; 1
    1f40:	81 83       	std	Z+1, r24	; 0x01
    1f42:	33 82       	std	Z+3, r3	; 0x03
    1f44:	22 82       	std	Z+2, r2	; 0x02
    1f46:	88 27       	eor	r24, r24
    1f48:	99 27       	eor	r25, r25
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	82 1b       	sub	r24, r18
    1f4e:	93 0b       	sbc	r25, r19
    1f50:	a4 0b       	sbc	r26, r20
    1f52:	b5 0b       	sbc	r27, r21
    1f54:	84 83       	std	Z+4, r24	; 0x04
    1f56:	95 83       	std	Z+5, r25	; 0x05
    1f58:	a6 83       	std	Z+6, r26	; 0x06
    1f5a:	b7 83       	std	Z+7, r27	; 0x07
    1f5c:	0d c0       	rjmp	.+26     	; 0x1f78 <_fpadd_parts+0x20e>
    1f5e:	22 0f       	add	r18, r18
    1f60:	33 1f       	adc	r19, r19
    1f62:	44 1f       	adc	r20, r20
    1f64:	55 1f       	adc	r21, r21
    1f66:	24 83       	std	Z+4, r18	; 0x04
    1f68:	35 83       	std	Z+5, r19	; 0x05
    1f6a:	46 83       	std	Z+6, r20	; 0x06
    1f6c:	57 83       	std	Z+7, r21	; 0x07
    1f6e:	82 81       	ldd	r24, Z+2	; 0x02
    1f70:	93 81       	ldd	r25, Z+3	; 0x03
    1f72:	01 97       	sbiw	r24, 0x01	; 1
    1f74:	93 83       	std	Z+3, r25	; 0x03
    1f76:	82 83       	std	Z+2, r24	; 0x02
    1f78:	24 81       	ldd	r18, Z+4	; 0x04
    1f7a:	35 81       	ldd	r19, Z+5	; 0x05
    1f7c:	46 81       	ldd	r20, Z+6	; 0x06
    1f7e:	57 81       	ldd	r21, Z+7	; 0x07
    1f80:	da 01       	movw	r26, r20
    1f82:	c9 01       	movw	r24, r18
    1f84:	01 97       	sbiw	r24, 0x01	; 1
    1f86:	a1 09       	sbc	r26, r1
    1f88:	b1 09       	sbc	r27, r1
    1f8a:	8f 5f       	subi	r24, 0xFF	; 255
    1f8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8e:	af 4f       	sbci	r26, 0xFF	; 255
    1f90:	bf 43       	sbci	r27, 0x3F	; 63
    1f92:	28 f3       	brcs	.-54     	; 0x1f5e <_fpadd_parts+0x1f4>
    1f94:	0b c0       	rjmp	.+22     	; 0x1fac <_fpadd_parts+0x242>
    1f96:	91 83       	std	Z+1, r25	; 0x01
    1f98:	33 82       	std	Z+3, r3	; 0x03
    1f9a:	22 82       	std	Z+2, r2	; 0x02
    1f9c:	ea 0c       	add	r14, r10
    1f9e:	fb 1c       	adc	r15, r11
    1fa0:	0c 1d       	adc	r16, r12
    1fa2:	1d 1d       	adc	r17, r13
    1fa4:	e4 82       	std	Z+4, r14	; 0x04
    1fa6:	f5 82       	std	Z+5, r15	; 0x05
    1fa8:	06 83       	std	Z+6, r16	; 0x06
    1faa:	17 83       	std	Z+7, r17	; 0x07
    1fac:	83 e0       	ldi	r24, 0x03	; 3
    1fae:	80 83       	st	Z, r24
    1fb0:	24 81       	ldd	r18, Z+4	; 0x04
    1fb2:	35 81       	ldd	r19, Z+5	; 0x05
    1fb4:	46 81       	ldd	r20, Z+6	; 0x06
    1fb6:	57 81       	ldd	r21, Z+7	; 0x07
    1fb8:	57 ff       	sbrs	r21, 7
    1fba:	1a c0       	rjmp	.+52     	; 0x1ff0 <_fpadd_parts+0x286>
    1fbc:	c9 01       	movw	r24, r18
    1fbe:	aa 27       	eor	r26, r26
    1fc0:	97 fd       	sbrc	r25, 7
    1fc2:	a0 95       	com	r26
    1fc4:	ba 2f       	mov	r27, r26
    1fc6:	81 70       	andi	r24, 0x01	; 1
    1fc8:	90 70       	andi	r25, 0x00	; 0
    1fca:	a0 70       	andi	r26, 0x00	; 0
    1fcc:	b0 70       	andi	r27, 0x00	; 0
    1fce:	56 95       	lsr	r21
    1fd0:	47 95       	ror	r20
    1fd2:	37 95       	ror	r19
    1fd4:	27 95       	ror	r18
    1fd6:	82 2b       	or	r24, r18
    1fd8:	93 2b       	or	r25, r19
    1fda:	a4 2b       	or	r26, r20
    1fdc:	b5 2b       	or	r27, r21
    1fde:	84 83       	std	Z+4, r24	; 0x04
    1fe0:	95 83       	std	Z+5, r25	; 0x05
    1fe2:	a6 83       	std	Z+6, r26	; 0x06
    1fe4:	b7 83       	std	Z+7, r27	; 0x07
    1fe6:	82 81       	ldd	r24, Z+2	; 0x02
    1fe8:	93 81       	ldd	r25, Z+3	; 0x03
    1fea:	01 96       	adiw	r24, 0x01	; 1
    1fec:	93 83       	std	Z+3, r25	; 0x03
    1fee:	82 83       	std	Z+2, r24	; 0x02
    1ff0:	df 01       	movw	r26, r30
    1ff2:	01 c0       	rjmp	.+2      	; 0x1ff6 <_fpadd_parts+0x28c>
    1ff4:	d2 01       	movw	r26, r4
    1ff6:	cd 01       	movw	r24, r26
    1ff8:	cd b7       	in	r28, 0x3d	; 61
    1ffa:	de b7       	in	r29, 0x3e	; 62
    1ffc:	e2 e1       	ldi	r30, 0x12	; 18
    1ffe:	0c 94 83 2e 	jmp	0x5d06	; 0x5d06 <__epilogue_restores__>

00002002 <__subsf3>:
    2002:	a0 e2       	ldi	r26, 0x20	; 32
    2004:	b0 e0       	ldi	r27, 0x00	; 0
    2006:	e7 e0       	ldi	r30, 0x07	; 7
    2008:	f0 e1       	ldi	r31, 0x10	; 16
    200a:	0c 94 73 2e 	jmp	0x5ce6	; 0x5ce6 <__prologue_saves__+0x18>
    200e:	69 83       	std	Y+1, r22	; 0x01
    2010:	7a 83       	std	Y+2, r23	; 0x02
    2012:	8b 83       	std	Y+3, r24	; 0x03
    2014:	9c 83       	std	Y+4, r25	; 0x04
    2016:	2d 83       	std	Y+5, r18	; 0x05
    2018:	3e 83       	std	Y+6, r19	; 0x06
    201a:	4f 83       	std	Y+7, r20	; 0x07
    201c:	58 87       	std	Y+8, r21	; 0x08
    201e:	e9 e0       	ldi	r30, 0x09	; 9
    2020:	ee 2e       	mov	r14, r30
    2022:	f1 2c       	mov	r15, r1
    2024:	ec 0e       	add	r14, r28
    2026:	fd 1e       	adc	r15, r29
    2028:	ce 01       	movw	r24, r28
    202a:	01 96       	adiw	r24, 0x01	; 1
    202c:	b7 01       	movw	r22, r14
    202e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2032:	8e 01       	movw	r16, r28
    2034:	0f 5e       	subi	r16, 0xEF	; 239
    2036:	1f 4f       	sbci	r17, 0xFF	; 255
    2038:	ce 01       	movw	r24, r28
    203a:	05 96       	adiw	r24, 0x05	; 5
    203c:	b8 01       	movw	r22, r16
    203e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2042:	8a 89       	ldd	r24, Y+18	; 0x12
    2044:	91 e0       	ldi	r25, 0x01	; 1
    2046:	89 27       	eor	r24, r25
    2048:	8a 8b       	std	Y+18, r24	; 0x12
    204a:	c7 01       	movw	r24, r14
    204c:	b8 01       	movw	r22, r16
    204e:	ae 01       	movw	r20, r28
    2050:	47 5e       	subi	r20, 0xE7	; 231
    2052:	5f 4f       	sbci	r21, 0xFF	; 255
    2054:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <_fpadd_parts>
    2058:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    205c:	a0 96       	adiw	r28, 0x20	; 32
    205e:	e6 e0       	ldi	r30, 0x06	; 6
    2060:	0c 94 8f 2e 	jmp	0x5d1e	; 0x5d1e <__epilogue_restores__+0x18>

00002064 <__addsf3>:
    2064:	a0 e2       	ldi	r26, 0x20	; 32
    2066:	b0 e0       	ldi	r27, 0x00	; 0
    2068:	e8 e3       	ldi	r30, 0x38	; 56
    206a:	f0 e1       	ldi	r31, 0x10	; 16
    206c:	0c 94 73 2e 	jmp	0x5ce6	; 0x5ce6 <__prologue_saves__+0x18>
    2070:	69 83       	std	Y+1, r22	; 0x01
    2072:	7a 83       	std	Y+2, r23	; 0x02
    2074:	8b 83       	std	Y+3, r24	; 0x03
    2076:	9c 83       	std	Y+4, r25	; 0x04
    2078:	2d 83       	std	Y+5, r18	; 0x05
    207a:	3e 83       	std	Y+6, r19	; 0x06
    207c:	4f 83       	std	Y+7, r20	; 0x07
    207e:	58 87       	std	Y+8, r21	; 0x08
    2080:	f9 e0       	ldi	r31, 0x09	; 9
    2082:	ef 2e       	mov	r14, r31
    2084:	f1 2c       	mov	r15, r1
    2086:	ec 0e       	add	r14, r28
    2088:	fd 1e       	adc	r15, r29
    208a:	ce 01       	movw	r24, r28
    208c:	01 96       	adiw	r24, 0x01	; 1
    208e:	b7 01       	movw	r22, r14
    2090:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2094:	8e 01       	movw	r16, r28
    2096:	0f 5e       	subi	r16, 0xEF	; 239
    2098:	1f 4f       	sbci	r17, 0xFF	; 255
    209a:	ce 01       	movw	r24, r28
    209c:	05 96       	adiw	r24, 0x05	; 5
    209e:	b8 01       	movw	r22, r16
    20a0:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    20a4:	c7 01       	movw	r24, r14
    20a6:	b8 01       	movw	r22, r16
    20a8:	ae 01       	movw	r20, r28
    20aa:	47 5e       	subi	r20, 0xE7	; 231
    20ac:	5f 4f       	sbci	r21, 0xFF	; 255
    20ae:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <_fpadd_parts>
    20b2:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    20b6:	a0 96       	adiw	r28, 0x20	; 32
    20b8:	e6 e0       	ldi	r30, 0x06	; 6
    20ba:	0c 94 8f 2e 	jmp	0x5d1e	; 0x5d1e <__epilogue_restores__+0x18>

000020be <__mulsf3>:
    20be:	a0 e2       	ldi	r26, 0x20	; 32
    20c0:	b0 e0       	ldi	r27, 0x00	; 0
    20c2:	e5 e6       	ldi	r30, 0x65	; 101
    20c4:	f0 e1       	ldi	r31, 0x10	; 16
    20c6:	0c 94 67 2e 	jmp	0x5cce	; 0x5cce <__prologue_saves__>
    20ca:	69 83       	std	Y+1, r22	; 0x01
    20cc:	7a 83       	std	Y+2, r23	; 0x02
    20ce:	8b 83       	std	Y+3, r24	; 0x03
    20d0:	9c 83       	std	Y+4, r25	; 0x04
    20d2:	2d 83       	std	Y+5, r18	; 0x05
    20d4:	3e 83       	std	Y+6, r19	; 0x06
    20d6:	4f 83       	std	Y+7, r20	; 0x07
    20d8:	58 87       	std	Y+8, r21	; 0x08
    20da:	ce 01       	movw	r24, r28
    20dc:	01 96       	adiw	r24, 0x01	; 1
    20de:	be 01       	movw	r22, r28
    20e0:	67 5f       	subi	r22, 0xF7	; 247
    20e2:	7f 4f       	sbci	r23, 0xFF	; 255
    20e4:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    20e8:	ce 01       	movw	r24, r28
    20ea:	05 96       	adiw	r24, 0x05	; 5
    20ec:	be 01       	movw	r22, r28
    20ee:	6f 5e       	subi	r22, 0xEF	; 239
    20f0:	7f 4f       	sbci	r23, 0xFF	; 255
    20f2:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    20f6:	99 85       	ldd	r25, Y+9	; 0x09
    20f8:	92 30       	cpi	r25, 0x02	; 2
    20fa:	88 f0       	brcs	.+34     	; 0x211e <__mulsf3+0x60>
    20fc:	89 89       	ldd	r24, Y+17	; 0x11
    20fe:	82 30       	cpi	r24, 0x02	; 2
    2100:	c8 f0       	brcs	.+50     	; 0x2134 <__mulsf3+0x76>
    2102:	94 30       	cpi	r25, 0x04	; 4
    2104:	19 f4       	brne	.+6      	; 0x210c <__mulsf3+0x4e>
    2106:	82 30       	cpi	r24, 0x02	; 2
    2108:	51 f4       	brne	.+20     	; 0x211e <__mulsf3+0x60>
    210a:	04 c0       	rjmp	.+8      	; 0x2114 <__mulsf3+0x56>
    210c:	84 30       	cpi	r24, 0x04	; 4
    210e:	29 f4       	brne	.+10     	; 0x211a <__mulsf3+0x5c>
    2110:	92 30       	cpi	r25, 0x02	; 2
    2112:	81 f4       	brne	.+32     	; 0x2134 <__mulsf3+0x76>
    2114:	83 e6       	ldi	r24, 0x63	; 99
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	c6 c0       	rjmp	.+396    	; 0x22a6 <__mulsf3+0x1e8>
    211a:	92 30       	cpi	r25, 0x02	; 2
    211c:	49 f4       	brne	.+18     	; 0x2130 <__mulsf3+0x72>
    211e:	20 e0       	ldi	r18, 0x00	; 0
    2120:	9a 85       	ldd	r25, Y+10	; 0x0a
    2122:	8a 89       	ldd	r24, Y+18	; 0x12
    2124:	98 13       	cpse	r25, r24
    2126:	21 e0       	ldi	r18, 0x01	; 1
    2128:	2a 87       	std	Y+10, r18	; 0x0a
    212a:	ce 01       	movw	r24, r28
    212c:	09 96       	adiw	r24, 0x09	; 9
    212e:	bb c0       	rjmp	.+374    	; 0x22a6 <__mulsf3+0x1e8>
    2130:	82 30       	cpi	r24, 0x02	; 2
    2132:	49 f4       	brne	.+18     	; 0x2146 <__mulsf3+0x88>
    2134:	20 e0       	ldi	r18, 0x00	; 0
    2136:	9a 85       	ldd	r25, Y+10	; 0x0a
    2138:	8a 89       	ldd	r24, Y+18	; 0x12
    213a:	98 13       	cpse	r25, r24
    213c:	21 e0       	ldi	r18, 0x01	; 1
    213e:	2a 8b       	std	Y+18, r18	; 0x12
    2140:	ce 01       	movw	r24, r28
    2142:	41 96       	adiw	r24, 0x11	; 17
    2144:	b0 c0       	rjmp	.+352    	; 0x22a6 <__mulsf3+0x1e8>
    2146:	2d 84       	ldd	r2, Y+13	; 0x0d
    2148:	3e 84       	ldd	r3, Y+14	; 0x0e
    214a:	4f 84       	ldd	r4, Y+15	; 0x0f
    214c:	58 88       	ldd	r5, Y+16	; 0x10
    214e:	6d 88       	ldd	r6, Y+21	; 0x15
    2150:	7e 88       	ldd	r7, Y+22	; 0x16
    2152:	8f 88       	ldd	r8, Y+23	; 0x17
    2154:	98 8c       	ldd	r9, Y+24	; 0x18
    2156:	ee 24       	eor	r14, r14
    2158:	ff 24       	eor	r15, r15
    215a:	87 01       	movw	r16, r14
    215c:	aa 24       	eor	r10, r10
    215e:	bb 24       	eor	r11, r11
    2160:	65 01       	movw	r12, r10
    2162:	40 e0       	ldi	r20, 0x00	; 0
    2164:	50 e0       	ldi	r21, 0x00	; 0
    2166:	60 e0       	ldi	r22, 0x00	; 0
    2168:	70 e0       	ldi	r23, 0x00	; 0
    216a:	e0 e0       	ldi	r30, 0x00	; 0
    216c:	f0 e0       	ldi	r31, 0x00	; 0
    216e:	c1 01       	movw	r24, r2
    2170:	81 70       	andi	r24, 0x01	; 1
    2172:	90 70       	andi	r25, 0x00	; 0
    2174:	89 2b       	or	r24, r25
    2176:	e9 f0       	breq	.+58     	; 0x21b2 <__mulsf3+0xf4>
    2178:	e6 0c       	add	r14, r6
    217a:	f7 1c       	adc	r15, r7
    217c:	08 1d       	adc	r16, r8
    217e:	19 1d       	adc	r17, r9
    2180:	9a 01       	movw	r18, r20
    2182:	ab 01       	movw	r20, r22
    2184:	2a 0d       	add	r18, r10
    2186:	3b 1d       	adc	r19, r11
    2188:	4c 1d       	adc	r20, r12
    218a:	5d 1d       	adc	r21, r13
    218c:	80 e0       	ldi	r24, 0x00	; 0
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	a0 e0       	ldi	r26, 0x00	; 0
    2192:	b0 e0       	ldi	r27, 0x00	; 0
    2194:	e6 14       	cp	r14, r6
    2196:	f7 04       	cpc	r15, r7
    2198:	08 05       	cpc	r16, r8
    219a:	19 05       	cpc	r17, r9
    219c:	20 f4       	brcc	.+8      	; 0x21a6 <__mulsf3+0xe8>
    219e:	81 e0       	ldi	r24, 0x01	; 1
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	a0 e0       	ldi	r26, 0x00	; 0
    21a4:	b0 e0       	ldi	r27, 0x00	; 0
    21a6:	ba 01       	movw	r22, r20
    21a8:	a9 01       	movw	r20, r18
    21aa:	48 0f       	add	r20, r24
    21ac:	59 1f       	adc	r21, r25
    21ae:	6a 1f       	adc	r22, r26
    21b0:	7b 1f       	adc	r23, r27
    21b2:	aa 0c       	add	r10, r10
    21b4:	bb 1c       	adc	r11, r11
    21b6:	cc 1c       	adc	r12, r12
    21b8:	dd 1c       	adc	r13, r13
    21ba:	97 fe       	sbrs	r9, 7
    21bc:	08 c0       	rjmp	.+16     	; 0x21ce <__mulsf3+0x110>
    21be:	81 e0       	ldi	r24, 0x01	; 1
    21c0:	90 e0       	ldi	r25, 0x00	; 0
    21c2:	a0 e0       	ldi	r26, 0x00	; 0
    21c4:	b0 e0       	ldi	r27, 0x00	; 0
    21c6:	a8 2a       	or	r10, r24
    21c8:	b9 2a       	or	r11, r25
    21ca:	ca 2a       	or	r12, r26
    21cc:	db 2a       	or	r13, r27
    21ce:	31 96       	adiw	r30, 0x01	; 1
    21d0:	e0 32       	cpi	r30, 0x20	; 32
    21d2:	f1 05       	cpc	r31, r1
    21d4:	49 f0       	breq	.+18     	; 0x21e8 <__mulsf3+0x12a>
    21d6:	66 0c       	add	r6, r6
    21d8:	77 1c       	adc	r7, r7
    21da:	88 1c       	adc	r8, r8
    21dc:	99 1c       	adc	r9, r9
    21de:	56 94       	lsr	r5
    21e0:	47 94       	ror	r4
    21e2:	37 94       	ror	r3
    21e4:	27 94       	ror	r2
    21e6:	c3 cf       	rjmp	.-122    	; 0x216e <__mulsf3+0xb0>
    21e8:	fa 85       	ldd	r31, Y+10	; 0x0a
    21ea:	ea 89       	ldd	r30, Y+18	; 0x12
    21ec:	2b 89       	ldd	r18, Y+19	; 0x13
    21ee:	3c 89       	ldd	r19, Y+20	; 0x14
    21f0:	8b 85       	ldd	r24, Y+11	; 0x0b
    21f2:	9c 85       	ldd	r25, Y+12	; 0x0c
    21f4:	28 0f       	add	r18, r24
    21f6:	39 1f       	adc	r19, r25
    21f8:	2e 5f       	subi	r18, 0xFE	; 254
    21fa:	3f 4f       	sbci	r19, 0xFF	; 255
    21fc:	17 c0       	rjmp	.+46     	; 0x222c <__mulsf3+0x16e>
    21fe:	ca 01       	movw	r24, r20
    2200:	81 70       	andi	r24, 0x01	; 1
    2202:	90 70       	andi	r25, 0x00	; 0
    2204:	89 2b       	or	r24, r25
    2206:	61 f0       	breq	.+24     	; 0x2220 <__mulsf3+0x162>
    2208:	16 95       	lsr	r17
    220a:	07 95       	ror	r16
    220c:	f7 94       	ror	r15
    220e:	e7 94       	ror	r14
    2210:	80 e0       	ldi	r24, 0x00	; 0
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	a0 e0       	ldi	r26, 0x00	; 0
    2216:	b0 e8       	ldi	r27, 0x80	; 128
    2218:	e8 2a       	or	r14, r24
    221a:	f9 2a       	or	r15, r25
    221c:	0a 2b       	or	r16, r26
    221e:	1b 2b       	or	r17, r27
    2220:	76 95       	lsr	r23
    2222:	67 95       	ror	r22
    2224:	57 95       	ror	r21
    2226:	47 95       	ror	r20
    2228:	2f 5f       	subi	r18, 0xFF	; 255
    222a:	3f 4f       	sbci	r19, 0xFF	; 255
    222c:	77 fd       	sbrc	r23, 7
    222e:	e7 cf       	rjmp	.-50     	; 0x21fe <__mulsf3+0x140>
    2230:	0c c0       	rjmp	.+24     	; 0x224a <__mulsf3+0x18c>
    2232:	44 0f       	add	r20, r20
    2234:	55 1f       	adc	r21, r21
    2236:	66 1f       	adc	r22, r22
    2238:	77 1f       	adc	r23, r23
    223a:	17 fd       	sbrc	r17, 7
    223c:	41 60       	ori	r20, 0x01	; 1
    223e:	ee 0c       	add	r14, r14
    2240:	ff 1c       	adc	r15, r15
    2242:	00 1f       	adc	r16, r16
    2244:	11 1f       	adc	r17, r17
    2246:	21 50       	subi	r18, 0x01	; 1
    2248:	30 40       	sbci	r19, 0x00	; 0
    224a:	40 30       	cpi	r20, 0x00	; 0
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	59 07       	cpc	r21, r25
    2250:	90 e0       	ldi	r25, 0x00	; 0
    2252:	69 07       	cpc	r22, r25
    2254:	90 e4       	ldi	r25, 0x40	; 64
    2256:	79 07       	cpc	r23, r25
    2258:	60 f3       	brcs	.-40     	; 0x2232 <__mulsf3+0x174>
    225a:	2b 8f       	std	Y+27, r18	; 0x1b
    225c:	3c 8f       	std	Y+28, r19	; 0x1c
    225e:	db 01       	movw	r26, r22
    2260:	ca 01       	movw	r24, r20
    2262:	8f 77       	andi	r24, 0x7F	; 127
    2264:	90 70       	andi	r25, 0x00	; 0
    2266:	a0 70       	andi	r26, 0x00	; 0
    2268:	b0 70       	andi	r27, 0x00	; 0
    226a:	80 34       	cpi	r24, 0x40	; 64
    226c:	91 05       	cpc	r25, r1
    226e:	a1 05       	cpc	r26, r1
    2270:	b1 05       	cpc	r27, r1
    2272:	61 f4       	brne	.+24     	; 0x228c <__mulsf3+0x1ce>
    2274:	47 fd       	sbrc	r20, 7
    2276:	0a c0       	rjmp	.+20     	; 0x228c <__mulsf3+0x1ce>
    2278:	e1 14       	cp	r14, r1
    227a:	f1 04       	cpc	r15, r1
    227c:	01 05       	cpc	r16, r1
    227e:	11 05       	cpc	r17, r1
    2280:	29 f0       	breq	.+10     	; 0x228c <__mulsf3+0x1ce>
    2282:	40 5c       	subi	r20, 0xC0	; 192
    2284:	5f 4f       	sbci	r21, 0xFF	; 255
    2286:	6f 4f       	sbci	r22, 0xFF	; 255
    2288:	7f 4f       	sbci	r23, 0xFF	; 255
    228a:	40 78       	andi	r20, 0x80	; 128
    228c:	1a 8e       	std	Y+26, r1	; 0x1a
    228e:	fe 17       	cp	r31, r30
    2290:	11 f0       	breq	.+4      	; 0x2296 <__mulsf3+0x1d8>
    2292:	81 e0       	ldi	r24, 0x01	; 1
    2294:	8a 8f       	std	Y+26, r24	; 0x1a
    2296:	4d 8f       	std	Y+29, r20	; 0x1d
    2298:	5e 8f       	std	Y+30, r21	; 0x1e
    229a:	6f 8f       	std	Y+31, r22	; 0x1f
    229c:	78 a3       	std	Y+32, r23	; 0x20
    229e:	83 e0       	ldi	r24, 0x03	; 3
    22a0:	89 8f       	std	Y+25, r24	; 0x19
    22a2:	ce 01       	movw	r24, r28
    22a4:	49 96       	adiw	r24, 0x19	; 25
    22a6:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    22aa:	a0 96       	adiw	r28, 0x20	; 32
    22ac:	e2 e1       	ldi	r30, 0x12	; 18
    22ae:	0c 94 83 2e 	jmp	0x5d06	; 0x5d06 <__epilogue_restores__>

000022b2 <__gtsf2>:
    22b2:	a8 e1       	ldi	r26, 0x18	; 24
    22b4:	b0 e0       	ldi	r27, 0x00	; 0
    22b6:	ef e5       	ldi	r30, 0x5F	; 95
    22b8:	f1 e1       	ldi	r31, 0x11	; 17
    22ba:	0c 94 73 2e 	jmp	0x5ce6	; 0x5ce6 <__prologue_saves__+0x18>
    22be:	69 83       	std	Y+1, r22	; 0x01
    22c0:	7a 83       	std	Y+2, r23	; 0x02
    22c2:	8b 83       	std	Y+3, r24	; 0x03
    22c4:	9c 83       	std	Y+4, r25	; 0x04
    22c6:	2d 83       	std	Y+5, r18	; 0x05
    22c8:	3e 83       	std	Y+6, r19	; 0x06
    22ca:	4f 83       	std	Y+7, r20	; 0x07
    22cc:	58 87       	std	Y+8, r21	; 0x08
    22ce:	89 e0       	ldi	r24, 0x09	; 9
    22d0:	e8 2e       	mov	r14, r24
    22d2:	f1 2c       	mov	r15, r1
    22d4:	ec 0e       	add	r14, r28
    22d6:	fd 1e       	adc	r15, r29
    22d8:	ce 01       	movw	r24, r28
    22da:	01 96       	adiw	r24, 0x01	; 1
    22dc:	b7 01       	movw	r22, r14
    22de:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    22e2:	8e 01       	movw	r16, r28
    22e4:	0f 5e       	subi	r16, 0xEF	; 239
    22e6:	1f 4f       	sbci	r17, 0xFF	; 255
    22e8:	ce 01       	movw	r24, r28
    22ea:	05 96       	adiw	r24, 0x05	; 5
    22ec:	b8 01       	movw	r22, r16
    22ee:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    22f2:	89 85       	ldd	r24, Y+9	; 0x09
    22f4:	82 30       	cpi	r24, 0x02	; 2
    22f6:	40 f0       	brcs	.+16     	; 0x2308 <__gtsf2+0x56>
    22f8:	89 89       	ldd	r24, Y+17	; 0x11
    22fa:	82 30       	cpi	r24, 0x02	; 2
    22fc:	28 f0       	brcs	.+10     	; 0x2308 <__gtsf2+0x56>
    22fe:	c7 01       	movw	r24, r14
    2300:	b8 01       	movw	r22, r16
    2302:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <__fpcmp_parts_f>
    2306:	01 c0       	rjmp	.+2      	; 0x230a <__gtsf2+0x58>
    2308:	8f ef       	ldi	r24, 0xFF	; 255
    230a:	68 96       	adiw	r28, 0x18	; 24
    230c:	e6 e0       	ldi	r30, 0x06	; 6
    230e:	0c 94 8f 2e 	jmp	0x5d1e	; 0x5d1e <__epilogue_restores__+0x18>

00002312 <__gesf2>:
    2312:	a8 e1       	ldi	r26, 0x18	; 24
    2314:	b0 e0       	ldi	r27, 0x00	; 0
    2316:	ef e8       	ldi	r30, 0x8F	; 143
    2318:	f1 e1       	ldi	r31, 0x11	; 17
    231a:	0c 94 73 2e 	jmp	0x5ce6	; 0x5ce6 <__prologue_saves__+0x18>
    231e:	69 83       	std	Y+1, r22	; 0x01
    2320:	7a 83       	std	Y+2, r23	; 0x02
    2322:	8b 83       	std	Y+3, r24	; 0x03
    2324:	9c 83       	std	Y+4, r25	; 0x04
    2326:	2d 83       	std	Y+5, r18	; 0x05
    2328:	3e 83       	std	Y+6, r19	; 0x06
    232a:	4f 83       	std	Y+7, r20	; 0x07
    232c:	58 87       	std	Y+8, r21	; 0x08
    232e:	89 e0       	ldi	r24, 0x09	; 9
    2330:	e8 2e       	mov	r14, r24
    2332:	f1 2c       	mov	r15, r1
    2334:	ec 0e       	add	r14, r28
    2336:	fd 1e       	adc	r15, r29
    2338:	ce 01       	movw	r24, r28
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	b7 01       	movw	r22, r14
    233e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2342:	8e 01       	movw	r16, r28
    2344:	0f 5e       	subi	r16, 0xEF	; 239
    2346:	1f 4f       	sbci	r17, 0xFF	; 255
    2348:	ce 01       	movw	r24, r28
    234a:	05 96       	adiw	r24, 0x05	; 5
    234c:	b8 01       	movw	r22, r16
    234e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    2352:	89 85       	ldd	r24, Y+9	; 0x09
    2354:	82 30       	cpi	r24, 0x02	; 2
    2356:	40 f0       	brcs	.+16     	; 0x2368 <__gesf2+0x56>
    2358:	89 89       	ldd	r24, Y+17	; 0x11
    235a:	82 30       	cpi	r24, 0x02	; 2
    235c:	28 f0       	brcs	.+10     	; 0x2368 <__gesf2+0x56>
    235e:	c7 01       	movw	r24, r14
    2360:	b8 01       	movw	r22, r16
    2362:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <__fpcmp_parts_f>
    2366:	01 c0       	rjmp	.+2      	; 0x236a <__gesf2+0x58>
    2368:	8f ef       	ldi	r24, 0xFF	; 255
    236a:	68 96       	adiw	r28, 0x18	; 24
    236c:	e6 e0       	ldi	r30, 0x06	; 6
    236e:	0c 94 8f 2e 	jmp	0x5d1e	; 0x5d1e <__epilogue_restores__+0x18>

00002372 <__ltsf2>:
    2372:	a8 e1       	ldi	r26, 0x18	; 24
    2374:	b0 e0       	ldi	r27, 0x00	; 0
    2376:	ef eb       	ldi	r30, 0xBF	; 191
    2378:	f1 e1       	ldi	r31, 0x11	; 17
    237a:	0c 94 73 2e 	jmp	0x5ce6	; 0x5ce6 <__prologue_saves__+0x18>
    237e:	69 83       	std	Y+1, r22	; 0x01
    2380:	7a 83       	std	Y+2, r23	; 0x02
    2382:	8b 83       	std	Y+3, r24	; 0x03
    2384:	9c 83       	std	Y+4, r25	; 0x04
    2386:	2d 83       	std	Y+5, r18	; 0x05
    2388:	3e 83       	std	Y+6, r19	; 0x06
    238a:	4f 83       	std	Y+7, r20	; 0x07
    238c:	58 87       	std	Y+8, r21	; 0x08
    238e:	89 e0       	ldi	r24, 0x09	; 9
    2390:	e8 2e       	mov	r14, r24
    2392:	f1 2c       	mov	r15, r1
    2394:	ec 0e       	add	r14, r28
    2396:	fd 1e       	adc	r15, r29
    2398:	ce 01       	movw	r24, r28
    239a:	01 96       	adiw	r24, 0x01	; 1
    239c:	b7 01       	movw	r22, r14
    239e:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    23a2:	8e 01       	movw	r16, r28
    23a4:	0f 5e       	subi	r16, 0xEF	; 239
    23a6:	1f 4f       	sbci	r17, 0xFF	; 255
    23a8:	ce 01       	movw	r24, r28
    23aa:	05 96       	adiw	r24, 0x05	; 5
    23ac:	b8 01       	movw	r22, r16
    23ae:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    23b2:	89 85       	ldd	r24, Y+9	; 0x09
    23b4:	82 30       	cpi	r24, 0x02	; 2
    23b6:	40 f0       	brcs	.+16     	; 0x23c8 <__ltsf2+0x56>
    23b8:	89 89       	ldd	r24, Y+17	; 0x11
    23ba:	82 30       	cpi	r24, 0x02	; 2
    23bc:	28 f0       	brcs	.+10     	; 0x23c8 <__ltsf2+0x56>
    23be:	c7 01       	movw	r24, r14
    23c0:	b8 01       	movw	r22, r16
    23c2:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <__fpcmp_parts_f>
    23c6:	01 c0       	rjmp	.+2      	; 0x23ca <__ltsf2+0x58>
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	68 96       	adiw	r28, 0x18	; 24
    23cc:	e6 e0       	ldi	r30, 0x06	; 6
    23ce:	0c 94 8f 2e 	jmp	0x5d1e	; 0x5d1e <__epilogue_restores__+0x18>

000023d2 <__floatsisf>:
    23d2:	a8 e0       	ldi	r26, 0x08	; 8
    23d4:	b0 e0       	ldi	r27, 0x00	; 0
    23d6:	ef ee       	ldi	r30, 0xEF	; 239
    23d8:	f1 e1       	ldi	r31, 0x11	; 17
    23da:	0c 94 70 2e 	jmp	0x5ce0	; 0x5ce0 <__prologue_saves__+0x12>
    23de:	9b 01       	movw	r18, r22
    23e0:	ac 01       	movw	r20, r24
    23e2:	83 e0       	ldi	r24, 0x03	; 3
    23e4:	89 83       	std	Y+1, r24	; 0x01
    23e6:	da 01       	movw	r26, r20
    23e8:	c9 01       	movw	r24, r18
    23ea:	88 27       	eor	r24, r24
    23ec:	b7 fd       	sbrc	r27, 7
    23ee:	83 95       	inc	r24
    23f0:	99 27       	eor	r25, r25
    23f2:	aa 27       	eor	r26, r26
    23f4:	bb 27       	eor	r27, r27
    23f6:	b8 2e       	mov	r11, r24
    23f8:	21 15       	cp	r18, r1
    23fa:	31 05       	cpc	r19, r1
    23fc:	41 05       	cpc	r20, r1
    23fe:	51 05       	cpc	r21, r1
    2400:	19 f4       	brne	.+6      	; 0x2408 <__floatsisf+0x36>
    2402:	82 e0       	ldi	r24, 0x02	; 2
    2404:	89 83       	std	Y+1, r24	; 0x01
    2406:	3a c0       	rjmp	.+116    	; 0x247c <__floatsisf+0xaa>
    2408:	88 23       	and	r24, r24
    240a:	a9 f0       	breq	.+42     	; 0x2436 <__floatsisf+0x64>
    240c:	20 30       	cpi	r18, 0x00	; 0
    240e:	80 e0       	ldi	r24, 0x00	; 0
    2410:	38 07       	cpc	r19, r24
    2412:	80 e0       	ldi	r24, 0x00	; 0
    2414:	48 07       	cpc	r20, r24
    2416:	80 e8       	ldi	r24, 0x80	; 128
    2418:	58 07       	cpc	r21, r24
    241a:	29 f4       	brne	.+10     	; 0x2426 <__floatsisf+0x54>
    241c:	60 e0       	ldi	r22, 0x00	; 0
    241e:	70 e0       	ldi	r23, 0x00	; 0
    2420:	80 e0       	ldi	r24, 0x00	; 0
    2422:	9f ec       	ldi	r25, 0xCF	; 207
    2424:	30 c0       	rjmp	.+96     	; 0x2486 <__floatsisf+0xb4>
    2426:	ee 24       	eor	r14, r14
    2428:	ff 24       	eor	r15, r15
    242a:	87 01       	movw	r16, r14
    242c:	e2 1a       	sub	r14, r18
    242e:	f3 0a       	sbc	r15, r19
    2430:	04 0b       	sbc	r16, r20
    2432:	15 0b       	sbc	r17, r21
    2434:	02 c0       	rjmp	.+4      	; 0x243a <__floatsisf+0x68>
    2436:	79 01       	movw	r14, r18
    2438:	8a 01       	movw	r16, r20
    243a:	8e e1       	ldi	r24, 0x1E	; 30
    243c:	c8 2e       	mov	r12, r24
    243e:	d1 2c       	mov	r13, r1
    2440:	dc 82       	std	Y+4, r13	; 0x04
    2442:	cb 82       	std	Y+3, r12	; 0x03
    2444:	ed 82       	std	Y+5, r14	; 0x05
    2446:	fe 82       	std	Y+6, r15	; 0x06
    2448:	0f 83       	std	Y+7, r16	; 0x07
    244a:	18 87       	std	Y+8, r17	; 0x08
    244c:	c8 01       	movw	r24, r16
    244e:	b7 01       	movw	r22, r14
    2450:	0e 94 93 13 	call	0x2726	; 0x2726 <__clzsi2>
    2454:	01 97       	sbiw	r24, 0x01	; 1
    2456:	18 16       	cp	r1, r24
    2458:	19 06       	cpc	r1, r25
    245a:	84 f4       	brge	.+32     	; 0x247c <__floatsisf+0xaa>
    245c:	08 2e       	mov	r0, r24
    245e:	04 c0       	rjmp	.+8      	; 0x2468 <__floatsisf+0x96>
    2460:	ee 0c       	add	r14, r14
    2462:	ff 1c       	adc	r15, r15
    2464:	00 1f       	adc	r16, r16
    2466:	11 1f       	adc	r17, r17
    2468:	0a 94       	dec	r0
    246a:	d2 f7       	brpl	.-12     	; 0x2460 <__floatsisf+0x8e>
    246c:	ed 82       	std	Y+5, r14	; 0x05
    246e:	fe 82       	std	Y+6, r15	; 0x06
    2470:	0f 83       	std	Y+7, r16	; 0x07
    2472:	18 87       	std	Y+8, r17	; 0x08
    2474:	c8 1a       	sub	r12, r24
    2476:	d9 0a       	sbc	r13, r25
    2478:	dc 82       	std	Y+4, r13	; 0x04
    247a:	cb 82       	std	Y+3, r12	; 0x03
    247c:	ba 82       	std	Y+2, r11	; 0x02
    247e:	ce 01       	movw	r24, r28
    2480:	01 96       	adiw	r24, 0x01	; 1
    2482:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    2486:	28 96       	adiw	r28, 0x08	; 8
    2488:	e9 e0       	ldi	r30, 0x09	; 9
    248a:	0c 94 8c 2e 	jmp	0x5d18	; 0x5d18 <__epilogue_restores__+0x12>

0000248e <__fixsfsi>:
    248e:	ac e0       	ldi	r26, 0x0C	; 12
    2490:	b0 e0       	ldi	r27, 0x00	; 0
    2492:	ed e4       	ldi	r30, 0x4D	; 77
    2494:	f2 e1       	ldi	r31, 0x12	; 18
    2496:	0c 94 77 2e 	jmp	0x5cee	; 0x5cee <__prologue_saves__+0x20>
    249a:	69 83       	std	Y+1, r22	; 0x01
    249c:	7a 83       	std	Y+2, r23	; 0x02
    249e:	8b 83       	std	Y+3, r24	; 0x03
    24a0:	9c 83       	std	Y+4, r25	; 0x04
    24a2:	ce 01       	movw	r24, r28
    24a4:	01 96       	adiw	r24, 0x01	; 1
    24a6:	be 01       	movw	r22, r28
    24a8:	6b 5f       	subi	r22, 0xFB	; 251
    24aa:	7f 4f       	sbci	r23, 0xFF	; 255
    24ac:	0e 94 b7 14 	call	0x296e	; 0x296e <__unpack_f>
    24b0:	8d 81       	ldd	r24, Y+5	; 0x05
    24b2:	82 30       	cpi	r24, 0x02	; 2
    24b4:	61 f1       	breq	.+88     	; 0x250e <__fixsfsi+0x80>
    24b6:	82 30       	cpi	r24, 0x02	; 2
    24b8:	50 f1       	brcs	.+84     	; 0x250e <__fixsfsi+0x80>
    24ba:	84 30       	cpi	r24, 0x04	; 4
    24bc:	21 f4       	brne	.+8      	; 0x24c6 <__fixsfsi+0x38>
    24be:	8e 81       	ldd	r24, Y+6	; 0x06
    24c0:	88 23       	and	r24, r24
    24c2:	51 f1       	breq	.+84     	; 0x2518 <__fixsfsi+0x8a>
    24c4:	2e c0       	rjmp	.+92     	; 0x2522 <__fixsfsi+0x94>
    24c6:	2f 81       	ldd	r18, Y+7	; 0x07
    24c8:	38 85       	ldd	r19, Y+8	; 0x08
    24ca:	37 fd       	sbrc	r19, 7
    24cc:	20 c0       	rjmp	.+64     	; 0x250e <__fixsfsi+0x80>
    24ce:	6e 81       	ldd	r22, Y+6	; 0x06
    24d0:	2f 31       	cpi	r18, 0x1F	; 31
    24d2:	31 05       	cpc	r19, r1
    24d4:	1c f0       	brlt	.+6      	; 0x24dc <__fixsfsi+0x4e>
    24d6:	66 23       	and	r22, r22
    24d8:	f9 f0       	breq	.+62     	; 0x2518 <__fixsfsi+0x8a>
    24da:	23 c0       	rjmp	.+70     	; 0x2522 <__fixsfsi+0x94>
    24dc:	8e e1       	ldi	r24, 0x1E	; 30
    24de:	90 e0       	ldi	r25, 0x00	; 0
    24e0:	82 1b       	sub	r24, r18
    24e2:	93 0b       	sbc	r25, r19
    24e4:	29 85       	ldd	r18, Y+9	; 0x09
    24e6:	3a 85       	ldd	r19, Y+10	; 0x0a
    24e8:	4b 85       	ldd	r20, Y+11	; 0x0b
    24ea:	5c 85       	ldd	r21, Y+12	; 0x0c
    24ec:	04 c0       	rjmp	.+8      	; 0x24f6 <__fixsfsi+0x68>
    24ee:	56 95       	lsr	r21
    24f0:	47 95       	ror	r20
    24f2:	37 95       	ror	r19
    24f4:	27 95       	ror	r18
    24f6:	8a 95       	dec	r24
    24f8:	d2 f7       	brpl	.-12     	; 0x24ee <__fixsfsi+0x60>
    24fa:	66 23       	and	r22, r22
    24fc:	b1 f0       	breq	.+44     	; 0x252a <__fixsfsi+0x9c>
    24fe:	50 95       	com	r21
    2500:	40 95       	com	r20
    2502:	30 95       	com	r19
    2504:	21 95       	neg	r18
    2506:	3f 4f       	sbci	r19, 0xFF	; 255
    2508:	4f 4f       	sbci	r20, 0xFF	; 255
    250a:	5f 4f       	sbci	r21, 0xFF	; 255
    250c:	0e c0       	rjmp	.+28     	; 0x252a <__fixsfsi+0x9c>
    250e:	20 e0       	ldi	r18, 0x00	; 0
    2510:	30 e0       	ldi	r19, 0x00	; 0
    2512:	40 e0       	ldi	r20, 0x00	; 0
    2514:	50 e0       	ldi	r21, 0x00	; 0
    2516:	09 c0       	rjmp	.+18     	; 0x252a <__fixsfsi+0x9c>
    2518:	2f ef       	ldi	r18, 0xFF	; 255
    251a:	3f ef       	ldi	r19, 0xFF	; 255
    251c:	4f ef       	ldi	r20, 0xFF	; 255
    251e:	5f e7       	ldi	r21, 0x7F	; 127
    2520:	04 c0       	rjmp	.+8      	; 0x252a <__fixsfsi+0x9c>
    2522:	20 e0       	ldi	r18, 0x00	; 0
    2524:	30 e0       	ldi	r19, 0x00	; 0
    2526:	40 e0       	ldi	r20, 0x00	; 0
    2528:	50 e8       	ldi	r21, 0x80	; 128
    252a:	b9 01       	movw	r22, r18
    252c:	ca 01       	movw	r24, r20
    252e:	2c 96       	adiw	r28, 0x0c	; 12
    2530:	e2 e0       	ldi	r30, 0x02	; 2
    2532:	0c 94 93 2e 	jmp	0x5d26	; 0x5d26 <__epilogue_restores__+0x20>

00002536 <__floatunsisf>:
    2536:	a8 e0       	ldi	r26, 0x08	; 8
    2538:	b0 e0       	ldi	r27, 0x00	; 0
    253a:	e1 ea       	ldi	r30, 0xA1	; 161
    253c:	f2 e1       	ldi	r31, 0x12	; 18
    253e:	0c 94 6f 2e 	jmp	0x5cde	; 0x5cde <__prologue_saves__+0x10>
    2542:	7b 01       	movw	r14, r22
    2544:	8c 01       	movw	r16, r24
    2546:	61 15       	cp	r22, r1
    2548:	71 05       	cpc	r23, r1
    254a:	81 05       	cpc	r24, r1
    254c:	91 05       	cpc	r25, r1
    254e:	19 f4       	brne	.+6      	; 0x2556 <__floatunsisf+0x20>
    2550:	82 e0       	ldi	r24, 0x02	; 2
    2552:	89 83       	std	Y+1, r24	; 0x01
    2554:	60 c0       	rjmp	.+192    	; 0x2616 <__floatunsisf+0xe0>
    2556:	83 e0       	ldi	r24, 0x03	; 3
    2558:	89 83       	std	Y+1, r24	; 0x01
    255a:	8e e1       	ldi	r24, 0x1E	; 30
    255c:	c8 2e       	mov	r12, r24
    255e:	d1 2c       	mov	r13, r1
    2560:	dc 82       	std	Y+4, r13	; 0x04
    2562:	cb 82       	std	Y+3, r12	; 0x03
    2564:	ed 82       	std	Y+5, r14	; 0x05
    2566:	fe 82       	std	Y+6, r15	; 0x06
    2568:	0f 83       	std	Y+7, r16	; 0x07
    256a:	18 87       	std	Y+8, r17	; 0x08
    256c:	c8 01       	movw	r24, r16
    256e:	b7 01       	movw	r22, r14
    2570:	0e 94 93 13 	call	0x2726	; 0x2726 <__clzsi2>
    2574:	fc 01       	movw	r30, r24
    2576:	31 97       	sbiw	r30, 0x01	; 1
    2578:	f7 ff       	sbrs	r31, 7
    257a:	3b c0       	rjmp	.+118    	; 0x25f2 <__floatunsisf+0xbc>
    257c:	22 27       	eor	r18, r18
    257e:	33 27       	eor	r19, r19
    2580:	2e 1b       	sub	r18, r30
    2582:	3f 0b       	sbc	r19, r31
    2584:	57 01       	movw	r10, r14
    2586:	68 01       	movw	r12, r16
    2588:	02 2e       	mov	r0, r18
    258a:	04 c0       	rjmp	.+8      	; 0x2594 <__floatunsisf+0x5e>
    258c:	d6 94       	lsr	r13
    258e:	c7 94       	ror	r12
    2590:	b7 94       	ror	r11
    2592:	a7 94       	ror	r10
    2594:	0a 94       	dec	r0
    2596:	d2 f7       	brpl	.-12     	; 0x258c <__floatunsisf+0x56>
    2598:	40 e0       	ldi	r20, 0x00	; 0
    259a:	50 e0       	ldi	r21, 0x00	; 0
    259c:	60 e0       	ldi	r22, 0x00	; 0
    259e:	70 e0       	ldi	r23, 0x00	; 0
    25a0:	81 e0       	ldi	r24, 0x01	; 1
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	a0 e0       	ldi	r26, 0x00	; 0
    25a6:	b0 e0       	ldi	r27, 0x00	; 0
    25a8:	04 c0       	rjmp	.+8      	; 0x25b2 <__floatunsisf+0x7c>
    25aa:	88 0f       	add	r24, r24
    25ac:	99 1f       	adc	r25, r25
    25ae:	aa 1f       	adc	r26, r26
    25b0:	bb 1f       	adc	r27, r27
    25b2:	2a 95       	dec	r18
    25b4:	d2 f7       	brpl	.-12     	; 0x25aa <__floatunsisf+0x74>
    25b6:	01 97       	sbiw	r24, 0x01	; 1
    25b8:	a1 09       	sbc	r26, r1
    25ba:	b1 09       	sbc	r27, r1
    25bc:	8e 21       	and	r24, r14
    25be:	9f 21       	and	r25, r15
    25c0:	a0 23       	and	r26, r16
    25c2:	b1 23       	and	r27, r17
    25c4:	00 97       	sbiw	r24, 0x00	; 0
    25c6:	a1 05       	cpc	r26, r1
    25c8:	b1 05       	cpc	r27, r1
    25ca:	21 f0       	breq	.+8      	; 0x25d4 <__floatunsisf+0x9e>
    25cc:	41 e0       	ldi	r20, 0x01	; 1
    25ce:	50 e0       	ldi	r21, 0x00	; 0
    25d0:	60 e0       	ldi	r22, 0x00	; 0
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	4a 29       	or	r20, r10
    25d6:	5b 29       	or	r21, r11
    25d8:	6c 29       	or	r22, r12
    25da:	7d 29       	or	r23, r13
    25dc:	4d 83       	std	Y+5, r20	; 0x05
    25de:	5e 83       	std	Y+6, r21	; 0x06
    25e0:	6f 83       	std	Y+7, r22	; 0x07
    25e2:	78 87       	std	Y+8, r23	; 0x08
    25e4:	8e e1       	ldi	r24, 0x1E	; 30
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	8e 1b       	sub	r24, r30
    25ea:	9f 0b       	sbc	r25, r31
    25ec:	9c 83       	std	Y+4, r25	; 0x04
    25ee:	8b 83       	std	Y+3, r24	; 0x03
    25f0:	12 c0       	rjmp	.+36     	; 0x2616 <__floatunsisf+0xe0>
    25f2:	30 97       	sbiw	r30, 0x00	; 0
    25f4:	81 f0       	breq	.+32     	; 0x2616 <__floatunsisf+0xe0>
    25f6:	0e 2e       	mov	r0, r30
    25f8:	04 c0       	rjmp	.+8      	; 0x2602 <__floatunsisf+0xcc>
    25fa:	ee 0c       	add	r14, r14
    25fc:	ff 1c       	adc	r15, r15
    25fe:	00 1f       	adc	r16, r16
    2600:	11 1f       	adc	r17, r17
    2602:	0a 94       	dec	r0
    2604:	d2 f7       	brpl	.-12     	; 0x25fa <__floatunsisf+0xc4>
    2606:	ed 82       	std	Y+5, r14	; 0x05
    2608:	fe 82       	std	Y+6, r15	; 0x06
    260a:	0f 83       	std	Y+7, r16	; 0x07
    260c:	18 87       	std	Y+8, r17	; 0x08
    260e:	ce 1a       	sub	r12, r30
    2610:	df 0a       	sbc	r13, r31
    2612:	dc 82       	std	Y+4, r13	; 0x04
    2614:	cb 82       	std	Y+3, r12	; 0x03
    2616:	1a 82       	std	Y+2, r1	; 0x02
    2618:	ce 01       	movw	r24, r28
    261a:	01 96       	adiw	r24, 0x01	; 1
    261c:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__pack_f>
    2620:	28 96       	adiw	r28, 0x08	; 8
    2622:	ea e0       	ldi	r30, 0x0A	; 10
    2624:	0c 94 8b 2e 	jmp	0x5d16	; 0x5d16 <__epilogue_restores__+0x10>

00002628 <__lshrdi3>:
    2628:	ef 92       	push	r14
    262a:	ff 92       	push	r15
    262c:	0f 93       	push	r16
    262e:	df 93       	push	r29
    2630:	cf 93       	push	r28
    2632:	cd b7       	in	r28, 0x3d	; 61
    2634:	de b7       	in	r29, 0x3e	; 62
    2636:	60 97       	sbiw	r28, 0x10	; 16
    2638:	0f b6       	in	r0, 0x3f	; 63
    263a:	f8 94       	cli
    263c:	de bf       	out	0x3e, r29	; 62
    263e:	0f be       	out	0x3f, r0	; 63
    2640:	cd bf       	out	0x3d, r28	; 61
    2642:	a8 2f       	mov	r26, r24
    2644:	00 23       	and	r16, r16
    2646:	09 f4       	brne	.+2      	; 0x264a <__lshrdi3+0x22>
    2648:	61 c0       	rjmp	.+194    	; 0x270c <__lshrdi3+0xe4>
    264a:	7e 01       	movw	r14, r28
    264c:	08 94       	sec
    264e:	e1 1c       	adc	r14, r1
    2650:	f1 1c       	adc	r15, r1
    2652:	88 e0       	ldi	r24, 0x08	; 8
    2654:	f7 01       	movw	r30, r14
    2656:	11 92       	st	Z+, r1
    2658:	8a 95       	dec	r24
    265a:	e9 f7       	brne	.-6      	; 0x2656 <__lshrdi3+0x2e>
    265c:	29 83       	std	Y+1, r18	; 0x01
    265e:	3a 83       	std	Y+2, r19	; 0x02
    2660:	4b 83       	std	Y+3, r20	; 0x03
    2662:	5c 83       	std	Y+4, r21	; 0x04
    2664:	6d 83       	std	Y+5, r22	; 0x05
    2666:	7e 83       	std	Y+6, r23	; 0x06
    2668:	af 83       	std	Y+7, r26	; 0x07
    266a:	98 87       	std	Y+8, r25	; 0x08
    266c:	80 e2       	ldi	r24, 0x20	; 32
    266e:	80 1b       	sub	r24, r16
    2670:	e8 2f       	mov	r30, r24
    2672:	ff 27       	eor	r31, r31
    2674:	e7 fd       	sbrc	r30, 7
    2676:	f0 95       	com	r31
    2678:	4d 81       	ldd	r20, Y+5	; 0x05
    267a:	5e 81       	ldd	r21, Y+6	; 0x06
    267c:	6f 81       	ldd	r22, Y+7	; 0x07
    267e:	78 85       	ldd	r23, Y+8	; 0x08
    2680:	18 16       	cp	r1, r24
    2682:	84 f0       	brlt	.+32     	; 0x26a4 <__lshrdi3+0x7c>
    2684:	1d 86       	std	Y+13, r1	; 0x0d
    2686:	1e 86       	std	Y+14, r1	; 0x0e
    2688:	1f 86       	std	Y+15, r1	; 0x0f
    268a:	18 8a       	std	Y+16, r1	; 0x10
    268c:	88 27       	eor	r24, r24
    268e:	99 27       	eor	r25, r25
    2690:	8e 1b       	sub	r24, r30
    2692:	9f 0b       	sbc	r25, r31
    2694:	04 c0       	rjmp	.+8      	; 0x269e <__lshrdi3+0x76>
    2696:	76 95       	lsr	r23
    2698:	67 95       	ror	r22
    269a:	57 95       	ror	r21
    269c:	47 95       	ror	r20
    269e:	8a 95       	dec	r24
    26a0:	d2 f7       	brpl	.-12     	; 0x2696 <__lshrdi3+0x6e>
    26a2:	28 c0       	rjmp	.+80     	; 0x26f4 <__lshrdi3+0xcc>
    26a4:	20 2f       	mov	r18, r16
    26a6:	33 27       	eor	r19, r19
    26a8:	27 fd       	sbrc	r18, 7
    26aa:	30 95       	com	r19
    26ac:	db 01       	movw	r26, r22
    26ae:	ca 01       	movw	r24, r20
    26b0:	02 2e       	mov	r0, r18
    26b2:	04 c0       	rjmp	.+8      	; 0x26bc <__lshrdi3+0x94>
    26b4:	b6 95       	lsr	r27
    26b6:	a7 95       	ror	r26
    26b8:	97 95       	ror	r25
    26ba:	87 95       	ror	r24
    26bc:	0a 94       	dec	r0
    26be:	d2 f7       	brpl	.-12     	; 0x26b4 <__lshrdi3+0x8c>
    26c0:	8d 87       	std	Y+13, r24	; 0x0d
    26c2:	9e 87       	std	Y+14, r25	; 0x0e
    26c4:	af 87       	std	Y+15, r26	; 0x0f
    26c6:	b8 8b       	std	Y+16, r27	; 0x10
    26c8:	04 c0       	rjmp	.+8      	; 0x26d2 <__lshrdi3+0xaa>
    26ca:	44 0f       	add	r20, r20
    26cc:	55 1f       	adc	r21, r21
    26ce:	66 1f       	adc	r22, r22
    26d0:	77 1f       	adc	r23, r23
    26d2:	ea 95       	dec	r30
    26d4:	d2 f7       	brpl	.-12     	; 0x26ca <__lshrdi3+0xa2>
    26d6:	89 81       	ldd	r24, Y+1	; 0x01
    26d8:	9a 81       	ldd	r25, Y+2	; 0x02
    26da:	ab 81       	ldd	r26, Y+3	; 0x03
    26dc:	bc 81       	ldd	r27, Y+4	; 0x04
    26de:	04 c0       	rjmp	.+8      	; 0x26e8 <__lshrdi3+0xc0>
    26e0:	b6 95       	lsr	r27
    26e2:	a7 95       	ror	r26
    26e4:	97 95       	ror	r25
    26e6:	87 95       	ror	r24
    26e8:	2a 95       	dec	r18
    26ea:	d2 f7       	brpl	.-12     	; 0x26e0 <__lshrdi3+0xb8>
    26ec:	48 2b       	or	r20, r24
    26ee:	59 2b       	or	r21, r25
    26f0:	6a 2b       	or	r22, r26
    26f2:	7b 2b       	or	r23, r27
    26f4:	49 87       	std	Y+9, r20	; 0x09
    26f6:	5a 87       	std	Y+10, r21	; 0x0a
    26f8:	6b 87       	std	Y+11, r22	; 0x0b
    26fa:	7c 87       	std	Y+12, r23	; 0x0c
    26fc:	29 85       	ldd	r18, Y+9	; 0x09
    26fe:	3a 85       	ldd	r19, Y+10	; 0x0a
    2700:	4b 85       	ldd	r20, Y+11	; 0x0b
    2702:	5c 85       	ldd	r21, Y+12	; 0x0c
    2704:	6d 85       	ldd	r22, Y+13	; 0x0d
    2706:	7e 85       	ldd	r23, Y+14	; 0x0e
    2708:	af 85       	ldd	r26, Y+15	; 0x0f
    270a:	98 89       	ldd	r25, Y+16	; 0x10
    270c:	8a 2f       	mov	r24, r26
    270e:	60 96       	adiw	r28, 0x10	; 16
    2710:	0f b6       	in	r0, 0x3f	; 63
    2712:	f8 94       	cli
    2714:	de bf       	out	0x3e, r29	; 62
    2716:	0f be       	out	0x3f, r0	; 63
    2718:	cd bf       	out	0x3d, r28	; 61
    271a:	cf 91       	pop	r28
    271c:	df 91       	pop	r29
    271e:	0f 91       	pop	r16
    2720:	ff 90       	pop	r15
    2722:	ef 90       	pop	r14
    2724:	08 95       	ret

00002726 <__clzsi2>:
    2726:	ef 92       	push	r14
    2728:	ff 92       	push	r15
    272a:	0f 93       	push	r16
    272c:	1f 93       	push	r17
    272e:	7b 01       	movw	r14, r22
    2730:	8c 01       	movw	r16, r24
    2732:	80 e0       	ldi	r24, 0x00	; 0
    2734:	e8 16       	cp	r14, r24
    2736:	80 e0       	ldi	r24, 0x00	; 0
    2738:	f8 06       	cpc	r15, r24
    273a:	81 e0       	ldi	r24, 0x01	; 1
    273c:	08 07       	cpc	r16, r24
    273e:	80 e0       	ldi	r24, 0x00	; 0
    2740:	18 07       	cpc	r17, r24
    2742:	88 f4       	brcc	.+34     	; 0x2766 <__clzsi2+0x40>
    2744:	8f ef       	ldi	r24, 0xFF	; 255
    2746:	e8 16       	cp	r14, r24
    2748:	f1 04       	cpc	r15, r1
    274a:	01 05       	cpc	r16, r1
    274c:	11 05       	cpc	r17, r1
    274e:	31 f0       	breq	.+12     	; 0x275c <__clzsi2+0x36>
    2750:	28 f0       	brcs	.+10     	; 0x275c <__clzsi2+0x36>
    2752:	88 e0       	ldi	r24, 0x08	; 8
    2754:	90 e0       	ldi	r25, 0x00	; 0
    2756:	a0 e0       	ldi	r26, 0x00	; 0
    2758:	b0 e0       	ldi	r27, 0x00	; 0
    275a:	17 c0       	rjmp	.+46     	; 0x278a <__clzsi2+0x64>
    275c:	80 e0       	ldi	r24, 0x00	; 0
    275e:	90 e0       	ldi	r25, 0x00	; 0
    2760:	a0 e0       	ldi	r26, 0x00	; 0
    2762:	b0 e0       	ldi	r27, 0x00	; 0
    2764:	12 c0       	rjmp	.+36     	; 0x278a <__clzsi2+0x64>
    2766:	80 e0       	ldi	r24, 0x00	; 0
    2768:	e8 16       	cp	r14, r24
    276a:	80 e0       	ldi	r24, 0x00	; 0
    276c:	f8 06       	cpc	r15, r24
    276e:	80 e0       	ldi	r24, 0x00	; 0
    2770:	08 07       	cpc	r16, r24
    2772:	81 e0       	ldi	r24, 0x01	; 1
    2774:	18 07       	cpc	r17, r24
    2776:	28 f0       	brcs	.+10     	; 0x2782 <__clzsi2+0x5c>
    2778:	88 e1       	ldi	r24, 0x18	; 24
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	a0 e0       	ldi	r26, 0x00	; 0
    277e:	b0 e0       	ldi	r27, 0x00	; 0
    2780:	04 c0       	rjmp	.+8      	; 0x278a <__clzsi2+0x64>
    2782:	80 e1       	ldi	r24, 0x10	; 16
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	a0 e0       	ldi	r26, 0x00	; 0
    2788:	b0 e0       	ldi	r27, 0x00	; 0
    278a:	20 e2       	ldi	r18, 0x20	; 32
    278c:	30 e0       	ldi	r19, 0x00	; 0
    278e:	40 e0       	ldi	r20, 0x00	; 0
    2790:	50 e0       	ldi	r21, 0x00	; 0
    2792:	28 1b       	sub	r18, r24
    2794:	39 0b       	sbc	r19, r25
    2796:	4a 0b       	sbc	r20, r26
    2798:	5b 0b       	sbc	r21, r27
    279a:	04 c0       	rjmp	.+8      	; 0x27a4 <__clzsi2+0x7e>
    279c:	16 95       	lsr	r17
    279e:	07 95       	ror	r16
    27a0:	f7 94       	ror	r15
    27a2:	e7 94       	ror	r14
    27a4:	8a 95       	dec	r24
    27a6:	d2 f7       	brpl	.-12     	; 0x279c <__clzsi2+0x76>
    27a8:	f7 01       	movw	r30, r14
    27aa:	e5 59       	subi	r30, 0x95	; 149
    27ac:	ff 4f       	sbci	r31, 0xFF	; 255
    27ae:	80 81       	ld	r24, Z
    27b0:	28 1b       	sub	r18, r24
    27b2:	31 09       	sbc	r19, r1
    27b4:	41 09       	sbc	r20, r1
    27b6:	51 09       	sbc	r21, r1
    27b8:	c9 01       	movw	r24, r18
    27ba:	1f 91       	pop	r17
    27bc:	0f 91       	pop	r16
    27be:	ff 90       	pop	r15
    27c0:	ef 90       	pop	r14
    27c2:	08 95       	ret

000027c4 <__pack_f>:
    27c4:	df 92       	push	r13
    27c6:	ef 92       	push	r14
    27c8:	ff 92       	push	r15
    27ca:	0f 93       	push	r16
    27cc:	1f 93       	push	r17
    27ce:	fc 01       	movw	r30, r24
    27d0:	e4 80       	ldd	r14, Z+4	; 0x04
    27d2:	f5 80       	ldd	r15, Z+5	; 0x05
    27d4:	06 81       	ldd	r16, Z+6	; 0x06
    27d6:	17 81       	ldd	r17, Z+7	; 0x07
    27d8:	d1 80       	ldd	r13, Z+1	; 0x01
    27da:	80 81       	ld	r24, Z
    27dc:	82 30       	cpi	r24, 0x02	; 2
    27de:	48 f4       	brcc	.+18     	; 0x27f2 <__pack_f+0x2e>
    27e0:	80 e0       	ldi	r24, 0x00	; 0
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	a0 e1       	ldi	r26, 0x10	; 16
    27e6:	b0 e0       	ldi	r27, 0x00	; 0
    27e8:	e8 2a       	or	r14, r24
    27ea:	f9 2a       	or	r15, r25
    27ec:	0a 2b       	or	r16, r26
    27ee:	1b 2b       	or	r17, r27
    27f0:	a5 c0       	rjmp	.+330    	; 0x293c <__pack_f+0x178>
    27f2:	84 30       	cpi	r24, 0x04	; 4
    27f4:	09 f4       	brne	.+2      	; 0x27f8 <__pack_f+0x34>
    27f6:	9f c0       	rjmp	.+318    	; 0x2936 <__pack_f+0x172>
    27f8:	82 30       	cpi	r24, 0x02	; 2
    27fa:	21 f4       	brne	.+8      	; 0x2804 <__pack_f+0x40>
    27fc:	ee 24       	eor	r14, r14
    27fe:	ff 24       	eor	r15, r15
    2800:	87 01       	movw	r16, r14
    2802:	05 c0       	rjmp	.+10     	; 0x280e <__pack_f+0x4a>
    2804:	e1 14       	cp	r14, r1
    2806:	f1 04       	cpc	r15, r1
    2808:	01 05       	cpc	r16, r1
    280a:	11 05       	cpc	r17, r1
    280c:	19 f4       	brne	.+6      	; 0x2814 <__pack_f+0x50>
    280e:	e0 e0       	ldi	r30, 0x00	; 0
    2810:	f0 e0       	ldi	r31, 0x00	; 0
    2812:	96 c0       	rjmp	.+300    	; 0x2940 <__pack_f+0x17c>
    2814:	62 81       	ldd	r22, Z+2	; 0x02
    2816:	73 81       	ldd	r23, Z+3	; 0x03
    2818:	9f ef       	ldi	r25, 0xFF	; 255
    281a:	62 38       	cpi	r22, 0x82	; 130
    281c:	79 07       	cpc	r23, r25
    281e:	0c f0       	brlt	.+2      	; 0x2822 <__pack_f+0x5e>
    2820:	5b c0       	rjmp	.+182    	; 0x28d8 <__pack_f+0x114>
    2822:	22 e8       	ldi	r18, 0x82	; 130
    2824:	3f ef       	ldi	r19, 0xFF	; 255
    2826:	26 1b       	sub	r18, r22
    2828:	37 0b       	sbc	r19, r23
    282a:	2a 31       	cpi	r18, 0x1A	; 26
    282c:	31 05       	cpc	r19, r1
    282e:	2c f0       	brlt	.+10     	; 0x283a <__pack_f+0x76>
    2830:	20 e0       	ldi	r18, 0x00	; 0
    2832:	30 e0       	ldi	r19, 0x00	; 0
    2834:	40 e0       	ldi	r20, 0x00	; 0
    2836:	50 e0       	ldi	r21, 0x00	; 0
    2838:	2a c0       	rjmp	.+84     	; 0x288e <__pack_f+0xca>
    283a:	b8 01       	movw	r22, r16
    283c:	a7 01       	movw	r20, r14
    283e:	02 2e       	mov	r0, r18
    2840:	04 c0       	rjmp	.+8      	; 0x284a <__pack_f+0x86>
    2842:	76 95       	lsr	r23
    2844:	67 95       	ror	r22
    2846:	57 95       	ror	r21
    2848:	47 95       	ror	r20
    284a:	0a 94       	dec	r0
    284c:	d2 f7       	brpl	.-12     	; 0x2842 <__pack_f+0x7e>
    284e:	81 e0       	ldi	r24, 0x01	; 1
    2850:	90 e0       	ldi	r25, 0x00	; 0
    2852:	a0 e0       	ldi	r26, 0x00	; 0
    2854:	b0 e0       	ldi	r27, 0x00	; 0
    2856:	04 c0       	rjmp	.+8      	; 0x2860 <__pack_f+0x9c>
    2858:	88 0f       	add	r24, r24
    285a:	99 1f       	adc	r25, r25
    285c:	aa 1f       	adc	r26, r26
    285e:	bb 1f       	adc	r27, r27
    2860:	2a 95       	dec	r18
    2862:	d2 f7       	brpl	.-12     	; 0x2858 <__pack_f+0x94>
    2864:	01 97       	sbiw	r24, 0x01	; 1
    2866:	a1 09       	sbc	r26, r1
    2868:	b1 09       	sbc	r27, r1
    286a:	8e 21       	and	r24, r14
    286c:	9f 21       	and	r25, r15
    286e:	a0 23       	and	r26, r16
    2870:	b1 23       	and	r27, r17
    2872:	00 97       	sbiw	r24, 0x00	; 0
    2874:	a1 05       	cpc	r26, r1
    2876:	b1 05       	cpc	r27, r1
    2878:	21 f0       	breq	.+8      	; 0x2882 <__pack_f+0xbe>
    287a:	81 e0       	ldi	r24, 0x01	; 1
    287c:	90 e0       	ldi	r25, 0x00	; 0
    287e:	a0 e0       	ldi	r26, 0x00	; 0
    2880:	b0 e0       	ldi	r27, 0x00	; 0
    2882:	9a 01       	movw	r18, r20
    2884:	ab 01       	movw	r20, r22
    2886:	28 2b       	or	r18, r24
    2888:	39 2b       	or	r19, r25
    288a:	4a 2b       	or	r20, r26
    288c:	5b 2b       	or	r21, r27
    288e:	da 01       	movw	r26, r20
    2890:	c9 01       	movw	r24, r18
    2892:	8f 77       	andi	r24, 0x7F	; 127
    2894:	90 70       	andi	r25, 0x00	; 0
    2896:	a0 70       	andi	r26, 0x00	; 0
    2898:	b0 70       	andi	r27, 0x00	; 0
    289a:	80 34       	cpi	r24, 0x40	; 64
    289c:	91 05       	cpc	r25, r1
    289e:	a1 05       	cpc	r26, r1
    28a0:	b1 05       	cpc	r27, r1
    28a2:	39 f4       	brne	.+14     	; 0x28b2 <__pack_f+0xee>
    28a4:	27 ff       	sbrs	r18, 7
    28a6:	09 c0       	rjmp	.+18     	; 0x28ba <__pack_f+0xf6>
    28a8:	20 5c       	subi	r18, 0xC0	; 192
    28aa:	3f 4f       	sbci	r19, 0xFF	; 255
    28ac:	4f 4f       	sbci	r20, 0xFF	; 255
    28ae:	5f 4f       	sbci	r21, 0xFF	; 255
    28b0:	04 c0       	rjmp	.+8      	; 0x28ba <__pack_f+0xf6>
    28b2:	21 5c       	subi	r18, 0xC1	; 193
    28b4:	3f 4f       	sbci	r19, 0xFF	; 255
    28b6:	4f 4f       	sbci	r20, 0xFF	; 255
    28b8:	5f 4f       	sbci	r21, 0xFF	; 255
    28ba:	e0 e0       	ldi	r30, 0x00	; 0
    28bc:	f0 e0       	ldi	r31, 0x00	; 0
    28be:	20 30       	cpi	r18, 0x00	; 0
    28c0:	a0 e0       	ldi	r26, 0x00	; 0
    28c2:	3a 07       	cpc	r19, r26
    28c4:	a0 e0       	ldi	r26, 0x00	; 0
    28c6:	4a 07       	cpc	r20, r26
    28c8:	a0 e4       	ldi	r26, 0x40	; 64
    28ca:	5a 07       	cpc	r21, r26
    28cc:	10 f0       	brcs	.+4      	; 0x28d2 <__pack_f+0x10e>
    28ce:	e1 e0       	ldi	r30, 0x01	; 1
    28d0:	f0 e0       	ldi	r31, 0x00	; 0
    28d2:	79 01       	movw	r14, r18
    28d4:	8a 01       	movw	r16, r20
    28d6:	27 c0       	rjmp	.+78     	; 0x2926 <__pack_f+0x162>
    28d8:	60 38       	cpi	r22, 0x80	; 128
    28da:	71 05       	cpc	r23, r1
    28dc:	64 f5       	brge	.+88     	; 0x2936 <__pack_f+0x172>
    28de:	fb 01       	movw	r30, r22
    28e0:	e1 58       	subi	r30, 0x81	; 129
    28e2:	ff 4f       	sbci	r31, 0xFF	; 255
    28e4:	d8 01       	movw	r26, r16
    28e6:	c7 01       	movw	r24, r14
    28e8:	8f 77       	andi	r24, 0x7F	; 127
    28ea:	90 70       	andi	r25, 0x00	; 0
    28ec:	a0 70       	andi	r26, 0x00	; 0
    28ee:	b0 70       	andi	r27, 0x00	; 0
    28f0:	80 34       	cpi	r24, 0x40	; 64
    28f2:	91 05       	cpc	r25, r1
    28f4:	a1 05       	cpc	r26, r1
    28f6:	b1 05       	cpc	r27, r1
    28f8:	39 f4       	brne	.+14     	; 0x2908 <__pack_f+0x144>
    28fa:	e7 fe       	sbrs	r14, 7
    28fc:	0d c0       	rjmp	.+26     	; 0x2918 <__pack_f+0x154>
    28fe:	80 e4       	ldi	r24, 0x40	; 64
    2900:	90 e0       	ldi	r25, 0x00	; 0
    2902:	a0 e0       	ldi	r26, 0x00	; 0
    2904:	b0 e0       	ldi	r27, 0x00	; 0
    2906:	04 c0       	rjmp	.+8      	; 0x2910 <__pack_f+0x14c>
    2908:	8f e3       	ldi	r24, 0x3F	; 63
    290a:	90 e0       	ldi	r25, 0x00	; 0
    290c:	a0 e0       	ldi	r26, 0x00	; 0
    290e:	b0 e0       	ldi	r27, 0x00	; 0
    2910:	e8 0e       	add	r14, r24
    2912:	f9 1e       	adc	r15, r25
    2914:	0a 1f       	adc	r16, r26
    2916:	1b 1f       	adc	r17, r27
    2918:	17 ff       	sbrs	r17, 7
    291a:	05 c0       	rjmp	.+10     	; 0x2926 <__pack_f+0x162>
    291c:	16 95       	lsr	r17
    291e:	07 95       	ror	r16
    2920:	f7 94       	ror	r15
    2922:	e7 94       	ror	r14
    2924:	31 96       	adiw	r30, 0x01	; 1
    2926:	87 e0       	ldi	r24, 0x07	; 7
    2928:	16 95       	lsr	r17
    292a:	07 95       	ror	r16
    292c:	f7 94       	ror	r15
    292e:	e7 94       	ror	r14
    2930:	8a 95       	dec	r24
    2932:	d1 f7       	brne	.-12     	; 0x2928 <__pack_f+0x164>
    2934:	05 c0       	rjmp	.+10     	; 0x2940 <__pack_f+0x17c>
    2936:	ee 24       	eor	r14, r14
    2938:	ff 24       	eor	r15, r15
    293a:	87 01       	movw	r16, r14
    293c:	ef ef       	ldi	r30, 0xFF	; 255
    293e:	f0 e0       	ldi	r31, 0x00	; 0
    2940:	6e 2f       	mov	r22, r30
    2942:	67 95       	ror	r22
    2944:	66 27       	eor	r22, r22
    2946:	67 95       	ror	r22
    2948:	90 2f       	mov	r25, r16
    294a:	9f 77       	andi	r25, 0x7F	; 127
    294c:	d7 94       	ror	r13
    294e:	dd 24       	eor	r13, r13
    2950:	d7 94       	ror	r13
    2952:	8e 2f       	mov	r24, r30
    2954:	86 95       	lsr	r24
    2956:	49 2f       	mov	r20, r25
    2958:	46 2b       	or	r20, r22
    295a:	58 2f       	mov	r21, r24
    295c:	5d 29       	or	r21, r13
    295e:	b7 01       	movw	r22, r14
    2960:	ca 01       	movw	r24, r20
    2962:	1f 91       	pop	r17
    2964:	0f 91       	pop	r16
    2966:	ff 90       	pop	r15
    2968:	ef 90       	pop	r14
    296a:	df 90       	pop	r13
    296c:	08 95       	ret

0000296e <__unpack_f>:
    296e:	fc 01       	movw	r30, r24
    2970:	db 01       	movw	r26, r22
    2972:	40 81       	ld	r20, Z
    2974:	51 81       	ldd	r21, Z+1	; 0x01
    2976:	22 81       	ldd	r18, Z+2	; 0x02
    2978:	62 2f       	mov	r22, r18
    297a:	6f 77       	andi	r22, 0x7F	; 127
    297c:	70 e0       	ldi	r23, 0x00	; 0
    297e:	22 1f       	adc	r18, r18
    2980:	22 27       	eor	r18, r18
    2982:	22 1f       	adc	r18, r18
    2984:	93 81       	ldd	r25, Z+3	; 0x03
    2986:	89 2f       	mov	r24, r25
    2988:	88 0f       	add	r24, r24
    298a:	82 2b       	or	r24, r18
    298c:	28 2f       	mov	r18, r24
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	99 1f       	adc	r25, r25
    2992:	99 27       	eor	r25, r25
    2994:	99 1f       	adc	r25, r25
    2996:	11 96       	adiw	r26, 0x01	; 1
    2998:	9c 93       	st	X, r25
    299a:	11 97       	sbiw	r26, 0x01	; 1
    299c:	21 15       	cp	r18, r1
    299e:	31 05       	cpc	r19, r1
    29a0:	a9 f5       	brne	.+106    	; 0x2a0c <__unpack_f+0x9e>
    29a2:	41 15       	cp	r20, r1
    29a4:	51 05       	cpc	r21, r1
    29a6:	61 05       	cpc	r22, r1
    29a8:	71 05       	cpc	r23, r1
    29aa:	11 f4       	brne	.+4      	; 0x29b0 <__unpack_f+0x42>
    29ac:	82 e0       	ldi	r24, 0x02	; 2
    29ae:	37 c0       	rjmp	.+110    	; 0x2a1e <__unpack_f+0xb0>
    29b0:	82 e8       	ldi	r24, 0x82	; 130
    29b2:	9f ef       	ldi	r25, 0xFF	; 255
    29b4:	13 96       	adiw	r26, 0x03	; 3
    29b6:	9c 93       	st	X, r25
    29b8:	8e 93       	st	-X, r24
    29ba:	12 97       	sbiw	r26, 0x02	; 2
    29bc:	9a 01       	movw	r18, r20
    29be:	ab 01       	movw	r20, r22
    29c0:	67 e0       	ldi	r22, 0x07	; 7
    29c2:	22 0f       	add	r18, r18
    29c4:	33 1f       	adc	r19, r19
    29c6:	44 1f       	adc	r20, r20
    29c8:	55 1f       	adc	r21, r21
    29ca:	6a 95       	dec	r22
    29cc:	d1 f7       	brne	.-12     	; 0x29c2 <__unpack_f+0x54>
    29ce:	83 e0       	ldi	r24, 0x03	; 3
    29d0:	8c 93       	st	X, r24
    29d2:	0d c0       	rjmp	.+26     	; 0x29ee <__unpack_f+0x80>
    29d4:	22 0f       	add	r18, r18
    29d6:	33 1f       	adc	r19, r19
    29d8:	44 1f       	adc	r20, r20
    29da:	55 1f       	adc	r21, r21
    29dc:	12 96       	adiw	r26, 0x02	; 2
    29de:	8d 91       	ld	r24, X+
    29e0:	9c 91       	ld	r25, X
    29e2:	13 97       	sbiw	r26, 0x03	; 3
    29e4:	01 97       	sbiw	r24, 0x01	; 1
    29e6:	13 96       	adiw	r26, 0x03	; 3
    29e8:	9c 93       	st	X, r25
    29ea:	8e 93       	st	-X, r24
    29ec:	12 97       	sbiw	r26, 0x02	; 2
    29ee:	20 30       	cpi	r18, 0x00	; 0
    29f0:	80 e0       	ldi	r24, 0x00	; 0
    29f2:	38 07       	cpc	r19, r24
    29f4:	80 e0       	ldi	r24, 0x00	; 0
    29f6:	48 07       	cpc	r20, r24
    29f8:	80 e4       	ldi	r24, 0x40	; 64
    29fa:	58 07       	cpc	r21, r24
    29fc:	58 f3       	brcs	.-42     	; 0x29d4 <__unpack_f+0x66>
    29fe:	14 96       	adiw	r26, 0x04	; 4
    2a00:	2d 93       	st	X+, r18
    2a02:	3d 93       	st	X+, r19
    2a04:	4d 93       	st	X+, r20
    2a06:	5c 93       	st	X, r21
    2a08:	17 97       	sbiw	r26, 0x07	; 7
    2a0a:	08 95       	ret
    2a0c:	2f 3f       	cpi	r18, 0xFF	; 255
    2a0e:	31 05       	cpc	r19, r1
    2a10:	79 f4       	brne	.+30     	; 0x2a30 <__unpack_f+0xc2>
    2a12:	41 15       	cp	r20, r1
    2a14:	51 05       	cpc	r21, r1
    2a16:	61 05       	cpc	r22, r1
    2a18:	71 05       	cpc	r23, r1
    2a1a:	19 f4       	brne	.+6      	; 0x2a22 <__unpack_f+0xb4>
    2a1c:	84 e0       	ldi	r24, 0x04	; 4
    2a1e:	8c 93       	st	X, r24
    2a20:	08 95       	ret
    2a22:	64 ff       	sbrs	r22, 4
    2a24:	03 c0       	rjmp	.+6      	; 0x2a2c <__unpack_f+0xbe>
    2a26:	81 e0       	ldi	r24, 0x01	; 1
    2a28:	8c 93       	st	X, r24
    2a2a:	12 c0       	rjmp	.+36     	; 0x2a50 <__unpack_f+0xe2>
    2a2c:	1c 92       	st	X, r1
    2a2e:	10 c0       	rjmp	.+32     	; 0x2a50 <__unpack_f+0xe2>
    2a30:	2f 57       	subi	r18, 0x7F	; 127
    2a32:	30 40       	sbci	r19, 0x00	; 0
    2a34:	13 96       	adiw	r26, 0x03	; 3
    2a36:	3c 93       	st	X, r19
    2a38:	2e 93       	st	-X, r18
    2a3a:	12 97       	sbiw	r26, 0x02	; 2
    2a3c:	83 e0       	ldi	r24, 0x03	; 3
    2a3e:	8c 93       	st	X, r24
    2a40:	87 e0       	ldi	r24, 0x07	; 7
    2a42:	44 0f       	add	r20, r20
    2a44:	55 1f       	adc	r21, r21
    2a46:	66 1f       	adc	r22, r22
    2a48:	77 1f       	adc	r23, r23
    2a4a:	8a 95       	dec	r24
    2a4c:	d1 f7       	brne	.-12     	; 0x2a42 <__unpack_f+0xd4>
    2a4e:	70 64       	ori	r23, 0x40	; 64
    2a50:	14 96       	adiw	r26, 0x04	; 4
    2a52:	4d 93       	st	X+, r20
    2a54:	5d 93       	st	X+, r21
    2a56:	6d 93       	st	X+, r22
    2a58:	7c 93       	st	X, r23
    2a5a:	17 97       	sbiw	r26, 0x07	; 7
    2a5c:	08 95       	ret

00002a5e <__fpcmp_parts_f>:
    2a5e:	1f 93       	push	r17
    2a60:	dc 01       	movw	r26, r24
    2a62:	fb 01       	movw	r30, r22
    2a64:	9c 91       	ld	r25, X
    2a66:	92 30       	cpi	r25, 0x02	; 2
    2a68:	08 f4       	brcc	.+2      	; 0x2a6c <__fpcmp_parts_f+0xe>
    2a6a:	47 c0       	rjmp	.+142    	; 0x2afa <__fpcmp_parts_f+0x9c>
    2a6c:	80 81       	ld	r24, Z
    2a6e:	82 30       	cpi	r24, 0x02	; 2
    2a70:	08 f4       	brcc	.+2      	; 0x2a74 <__fpcmp_parts_f+0x16>
    2a72:	43 c0       	rjmp	.+134    	; 0x2afa <__fpcmp_parts_f+0x9c>
    2a74:	94 30       	cpi	r25, 0x04	; 4
    2a76:	51 f4       	brne	.+20     	; 0x2a8c <__fpcmp_parts_f+0x2e>
    2a78:	11 96       	adiw	r26, 0x01	; 1
    2a7a:	1c 91       	ld	r17, X
    2a7c:	84 30       	cpi	r24, 0x04	; 4
    2a7e:	99 f5       	brne	.+102    	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2a80:	81 81       	ldd	r24, Z+1	; 0x01
    2a82:	68 2f       	mov	r22, r24
    2a84:	70 e0       	ldi	r23, 0x00	; 0
    2a86:	61 1b       	sub	r22, r17
    2a88:	71 09       	sbc	r23, r1
    2a8a:	3f c0       	rjmp	.+126    	; 0x2b0a <__fpcmp_parts_f+0xac>
    2a8c:	84 30       	cpi	r24, 0x04	; 4
    2a8e:	21 f0       	breq	.+8      	; 0x2a98 <__fpcmp_parts_f+0x3a>
    2a90:	92 30       	cpi	r25, 0x02	; 2
    2a92:	31 f4       	brne	.+12     	; 0x2aa0 <__fpcmp_parts_f+0x42>
    2a94:	82 30       	cpi	r24, 0x02	; 2
    2a96:	b9 f1       	breq	.+110    	; 0x2b06 <__fpcmp_parts_f+0xa8>
    2a98:	81 81       	ldd	r24, Z+1	; 0x01
    2a9a:	88 23       	and	r24, r24
    2a9c:	89 f1       	breq	.+98     	; 0x2b00 <__fpcmp_parts_f+0xa2>
    2a9e:	2d c0       	rjmp	.+90     	; 0x2afa <__fpcmp_parts_f+0x9c>
    2aa0:	11 96       	adiw	r26, 0x01	; 1
    2aa2:	1c 91       	ld	r17, X
    2aa4:	11 97       	sbiw	r26, 0x01	; 1
    2aa6:	82 30       	cpi	r24, 0x02	; 2
    2aa8:	f1 f0       	breq	.+60     	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2aaa:	81 81       	ldd	r24, Z+1	; 0x01
    2aac:	18 17       	cp	r17, r24
    2aae:	d9 f4       	brne	.+54     	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2ab0:	12 96       	adiw	r26, 0x02	; 2
    2ab2:	2d 91       	ld	r18, X+
    2ab4:	3c 91       	ld	r19, X
    2ab6:	13 97       	sbiw	r26, 0x03	; 3
    2ab8:	82 81       	ldd	r24, Z+2	; 0x02
    2aba:	93 81       	ldd	r25, Z+3	; 0x03
    2abc:	82 17       	cp	r24, r18
    2abe:	93 07       	cpc	r25, r19
    2ac0:	94 f0       	brlt	.+36     	; 0x2ae6 <__fpcmp_parts_f+0x88>
    2ac2:	28 17       	cp	r18, r24
    2ac4:	39 07       	cpc	r19, r25
    2ac6:	bc f0       	brlt	.+46     	; 0x2af6 <__fpcmp_parts_f+0x98>
    2ac8:	14 96       	adiw	r26, 0x04	; 4
    2aca:	8d 91       	ld	r24, X+
    2acc:	9d 91       	ld	r25, X+
    2ace:	0d 90       	ld	r0, X+
    2ad0:	bc 91       	ld	r27, X
    2ad2:	a0 2d       	mov	r26, r0
    2ad4:	24 81       	ldd	r18, Z+4	; 0x04
    2ad6:	35 81       	ldd	r19, Z+5	; 0x05
    2ad8:	46 81       	ldd	r20, Z+6	; 0x06
    2ada:	57 81       	ldd	r21, Z+7	; 0x07
    2adc:	28 17       	cp	r18, r24
    2ade:	39 07       	cpc	r19, r25
    2ae0:	4a 07       	cpc	r20, r26
    2ae2:	5b 07       	cpc	r21, r27
    2ae4:	18 f4       	brcc	.+6      	; 0x2aec <__fpcmp_parts_f+0x8e>
    2ae6:	11 23       	and	r17, r17
    2ae8:	41 f0       	breq	.+16     	; 0x2afa <__fpcmp_parts_f+0x9c>
    2aea:	0a c0       	rjmp	.+20     	; 0x2b00 <__fpcmp_parts_f+0xa2>
    2aec:	82 17       	cp	r24, r18
    2aee:	93 07       	cpc	r25, r19
    2af0:	a4 07       	cpc	r26, r20
    2af2:	b5 07       	cpc	r27, r21
    2af4:	40 f4       	brcc	.+16     	; 0x2b06 <__fpcmp_parts_f+0xa8>
    2af6:	11 23       	and	r17, r17
    2af8:	19 f0       	breq	.+6      	; 0x2b00 <__fpcmp_parts_f+0xa2>
    2afa:	61 e0       	ldi	r22, 0x01	; 1
    2afc:	70 e0       	ldi	r23, 0x00	; 0
    2afe:	05 c0       	rjmp	.+10     	; 0x2b0a <__fpcmp_parts_f+0xac>
    2b00:	6f ef       	ldi	r22, 0xFF	; 255
    2b02:	7f ef       	ldi	r23, 0xFF	; 255
    2b04:	02 c0       	rjmp	.+4      	; 0x2b0a <__fpcmp_parts_f+0xac>
    2b06:	60 e0       	ldi	r22, 0x00	; 0
    2b08:	70 e0       	ldi	r23, 0x00	; 0
    2b0a:	cb 01       	movw	r24, r22
    2b0c:	1f 91       	pop	r17
    2b0e:	08 95       	ret

00002b10 <fun_zero>:
	}
}
*/

		/*	PWM  */
void fun_zero (void){
    2b10:	df 93       	push	r29
    2b12:	cf 93       	push	r28
    2b14:	cd b7       	in	r28, 0x3d	; 61
    2b16:	de b7       	in	r29, 0x3e	; 62
	static volatile uint8 counter = 0;
	if (counter==0){
    2b18:	80 91 b4 01 	lds	r24, 0x01B4
    2b1c:	88 23       	and	r24, r24
    2b1e:	69 f4       	brne	.+26     	; 0x2b3a <fun_zero+0x2a>
		DIO_voidSetPinValue(DIO_u8PORTB,DIO_u8PIN3,DIO_u8LOW);
    2b20:	82 e0       	ldi	r24, 0x02	; 2
    2b22:	63 e0       	ldi	r22, 0x03	; 3
    2b24:	40 e0       	ldi	r20, 0x00	; 0
    2b26:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
		counter=1;
    2b2a:	81 e0       	ldi	r24, 0x01	; 1
    2b2c:	80 93 b4 01 	sts	0x01B4, r24
		TCNT0=251;
    2b30:	e2 e5       	ldi	r30, 0x52	; 82
    2b32:	f0 e0       	ldi	r31, 0x00	; 0
    2b34:	8b ef       	ldi	r24, 0xFB	; 251
    2b36:	80 83       	st	Z, r24
    2b38:	0f c0       	rjmp	.+30     	; 0x2b58 <fun_zero+0x48>
	}
	else if (counter==1){
    2b3a:	80 91 b4 01 	lds	r24, 0x01B4
    2b3e:	81 30       	cpi	r24, 0x01	; 1
    2b40:	59 f4       	brne	.+22     	; 0x2b58 <fun_zero+0x48>
		DIO_voidSetPinValue(DIO_u8PORTB,DIO_u8PIN3,DIO_u8HIGH);
    2b42:	82 e0       	ldi	r24, 0x02	; 2
    2b44:	63 e0       	ldi	r22, 0x03	; 3
    2b46:	41 e0       	ldi	r20, 0x01	; 1
    2b48:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
		counter=0;
    2b4c:	10 92 b4 01 	sts	0x01B4, r1
		TCNT0=241;
    2b50:	e2 e5       	ldi	r30, 0x52	; 82
    2b52:	f0 e0       	ldi	r31, 0x00	; 0
    2b54:	81 ef       	ldi	r24, 0xF1	; 241
    2b56:	80 83       	st	Z, r24
	}
}
    2b58:	cf 91       	pop	r28
    2b5a:	df 91       	pop	r29
    2b5c:	08 95       	ret

00002b5e <main>:
		counter=0;
	}
}
*/

int main(void){
    2b5e:	df 93       	push	r29
    2b60:	cf 93       	push	r28
    2b62:	cd b7       	in	r28, 0x3d	; 61
    2b64:	de b7       	in	r29, 0x3e	; 62
	//DIO_voidSetPinDirection(DIO_u8PORTB,DIO_u8PIN0,DIO_u8OUTPUT); // --> CTC
	DIO_voidSetPinDirection(DIO_u8PORTB,DIO_u8PIN3,DIO_u8OUTPUT); // --> OVER FLOW
    2b66:	82 e0       	ldi	r24, 0x02	; 2
    2b68:	63 e0       	ldi	r22, 0x03	; 3
    2b6a:	41 e0       	ldi	r20, 0x01	; 1
    2b6c:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>
	//ctc
	//Timer0_CTC_init(64,62);
	//Call_back_CTC(fun_ctc);

	//pwm
	Timer0_OverFlow_init(8,241);
    2b70:	88 e0       	ldi	r24, 0x08	; 8
    2b72:	61 ef       	ldi	r22, 0xF1	; 241
    2b74:	0e 94 55 26 	call	0x4caa	; 0x4caa <Timer0_OverFlow_init>
	call_back_over_flow(fun_zero);
    2b78:	88 e8       	ldi	r24, 0x88	; 136
    2b7a:	95 e1       	ldi	r25, 0x15	; 21
    2b7c:	0e 94 ab 26 	call	0x4d56	; 0x4d56 <call_back_over_flow>

	GIE_voidEnable();
    2b80:	0e 94 fb 27 	call	0x4ff6	; 0x4ff6 <GIE_voidEnable>
    2b84:	ff cf       	rjmp	.-2      	; 0x2b84 <main+0x26>

00002b86 <POT_Init>:

#include "POT_interface.h"
#include "POT_private.h"
#include "POT_config.h"

void POT_Init(void){
    2b86:	df 93       	push	r29
    2b88:	cf 93       	push	r28
    2b8a:	cd b7       	in	r28, 0x3d	; 61
    2b8c:	de b7       	in	r29, 0x3e	; 62
		ADC_voidInit();
    2b8e:	0e 94 7f 27 	call	0x4efe	; 0x4efe <ADC_voidInit>
}
    2b92:	cf 91       	pop	r28
    2b94:	df 91       	pop	r29
    2b96:	08 95       	ret

00002b98 <POT_CallValue>:

void POT_CallValue(uint32 *Copy_Digital, uint32 *Copy_Volt){
    2b98:	df 93       	push	r29
    2b9a:	cf 93       	push	r28
    2b9c:	cd b7       	in	r28, 0x3d	; 61
    2b9e:	de b7       	in	r29, 0x3e	; 62
    2ba0:	2c 97       	sbiw	r28, 0x0c	; 12
    2ba2:	0f b6       	in	r0, 0x3f	; 63
    2ba4:	f8 94       	cli
    2ba6:	de bf       	out	0x3e, r29	; 62
    2ba8:	0f be       	out	0x3f, r0	; 63
    2baa:	cd bf       	out	0x3d, r28	; 61
    2bac:	9a 87       	std	Y+10, r25	; 0x0a
    2bae:	89 87       	std	Y+9, r24	; 0x09
    2bb0:	7c 87       	std	Y+12, r23	; 0x0c
    2bb2:	6b 87       	std	Y+11, r22	; 0x0b
		
		uint32 local_Digital = ADC_u8StartConversion(ADC_CHANNEL);
    2bb4:	80 e0       	ldi	r24, 0x00	; 0
    2bb6:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <ADC_u8StartConversion>
    2bba:	cc 01       	movw	r24, r24
    2bbc:	a0 e0       	ldi	r26, 0x00	; 0
    2bbe:	b0 e0       	ldi	r27, 0x00	; 0
    2bc0:	8d 83       	std	Y+5, r24	; 0x05
    2bc2:	9e 83       	std	Y+6, r25	; 0x06
    2bc4:	af 83       	std	Y+7, r26	; 0x07
    2bc6:	b8 87       	std	Y+8, r27	; 0x08
		uint32 local_Volt	 = (local_Digital*5)/1023;
    2bc8:	2d 81       	ldd	r18, Y+5	; 0x05
    2bca:	3e 81       	ldd	r19, Y+6	; 0x06
    2bcc:	4f 81       	ldd	r20, Y+7	; 0x07
    2bce:	58 85       	ldd	r21, Y+8	; 0x08
    2bd0:	da 01       	movw	r26, r20
    2bd2:	c9 01       	movw	r24, r18
    2bd4:	88 0f       	add	r24, r24
    2bd6:	99 1f       	adc	r25, r25
    2bd8:	aa 1f       	adc	r26, r26
    2bda:	bb 1f       	adc	r27, r27
    2bdc:	88 0f       	add	r24, r24
    2bde:	99 1f       	adc	r25, r25
    2be0:	aa 1f       	adc	r26, r26
    2be2:	bb 1f       	adc	r27, r27
    2be4:	82 0f       	add	r24, r18
    2be6:	93 1f       	adc	r25, r19
    2be8:	a4 1f       	adc	r26, r20
    2bea:	b5 1f       	adc	r27, r21
    2bec:	2f ef       	ldi	r18, 0xFF	; 255
    2bee:	33 e0       	ldi	r19, 0x03	; 3
    2bf0:	40 e0       	ldi	r20, 0x00	; 0
    2bf2:	50 e0       	ldi	r21, 0x00	; 0
    2bf4:	bc 01       	movw	r22, r24
    2bf6:	cd 01       	movw	r24, r26
    2bf8:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    2bfc:	da 01       	movw	r26, r20
    2bfe:	c9 01       	movw	r24, r18
    2c00:	89 83       	std	Y+1, r24	; 0x01
    2c02:	9a 83       	std	Y+2, r25	; 0x02
    2c04:	ab 83       	std	Y+3, r26	; 0x03
    2c06:	bc 83       	std	Y+4, r27	; 0x04
		
		*Copy_Digital	= local_Digital;
    2c08:	e9 85       	ldd	r30, Y+9	; 0x09
    2c0a:	fa 85       	ldd	r31, Y+10	; 0x0a
    2c0c:	8d 81       	ldd	r24, Y+5	; 0x05
    2c0e:	9e 81       	ldd	r25, Y+6	; 0x06
    2c10:	af 81       	ldd	r26, Y+7	; 0x07
    2c12:	b8 85       	ldd	r27, Y+8	; 0x08
    2c14:	80 83       	st	Z, r24
    2c16:	91 83       	std	Z+1, r25	; 0x01
    2c18:	a2 83       	std	Z+2, r26	; 0x02
    2c1a:	b3 83       	std	Z+3, r27	; 0x03
		*Copy_Volt 		= local_Volt;
    2c1c:	eb 85       	ldd	r30, Y+11	; 0x0b
    2c1e:	fc 85       	ldd	r31, Y+12	; 0x0c
    2c20:	89 81       	ldd	r24, Y+1	; 0x01
    2c22:	9a 81       	ldd	r25, Y+2	; 0x02
    2c24:	ab 81       	ldd	r26, Y+3	; 0x03
    2c26:	bc 81       	ldd	r27, Y+4	; 0x04
    2c28:	80 83       	st	Z, r24
    2c2a:	91 83       	std	Z+1, r25	; 0x01
    2c2c:	a2 83       	std	Z+2, r26	; 0x02
    2c2e:	b3 83       	std	Z+3, r27	; 0x03
		
}
    2c30:	2c 96       	adiw	r28, 0x0c	; 12
    2c32:	0f b6       	in	r0, 0x3f	; 63
    2c34:	f8 94       	cli
    2c36:	de bf       	out	0x3e, r29	; 62
    2c38:	0f be       	out	0x3f, r0	; 63
    2c3a:	cd bf       	out	0x3d, r28	; 61
    2c3c:	cf 91       	pop	r28
    2c3e:	df 91       	pop	r29
    2c40:	08 95       	ret

00002c42 <LM35_Init>:

#include "LM35_interface.h"
#include "LM35_private.h"
#include "LM35_config.h"

void LM35_Init(void){
    2c42:	df 93       	push	r29
    2c44:	cf 93       	push	r28
    2c46:	cd b7       	in	r28, 0x3d	; 61
    2c48:	de b7       	in	r29, 0x3e	; 62
		ADC_voidInit();
    2c4a:	0e 94 7f 27 	call	0x4efe	; 0x4efe <ADC_voidInit>
}
    2c4e:	cf 91       	pop	r28
    2c50:	df 91       	pop	r29
    2c52:	08 95       	ret

00002c54 <LM35_Value>:

uint32 LM35_Value(void){
    2c54:	df 93       	push	r29
    2c56:	cf 93       	push	r28
    2c58:	cd b7       	in	r28, 0x3d	; 61
    2c5a:	de b7       	in	r29, 0x3e	; 62
    2c5c:	2c 97       	sbiw	r28, 0x0c	; 12
    2c5e:	0f b6       	in	r0, 0x3f	; 63
    2c60:	f8 94       	cli
    2c62:	de bf       	out	0x3e, r29	; 62
    2c64:	0f be       	out	0x3f, r0	; 63
    2c66:	cd bf       	out	0x3d, r28	; 61
		uint32 local_Digit_value = ADC_u8StartConversion(ADC_CHANNEL);
    2c68:	80 e0       	ldi	r24, 0x00	; 0
    2c6a:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <ADC_u8StartConversion>
    2c6e:	cc 01       	movw	r24, r24
    2c70:	a0 e0       	ldi	r26, 0x00	; 0
    2c72:	b0 e0       	ldi	r27, 0x00	; 0
    2c74:	89 87       	std	Y+9, r24	; 0x09
    2c76:	9a 87       	std	Y+10, r25	; 0x0a
    2c78:	ab 87       	std	Y+11, r26	; 0x0b
    2c7a:	bc 87       	std	Y+12, r27	; 0x0c
		//DIO_voidSetPortValue(DIO_u8PORTC,Local_u8ADC_Reading);

		uint32 local_Analog_value = (local_Digit_value*5000)/1024;
    2c7c:	89 85       	ldd	r24, Y+9	; 0x09
    2c7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c80:	ab 85       	ldd	r26, Y+11	; 0x0b
    2c82:	bc 85       	ldd	r27, Y+12	; 0x0c
    2c84:	28 e8       	ldi	r18, 0x88	; 136
    2c86:	33 e1       	ldi	r19, 0x13	; 19
    2c88:	40 e0       	ldi	r20, 0x00	; 0
    2c8a:	50 e0       	ldi	r21, 0x00	; 0
    2c8c:	bc 01       	movw	r22, r24
    2c8e:	cd 01       	movw	r24, r26
    2c90:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    2c94:	dc 01       	movw	r26, r24
    2c96:	cb 01       	movw	r24, r22
    2c98:	07 2e       	mov	r0, r23
    2c9a:	7a e0       	ldi	r23, 0x0A	; 10
    2c9c:	b6 95       	lsr	r27
    2c9e:	a7 95       	ror	r26
    2ca0:	97 95       	ror	r25
    2ca2:	87 95       	ror	r24
    2ca4:	7a 95       	dec	r23
    2ca6:	d1 f7       	brne	.-12     	; 0x2c9c <LM35_Value+0x48>
    2ca8:	70 2d       	mov	r23, r0
    2caa:	8d 83       	std	Y+5, r24	; 0x05
    2cac:	9e 83       	std	Y+6, r25	; 0x06
    2cae:	af 83       	std	Y+7, r26	; 0x07
    2cb0:	b8 87       	std	Y+8, r27	; 0x08

		uint32 Temp = local_Analog_value/10;
    2cb2:	8d 81       	ldd	r24, Y+5	; 0x05
    2cb4:	9e 81       	ldd	r25, Y+6	; 0x06
    2cb6:	af 81       	ldd	r26, Y+7	; 0x07
    2cb8:	b8 85       	ldd	r27, Y+8	; 0x08
    2cba:	2a e0       	ldi	r18, 0x0A	; 10
    2cbc:	30 e0       	ldi	r19, 0x00	; 0
    2cbe:	40 e0       	ldi	r20, 0x00	; 0
    2cc0:	50 e0       	ldi	r21, 0x00	; 0
    2cc2:	bc 01       	movw	r22, r24
    2cc4:	cd 01       	movw	r24, r26
    2cc6:	0e 94 2a 2e 	call	0x5c54	; 0x5c54 <__udivmodsi4>
    2cca:	da 01       	movw	r26, r20
    2ccc:	c9 01       	movw	r24, r18
    2cce:	89 83       	std	Y+1, r24	; 0x01
    2cd0:	9a 83       	std	Y+2, r25	; 0x02
    2cd2:	ab 83       	std	Y+3, r26	; 0x03
    2cd4:	bc 83       	std	Y+4, r27	; 0x04
		
		return Temp;
    2cd6:	89 81       	ldd	r24, Y+1	; 0x01
    2cd8:	9a 81       	ldd	r25, Y+2	; 0x02
    2cda:	ab 81       	ldd	r26, Y+3	; 0x03
    2cdc:	bc 81       	ldd	r27, Y+4	; 0x04
}
    2cde:	bc 01       	movw	r22, r24
    2ce0:	cd 01       	movw	r24, r26
    2ce2:	2c 96       	adiw	r28, 0x0c	; 12
    2ce4:	0f b6       	in	r0, 0x3f	; 63
    2ce6:	f8 94       	cli
    2ce8:	de bf       	out	0x3e, r29	; 62
    2cea:	0f be       	out	0x3f, r0	; 63
    2cec:	cd bf       	out	0x3d, r28	; 61
    2cee:	cf 91       	pop	r28
    2cf0:	df 91       	pop	r29
    2cf2:	08 95       	ret

00002cf4 <DC_Init>:

#include "util/delay.h"
#include "DC_Motor_Interface.h"


void DC_Init(DC_Motor config){
    2cf4:	df 93       	push	r29
    2cf6:	cf 93       	push	r28
    2cf8:	00 d0       	rcall	.+0      	; 0x2cfa <DC_Init+0x6>
    2cfa:	0f 92       	push	r0
    2cfc:	cd b7       	in	r28, 0x3d	; 61
    2cfe:	de b7       	in	r29, 0x3e	; 62
    2d00:	69 83       	std	Y+1, r22	; 0x01
    2d02:	7a 83       	std	Y+2, r23	; 0x02
    2d04:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinDirection(config.port,config.pin_1,DIO_u8OUTPUT);
    2d06:	8b 81       	ldd	r24, Y+3	; 0x03
    2d08:	99 81       	ldd	r25, Y+1	; 0x01
    2d0a:	69 2f       	mov	r22, r25
    2d0c:	41 e0       	ldi	r20, 0x01	; 1
    2d0e:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(config.port,config.pin_2,DIO_u8OUTPUT);
    2d12:	8b 81       	ldd	r24, Y+3	; 0x03
    2d14:	9a 81       	ldd	r25, Y+2	; 0x02
    2d16:	69 2f       	mov	r22, r25
    2d18:	41 e0       	ldi	r20, 0x01	; 1
    2d1a:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>

}
    2d1e:	0f 90       	pop	r0
    2d20:	0f 90       	pop	r0
    2d22:	0f 90       	pop	r0
    2d24:	cf 91       	pop	r28
    2d26:	df 91       	pop	r29
    2d28:	08 95       	ret

00002d2a <DC_Cw>:

void DC_Cw(DC_Motor config){
    2d2a:	df 93       	push	r29
    2d2c:	cf 93       	push	r28
    2d2e:	00 d0       	rcall	.+0      	; 0x2d30 <DC_Cw+0x6>
    2d30:	0f 92       	push	r0
    2d32:	cd b7       	in	r28, 0x3d	; 61
    2d34:	de b7       	in	r29, 0x3e	; 62
    2d36:	69 83       	std	Y+1, r22	; 0x01
    2d38:	7a 83       	std	Y+2, r23	; 0x02
    2d3a:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8HIGH);
    2d3c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d40:	69 2f       	mov	r22, r25
    2d42:	41 e0       	ldi	r20, 0x01	; 1
    2d44:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    2d48:	8b 81       	ldd	r24, Y+3	; 0x03
    2d4a:	99 81       	ldd	r25, Y+1	; 0x01
    2d4c:	69 2f       	mov	r22, r25
    2d4e:	40 e0       	ldi	r20, 0x00	; 0
    2d50:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
}
    2d54:	0f 90       	pop	r0
    2d56:	0f 90       	pop	r0
    2d58:	0f 90       	pop	r0
    2d5a:	cf 91       	pop	r28
    2d5c:	df 91       	pop	r29
    2d5e:	08 95       	ret

00002d60 <DC_Ccw>:

void DC_Ccw(DC_Motor config){
    2d60:	df 93       	push	r29
    2d62:	cf 93       	push	r28
    2d64:	00 d0       	rcall	.+0      	; 0x2d66 <DC_Ccw+0x6>
    2d66:	0f 92       	push	r0
    2d68:	cd b7       	in	r28, 0x3d	; 61
    2d6a:	de b7       	in	r29, 0x3e	; 62
    2d6c:	69 83       	std	Y+1, r22	; 0x01
    2d6e:	7a 83       	std	Y+2, r23	; 0x02
    2d70:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8HIGH);
    2d72:	8b 81       	ldd	r24, Y+3	; 0x03
    2d74:	99 81       	ldd	r25, Y+1	; 0x01
    2d76:	69 2f       	mov	r22, r25
    2d78:	41 e0       	ldi	r20, 0x01	; 1
    2d7a:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    2d7e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d80:	9a 81       	ldd	r25, Y+2	; 0x02
    2d82:	69 2f       	mov	r22, r25
    2d84:	40 e0       	ldi	r20, 0x00	; 0
    2d86:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
}
    2d8a:	0f 90       	pop	r0
    2d8c:	0f 90       	pop	r0
    2d8e:	0f 90       	pop	r0
    2d90:	cf 91       	pop	r28
    2d92:	df 91       	pop	r29
    2d94:	08 95       	ret

00002d96 <DC_Off>:

void DC_Off(DC_Motor config){
    2d96:	df 93       	push	r29
    2d98:	cf 93       	push	r28
    2d9a:	00 d0       	rcall	.+0      	; 0x2d9c <DC_Off+0x6>
    2d9c:	0f 92       	push	r0
    2d9e:	cd b7       	in	r28, 0x3d	; 61
    2da0:	de b7       	in	r29, 0x3e	; 62
    2da2:	69 83       	std	Y+1, r22	; 0x01
    2da4:	7a 83       	std	Y+2, r23	; 0x02
    2da6:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    2da8:	8b 81       	ldd	r24, Y+3	; 0x03
    2daa:	99 81       	ldd	r25, Y+1	; 0x01
    2dac:	69 2f       	mov	r22, r25
    2dae:	40 e0       	ldi	r20, 0x00	; 0
    2db0:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    2db4:	8b 81       	ldd	r24, Y+3	; 0x03
    2db6:	9a 81       	ldd	r25, Y+2	; 0x02
    2db8:	69 2f       	mov	r22, r25
    2dba:	40 e0       	ldi	r20, 0x00	; 0
    2dbc:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
}
    2dc0:	0f 90       	pop	r0
    2dc2:	0f 90       	pop	r0
    2dc4:	0f 90       	pop	r0
    2dc6:	cf 91       	pop	r28
    2dc8:	df 91       	pop	r29
    2dca:	08 95       	ret

00002dcc <DC_Tog>:
void DC_Tog(DC_Motor config , uint64 delay)
{
    2dcc:	ef 92       	push	r14
    2dce:	ff 92       	push	r15
    2dd0:	0f 93       	push	r16
    2dd2:	1f 93       	push	r17
    2dd4:	df 93       	push	r29
    2dd6:	cf 93       	push	r28
    2dd8:	cd b7       	in	r28, 0x3d	; 61
    2dda:	de b7       	in	r29, 0x3e	; 62
    2ddc:	a7 97       	sbiw	r28, 0x27	; 39
    2dde:	0f b6       	in	r0, 0x3f	; 63
    2de0:	f8 94       	cli
    2de2:	de bf       	out	0x3e, r29	; 62
    2de4:	0f be       	out	0x3f, r0	; 63
    2de6:	cd bf       	out	0x3d, r28	; 61
    2de8:	6d 8f       	std	Y+29, r22	; 0x1d
    2dea:	7e 8f       	std	Y+30, r23	; 0x1e
    2dec:	8f 8f       	std	Y+31, r24	; 0x1f
    2dee:	e8 a2       	std	Y+32, r14	; 0x20
    2df0:	f9 a2       	std	Y+33, r15	; 0x21
    2df2:	0a a3       	std	Y+34, r16	; 0x22
    2df4:	1b a3       	std	Y+35, r17	; 0x23
    2df6:	2c a3       	std	Y+36, r18	; 0x24
    2df8:	3d a3       	std	Y+37, r19	; 0x25
    2dfa:	4e a3       	std	Y+38, r20	; 0x26
    2dfc:	5f a3       	std	Y+39, r21	; 0x27
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8HIGH);
    2dfe:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2e00:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e02:	69 2f       	mov	r22, r25
    2e04:	41 e0       	ldi	r20, 0x01	; 1
    2e06:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    2e0a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2e0c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2e0e:	69 2f       	mov	r22, r25
    2e10:	40 e0       	ldi	r20, 0x00	; 0
    2e12:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	_delay_ms(delay);
    2e16:	28 a1       	ldd	r18, Y+32	; 0x20
    2e18:	39 a1       	ldd	r19, Y+33	; 0x21
    2e1a:	4a a1       	ldd	r20, Y+34	; 0x22
    2e1c:	5b a1       	ldd	r21, Y+35	; 0x23
    2e1e:	6c a1       	ldd	r22, Y+36	; 0x24
    2e20:	7d a1       	ldd	r23, Y+37	; 0x25
    2e22:	8e a1       	ldd	r24, Y+38	; 0x26
    2e24:	9f a1       	ldd	r25, Y+39	; 0x27
    2e26:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__floatundisf>
    2e2a:	dc 01       	movw	r26, r24
    2e2c:	cb 01       	movw	r24, r22
    2e2e:	89 8f       	std	Y+25, r24	; 0x19
    2e30:	9a 8f       	std	Y+26, r25	; 0x1a
    2e32:	ab 8f       	std	Y+27, r26	; 0x1b
    2e34:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e36:	69 8d       	ldd	r22, Y+25	; 0x19
    2e38:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2e3a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e3c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e3e:	20 e0       	ldi	r18, 0x00	; 0
    2e40:	30 e0       	ldi	r19, 0x00	; 0
    2e42:	4a ef       	ldi	r20, 0xFA	; 250
    2e44:	54 e4       	ldi	r21, 0x44	; 68
    2e46:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2e4a:	dc 01       	movw	r26, r24
    2e4c:	cb 01       	movw	r24, r22
    2e4e:	8d 8b       	std	Y+21, r24	; 0x15
    2e50:	9e 8b       	std	Y+22, r25	; 0x16
    2e52:	af 8b       	std	Y+23, r26	; 0x17
    2e54:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2e56:	6d 89       	ldd	r22, Y+21	; 0x15
    2e58:	7e 89       	ldd	r23, Y+22	; 0x16
    2e5a:	8f 89       	ldd	r24, Y+23	; 0x17
    2e5c:	98 8d       	ldd	r25, Y+24	; 0x18
    2e5e:	20 e0       	ldi	r18, 0x00	; 0
    2e60:	30 e0       	ldi	r19, 0x00	; 0
    2e62:	40 e8       	ldi	r20, 0x80	; 128
    2e64:	5f e3       	ldi	r21, 0x3F	; 63
    2e66:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    2e6a:	88 23       	and	r24, r24
    2e6c:	2c f4       	brge	.+10     	; 0x2e78 <DC_Tog+0xac>
		__ticks = 1;
    2e6e:	81 e0       	ldi	r24, 0x01	; 1
    2e70:	90 e0       	ldi	r25, 0x00	; 0
    2e72:	9c 8b       	std	Y+20, r25	; 0x14
    2e74:	8b 8b       	std	Y+19, r24	; 0x13
    2e76:	3f c0       	rjmp	.+126    	; 0x2ef6 <DC_Tog+0x12a>
	else if (__tmp > 65535)
    2e78:	6d 89       	ldd	r22, Y+21	; 0x15
    2e7a:	7e 89       	ldd	r23, Y+22	; 0x16
    2e7c:	8f 89       	ldd	r24, Y+23	; 0x17
    2e7e:	98 8d       	ldd	r25, Y+24	; 0x18
    2e80:	20 e0       	ldi	r18, 0x00	; 0
    2e82:	3f ef       	ldi	r19, 0xFF	; 255
    2e84:	4f e7       	ldi	r20, 0x7F	; 127
    2e86:	57 e4       	ldi	r21, 0x47	; 71
    2e88:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    2e8c:	18 16       	cp	r1, r24
    2e8e:	4c f5       	brge	.+82     	; 0x2ee2 <DC_Tog+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e90:	69 8d       	ldd	r22, Y+25	; 0x19
    2e92:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2e94:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e96:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e98:	20 e0       	ldi	r18, 0x00	; 0
    2e9a:	30 e0       	ldi	r19, 0x00	; 0
    2e9c:	40 e2       	ldi	r20, 0x20	; 32
    2e9e:	51 e4       	ldi	r21, 0x41	; 65
    2ea0:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2ea4:	dc 01       	movw	r26, r24
    2ea6:	cb 01       	movw	r24, r22
    2ea8:	bc 01       	movw	r22, r24
    2eaa:	cd 01       	movw	r24, r26
    2eac:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2eb0:	dc 01       	movw	r26, r24
    2eb2:	cb 01       	movw	r24, r22
    2eb4:	9c 8b       	std	Y+20, r25	; 0x14
    2eb6:	8b 8b       	std	Y+19, r24	; 0x13
    2eb8:	0f c0       	rjmp	.+30     	; 0x2ed8 <DC_Tog+0x10c>
    2eba:	88 ec       	ldi	r24, 0xC8	; 200
    2ebc:	90 e0       	ldi	r25, 0x00	; 0
    2ebe:	9a 8b       	std	Y+18, r25	; 0x12
    2ec0:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2ec2:	89 89       	ldd	r24, Y+17	; 0x11
    2ec4:	9a 89       	ldd	r25, Y+18	; 0x12
    2ec6:	01 97       	sbiw	r24, 0x01	; 1
    2ec8:	f1 f7       	brne	.-4      	; 0x2ec6 <DC_Tog+0xfa>
    2eca:	9a 8b       	std	Y+18, r25	; 0x12
    2ecc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ece:	8b 89       	ldd	r24, Y+19	; 0x13
    2ed0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ed2:	01 97       	sbiw	r24, 0x01	; 1
    2ed4:	9c 8b       	std	Y+20, r25	; 0x14
    2ed6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ed8:	8b 89       	ldd	r24, Y+19	; 0x13
    2eda:	9c 89       	ldd	r25, Y+20	; 0x14
    2edc:	00 97       	sbiw	r24, 0x00	; 0
    2ede:	69 f7       	brne	.-38     	; 0x2eba <DC_Tog+0xee>
    2ee0:	14 c0       	rjmp	.+40     	; 0x2f0a <DC_Tog+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ee2:	6d 89       	ldd	r22, Y+21	; 0x15
    2ee4:	7e 89       	ldd	r23, Y+22	; 0x16
    2ee6:	8f 89       	ldd	r24, Y+23	; 0x17
    2ee8:	98 8d       	ldd	r25, Y+24	; 0x18
    2eea:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2eee:	dc 01       	movw	r26, r24
    2ef0:	cb 01       	movw	r24, r22
    2ef2:	9c 8b       	std	Y+20, r25	; 0x14
    2ef4:	8b 8b       	std	Y+19, r24	; 0x13
    2ef6:	8b 89       	ldd	r24, Y+19	; 0x13
    2ef8:	9c 89       	ldd	r25, Y+20	; 0x14
    2efa:	98 8b       	std	Y+16, r25	; 0x10
    2efc:	8f 87       	std	Y+15, r24	; 0x0f
    2efe:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f00:	98 89       	ldd	r25, Y+16	; 0x10
    2f02:	01 97       	sbiw	r24, 0x01	; 1
    2f04:	f1 f7       	brne	.-4      	; 0x2f02 <DC_Tog+0x136>
    2f06:	98 8b       	std	Y+16, r25	; 0x10
    2f08:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8HIGH);
    2f0a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2f0c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2f0e:	69 2f       	mov	r22, r25
    2f10:	41 e0       	ldi	r20, 0x01	; 1
    2f12:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    2f16:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2f18:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2f1a:	69 2f       	mov	r22, r25
    2f1c:	40 e0       	ldi	r20, 0x00	; 0
    2f1e:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	_delay_ms(delay);
    2f22:	28 a1       	ldd	r18, Y+32	; 0x20
    2f24:	39 a1       	ldd	r19, Y+33	; 0x21
    2f26:	4a a1       	ldd	r20, Y+34	; 0x22
    2f28:	5b a1       	ldd	r21, Y+35	; 0x23
    2f2a:	6c a1       	ldd	r22, Y+36	; 0x24
    2f2c:	7d a1       	ldd	r23, Y+37	; 0x25
    2f2e:	8e a1       	ldd	r24, Y+38	; 0x26
    2f30:	9f a1       	ldd	r25, Y+39	; 0x27
    2f32:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__floatundisf>
    2f36:	dc 01       	movw	r26, r24
    2f38:	cb 01       	movw	r24, r22
    2f3a:	8b 87       	std	Y+11, r24	; 0x0b
    2f3c:	9c 87       	std	Y+12, r25	; 0x0c
    2f3e:	ad 87       	std	Y+13, r26	; 0x0d
    2f40:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f42:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f44:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f46:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f48:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f4a:	20 e0       	ldi	r18, 0x00	; 0
    2f4c:	30 e0       	ldi	r19, 0x00	; 0
    2f4e:	4a ef       	ldi	r20, 0xFA	; 250
    2f50:	54 e4       	ldi	r21, 0x44	; 68
    2f52:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2f56:	dc 01       	movw	r26, r24
    2f58:	cb 01       	movw	r24, r22
    2f5a:	8f 83       	std	Y+7, r24	; 0x07
    2f5c:	98 87       	std	Y+8, r25	; 0x08
    2f5e:	a9 87       	std	Y+9, r26	; 0x09
    2f60:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2f62:	6f 81       	ldd	r22, Y+7	; 0x07
    2f64:	78 85       	ldd	r23, Y+8	; 0x08
    2f66:	89 85       	ldd	r24, Y+9	; 0x09
    2f68:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f6a:	20 e0       	ldi	r18, 0x00	; 0
    2f6c:	30 e0       	ldi	r19, 0x00	; 0
    2f6e:	40 e8       	ldi	r20, 0x80	; 128
    2f70:	5f e3       	ldi	r21, 0x3F	; 63
    2f72:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    2f76:	88 23       	and	r24, r24
    2f78:	2c f4       	brge	.+10     	; 0x2f84 <DC_Tog+0x1b8>
		__ticks = 1;
    2f7a:	81 e0       	ldi	r24, 0x01	; 1
    2f7c:	90 e0       	ldi	r25, 0x00	; 0
    2f7e:	9e 83       	std	Y+6, r25	; 0x06
    2f80:	8d 83       	std	Y+5, r24	; 0x05
    2f82:	3f c0       	rjmp	.+126    	; 0x3002 <DC_Tog+0x236>
	else if (__tmp > 65535)
    2f84:	6f 81       	ldd	r22, Y+7	; 0x07
    2f86:	78 85       	ldd	r23, Y+8	; 0x08
    2f88:	89 85       	ldd	r24, Y+9	; 0x09
    2f8a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f8c:	20 e0       	ldi	r18, 0x00	; 0
    2f8e:	3f ef       	ldi	r19, 0xFF	; 255
    2f90:	4f e7       	ldi	r20, 0x7F	; 127
    2f92:	57 e4       	ldi	r21, 0x47	; 71
    2f94:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    2f98:	18 16       	cp	r1, r24
    2f9a:	4c f5       	brge	.+82     	; 0x2fee <DC_Tog+0x222>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f9c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f9e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fa0:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fa2:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fa4:	20 e0       	ldi	r18, 0x00	; 0
    2fa6:	30 e0       	ldi	r19, 0x00	; 0
    2fa8:	40 e2       	ldi	r20, 0x20	; 32
    2faa:	51 e4       	ldi	r21, 0x41	; 65
    2fac:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    2fb0:	dc 01       	movw	r26, r24
    2fb2:	cb 01       	movw	r24, r22
    2fb4:	bc 01       	movw	r22, r24
    2fb6:	cd 01       	movw	r24, r26
    2fb8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2fbc:	dc 01       	movw	r26, r24
    2fbe:	cb 01       	movw	r24, r22
    2fc0:	9e 83       	std	Y+6, r25	; 0x06
    2fc2:	8d 83       	std	Y+5, r24	; 0x05
    2fc4:	0f c0       	rjmp	.+30     	; 0x2fe4 <DC_Tog+0x218>
    2fc6:	88 ec       	ldi	r24, 0xC8	; 200
    2fc8:	90 e0       	ldi	r25, 0x00	; 0
    2fca:	9c 83       	std	Y+4, r25	; 0x04
    2fcc:	8b 83       	std	Y+3, r24	; 0x03
    2fce:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fd2:	01 97       	sbiw	r24, 0x01	; 1
    2fd4:	f1 f7       	brne	.-4      	; 0x2fd2 <DC_Tog+0x206>
    2fd6:	9c 83       	std	Y+4, r25	; 0x04
    2fd8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fda:	8d 81       	ldd	r24, Y+5	; 0x05
    2fdc:	9e 81       	ldd	r25, Y+6	; 0x06
    2fde:	01 97       	sbiw	r24, 0x01	; 1
    2fe0:	9e 83       	std	Y+6, r25	; 0x06
    2fe2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fe4:	8d 81       	ldd	r24, Y+5	; 0x05
    2fe6:	9e 81       	ldd	r25, Y+6	; 0x06
    2fe8:	00 97       	sbiw	r24, 0x00	; 0
    2fea:	69 f7       	brne	.-38     	; 0x2fc6 <DC_Tog+0x1fa>
    2fec:	14 c0       	rjmp	.+40     	; 0x3016 <DC_Tog+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fee:	6f 81       	ldd	r22, Y+7	; 0x07
    2ff0:	78 85       	ldd	r23, Y+8	; 0x08
    2ff2:	89 85       	ldd	r24, Y+9	; 0x09
    2ff4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ff6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2ffa:	dc 01       	movw	r26, r24
    2ffc:	cb 01       	movw	r24, r22
    2ffe:	9e 83       	std	Y+6, r25	; 0x06
    3000:	8d 83       	std	Y+5, r24	; 0x05
    3002:	8d 81       	ldd	r24, Y+5	; 0x05
    3004:	9e 81       	ldd	r25, Y+6	; 0x06
    3006:	9a 83       	std	Y+2, r25	; 0x02
    3008:	89 83       	std	Y+1, r24	; 0x01
    300a:	89 81       	ldd	r24, Y+1	; 0x01
    300c:	9a 81       	ldd	r25, Y+2	; 0x02
    300e:	01 97       	sbiw	r24, 0x01	; 1
    3010:	f1 f7       	brne	.-4      	; 0x300e <DC_Tog+0x242>
    3012:	9a 83       	std	Y+2, r25	; 0x02
    3014:	89 83       	std	Y+1, r24	; 0x01
}
    3016:	a7 96       	adiw	r28, 0x27	; 39
    3018:	0f b6       	in	r0, 0x3f	; 63
    301a:	f8 94       	cli
    301c:	de bf       	out	0x3e, r29	; 62
    301e:	0f be       	out	0x3f, r0	; 63
    3020:	cd bf       	out	0x3d, r28	; 61
    3022:	cf 91       	pop	r28
    3024:	df 91       	pop	r29
    3026:	1f 91       	pop	r17
    3028:	0f 91       	pop	r16
    302a:	ff 90       	pop	r15
    302c:	ef 90       	pop	r14
    302e:	08 95       	ret

00003030 <Keypad_init>:
		{'4','5','6','*'},
		{'1','2','3','-'},
		{'c','0','=','+'},
};

void Keypad_init(void){
    3030:	df 93       	push	r29
    3032:	cf 93       	push	r28
    3034:	cd b7       	in	r28, 0x3d	; 61
    3036:	de b7       	in	r29, 0x3e	; 62
    3038:	28 97       	sbiw	r28, 0x08	; 8
    303a:	0f b6       	in	r0, 0x3f	; 63
    303c:	f8 94       	cli
    303e:	de bf       	out	0x3e, r29	; 62
    3040:	0f be       	out	0x3f, r0	; 63
    3042:	cd bf       	out	0x3d, r28	; 61


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    3044:	18 86       	std	Y+8, r1	; 0x08
    3046:	1f 82       	std	Y+7, r1	; 0x07
    3048:	0b c0       	rjmp	.+22     	; 0x3060 <Keypad_init+0x30>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
    304a:	9f 81       	ldd	r25, Y+7	; 0x07
    304c:	83 e0       	ldi	r24, 0x03	; 3
    304e:	69 2f       	mov	r22, r25
    3050:	41 e0       	ldi	r20, 0x01	; 1
    3052:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>

void Keypad_init(void){


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    3056:	8f 81       	ldd	r24, Y+7	; 0x07
    3058:	98 85       	ldd	r25, Y+8	; 0x08
    305a:	01 96       	adiw	r24, 0x01	; 1
    305c:	98 87       	std	Y+8, r25	; 0x08
    305e:	8f 83       	std	Y+7, r24	; 0x07
    3060:	8f 81       	ldd	r24, Y+7	; 0x07
    3062:	98 85       	ldd	r25, Y+8	; 0x08
    3064:	84 30       	cpi	r24, 0x04	; 4
    3066:	91 05       	cpc	r25, r1
    3068:	84 f3       	brlt	.-32     	; 0x304a <Keypad_init+0x1a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    306a:	1e 82       	std	Y+6, r1	; 0x06
    306c:	1d 82       	std	Y+5, r1	; 0x05
    306e:	0b c0       	rjmp	.+22     	; 0x3086 <Keypad_init+0x56>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    3070:	9d 81       	ldd	r25, Y+5	; 0x05
    3072:	83 e0       	ldi	r24, 0x03	; 3
    3074:	69 2f       	mov	r22, r25
    3076:	41 e0       	ldi	r20, 0x01	; 1
    3078:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
		for (int i=0; i<4; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    307c:	8d 81       	ldd	r24, Y+5	; 0x05
    307e:	9e 81       	ldd	r25, Y+6	; 0x06
    3080:	01 96       	adiw	r24, 0x01	; 1
    3082:	9e 83       	std	Y+6, r25	; 0x06
    3084:	8d 83       	std	Y+5, r24	; 0x05
    3086:	8d 81       	ldd	r24, Y+5	; 0x05
    3088:	9e 81       	ldd	r25, Y+6	; 0x06
    308a:	84 30       	cpi	r24, 0x04	; 4
    308c:	91 05       	cpc	r25, r1
    308e:	84 f3       	brlt	.-32     	; 0x3070 <Keypad_init+0x40>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    3090:	84 e0       	ldi	r24, 0x04	; 4
    3092:	90 e0       	ldi	r25, 0x00	; 0
    3094:	9c 83       	std	Y+4, r25	; 0x04
    3096:	8b 83       	std	Y+3, r24	; 0x03
    3098:	0b c0       	rjmp	.+22     	; 0x30b0 <Keypad_init+0x80>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
    309a:	9b 81       	ldd	r25, Y+3	; 0x03
    309c:	83 e0       	ldi	r24, 0x03	; 3
    309e:	69 2f       	mov	r22, r25
    30a0:	40 e0       	ldi	r20, 0x00	; 0
    30a2:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>
	for (int i=0; i<4; i++){
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    30a6:	8b 81       	ldd	r24, Y+3	; 0x03
    30a8:	9c 81       	ldd	r25, Y+4	; 0x04
    30aa:	01 96       	adiw	r24, 0x01	; 1
    30ac:	9c 83       	std	Y+4, r25	; 0x04
    30ae:	8b 83       	std	Y+3, r24	; 0x03
    30b0:	8b 81       	ldd	r24, Y+3	; 0x03
    30b2:	9c 81       	ldd	r25, Y+4	; 0x04
    30b4:	88 30       	cpi	r24, 0x08	; 8
    30b6:	91 05       	cpc	r25, r1
    30b8:	84 f3       	brlt	.-32     	; 0x309a <Keypad_init+0x6a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    30ba:	84 e0       	ldi	r24, 0x04	; 4
    30bc:	90 e0       	ldi	r25, 0x00	; 0
    30be:	9a 83       	std	Y+2, r25	; 0x02
    30c0:	89 83       	std	Y+1, r24	; 0x01
    30c2:	0b c0       	rjmp	.+22     	; 0x30da <Keypad_init+0xaa>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    30c4:	99 81       	ldd	r25, Y+1	; 0x01
    30c6:	83 e0       	ldi	r24, 0x03	; 3
    30c8:	69 2f       	mov	r22, r25
    30ca:	41 e0       	ldi	r20, 0x01	; 1
    30cc:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	for (int i=4; i<8; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    30d0:	89 81       	ldd	r24, Y+1	; 0x01
    30d2:	9a 81       	ldd	r25, Y+2	; 0x02
    30d4:	01 96       	adiw	r24, 0x01	; 1
    30d6:	9a 83       	std	Y+2, r25	; 0x02
    30d8:	89 83       	std	Y+1, r24	; 0x01
    30da:	89 81       	ldd	r24, Y+1	; 0x01
    30dc:	9a 81       	ldd	r25, Y+2	; 0x02
    30de:	88 30       	cpi	r24, 0x08	; 8
    30e0:	91 05       	cpc	r25, r1
    30e2:	84 f3       	brlt	.-32     	; 0x30c4 <Keypad_init+0x94>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
		}

}
    30e4:	28 96       	adiw	r28, 0x08	; 8
    30e6:	0f b6       	in	r0, 0x3f	; 63
    30e8:	f8 94       	cli
    30ea:	de bf       	out	0x3e, r29	; 62
    30ec:	0f be       	out	0x3f, r0	; 63
    30ee:	cd bf       	out	0x3d, r28	; 61
    30f0:	cf 91       	pop	r28
    30f2:	df 91       	pop	r29
    30f4:	08 95       	ret

000030f6 <KeyBad_uint8GetKey>:



uint8 KeyBad_uint8GetKey(void){
    30f6:	df 93       	push	r29
    30f8:	cf 93       	push	r28
    30fa:	00 d0       	rcall	.+0      	; 0x30fc <KeyBad_uint8GetKey+0x6>
    30fc:	00 d0       	rcall	.+0      	; 0x30fe <KeyBad_uint8GetKey+0x8>
    30fe:	00 d0       	rcall	.+0      	; 0x3100 <KeyBad_uint8GetKey+0xa>
    3100:	cd b7       	in	r28, 0x3d	; 61
    3102:	de b7       	in	r29, 0x3e	; 62
	uint8 Key = 'z';
    3104:	8a e7       	ldi	r24, 0x7A	; 122
    3106:	8e 83       	std	Y+6, r24	; 0x06
	uint8 x = 1 ;
    3108:	81 e0       	ldi	r24, 0x01	; 1
    310a:	8d 83       	std	Y+5, r24	; 0x05
	for (int r=0; r<4; r++){
    310c:	1c 82       	std	Y+4, r1	; 0x04
    310e:	1b 82       	std	Y+3, r1	; 0x03
    3110:	43 c0       	rjmp	.+134    	; 0x3198 <KeyBad_uint8GetKey+0xa2>
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
    3112:	9b 81       	ldd	r25, Y+3	; 0x03
    3114:	83 e0       	ldi	r24, 0x03	; 3
    3116:	69 2f       	mov	r22, r25
    3118:	40 e0       	ldi	r20, 0x00	; 0
    311a:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
		for(int c=4; c<8; c++){
    311e:	84 e0       	ldi	r24, 0x04	; 4
    3120:	90 e0       	ldi	r25, 0x00	; 0
    3122:	9a 83       	std	Y+2, r25	; 0x02
    3124:	89 83       	std	Y+1, r24	; 0x01
    3126:	28 c0       	rjmp	.+80     	; 0x3178 <KeyBad_uint8GetKey+0x82>
		 x=	DIO_u8GetPinValue(PortNum,c);
    3128:	99 81       	ldd	r25, Y+1	; 0x01
    312a:	83 e0       	ldi	r24, 0x03	; 3
    312c:	69 2f       	mov	r22, r25
    312e:	0e 94 f3 2b 	call	0x57e6	; 0x57e6 <DIO_u8GetPinValue>
    3132:	8d 83       	std	Y+5, r24	; 0x05
			if (x ==0){
    3134:	8d 81       	ldd	r24, Y+5	; 0x05
    3136:	88 23       	and	r24, r24
    3138:	99 f4       	brne	.+38     	; 0x3160 <KeyBad_uint8GetKey+0x6a>
				Key = Keypad_arr[r][c-4];
    313a:	4b 81       	ldd	r20, Y+3	; 0x03
    313c:	5c 81       	ldd	r21, Y+4	; 0x04
    313e:	89 81       	ldd	r24, Y+1	; 0x01
    3140:	9a 81       	ldd	r25, Y+2	; 0x02
    3142:	9c 01       	movw	r18, r24
    3144:	24 50       	subi	r18, 0x04	; 4
    3146:	30 40       	sbci	r19, 0x00	; 0
    3148:	ca 01       	movw	r24, r20
    314a:	88 0f       	add	r24, r24
    314c:	99 1f       	adc	r25, r25
    314e:	88 0f       	add	r24, r24
    3150:	99 1f       	adc	r25, r25
    3152:	82 0f       	add	r24, r18
    3154:	93 1f       	adc	r25, r19
    3156:	fc 01       	movw	r30, r24
    3158:	e5 59       	subi	r30, 0x95	; 149
    315a:	fe 4f       	sbci	r31, 0xFE	; 254
    315c:	80 81       	ld	r24, Z
    315e:	8e 83       	std	Y+6, r24	; 0x06
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
    3160:	99 81       	ldd	r25, Y+1	; 0x01
    3162:	83 e0       	ldi	r24, 0x03	; 3
    3164:	69 2f       	mov	r22, r25
    3166:	0e 94 f3 2b 	call	0x57e6	; 0x57e6 <DIO_u8GetPinValue>
    316a:	88 23       	and	r24, r24
    316c:	c9 f3       	breq	.-14     	; 0x3160 <KeyBad_uint8GetKey+0x6a>
uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
		for(int c=4; c<8; c++){
    316e:	89 81       	ldd	r24, Y+1	; 0x01
    3170:	9a 81       	ldd	r25, Y+2	; 0x02
    3172:	01 96       	adiw	r24, 0x01	; 1
    3174:	9a 83       	std	Y+2, r25	; 0x02
    3176:	89 83       	std	Y+1, r24	; 0x01
    3178:	89 81       	ldd	r24, Y+1	; 0x01
    317a:	9a 81       	ldd	r25, Y+2	; 0x02
    317c:	88 30       	cpi	r24, 0x08	; 8
    317e:	91 05       	cpc	r25, r1
    3180:	9c f2       	brlt	.-90     	; 0x3128 <KeyBad_uint8GetKey+0x32>
			if (x ==0){
				Key = Keypad_arr[r][c-4];
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
    3182:	9b 81       	ldd	r25, Y+3	; 0x03
    3184:	83 e0       	ldi	r24, 0x03	; 3
    3186:	69 2f       	mov	r22, r25
    3188:	41 e0       	ldi	r20, 0x01	; 1
    318a:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>


uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
    318e:	8b 81       	ldd	r24, Y+3	; 0x03
    3190:	9c 81       	ldd	r25, Y+4	; 0x04
    3192:	01 96       	adiw	r24, 0x01	; 1
    3194:	9c 83       	std	Y+4, r25	; 0x04
    3196:	8b 83       	std	Y+3, r24	; 0x03
    3198:	8b 81       	ldd	r24, Y+3	; 0x03
    319a:	9c 81       	ldd	r25, Y+4	; 0x04
    319c:	84 30       	cpi	r24, 0x04	; 4
    319e:	91 05       	cpc	r25, r1
    31a0:	0c f4       	brge	.+2      	; 0x31a4 <KeyBad_uint8GetKey+0xae>
    31a2:	b7 cf       	rjmp	.-146    	; 0x3112 <KeyBad_uint8GetKey+0x1c>
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
	}
	return Key;
    31a4:	8e 81       	ldd	r24, Y+6	; 0x06
}
    31a6:	26 96       	adiw	r28, 0x06	; 6
    31a8:	0f b6       	in	r0, 0x3f	; 63
    31aa:	f8 94       	cli
    31ac:	de bf       	out	0x3e, r29	; 62
    31ae:	0f be       	out	0x3f, r0	; 63
    31b0:	cd bf       	out	0x3d, r28	; 61
    31b2:	cf 91       	pop	r28
    31b4:	df 91       	pop	r29
    31b6:	08 95       	ret

000031b8 <PushButton_voidInit>:
/* Version             :  1.0.0                    */
/***************************************************/ 

#include "PushButton_interface.h"

void PushButton_voidInit(Button *Button){
    31b8:	df 93       	push	r29
    31ba:	cf 93       	push	r28
    31bc:	00 d0       	rcall	.+0      	; 0x31be <PushButton_voidInit+0x6>
    31be:	cd b7       	in	r28, 0x3d	; 61
    31c0:	de b7       	in	r29, 0x3e	; 62
    31c2:	9a 83       	std	Y+2, r25	; 0x02
    31c4:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(Button -> Button_port, Button -> Button_pin, DIO_u8INPUT);
    31c6:	e9 81       	ldd	r30, Y+1	; 0x01
    31c8:	fa 81       	ldd	r31, Y+2	; 0x02
    31ca:	81 81       	ldd	r24, Z+1	; 0x01
    31cc:	e9 81       	ldd	r30, Y+1	; 0x01
    31ce:	fa 81       	ldd	r31, Y+2	; 0x02
    31d0:	90 81       	ld	r25, Z
    31d2:	69 2f       	mov	r22, r25
    31d4:	40 e0       	ldi	r20, 0x00	; 0
    31d6:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(Button-> Button_port, Button -> Button_pin, DIO_u8HIGH); //pull up
    31da:	e9 81       	ldd	r30, Y+1	; 0x01
    31dc:	fa 81       	ldd	r31, Y+2	; 0x02
    31de:	81 81       	ldd	r24, Z+1	; 0x01
    31e0:	e9 81       	ldd	r30, Y+1	; 0x01
    31e2:	fa 81       	ldd	r31, Y+2	; 0x02
    31e4:	90 81       	ld	r25, Z
    31e6:	69 2f       	mov	r22, r25
    31e8:	41 e0       	ldi	r20, 0x01	; 1
    31ea:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
}
    31ee:	0f 90       	pop	r0
    31f0:	0f 90       	pop	r0
    31f2:	cf 91       	pop	r28
    31f4:	df 91       	pop	r29
    31f6:	08 95       	ret

000031f8 <PushButton_voidRead>:

uint8 PushButton_voidRead(Button *Button){
    31f8:	df 93       	push	r29
    31fa:	cf 93       	push	r28
    31fc:	00 d0       	rcall	.+0      	; 0x31fe <PushButton_voidRead+0x6>
    31fe:	0f 92       	push	r0
    3200:	cd b7       	in	r28, 0x3d	; 61
    3202:	de b7       	in	r29, 0x3e	; 62
    3204:	9b 83       	std	Y+3, r25	; 0x03
    3206:	8a 83       	std	Y+2, r24	; 0x02
    uint8 local_u8Read = DIO_u8GetPinValue(Button->Button_port, Button->Button_pin);
    3208:	ea 81       	ldd	r30, Y+2	; 0x02
    320a:	fb 81       	ldd	r31, Y+3	; 0x03
    320c:	81 81       	ldd	r24, Z+1	; 0x01
    320e:	ea 81       	ldd	r30, Y+2	; 0x02
    3210:	fb 81       	ldd	r31, Y+3	; 0x03
    3212:	90 81       	ld	r25, Z
    3214:	69 2f       	mov	r22, r25
    3216:	0e 94 f3 2b 	call	0x57e6	; 0x57e6 <DIO_u8GetPinValue>
    321a:	89 83       	std	Y+1, r24	; 0x01
    static Button_state lastButtonState = Button_RELEASED; // Static variable to remember the last state

    if (local_u8Read == 0 && lastButtonState == Button_RELEASED) {
    321c:	89 81       	ldd	r24, Y+1	; 0x01
    321e:	88 23       	and	r24, r24
    3220:	39 f4       	brne	.+14     	; 0x3230 <PushButton_voidRead+0x38>
    3222:	80 91 7b 01 	lds	r24, 0x017B
    3226:	81 30       	cpi	r24, 0x01	; 1
    3228:	19 f4       	brne	.+6      	; 0x3230 <PushButton_voidRead+0x38>
        // Button was just pressed
        lastButtonState = Button_PRESSESD;
    322a:	10 92 7b 01 	sts	0x017B, r1
    322e:	0a c0       	rjmp	.+20     	; 0x3244 <PushButton_voidRead+0x4c>
    } else if (local_u8Read == 1 && lastButtonState == Button_PRESSESD) {
    3230:	89 81       	ldd	r24, Y+1	; 0x01
    3232:	81 30       	cpi	r24, 0x01	; 1
    3234:	39 f4       	brne	.+14     	; 0x3244 <PushButton_voidRead+0x4c>
    3236:	80 91 7b 01 	lds	r24, 0x017B
    323a:	88 23       	and	r24, r24
    323c:	19 f4       	brne	.+6      	; 0x3244 <PushButton_voidRead+0x4c>
        // Button was just released
        lastButtonState = Button_RELEASED;
    323e:	81 e0       	ldi	r24, 0x01	; 1
    3240:	80 93 7b 01 	sts	0x017B, r24
    }
    return lastButtonState;
    3244:	80 91 7b 01 	lds	r24, 0x017B
    3248:	0f 90       	pop	r0
    324a:	0f 90       	pop	r0
    324c:	0f 90       	pop	r0
    324e:	cf 91       	pop	r28
    3250:	df 91       	pop	r29
    3252:	08 95       	ret

00003254 <LCD_Init>:
/* Version             :  1.0.0                    */
/***************************************************/ 

#include "CLCD_interface.h"

void LCD_Init(void){
    3254:	df 93       	push	r29
    3256:	cf 93       	push	r28
    3258:	cd b7       	in	r28, 0x3d	; 61
    325a:	de b7       	in	r29, 0x3e	; 62
    325c:	6c 97       	sbiw	r28, 0x1c	; 28
    325e:	0f b6       	in	r0, 0x3f	; 63
    3260:	f8 94       	cli
    3262:	de bf       	out	0x3e, r29	; 62
    3264:	0f be       	out	0x3f, r0	; 63
    3266:	cd bf       	out	0x3d, r28	; 61
	DIO_voidSetPortDirection(DIO_u8PORTA ,DIO_u8PortOn);
    3268:	81 e0       	ldi	r24, 0x01	; 1
    326a:	6f ef       	ldi	r22, 0xFF	; 255
    326c:	0e 94 6c 2c 	call	0x58d8	; 0x58d8 <DIO_voidSetPortDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_RS ,DIO_u8OUTPUT);
    3270:	82 e0       	ldi	r24, 0x02	; 2
    3272:	65 e0       	ldi	r22, 0x05	; 5
    3274:	41 e0       	ldi	r20, 0x01	; 1
    3276:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_EN ,DIO_u8OUTPUT);
    327a:	82 e0       	ldi	r24, 0x02	; 2
    327c:	67 e0       	ldi	r22, 0x07	; 7
    327e:	41 e0       	ldi	r20, 0x01	; 1
    3280:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>
    3284:	80 e0       	ldi	r24, 0x00	; 0
    3286:	90 e0       	ldi	r25, 0x00	; 0
    3288:	a8 e4       	ldi	r26, 0x48	; 72
    328a:	b2 e4       	ldi	r27, 0x42	; 66
    328c:	89 8f       	std	Y+25, r24	; 0x19
    328e:	9a 8f       	std	Y+26, r25	; 0x1a
    3290:	ab 8f       	std	Y+27, r26	; 0x1b
    3292:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3294:	69 8d       	ldd	r22, Y+25	; 0x19
    3296:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3298:	8b 8d       	ldd	r24, Y+27	; 0x1b
    329a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    329c:	20 e0       	ldi	r18, 0x00	; 0
    329e:	30 e0       	ldi	r19, 0x00	; 0
    32a0:	4a ef       	ldi	r20, 0xFA	; 250
    32a2:	54 e4       	ldi	r21, 0x44	; 68
    32a4:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    32a8:	dc 01       	movw	r26, r24
    32aa:	cb 01       	movw	r24, r22
    32ac:	8d 8b       	std	Y+21, r24	; 0x15
    32ae:	9e 8b       	std	Y+22, r25	; 0x16
    32b0:	af 8b       	std	Y+23, r26	; 0x17
    32b2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    32b4:	6d 89       	ldd	r22, Y+21	; 0x15
    32b6:	7e 89       	ldd	r23, Y+22	; 0x16
    32b8:	8f 89       	ldd	r24, Y+23	; 0x17
    32ba:	98 8d       	ldd	r25, Y+24	; 0x18
    32bc:	20 e0       	ldi	r18, 0x00	; 0
    32be:	30 e0       	ldi	r19, 0x00	; 0
    32c0:	40 e8       	ldi	r20, 0x80	; 128
    32c2:	5f e3       	ldi	r21, 0x3F	; 63
    32c4:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    32c8:	88 23       	and	r24, r24
    32ca:	2c f4       	brge	.+10     	; 0x32d6 <LCD_Init+0x82>
		__ticks = 1;
    32cc:	81 e0       	ldi	r24, 0x01	; 1
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	9c 8b       	std	Y+20, r25	; 0x14
    32d2:	8b 8b       	std	Y+19, r24	; 0x13
    32d4:	3f c0       	rjmp	.+126    	; 0x3354 <LCD_Init+0x100>
	else if (__tmp > 65535)
    32d6:	6d 89       	ldd	r22, Y+21	; 0x15
    32d8:	7e 89       	ldd	r23, Y+22	; 0x16
    32da:	8f 89       	ldd	r24, Y+23	; 0x17
    32dc:	98 8d       	ldd	r25, Y+24	; 0x18
    32de:	20 e0       	ldi	r18, 0x00	; 0
    32e0:	3f ef       	ldi	r19, 0xFF	; 255
    32e2:	4f e7       	ldi	r20, 0x7F	; 127
    32e4:	57 e4       	ldi	r21, 0x47	; 71
    32e6:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    32ea:	18 16       	cp	r1, r24
    32ec:	4c f5       	brge	.+82     	; 0x3340 <LCD_Init+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32ee:	69 8d       	ldd	r22, Y+25	; 0x19
    32f0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    32f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    32f6:	20 e0       	ldi	r18, 0x00	; 0
    32f8:	30 e0       	ldi	r19, 0x00	; 0
    32fa:	40 e2       	ldi	r20, 0x20	; 32
    32fc:	51 e4       	ldi	r21, 0x41	; 65
    32fe:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3302:	dc 01       	movw	r26, r24
    3304:	cb 01       	movw	r24, r22
    3306:	bc 01       	movw	r22, r24
    3308:	cd 01       	movw	r24, r26
    330a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    330e:	dc 01       	movw	r26, r24
    3310:	cb 01       	movw	r24, r22
    3312:	9c 8b       	std	Y+20, r25	; 0x14
    3314:	8b 8b       	std	Y+19, r24	; 0x13
    3316:	0f c0       	rjmp	.+30     	; 0x3336 <LCD_Init+0xe2>
    3318:	88 ec       	ldi	r24, 0xC8	; 200
    331a:	90 e0       	ldi	r25, 0x00	; 0
    331c:	9a 8b       	std	Y+18, r25	; 0x12
    331e:	89 8b       	std	Y+17, r24	; 0x11
    3320:	89 89       	ldd	r24, Y+17	; 0x11
    3322:	9a 89       	ldd	r25, Y+18	; 0x12
    3324:	01 97       	sbiw	r24, 0x01	; 1
    3326:	f1 f7       	brne	.-4      	; 0x3324 <LCD_Init+0xd0>
    3328:	9a 8b       	std	Y+18, r25	; 0x12
    332a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    332c:	8b 89       	ldd	r24, Y+19	; 0x13
    332e:	9c 89       	ldd	r25, Y+20	; 0x14
    3330:	01 97       	sbiw	r24, 0x01	; 1
    3332:	9c 8b       	std	Y+20, r25	; 0x14
    3334:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3336:	8b 89       	ldd	r24, Y+19	; 0x13
    3338:	9c 89       	ldd	r25, Y+20	; 0x14
    333a:	00 97       	sbiw	r24, 0x00	; 0
    333c:	69 f7       	brne	.-38     	; 0x3318 <LCD_Init+0xc4>
    333e:	14 c0       	rjmp	.+40     	; 0x3368 <LCD_Init+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3340:	6d 89       	ldd	r22, Y+21	; 0x15
    3342:	7e 89       	ldd	r23, Y+22	; 0x16
    3344:	8f 89       	ldd	r24, Y+23	; 0x17
    3346:	98 8d       	ldd	r25, Y+24	; 0x18
    3348:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    334c:	dc 01       	movw	r26, r24
    334e:	cb 01       	movw	r24, r22
    3350:	9c 8b       	std	Y+20, r25	; 0x14
    3352:	8b 8b       	std	Y+19, r24	; 0x13
    3354:	8b 89       	ldd	r24, Y+19	; 0x13
    3356:	9c 89       	ldd	r25, Y+20	; 0x14
    3358:	98 8b       	std	Y+16, r25	; 0x10
    335a:	8f 87       	std	Y+15, r24	; 0x0f
    335c:	8f 85       	ldd	r24, Y+15	; 0x0f
    335e:	98 89       	ldd	r25, Y+16	; 0x10
    3360:	01 97       	sbiw	r24, 0x01	; 1
    3362:	f1 f7       	brne	.-4      	; 0x3360 <LCD_Init+0x10c>
    3364:	98 8b       	std	Y+16, r25	; 0x10
    3366:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	LCD_WriteInst(0x38);
    3368:	88 e3       	ldi	r24, 0x38	; 56
    336a:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
	LCD_WriteInst(0x0C);
    336e:	8c e0       	ldi	r24, 0x0C	; 12
    3370:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
	LCD_WriteInst(0x01);
    3374:	81 e0       	ldi	r24, 0x01	; 1
    3376:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
    337a:	80 e0       	ldi	r24, 0x00	; 0
    337c:	90 e0       	ldi	r25, 0x00	; 0
    337e:	a0 e8       	ldi	r26, 0x80	; 128
    3380:	bf e3       	ldi	r27, 0x3F	; 63
    3382:	8b 87       	std	Y+11, r24	; 0x0b
    3384:	9c 87       	std	Y+12, r25	; 0x0c
    3386:	ad 87       	std	Y+13, r26	; 0x0d
    3388:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    338a:	6b 85       	ldd	r22, Y+11	; 0x0b
    338c:	7c 85       	ldd	r23, Y+12	; 0x0c
    338e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3390:	9e 85       	ldd	r25, Y+14	; 0x0e
    3392:	20 e0       	ldi	r18, 0x00	; 0
    3394:	30 e0       	ldi	r19, 0x00	; 0
    3396:	4a ef       	ldi	r20, 0xFA	; 250
    3398:	54 e4       	ldi	r21, 0x44	; 68
    339a:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    339e:	dc 01       	movw	r26, r24
    33a0:	cb 01       	movw	r24, r22
    33a2:	8f 83       	std	Y+7, r24	; 0x07
    33a4:	98 87       	std	Y+8, r25	; 0x08
    33a6:	a9 87       	std	Y+9, r26	; 0x09
    33a8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    33aa:	6f 81       	ldd	r22, Y+7	; 0x07
    33ac:	78 85       	ldd	r23, Y+8	; 0x08
    33ae:	89 85       	ldd	r24, Y+9	; 0x09
    33b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    33b2:	20 e0       	ldi	r18, 0x00	; 0
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	40 e8       	ldi	r20, 0x80	; 128
    33b8:	5f e3       	ldi	r21, 0x3F	; 63
    33ba:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    33be:	88 23       	and	r24, r24
    33c0:	2c f4       	brge	.+10     	; 0x33cc <LCD_Init+0x178>
		__ticks = 1;
    33c2:	81 e0       	ldi	r24, 0x01	; 1
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	9e 83       	std	Y+6, r25	; 0x06
    33c8:	8d 83       	std	Y+5, r24	; 0x05
    33ca:	3f c0       	rjmp	.+126    	; 0x344a <LCD_Init+0x1f6>
	else if (__tmp > 65535)
    33cc:	6f 81       	ldd	r22, Y+7	; 0x07
    33ce:	78 85       	ldd	r23, Y+8	; 0x08
    33d0:	89 85       	ldd	r24, Y+9	; 0x09
    33d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    33d4:	20 e0       	ldi	r18, 0x00	; 0
    33d6:	3f ef       	ldi	r19, 0xFF	; 255
    33d8:	4f e7       	ldi	r20, 0x7F	; 127
    33da:	57 e4       	ldi	r21, 0x47	; 71
    33dc:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    33e0:	18 16       	cp	r1, r24
    33e2:	4c f5       	brge	.+82     	; 0x3436 <LCD_Init+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    33e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    33e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    33ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    33ec:	20 e0       	ldi	r18, 0x00	; 0
    33ee:	30 e0       	ldi	r19, 0x00	; 0
    33f0:	40 e2       	ldi	r20, 0x20	; 32
    33f2:	51 e4       	ldi	r21, 0x41	; 65
    33f4:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    33f8:	dc 01       	movw	r26, r24
    33fa:	cb 01       	movw	r24, r22
    33fc:	bc 01       	movw	r22, r24
    33fe:	cd 01       	movw	r24, r26
    3400:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3404:	dc 01       	movw	r26, r24
    3406:	cb 01       	movw	r24, r22
    3408:	9e 83       	std	Y+6, r25	; 0x06
    340a:	8d 83       	std	Y+5, r24	; 0x05
    340c:	0f c0       	rjmp	.+30     	; 0x342c <LCD_Init+0x1d8>
    340e:	88 ec       	ldi	r24, 0xC8	; 200
    3410:	90 e0       	ldi	r25, 0x00	; 0
    3412:	9c 83       	std	Y+4, r25	; 0x04
    3414:	8b 83       	std	Y+3, r24	; 0x03
    3416:	8b 81       	ldd	r24, Y+3	; 0x03
    3418:	9c 81       	ldd	r25, Y+4	; 0x04
    341a:	01 97       	sbiw	r24, 0x01	; 1
    341c:	f1 f7       	brne	.-4      	; 0x341a <LCD_Init+0x1c6>
    341e:	9c 83       	std	Y+4, r25	; 0x04
    3420:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3422:	8d 81       	ldd	r24, Y+5	; 0x05
    3424:	9e 81       	ldd	r25, Y+6	; 0x06
    3426:	01 97       	sbiw	r24, 0x01	; 1
    3428:	9e 83       	std	Y+6, r25	; 0x06
    342a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    342c:	8d 81       	ldd	r24, Y+5	; 0x05
    342e:	9e 81       	ldd	r25, Y+6	; 0x06
    3430:	00 97       	sbiw	r24, 0x00	; 0
    3432:	69 f7       	brne	.-38     	; 0x340e <LCD_Init+0x1ba>
    3434:	14 c0       	rjmp	.+40     	; 0x345e <LCD_Init+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3436:	6f 81       	ldd	r22, Y+7	; 0x07
    3438:	78 85       	ldd	r23, Y+8	; 0x08
    343a:	89 85       	ldd	r24, Y+9	; 0x09
    343c:	9a 85       	ldd	r25, Y+10	; 0x0a
    343e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3442:	dc 01       	movw	r26, r24
    3444:	cb 01       	movw	r24, r22
    3446:	9e 83       	std	Y+6, r25	; 0x06
    3448:	8d 83       	std	Y+5, r24	; 0x05
    344a:	8d 81       	ldd	r24, Y+5	; 0x05
    344c:	9e 81       	ldd	r25, Y+6	; 0x06
    344e:	9a 83       	std	Y+2, r25	; 0x02
    3450:	89 83       	std	Y+1, r24	; 0x01
    3452:	89 81       	ldd	r24, Y+1	; 0x01
    3454:	9a 81       	ldd	r25, Y+2	; 0x02
    3456:	01 97       	sbiw	r24, 0x01	; 1
    3458:	f1 f7       	brne	.-4      	; 0x3456 <LCD_Init+0x202>
    345a:	9a 83       	std	Y+2, r25	; 0x02
    345c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	LCD_WriteInst(0x06);
    345e:	86 e0       	ldi	r24, 0x06	; 6
    3460:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>

}
    3464:	6c 96       	adiw	r28, 0x1c	; 28
    3466:	0f b6       	in	r0, 0x3f	; 63
    3468:	f8 94       	cli
    346a:	de bf       	out	0x3e, r29	; 62
    346c:	0f be       	out	0x3f, r0	; 63
    346e:	cd bf       	out	0x3d, r28	; 61
    3470:	cf 91       	pop	r28
    3472:	df 91       	pop	r29
    3474:	08 95       	ret

00003476 <LCD_WriteInst>:

void LCD_WriteInst(uint8 Ins)
{
    3476:	df 93       	push	r29
    3478:	cf 93       	push	r28
    347a:	cd b7       	in	r28, 0x3d	; 61
    347c:	de b7       	in	r29, 0x3e	; 62
    347e:	6d 97       	sbiw	r28, 0x1d	; 29
    3480:	0f b6       	in	r0, 0x3f	; 63
    3482:	f8 94       	cli
    3484:	de bf       	out	0x3e, r29	; 62
    3486:	0f be       	out	0x3f, r0	; 63
    3488:	cd bf       	out	0x3d, r28	; 61
    348a:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendCmd);
    348c:	82 e0       	ldi	r24, 0x02	; 2
    348e:	65 e0       	ldi	r22, 0x05	; 5
    3490:	40 e0       	ldi	r20, 0x00	; 0
    3492:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,Ins);
    3496:	81 e0       	ldi	r24, 0x01	; 1
    3498:	6d 8d       	ldd	r22, Y+29	; 0x1d
    349a:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    349e:	82 e0       	ldi	r24, 0x02	; 2
    34a0:	67 e0       	ldi	r22, 0x07	; 7
    34a2:	41 e0       	ldi	r20, 0x01	; 1
    34a4:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
    34a8:	80 e0       	ldi	r24, 0x00	; 0
    34aa:	90 e0       	ldi	r25, 0x00	; 0
    34ac:	a0 e8       	ldi	r26, 0x80	; 128
    34ae:	bf e3       	ldi	r27, 0x3F	; 63
    34b0:	89 8f       	std	Y+25, r24	; 0x19
    34b2:	9a 8f       	std	Y+26, r25	; 0x1a
    34b4:	ab 8f       	std	Y+27, r26	; 0x1b
    34b6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34b8:	69 8d       	ldd	r22, Y+25	; 0x19
    34ba:	7a 8d       	ldd	r23, Y+26	; 0x1a
    34bc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34be:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34c0:	20 e0       	ldi	r18, 0x00	; 0
    34c2:	30 e0       	ldi	r19, 0x00	; 0
    34c4:	4a ef       	ldi	r20, 0xFA	; 250
    34c6:	54 e4       	ldi	r21, 0x44	; 68
    34c8:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    34cc:	dc 01       	movw	r26, r24
    34ce:	cb 01       	movw	r24, r22
    34d0:	8d 8b       	std	Y+21, r24	; 0x15
    34d2:	9e 8b       	std	Y+22, r25	; 0x16
    34d4:	af 8b       	std	Y+23, r26	; 0x17
    34d6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    34d8:	6d 89       	ldd	r22, Y+21	; 0x15
    34da:	7e 89       	ldd	r23, Y+22	; 0x16
    34dc:	8f 89       	ldd	r24, Y+23	; 0x17
    34de:	98 8d       	ldd	r25, Y+24	; 0x18
    34e0:	20 e0       	ldi	r18, 0x00	; 0
    34e2:	30 e0       	ldi	r19, 0x00	; 0
    34e4:	40 e8       	ldi	r20, 0x80	; 128
    34e6:	5f e3       	ldi	r21, 0x3F	; 63
    34e8:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    34ec:	88 23       	and	r24, r24
    34ee:	2c f4       	brge	.+10     	; 0x34fa <LCD_WriteInst+0x84>
		__ticks = 1;
    34f0:	81 e0       	ldi	r24, 0x01	; 1
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	9c 8b       	std	Y+20, r25	; 0x14
    34f6:	8b 8b       	std	Y+19, r24	; 0x13
    34f8:	3f c0       	rjmp	.+126    	; 0x3578 <LCD_WriteInst+0x102>
	else if (__tmp > 65535)
    34fa:	6d 89       	ldd	r22, Y+21	; 0x15
    34fc:	7e 89       	ldd	r23, Y+22	; 0x16
    34fe:	8f 89       	ldd	r24, Y+23	; 0x17
    3500:	98 8d       	ldd	r25, Y+24	; 0x18
    3502:	20 e0       	ldi	r18, 0x00	; 0
    3504:	3f ef       	ldi	r19, 0xFF	; 255
    3506:	4f e7       	ldi	r20, 0x7F	; 127
    3508:	57 e4       	ldi	r21, 0x47	; 71
    350a:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    350e:	18 16       	cp	r1, r24
    3510:	4c f5       	brge	.+82     	; 0x3564 <LCD_WriteInst+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3512:	69 8d       	ldd	r22, Y+25	; 0x19
    3514:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3516:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3518:	9c 8d       	ldd	r25, Y+28	; 0x1c
    351a:	20 e0       	ldi	r18, 0x00	; 0
    351c:	30 e0       	ldi	r19, 0x00	; 0
    351e:	40 e2       	ldi	r20, 0x20	; 32
    3520:	51 e4       	ldi	r21, 0x41	; 65
    3522:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3526:	dc 01       	movw	r26, r24
    3528:	cb 01       	movw	r24, r22
    352a:	bc 01       	movw	r22, r24
    352c:	cd 01       	movw	r24, r26
    352e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3532:	dc 01       	movw	r26, r24
    3534:	cb 01       	movw	r24, r22
    3536:	9c 8b       	std	Y+20, r25	; 0x14
    3538:	8b 8b       	std	Y+19, r24	; 0x13
    353a:	0f c0       	rjmp	.+30     	; 0x355a <LCD_WriteInst+0xe4>
    353c:	88 ec       	ldi	r24, 0xC8	; 200
    353e:	90 e0       	ldi	r25, 0x00	; 0
    3540:	9a 8b       	std	Y+18, r25	; 0x12
    3542:	89 8b       	std	Y+17, r24	; 0x11
    3544:	89 89       	ldd	r24, Y+17	; 0x11
    3546:	9a 89       	ldd	r25, Y+18	; 0x12
    3548:	01 97       	sbiw	r24, 0x01	; 1
    354a:	f1 f7       	brne	.-4      	; 0x3548 <LCD_WriteInst+0xd2>
    354c:	9a 8b       	std	Y+18, r25	; 0x12
    354e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3550:	8b 89       	ldd	r24, Y+19	; 0x13
    3552:	9c 89       	ldd	r25, Y+20	; 0x14
    3554:	01 97       	sbiw	r24, 0x01	; 1
    3556:	9c 8b       	std	Y+20, r25	; 0x14
    3558:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    355a:	8b 89       	ldd	r24, Y+19	; 0x13
    355c:	9c 89       	ldd	r25, Y+20	; 0x14
    355e:	00 97       	sbiw	r24, 0x00	; 0
    3560:	69 f7       	brne	.-38     	; 0x353c <LCD_WriteInst+0xc6>
    3562:	14 c0       	rjmp	.+40     	; 0x358c <LCD_WriteInst+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3564:	6d 89       	ldd	r22, Y+21	; 0x15
    3566:	7e 89       	ldd	r23, Y+22	; 0x16
    3568:	8f 89       	ldd	r24, Y+23	; 0x17
    356a:	98 8d       	ldd	r25, Y+24	; 0x18
    356c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3570:	dc 01       	movw	r26, r24
    3572:	cb 01       	movw	r24, r22
    3574:	9c 8b       	std	Y+20, r25	; 0x14
    3576:	8b 8b       	std	Y+19, r24	; 0x13
    3578:	8b 89       	ldd	r24, Y+19	; 0x13
    357a:	9c 89       	ldd	r25, Y+20	; 0x14
    357c:	98 8b       	std	Y+16, r25	; 0x10
    357e:	8f 87       	std	Y+15, r24	; 0x0f
    3580:	8f 85       	ldd	r24, Y+15	; 0x0f
    3582:	98 89       	ldd	r25, Y+16	; 0x10
    3584:	01 97       	sbiw	r24, 0x01	; 1
    3586:	f1 f7       	brne	.-4      	; 0x3584 <LCD_WriteInst+0x10e>
    3588:	98 8b       	std	Y+16, r25	; 0x10
    358a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    358c:	82 e0       	ldi	r24, 0x02	; 2
    358e:	67 e0       	ldi	r22, 0x07	; 7
    3590:	40 e0       	ldi	r20, 0x00	; 0
    3592:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
    3596:	80 e0       	ldi	r24, 0x00	; 0
    3598:	90 e0       	ldi	r25, 0x00	; 0
    359a:	a0 e8       	ldi	r26, 0x80	; 128
    359c:	bf e3       	ldi	r27, 0x3F	; 63
    359e:	8b 87       	std	Y+11, r24	; 0x0b
    35a0:	9c 87       	std	Y+12, r25	; 0x0c
    35a2:	ad 87       	std	Y+13, r26	; 0x0d
    35a4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    35a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    35aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    35ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    35ae:	20 e0       	ldi	r18, 0x00	; 0
    35b0:	30 e0       	ldi	r19, 0x00	; 0
    35b2:	4a ef       	ldi	r20, 0xFA	; 250
    35b4:	54 e4       	ldi	r21, 0x44	; 68
    35b6:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    35ba:	dc 01       	movw	r26, r24
    35bc:	cb 01       	movw	r24, r22
    35be:	8f 83       	std	Y+7, r24	; 0x07
    35c0:	98 87       	std	Y+8, r25	; 0x08
    35c2:	a9 87       	std	Y+9, r26	; 0x09
    35c4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    35c6:	6f 81       	ldd	r22, Y+7	; 0x07
    35c8:	78 85       	ldd	r23, Y+8	; 0x08
    35ca:	89 85       	ldd	r24, Y+9	; 0x09
    35cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    35ce:	20 e0       	ldi	r18, 0x00	; 0
    35d0:	30 e0       	ldi	r19, 0x00	; 0
    35d2:	40 e8       	ldi	r20, 0x80	; 128
    35d4:	5f e3       	ldi	r21, 0x3F	; 63
    35d6:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    35da:	88 23       	and	r24, r24
    35dc:	2c f4       	brge	.+10     	; 0x35e8 <LCD_WriteInst+0x172>
		__ticks = 1;
    35de:	81 e0       	ldi	r24, 0x01	; 1
    35e0:	90 e0       	ldi	r25, 0x00	; 0
    35e2:	9e 83       	std	Y+6, r25	; 0x06
    35e4:	8d 83       	std	Y+5, r24	; 0x05
    35e6:	3f c0       	rjmp	.+126    	; 0x3666 <LCD_WriteInst+0x1f0>
	else if (__tmp > 65535)
    35e8:	6f 81       	ldd	r22, Y+7	; 0x07
    35ea:	78 85       	ldd	r23, Y+8	; 0x08
    35ec:	89 85       	ldd	r24, Y+9	; 0x09
    35ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    35f0:	20 e0       	ldi	r18, 0x00	; 0
    35f2:	3f ef       	ldi	r19, 0xFF	; 255
    35f4:	4f e7       	ldi	r20, 0x7F	; 127
    35f6:	57 e4       	ldi	r21, 0x47	; 71
    35f8:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    35fc:	18 16       	cp	r1, r24
    35fe:	4c f5       	brge	.+82     	; 0x3652 <LCD_WriteInst+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3600:	6b 85       	ldd	r22, Y+11	; 0x0b
    3602:	7c 85       	ldd	r23, Y+12	; 0x0c
    3604:	8d 85       	ldd	r24, Y+13	; 0x0d
    3606:	9e 85       	ldd	r25, Y+14	; 0x0e
    3608:	20 e0       	ldi	r18, 0x00	; 0
    360a:	30 e0       	ldi	r19, 0x00	; 0
    360c:	40 e2       	ldi	r20, 0x20	; 32
    360e:	51 e4       	ldi	r21, 0x41	; 65
    3610:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    3614:	dc 01       	movw	r26, r24
    3616:	cb 01       	movw	r24, r22
    3618:	bc 01       	movw	r22, r24
    361a:	cd 01       	movw	r24, r26
    361c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3620:	dc 01       	movw	r26, r24
    3622:	cb 01       	movw	r24, r22
    3624:	9e 83       	std	Y+6, r25	; 0x06
    3626:	8d 83       	std	Y+5, r24	; 0x05
    3628:	0f c0       	rjmp	.+30     	; 0x3648 <LCD_WriteInst+0x1d2>
    362a:	88 ec       	ldi	r24, 0xC8	; 200
    362c:	90 e0       	ldi	r25, 0x00	; 0
    362e:	9c 83       	std	Y+4, r25	; 0x04
    3630:	8b 83       	std	Y+3, r24	; 0x03
    3632:	8b 81       	ldd	r24, Y+3	; 0x03
    3634:	9c 81       	ldd	r25, Y+4	; 0x04
    3636:	01 97       	sbiw	r24, 0x01	; 1
    3638:	f1 f7       	brne	.-4      	; 0x3636 <LCD_WriteInst+0x1c0>
    363a:	9c 83       	std	Y+4, r25	; 0x04
    363c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    363e:	8d 81       	ldd	r24, Y+5	; 0x05
    3640:	9e 81       	ldd	r25, Y+6	; 0x06
    3642:	01 97       	sbiw	r24, 0x01	; 1
    3644:	9e 83       	std	Y+6, r25	; 0x06
    3646:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3648:	8d 81       	ldd	r24, Y+5	; 0x05
    364a:	9e 81       	ldd	r25, Y+6	; 0x06
    364c:	00 97       	sbiw	r24, 0x00	; 0
    364e:	69 f7       	brne	.-38     	; 0x362a <LCD_WriteInst+0x1b4>
    3650:	14 c0       	rjmp	.+40     	; 0x367a <LCD_WriteInst+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3652:	6f 81       	ldd	r22, Y+7	; 0x07
    3654:	78 85       	ldd	r23, Y+8	; 0x08
    3656:	89 85       	ldd	r24, Y+9	; 0x09
    3658:	9a 85       	ldd	r25, Y+10	; 0x0a
    365a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    365e:	dc 01       	movw	r26, r24
    3660:	cb 01       	movw	r24, r22
    3662:	9e 83       	std	Y+6, r25	; 0x06
    3664:	8d 83       	std	Y+5, r24	; 0x05
    3666:	8d 81       	ldd	r24, Y+5	; 0x05
    3668:	9e 81       	ldd	r25, Y+6	; 0x06
    366a:	9a 83       	std	Y+2, r25	; 0x02
    366c:	89 83       	std	Y+1, r24	; 0x01
    366e:	89 81       	ldd	r24, Y+1	; 0x01
    3670:	9a 81       	ldd	r25, Y+2	; 0x02
    3672:	01 97       	sbiw	r24, 0x01	; 1
    3674:	f1 f7       	brne	.-4      	; 0x3672 <LCD_WriteInst+0x1fc>
    3676:	9a 83       	std	Y+2, r25	; 0x02
    3678:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    367a:	6d 96       	adiw	r28, 0x1d	; 29
    367c:	0f b6       	in	r0, 0x3f	; 63
    367e:	f8 94       	cli
    3680:	de bf       	out	0x3e, r29	; 62
    3682:	0f be       	out	0x3f, r0	; 63
    3684:	cd bf       	out	0x3d, r28	; 61
    3686:	cf 91       	pop	r28
    3688:	df 91       	pop	r29
    368a:	08 95       	ret

0000368c <LCD_WriteData>:

void LCD_WriteData(uint8 data)
{
    368c:	df 93       	push	r29
    368e:	cf 93       	push	r28
    3690:	cd b7       	in	r28, 0x3d	; 61
    3692:	de b7       	in	r29, 0x3e	; 62
    3694:	6d 97       	sbiw	r28, 0x1d	; 29
    3696:	0f b6       	in	r0, 0x3f	; 63
    3698:	f8 94       	cli
    369a:	de bf       	out	0x3e, r29	; 62
    369c:	0f be       	out	0x3f, r0	; 63
    369e:	cd bf       	out	0x3d, r28	; 61
    36a0:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendData);
    36a2:	82 e0       	ldi	r24, 0x02	; 2
    36a4:	65 e0       	ldi	r22, 0x05	; 5
    36a6:	41 e0       	ldi	r20, 0x01	; 1
    36a8:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,data);
    36ac:	81 e0       	ldi	r24, 0x01	; 1
    36ae:	6d 8d       	ldd	r22, Y+29	; 0x1d
    36b0:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    36b4:	82 e0       	ldi	r24, 0x02	; 2
    36b6:	67 e0       	ldi	r22, 0x07	; 7
    36b8:	41 e0       	ldi	r20, 0x01	; 1
    36ba:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
    36be:	80 e0       	ldi	r24, 0x00	; 0
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	a0 e8       	ldi	r26, 0x80	; 128
    36c4:	bf e3       	ldi	r27, 0x3F	; 63
    36c6:	89 8f       	std	Y+25, r24	; 0x19
    36c8:	9a 8f       	std	Y+26, r25	; 0x1a
    36ca:	ab 8f       	std	Y+27, r26	; 0x1b
    36cc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36ce:	69 8d       	ldd	r22, Y+25	; 0x19
    36d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    36d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    36d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    36d6:	20 e0       	ldi	r18, 0x00	; 0
    36d8:	30 e0       	ldi	r19, 0x00	; 0
    36da:	4a ef       	ldi	r20, 0xFA	; 250
    36dc:	54 e4       	ldi	r21, 0x44	; 68
    36de:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    36e2:	dc 01       	movw	r26, r24
    36e4:	cb 01       	movw	r24, r22
    36e6:	8d 8b       	std	Y+21, r24	; 0x15
    36e8:	9e 8b       	std	Y+22, r25	; 0x16
    36ea:	af 8b       	std	Y+23, r26	; 0x17
    36ec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    36ee:	6d 89       	ldd	r22, Y+21	; 0x15
    36f0:	7e 89       	ldd	r23, Y+22	; 0x16
    36f2:	8f 89       	ldd	r24, Y+23	; 0x17
    36f4:	98 8d       	ldd	r25, Y+24	; 0x18
    36f6:	20 e0       	ldi	r18, 0x00	; 0
    36f8:	30 e0       	ldi	r19, 0x00	; 0
    36fa:	40 e8       	ldi	r20, 0x80	; 128
    36fc:	5f e3       	ldi	r21, 0x3F	; 63
    36fe:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    3702:	88 23       	and	r24, r24
    3704:	2c f4       	brge	.+10     	; 0x3710 <LCD_WriteData+0x84>
		__ticks = 1;
    3706:	81 e0       	ldi	r24, 0x01	; 1
    3708:	90 e0       	ldi	r25, 0x00	; 0
    370a:	9c 8b       	std	Y+20, r25	; 0x14
    370c:	8b 8b       	std	Y+19, r24	; 0x13
    370e:	3f c0       	rjmp	.+126    	; 0x378e <LCD_WriteData+0x102>
	else if (__tmp > 65535)
    3710:	6d 89       	ldd	r22, Y+21	; 0x15
    3712:	7e 89       	ldd	r23, Y+22	; 0x16
    3714:	8f 89       	ldd	r24, Y+23	; 0x17
    3716:	98 8d       	ldd	r25, Y+24	; 0x18
    3718:	20 e0       	ldi	r18, 0x00	; 0
    371a:	3f ef       	ldi	r19, 0xFF	; 255
    371c:	4f e7       	ldi	r20, 0x7F	; 127
    371e:	57 e4       	ldi	r21, 0x47	; 71
    3720:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    3724:	18 16       	cp	r1, r24
    3726:	4c f5       	brge	.+82     	; 0x377a <LCD_WriteData+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3728:	69 8d       	ldd	r22, Y+25	; 0x19
    372a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    372c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    372e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3730:	20 e0       	ldi	r18, 0x00	; 0
    3732:	30 e0       	ldi	r19, 0x00	; 0
    3734:	40 e2       	ldi	r20, 0x20	; 32
    3736:	51 e4       	ldi	r21, 0x41	; 65
    3738:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    373c:	dc 01       	movw	r26, r24
    373e:	cb 01       	movw	r24, r22
    3740:	bc 01       	movw	r22, r24
    3742:	cd 01       	movw	r24, r26
    3744:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3748:	dc 01       	movw	r26, r24
    374a:	cb 01       	movw	r24, r22
    374c:	9c 8b       	std	Y+20, r25	; 0x14
    374e:	8b 8b       	std	Y+19, r24	; 0x13
    3750:	0f c0       	rjmp	.+30     	; 0x3770 <LCD_WriteData+0xe4>
    3752:	88 ec       	ldi	r24, 0xC8	; 200
    3754:	90 e0       	ldi	r25, 0x00	; 0
    3756:	9a 8b       	std	Y+18, r25	; 0x12
    3758:	89 8b       	std	Y+17, r24	; 0x11
    375a:	89 89       	ldd	r24, Y+17	; 0x11
    375c:	9a 89       	ldd	r25, Y+18	; 0x12
    375e:	01 97       	sbiw	r24, 0x01	; 1
    3760:	f1 f7       	brne	.-4      	; 0x375e <LCD_WriteData+0xd2>
    3762:	9a 8b       	std	Y+18, r25	; 0x12
    3764:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3766:	8b 89       	ldd	r24, Y+19	; 0x13
    3768:	9c 89       	ldd	r25, Y+20	; 0x14
    376a:	01 97       	sbiw	r24, 0x01	; 1
    376c:	9c 8b       	std	Y+20, r25	; 0x14
    376e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3770:	8b 89       	ldd	r24, Y+19	; 0x13
    3772:	9c 89       	ldd	r25, Y+20	; 0x14
    3774:	00 97       	sbiw	r24, 0x00	; 0
    3776:	69 f7       	brne	.-38     	; 0x3752 <LCD_WriteData+0xc6>
    3778:	14 c0       	rjmp	.+40     	; 0x37a2 <LCD_WriteData+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    377a:	6d 89       	ldd	r22, Y+21	; 0x15
    377c:	7e 89       	ldd	r23, Y+22	; 0x16
    377e:	8f 89       	ldd	r24, Y+23	; 0x17
    3780:	98 8d       	ldd	r25, Y+24	; 0x18
    3782:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3786:	dc 01       	movw	r26, r24
    3788:	cb 01       	movw	r24, r22
    378a:	9c 8b       	std	Y+20, r25	; 0x14
    378c:	8b 8b       	std	Y+19, r24	; 0x13
    378e:	8b 89       	ldd	r24, Y+19	; 0x13
    3790:	9c 89       	ldd	r25, Y+20	; 0x14
    3792:	98 8b       	std	Y+16, r25	; 0x10
    3794:	8f 87       	std	Y+15, r24	; 0x0f
    3796:	8f 85       	ldd	r24, Y+15	; 0x0f
    3798:	98 89       	ldd	r25, Y+16	; 0x10
    379a:	01 97       	sbiw	r24, 0x01	; 1
    379c:	f1 f7       	brne	.-4      	; 0x379a <LCD_WriteData+0x10e>
    379e:	98 8b       	std	Y+16, r25	; 0x10
    37a0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    37a2:	82 e0       	ldi	r24, 0x02	; 2
    37a4:	67 e0       	ldi	r22, 0x07	; 7
    37a6:	40 e0       	ldi	r20, 0x00	; 0
    37a8:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
    37ac:	80 e0       	ldi	r24, 0x00	; 0
    37ae:	90 e0       	ldi	r25, 0x00	; 0
    37b0:	a0 e8       	ldi	r26, 0x80	; 128
    37b2:	bf e3       	ldi	r27, 0x3F	; 63
    37b4:	8b 87       	std	Y+11, r24	; 0x0b
    37b6:	9c 87       	std	Y+12, r25	; 0x0c
    37b8:	ad 87       	std	Y+13, r26	; 0x0d
    37ba:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    37be:	7c 85       	ldd	r23, Y+12	; 0x0c
    37c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    37c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    37c4:	20 e0       	ldi	r18, 0x00	; 0
    37c6:	30 e0       	ldi	r19, 0x00	; 0
    37c8:	4a ef       	ldi	r20, 0xFA	; 250
    37ca:	54 e4       	ldi	r21, 0x44	; 68
    37cc:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    37d0:	dc 01       	movw	r26, r24
    37d2:	cb 01       	movw	r24, r22
    37d4:	8f 83       	std	Y+7, r24	; 0x07
    37d6:	98 87       	std	Y+8, r25	; 0x08
    37d8:	a9 87       	std	Y+9, r26	; 0x09
    37da:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    37dc:	6f 81       	ldd	r22, Y+7	; 0x07
    37de:	78 85       	ldd	r23, Y+8	; 0x08
    37e0:	89 85       	ldd	r24, Y+9	; 0x09
    37e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    37e4:	20 e0       	ldi	r18, 0x00	; 0
    37e6:	30 e0       	ldi	r19, 0x00	; 0
    37e8:	40 e8       	ldi	r20, 0x80	; 128
    37ea:	5f e3       	ldi	r21, 0x3F	; 63
    37ec:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    37f0:	88 23       	and	r24, r24
    37f2:	2c f4       	brge	.+10     	; 0x37fe <LCD_WriteData+0x172>
		__ticks = 1;
    37f4:	81 e0       	ldi	r24, 0x01	; 1
    37f6:	90 e0       	ldi	r25, 0x00	; 0
    37f8:	9e 83       	std	Y+6, r25	; 0x06
    37fa:	8d 83       	std	Y+5, r24	; 0x05
    37fc:	3f c0       	rjmp	.+126    	; 0x387c <LCD_WriteData+0x1f0>
	else if (__tmp > 65535)
    37fe:	6f 81       	ldd	r22, Y+7	; 0x07
    3800:	78 85       	ldd	r23, Y+8	; 0x08
    3802:	89 85       	ldd	r24, Y+9	; 0x09
    3804:	9a 85       	ldd	r25, Y+10	; 0x0a
    3806:	20 e0       	ldi	r18, 0x00	; 0
    3808:	3f ef       	ldi	r19, 0xFF	; 255
    380a:	4f e7       	ldi	r20, 0x7F	; 127
    380c:	57 e4       	ldi	r21, 0x47	; 71
    380e:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    3812:	18 16       	cp	r1, r24
    3814:	4c f5       	brge	.+82     	; 0x3868 <LCD_WriteData+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3816:	6b 85       	ldd	r22, Y+11	; 0x0b
    3818:	7c 85       	ldd	r23, Y+12	; 0x0c
    381a:	8d 85       	ldd	r24, Y+13	; 0x0d
    381c:	9e 85       	ldd	r25, Y+14	; 0x0e
    381e:	20 e0       	ldi	r18, 0x00	; 0
    3820:	30 e0       	ldi	r19, 0x00	; 0
    3822:	40 e2       	ldi	r20, 0x20	; 32
    3824:	51 e4       	ldi	r21, 0x41	; 65
    3826:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    382a:	dc 01       	movw	r26, r24
    382c:	cb 01       	movw	r24, r22
    382e:	bc 01       	movw	r22, r24
    3830:	cd 01       	movw	r24, r26
    3832:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3836:	dc 01       	movw	r26, r24
    3838:	cb 01       	movw	r24, r22
    383a:	9e 83       	std	Y+6, r25	; 0x06
    383c:	8d 83       	std	Y+5, r24	; 0x05
    383e:	0f c0       	rjmp	.+30     	; 0x385e <LCD_WriteData+0x1d2>
    3840:	88 ec       	ldi	r24, 0xC8	; 200
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	9c 83       	std	Y+4, r25	; 0x04
    3846:	8b 83       	std	Y+3, r24	; 0x03
    3848:	8b 81       	ldd	r24, Y+3	; 0x03
    384a:	9c 81       	ldd	r25, Y+4	; 0x04
    384c:	01 97       	sbiw	r24, 0x01	; 1
    384e:	f1 f7       	brne	.-4      	; 0x384c <LCD_WriteData+0x1c0>
    3850:	9c 83       	std	Y+4, r25	; 0x04
    3852:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3854:	8d 81       	ldd	r24, Y+5	; 0x05
    3856:	9e 81       	ldd	r25, Y+6	; 0x06
    3858:	01 97       	sbiw	r24, 0x01	; 1
    385a:	9e 83       	std	Y+6, r25	; 0x06
    385c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    385e:	8d 81       	ldd	r24, Y+5	; 0x05
    3860:	9e 81       	ldd	r25, Y+6	; 0x06
    3862:	00 97       	sbiw	r24, 0x00	; 0
    3864:	69 f7       	brne	.-38     	; 0x3840 <LCD_WriteData+0x1b4>
    3866:	14 c0       	rjmp	.+40     	; 0x3890 <LCD_WriteData+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3868:	6f 81       	ldd	r22, Y+7	; 0x07
    386a:	78 85       	ldd	r23, Y+8	; 0x08
    386c:	89 85       	ldd	r24, Y+9	; 0x09
    386e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3870:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3874:	dc 01       	movw	r26, r24
    3876:	cb 01       	movw	r24, r22
    3878:	9e 83       	std	Y+6, r25	; 0x06
    387a:	8d 83       	std	Y+5, r24	; 0x05
    387c:	8d 81       	ldd	r24, Y+5	; 0x05
    387e:	9e 81       	ldd	r25, Y+6	; 0x06
    3880:	9a 83       	std	Y+2, r25	; 0x02
    3882:	89 83       	std	Y+1, r24	; 0x01
    3884:	89 81       	ldd	r24, Y+1	; 0x01
    3886:	9a 81       	ldd	r25, Y+2	; 0x02
    3888:	01 97       	sbiw	r24, 0x01	; 1
    388a:	f1 f7       	brne	.-4      	; 0x3888 <LCD_WriteData+0x1fc>
    388c:	9a 83       	std	Y+2, r25	; 0x02
    388e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3890:	6d 96       	adiw	r28, 0x1d	; 29
    3892:	0f b6       	in	r0, 0x3f	; 63
    3894:	f8 94       	cli
    3896:	de bf       	out	0x3e, r29	; 62
    3898:	0f be       	out	0x3f, r0	; 63
    389a:	cd bf       	out	0x3d, r28	; 61
    389c:	cf 91       	pop	r28
    389e:	df 91       	pop	r29
    38a0:	08 95       	ret

000038a2 <LCD_WriteString>:

void LCD_WriteString(char* Name)
{
    38a2:	0f 93       	push	r16
    38a4:	1f 93       	push	r17
    38a6:	df 93       	push	r29
    38a8:	cf 93       	push	r28
    38aa:	00 d0       	rcall	.+0      	; 0x38ac <LCD_WriteString+0xa>
    38ac:	00 d0       	rcall	.+0      	; 0x38ae <LCD_WriteString+0xc>
    38ae:	cd b7       	in	r28, 0x3d	; 61
    38b0:	de b7       	in	r29, 0x3e	; 62
    38b2:	9c 83       	std	Y+4, r25	; 0x04
    38b4:	8b 83       	std	Y+3, r24	; 0x03
	for(int i= 0 ; i < strlen(Name);i++)
    38b6:	1a 82       	std	Y+2, r1	; 0x02
    38b8:	19 82       	std	Y+1, r1	; 0x01
    38ba:	0f c0       	rjmp	.+30     	; 0x38da <LCD_WriteString+0x38>
	{
		LCD_WriteData(Name[i]);
    38bc:	29 81       	ldd	r18, Y+1	; 0x01
    38be:	3a 81       	ldd	r19, Y+2	; 0x02
    38c0:	8b 81       	ldd	r24, Y+3	; 0x03
    38c2:	9c 81       	ldd	r25, Y+4	; 0x04
    38c4:	fc 01       	movw	r30, r24
    38c6:	e2 0f       	add	r30, r18
    38c8:	f3 1f       	adc	r31, r19
    38ca:	80 81       	ld	r24, Z
    38cc:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
	_delay_ms(1);
}

void LCD_WriteString(char* Name)
{
	for(int i= 0 ; i < strlen(Name);i++)
    38d0:	89 81       	ldd	r24, Y+1	; 0x01
    38d2:	9a 81       	ldd	r25, Y+2	; 0x02
    38d4:	01 96       	adiw	r24, 0x01	; 1
    38d6:	9a 83       	std	Y+2, r25	; 0x02
    38d8:	89 83       	std	Y+1, r24	; 0x01
    38da:	09 81       	ldd	r16, Y+1	; 0x01
    38dc:	1a 81       	ldd	r17, Y+2	; 0x02
    38de:	8b 81       	ldd	r24, Y+3	; 0x03
    38e0:	9c 81       	ldd	r25, Y+4	; 0x04
    38e2:	0e 94 9e 2e 	call	0x5d3c	; 0x5d3c <strlen>
    38e6:	08 17       	cp	r16, r24
    38e8:	19 07       	cpc	r17, r25
    38ea:	40 f3       	brcs	.-48     	; 0x38bc <LCD_WriteString+0x1a>
	{
		LCD_WriteData(Name[i]);
	}
}
    38ec:	0f 90       	pop	r0
    38ee:	0f 90       	pop	r0
    38f0:	0f 90       	pop	r0
    38f2:	0f 90       	pop	r0
    38f4:	cf 91       	pop	r28
    38f6:	df 91       	pop	r29
    38f8:	1f 91       	pop	r17
    38fa:	0f 91       	pop	r16
    38fc:	08 95       	ret

000038fe <LCD_Goto>:

void LCD_Goto(uint8 row,uint8 col)
{
    38fe:	df 93       	push	r29
    3900:	cf 93       	push	r28
    3902:	00 d0       	rcall	.+0      	; 0x3904 <LCD_Goto+0x6>
    3904:	00 d0       	rcall	.+0      	; 0x3906 <LCD_Goto+0x8>
    3906:	cd b7       	in	r28, 0x3d	; 61
    3908:	de b7       	in	r29, 0x3e	; 62
    390a:	89 83       	std	Y+1, r24	; 0x01
    390c:	6a 83       	std	Y+2, r22	; 0x02
	 row--;
    390e:	89 81       	ldd	r24, Y+1	; 0x01
    3910:	81 50       	subi	r24, 0x01	; 1
    3912:	89 83       	std	Y+1, r24	; 0x01
	 col--;
    3914:	8a 81       	ldd	r24, Y+2	; 0x02
    3916:	81 50       	subi	r24, 0x01	; 1
    3918:	8a 83       	std	Y+2, r24	; 0x02
	 switch(row)
    391a:	89 81       	ldd	r24, Y+1	; 0x01
    391c:	28 2f       	mov	r18, r24
    391e:	30 e0       	ldi	r19, 0x00	; 0
    3920:	3c 83       	std	Y+4, r19	; 0x04
    3922:	2b 83       	std	Y+3, r18	; 0x03
    3924:	8b 81       	ldd	r24, Y+3	; 0x03
    3926:	9c 81       	ldd	r25, Y+4	; 0x04
    3928:	00 97       	sbiw	r24, 0x00	; 0
    392a:	31 f0       	breq	.+12     	; 0x3938 <LCD_Goto+0x3a>
    392c:	2b 81       	ldd	r18, Y+3	; 0x03
    392e:	3c 81       	ldd	r19, Y+4	; 0x04
    3930:	21 30       	cpi	r18, 0x01	; 1
    3932:	31 05       	cpc	r19, r1
    3934:	31 f0       	breq	.+12     	; 0x3942 <LCD_Goto+0x44>
    3936:	09 c0       	rjmp	.+18     	; 0x394a <LCD_Goto+0x4c>
	 {
	 case 0: LCD_WriteInst(0x80+col);break;
    3938:	8a 81       	ldd	r24, Y+2	; 0x02
    393a:	80 58       	subi	r24, 0x80	; 128
    393c:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
    3940:	04 c0       	rjmp	.+8      	; 0x394a <LCD_Goto+0x4c>
	 case 1: LCD_WriteInst(0xc0+col);break;
    3942:	8a 81       	ldd	r24, Y+2	; 0x02
    3944:	80 54       	subi	r24, 0x40	; 64
    3946:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
	 }
	}
    394a:	0f 90       	pop	r0
    394c:	0f 90       	pop	r0
    394e:	0f 90       	pop	r0
    3950:	0f 90       	pop	r0
    3952:	cf 91       	pop	r28
    3954:	df 91       	pop	r29
    3956:	08 95       	ret

00003958 <LCD_PrintNumber>:
void LCD_PrintNumber(uint64 num)
{
    3958:	af 92       	push	r10
    395a:	bf 92       	push	r11
    395c:	cf 92       	push	r12
    395e:	df 92       	push	r13
    3960:	ef 92       	push	r14
    3962:	ff 92       	push	r15
    3964:	0f 93       	push	r16
    3966:	1f 93       	push	r17
    3968:	df 93       	push	r29
    396a:	cf 93       	push	r28
    396c:	cd b7       	in	r28, 0x3d	; 61
    396e:	de b7       	in	r29, 0x3e	; 62
    3970:	c6 56       	subi	r28, 0x66	; 102
    3972:	d0 40       	sbci	r29, 0x00	; 0
    3974:	0f b6       	in	r0, 0x3f	; 63
    3976:	f8 94       	cli
    3978:	de bf       	out	0x3e, r29	; 62
    397a:	0f be       	out	0x3f, r0	; 63
    397c:	cd bf       	out	0x3d, r28	; 61
    397e:	29 87       	std	Y+9, r18	; 0x09
    3980:	3a 87       	std	Y+10, r19	; 0x0a
    3982:	4b 87       	std	Y+11, r20	; 0x0b
    3984:	5c 87       	std	Y+12, r21	; 0x0c
    3986:	6d 87       	std	Y+13, r22	; 0x0d
    3988:	7e 87       	std	Y+14, r23	; 0x0e
    398a:	8f 87       	std	Y+15, r24	; 0x0f
    398c:	98 8b       	std	Y+16, r25	; 0x10
	uint64 reverse= 1;
    398e:	81 e0       	ldi	r24, 0x01	; 1
    3990:	89 83       	std	Y+1, r24	; 0x01
    3992:	1a 82       	std	Y+2, r1	; 0x02
    3994:	1b 82       	std	Y+3, r1	; 0x03
    3996:	1c 82       	std	Y+4, r1	; 0x04
    3998:	1d 82       	std	Y+5, r1	; 0x05
    399a:	1e 82       	std	Y+6, r1	; 0x06
    399c:	1f 82       	std	Y+7, r1	; 0x07
    399e:	18 86       	std	Y+8, r1	; 0x08
    39a0:	5e c3       	rjmp	.+1724   	; 0x405e <LCD_PrintNumber+0x706>
	    while (num > 0) //123
	    {
	        reverse= (reverse * 10) + num % 10;
    39a2:	29 81       	ldd	r18, Y+1	; 0x01
    39a4:	3a 81       	ldd	r19, Y+2	; 0x02
    39a6:	4b 81       	ldd	r20, Y+3	; 0x03
    39a8:	5c 81       	ldd	r21, Y+4	; 0x04
    39aa:	6d 81       	ldd	r22, Y+5	; 0x05
    39ac:	7e 81       	ldd	r23, Y+6	; 0x06
    39ae:	8f 81       	ldd	r24, Y+7	; 0x07
    39b0:	98 85       	ldd	r25, Y+8	; 0x08
    39b2:	a2 2e       	mov	r10, r18
    39b4:	b3 2e       	mov	r11, r19
    39b6:	c4 2e       	mov	r12, r20
    39b8:	d5 2e       	mov	r13, r21
    39ba:	e6 2e       	mov	r14, r22
    39bc:	f7 2e       	mov	r15, r23
    39be:	08 2f       	mov	r16, r24
    39c0:	19 2f       	mov	r17, r25
    39c2:	2a 2d       	mov	r18, r10
    39c4:	3b 2d       	mov	r19, r11
    39c6:	4c 2d       	mov	r20, r12
    39c8:	5d 2d       	mov	r21, r13
    39ca:	6e 2d       	mov	r22, r14
    39cc:	7f 2d       	mov	r23, r15
    39ce:	80 2f       	mov	r24, r16
    39d0:	91 2f       	mov	r25, r17
    39d2:	01 e0       	ldi	r16, 0x01	; 1
    39d4:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    39d8:	29 a3       	std	Y+33, r18	; 0x21
    39da:	3a a3       	std	Y+34, r19	; 0x22
    39dc:	4b a3       	std	Y+35, r20	; 0x23
    39de:	5c a3       	std	Y+36, r21	; 0x24
    39e0:	6d a3       	std	Y+37, r22	; 0x25
    39e2:	7e a3       	std	Y+38, r23	; 0x26
    39e4:	8f a3       	std	Y+39, r24	; 0x27
    39e6:	98 a7       	std	Y+40, r25	; 0x28
    39e8:	29 a1       	ldd	r18, Y+33	; 0x21
    39ea:	3a a1       	ldd	r19, Y+34	; 0x22
    39ec:	4b a1       	ldd	r20, Y+35	; 0x23
    39ee:	5c a1       	ldd	r21, Y+36	; 0x24
    39f0:	6d a1       	ldd	r22, Y+37	; 0x25
    39f2:	7e a1       	ldd	r23, Y+38	; 0x26
    39f4:	8f a1       	ldd	r24, Y+39	; 0x27
    39f6:	98 a5       	ldd	r25, Y+40	; 0x28
    39f8:	02 e0       	ldi	r16, 0x02	; 2
    39fa:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    39fe:	29 a7       	std	Y+41, r18	; 0x29
    3a00:	3a a7       	std	Y+42, r19	; 0x2a
    3a02:	4b a7       	std	Y+43, r20	; 0x2b
    3a04:	5c a7       	std	Y+44, r21	; 0x2c
    3a06:	6d a7       	std	Y+45, r22	; 0x2d
    3a08:	7e a7       	std	Y+46, r23	; 0x2e
    3a0a:	8f a7       	std	Y+47, r24	; 0x2f
    3a0c:	98 ab       	std	Y+48, r25	; 0x30
    3a0e:	89 a1       	ldd	r24, Y+33	; 0x21
    3a10:	99 a5       	ldd	r25, Y+41	; 0x29
    3a12:	89 0f       	add	r24, r25
    3a14:	89 ab       	std	Y+49, r24	; 0x31
    3a16:	81 e0       	ldi	r24, 0x01	; 1
    3a18:	89 af       	std	Y+57, r24	; 0x39
    3a1a:	99 a9       	ldd	r25, Y+49	; 0x31
    3a1c:	89 a1       	ldd	r24, Y+33	; 0x21
    3a1e:	98 17       	cp	r25, r24
    3a20:	08 f0       	brcs	.+2      	; 0x3a24 <LCD_PrintNumber+0xcc>
    3a22:	19 ae       	std	Y+57, r1	; 0x39
    3a24:	9a a1       	ldd	r25, Y+34	; 0x22
    3a26:	8a a5       	ldd	r24, Y+42	; 0x2a
    3a28:	98 0f       	add	r25, r24
    3a2a:	9a ab       	std	Y+50, r25	; 0x32
    3a2c:	91 e0       	ldi	r25, 0x01	; 1
    3a2e:	9a af       	std	Y+58, r25	; 0x3a
    3a30:	8a a9       	ldd	r24, Y+50	; 0x32
    3a32:	9a a1       	ldd	r25, Y+34	; 0x22
    3a34:	89 17       	cp	r24, r25
    3a36:	08 f0       	brcs	.+2      	; 0x3a3a <LCD_PrintNumber+0xe2>
    3a38:	1a ae       	std	Y+58, r1	; 0x3a
    3a3a:	89 ad       	ldd	r24, Y+57	; 0x39
    3a3c:	9a a9       	ldd	r25, Y+50	; 0x32
    3a3e:	89 0f       	add	r24, r25
    3a40:	8b af       	std	Y+59, r24	; 0x3b
    3a42:	81 e0       	ldi	r24, 0x01	; 1
    3a44:	8c af       	std	Y+60, r24	; 0x3c
    3a46:	9b ad       	ldd	r25, Y+59	; 0x3b
    3a48:	8a a9       	ldd	r24, Y+50	; 0x32
    3a4a:	98 17       	cp	r25, r24
    3a4c:	08 f0       	brcs	.+2      	; 0x3a50 <LCD_PrintNumber+0xf8>
    3a4e:	1c ae       	std	Y+60, r1	; 0x3c
    3a50:	9a ad       	ldd	r25, Y+58	; 0x3a
    3a52:	8c ad       	ldd	r24, Y+60	; 0x3c
    3a54:	98 2b       	or	r25, r24
    3a56:	9a af       	std	Y+58, r25	; 0x3a
    3a58:	9b ad       	ldd	r25, Y+59	; 0x3b
    3a5a:	9a ab       	std	Y+50, r25	; 0x32
    3a5c:	8b a1       	ldd	r24, Y+35	; 0x23
    3a5e:	9b a5       	ldd	r25, Y+43	; 0x2b
    3a60:	89 0f       	add	r24, r25
    3a62:	8b ab       	std	Y+51, r24	; 0x33
    3a64:	81 e0       	ldi	r24, 0x01	; 1
    3a66:	8d af       	std	Y+61, r24	; 0x3d
    3a68:	9b a9       	ldd	r25, Y+51	; 0x33
    3a6a:	8b a1       	ldd	r24, Y+35	; 0x23
    3a6c:	98 17       	cp	r25, r24
    3a6e:	08 f0       	brcs	.+2      	; 0x3a72 <LCD_PrintNumber+0x11a>
    3a70:	1d ae       	std	Y+61, r1	; 0x3d
    3a72:	9a ad       	ldd	r25, Y+58	; 0x3a
    3a74:	8b a9       	ldd	r24, Y+51	; 0x33
    3a76:	98 0f       	add	r25, r24
    3a78:	9e af       	std	Y+62, r25	; 0x3e
    3a7a:	91 e0       	ldi	r25, 0x01	; 1
    3a7c:	9f af       	std	Y+63, r25	; 0x3f
    3a7e:	8e ad       	ldd	r24, Y+62	; 0x3e
    3a80:	9b a9       	ldd	r25, Y+51	; 0x33
    3a82:	89 17       	cp	r24, r25
    3a84:	08 f0       	brcs	.+2      	; 0x3a88 <LCD_PrintNumber+0x130>
    3a86:	1f ae       	std	Y+63, r1	; 0x3f
    3a88:	8d ad       	ldd	r24, Y+61	; 0x3d
    3a8a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a8c:	89 2b       	or	r24, r25
    3a8e:	8d af       	std	Y+61, r24	; 0x3d
    3a90:	8e ad       	ldd	r24, Y+62	; 0x3e
    3a92:	8b ab       	std	Y+51, r24	; 0x33
    3a94:	9c a1       	ldd	r25, Y+36	; 0x24
    3a96:	8c a5       	ldd	r24, Y+44	; 0x2c
    3a98:	98 0f       	add	r25, r24
    3a9a:	9c ab       	std	Y+52, r25	; 0x34
    3a9c:	91 e0       	ldi	r25, 0x01	; 1
    3a9e:	21 96       	adiw	r28, 0x01	; 1
    3aa0:	9f af       	std	Y+63, r25	; 0x3f
    3aa2:	21 97       	sbiw	r28, 0x01	; 1
    3aa4:	8c a9       	ldd	r24, Y+52	; 0x34
    3aa6:	9c a1       	ldd	r25, Y+36	; 0x24
    3aa8:	89 17       	cp	r24, r25
    3aaa:	18 f0       	brcs	.+6      	; 0x3ab2 <LCD_PrintNumber+0x15a>
    3aac:	21 96       	adiw	r28, 0x01	; 1
    3aae:	1f ae       	std	Y+63, r1	; 0x3f
    3ab0:	21 97       	sbiw	r28, 0x01	; 1
    3ab2:	8d ad       	ldd	r24, Y+61	; 0x3d
    3ab4:	9c a9       	ldd	r25, Y+52	; 0x34
    3ab6:	89 0f       	add	r24, r25
    3ab8:	22 96       	adiw	r28, 0x02	; 2
    3aba:	8f af       	std	Y+63, r24	; 0x3f
    3abc:	22 97       	sbiw	r28, 0x02	; 2
    3abe:	81 e0       	ldi	r24, 0x01	; 1
    3ac0:	23 96       	adiw	r28, 0x03	; 3
    3ac2:	8f af       	std	Y+63, r24	; 0x3f
    3ac4:	23 97       	sbiw	r28, 0x03	; 3
    3ac6:	22 96       	adiw	r28, 0x02	; 2
    3ac8:	9f ad       	ldd	r25, Y+63	; 0x3f
    3aca:	22 97       	sbiw	r28, 0x02	; 2
    3acc:	8c a9       	ldd	r24, Y+52	; 0x34
    3ace:	98 17       	cp	r25, r24
    3ad0:	18 f0       	brcs	.+6      	; 0x3ad8 <LCD_PrintNumber+0x180>
    3ad2:	23 96       	adiw	r28, 0x03	; 3
    3ad4:	1f ae       	std	Y+63, r1	; 0x3f
    3ad6:	23 97       	sbiw	r28, 0x03	; 3
    3ad8:	21 96       	adiw	r28, 0x01	; 1
    3ada:	9f ad       	ldd	r25, Y+63	; 0x3f
    3adc:	21 97       	sbiw	r28, 0x01	; 1
    3ade:	23 96       	adiw	r28, 0x03	; 3
    3ae0:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ae2:	23 97       	sbiw	r28, 0x03	; 3
    3ae4:	98 2b       	or	r25, r24
    3ae6:	21 96       	adiw	r28, 0x01	; 1
    3ae8:	9f af       	std	Y+63, r25	; 0x3f
    3aea:	21 97       	sbiw	r28, 0x01	; 1
    3aec:	22 96       	adiw	r28, 0x02	; 2
    3aee:	9f ad       	ldd	r25, Y+63	; 0x3f
    3af0:	22 97       	sbiw	r28, 0x02	; 2
    3af2:	9c ab       	std	Y+52, r25	; 0x34
    3af4:	8d a1       	ldd	r24, Y+37	; 0x25
    3af6:	9d a5       	ldd	r25, Y+45	; 0x2d
    3af8:	89 0f       	add	r24, r25
    3afa:	8d ab       	std	Y+53, r24	; 0x35
    3afc:	81 e0       	ldi	r24, 0x01	; 1
    3afe:	24 96       	adiw	r28, 0x04	; 4
    3b00:	8f af       	std	Y+63, r24	; 0x3f
    3b02:	24 97       	sbiw	r28, 0x04	; 4
    3b04:	9d a9       	ldd	r25, Y+53	; 0x35
    3b06:	8d a1       	ldd	r24, Y+37	; 0x25
    3b08:	98 17       	cp	r25, r24
    3b0a:	18 f0       	brcs	.+6      	; 0x3b12 <LCD_PrintNumber+0x1ba>
    3b0c:	24 96       	adiw	r28, 0x04	; 4
    3b0e:	1f ae       	std	Y+63, r1	; 0x3f
    3b10:	24 97       	sbiw	r28, 0x04	; 4
    3b12:	21 96       	adiw	r28, 0x01	; 1
    3b14:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b16:	21 97       	sbiw	r28, 0x01	; 1
    3b18:	8d a9       	ldd	r24, Y+53	; 0x35
    3b1a:	98 0f       	add	r25, r24
    3b1c:	25 96       	adiw	r28, 0x05	; 5
    3b1e:	9f af       	std	Y+63, r25	; 0x3f
    3b20:	25 97       	sbiw	r28, 0x05	; 5
    3b22:	91 e0       	ldi	r25, 0x01	; 1
    3b24:	26 96       	adiw	r28, 0x06	; 6
    3b26:	9f af       	std	Y+63, r25	; 0x3f
    3b28:	26 97       	sbiw	r28, 0x06	; 6
    3b2a:	25 96       	adiw	r28, 0x05	; 5
    3b2c:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b2e:	25 97       	sbiw	r28, 0x05	; 5
    3b30:	9d a9       	ldd	r25, Y+53	; 0x35
    3b32:	89 17       	cp	r24, r25
    3b34:	18 f0       	brcs	.+6      	; 0x3b3c <LCD_PrintNumber+0x1e4>
    3b36:	26 96       	adiw	r28, 0x06	; 6
    3b38:	1f ae       	std	Y+63, r1	; 0x3f
    3b3a:	26 97       	sbiw	r28, 0x06	; 6
    3b3c:	24 96       	adiw	r28, 0x04	; 4
    3b3e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b40:	24 97       	sbiw	r28, 0x04	; 4
    3b42:	26 96       	adiw	r28, 0x06	; 6
    3b44:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b46:	26 97       	sbiw	r28, 0x06	; 6
    3b48:	89 2b       	or	r24, r25
    3b4a:	24 96       	adiw	r28, 0x04	; 4
    3b4c:	8f af       	std	Y+63, r24	; 0x3f
    3b4e:	24 97       	sbiw	r28, 0x04	; 4
    3b50:	25 96       	adiw	r28, 0x05	; 5
    3b52:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b54:	25 97       	sbiw	r28, 0x05	; 5
    3b56:	8d ab       	std	Y+53, r24	; 0x35
    3b58:	9e a1       	ldd	r25, Y+38	; 0x26
    3b5a:	8e a5       	ldd	r24, Y+46	; 0x2e
    3b5c:	98 0f       	add	r25, r24
    3b5e:	9e ab       	std	Y+54, r25	; 0x36
    3b60:	91 e0       	ldi	r25, 0x01	; 1
    3b62:	27 96       	adiw	r28, 0x07	; 7
    3b64:	9f af       	std	Y+63, r25	; 0x3f
    3b66:	27 97       	sbiw	r28, 0x07	; 7
    3b68:	8e a9       	ldd	r24, Y+54	; 0x36
    3b6a:	9e a1       	ldd	r25, Y+38	; 0x26
    3b6c:	89 17       	cp	r24, r25
    3b6e:	18 f0       	brcs	.+6      	; 0x3b76 <LCD_PrintNumber+0x21e>
    3b70:	27 96       	adiw	r28, 0x07	; 7
    3b72:	1f ae       	std	Y+63, r1	; 0x3f
    3b74:	27 97       	sbiw	r28, 0x07	; 7
    3b76:	24 96       	adiw	r28, 0x04	; 4
    3b78:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b7a:	24 97       	sbiw	r28, 0x04	; 4
    3b7c:	9e a9       	ldd	r25, Y+54	; 0x36
    3b7e:	89 0f       	add	r24, r25
    3b80:	28 96       	adiw	r28, 0x08	; 8
    3b82:	8f af       	std	Y+63, r24	; 0x3f
    3b84:	28 97       	sbiw	r28, 0x08	; 8
    3b86:	81 e0       	ldi	r24, 0x01	; 1
    3b88:	29 96       	adiw	r28, 0x09	; 9
    3b8a:	8f af       	std	Y+63, r24	; 0x3f
    3b8c:	29 97       	sbiw	r28, 0x09	; 9
    3b8e:	28 96       	adiw	r28, 0x08	; 8
    3b90:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b92:	28 97       	sbiw	r28, 0x08	; 8
    3b94:	8e a9       	ldd	r24, Y+54	; 0x36
    3b96:	98 17       	cp	r25, r24
    3b98:	18 f0       	brcs	.+6      	; 0x3ba0 <LCD_PrintNumber+0x248>
    3b9a:	29 96       	adiw	r28, 0x09	; 9
    3b9c:	1f ae       	std	Y+63, r1	; 0x3f
    3b9e:	29 97       	sbiw	r28, 0x09	; 9
    3ba0:	27 96       	adiw	r28, 0x07	; 7
    3ba2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ba4:	27 97       	sbiw	r28, 0x07	; 7
    3ba6:	29 96       	adiw	r28, 0x09	; 9
    3ba8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3baa:	29 97       	sbiw	r28, 0x09	; 9
    3bac:	98 2b       	or	r25, r24
    3bae:	27 96       	adiw	r28, 0x07	; 7
    3bb0:	9f af       	std	Y+63, r25	; 0x3f
    3bb2:	27 97       	sbiw	r28, 0x07	; 7
    3bb4:	28 96       	adiw	r28, 0x08	; 8
    3bb6:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bb8:	28 97       	sbiw	r28, 0x08	; 8
    3bba:	9e ab       	std	Y+54, r25	; 0x36
    3bbc:	8f a1       	ldd	r24, Y+39	; 0x27
    3bbe:	9f a5       	ldd	r25, Y+47	; 0x2f
    3bc0:	89 0f       	add	r24, r25
    3bc2:	8f ab       	std	Y+55, r24	; 0x37
    3bc4:	81 e0       	ldi	r24, 0x01	; 1
    3bc6:	2a 96       	adiw	r28, 0x0a	; 10
    3bc8:	8f af       	std	Y+63, r24	; 0x3f
    3bca:	2a 97       	sbiw	r28, 0x0a	; 10
    3bcc:	9f a9       	ldd	r25, Y+55	; 0x37
    3bce:	8f a1       	ldd	r24, Y+39	; 0x27
    3bd0:	98 17       	cp	r25, r24
    3bd2:	18 f0       	brcs	.+6      	; 0x3bda <LCD_PrintNumber+0x282>
    3bd4:	2a 96       	adiw	r28, 0x0a	; 10
    3bd6:	1f ae       	std	Y+63, r1	; 0x3f
    3bd8:	2a 97       	sbiw	r28, 0x0a	; 10
    3bda:	27 96       	adiw	r28, 0x07	; 7
    3bdc:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bde:	27 97       	sbiw	r28, 0x07	; 7
    3be0:	8f a9       	ldd	r24, Y+55	; 0x37
    3be2:	98 0f       	add	r25, r24
    3be4:	2b 96       	adiw	r28, 0x0b	; 11
    3be6:	9f af       	std	Y+63, r25	; 0x3f
    3be8:	2b 97       	sbiw	r28, 0x0b	; 11
    3bea:	91 e0       	ldi	r25, 0x01	; 1
    3bec:	2c 96       	adiw	r28, 0x0c	; 12
    3bee:	9f af       	std	Y+63, r25	; 0x3f
    3bf0:	2c 97       	sbiw	r28, 0x0c	; 12
    3bf2:	2b 96       	adiw	r28, 0x0b	; 11
    3bf4:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bf6:	2b 97       	sbiw	r28, 0x0b	; 11
    3bf8:	9f a9       	ldd	r25, Y+55	; 0x37
    3bfa:	89 17       	cp	r24, r25
    3bfc:	18 f0       	brcs	.+6      	; 0x3c04 <LCD_PrintNumber+0x2ac>
    3bfe:	2c 96       	adiw	r28, 0x0c	; 12
    3c00:	1f ae       	std	Y+63, r1	; 0x3f
    3c02:	2c 97       	sbiw	r28, 0x0c	; 12
    3c04:	2a 96       	adiw	r28, 0x0a	; 10
    3c06:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c08:	2a 97       	sbiw	r28, 0x0a	; 10
    3c0a:	2c 96       	adiw	r28, 0x0c	; 12
    3c0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c0e:	2c 97       	sbiw	r28, 0x0c	; 12
    3c10:	89 2b       	or	r24, r25
    3c12:	2a 96       	adiw	r28, 0x0a	; 10
    3c14:	8f af       	std	Y+63, r24	; 0x3f
    3c16:	2a 97       	sbiw	r28, 0x0a	; 10
    3c18:	2b 96       	adiw	r28, 0x0b	; 11
    3c1a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c1c:	2b 97       	sbiw	r28, 0x0b	; 11
    3c1e:	8f ab       	std	Y+55, r24	; 0x37
    3c20:	98 a5       	ldd	r25, Y+40	; 0x28
    3c22:	88 a9       	ldd	r24, Y+48	; 0x30
    3c24:	98 0f       	add	r25, r24
    3c26:	98 af       	std	Y+56, r25	; 0x38
    3c28:	2a 96       	adiw	r28, 0x0a	; 10
    3c2a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c2c:	2a 97       	sbiw	r28, 0x0a	; 10
    3c2e:	98 ad       	ldd	r25, Y+56	; 0x38
    3c30:	89 0f       	add	r24, r25
    3c32:	88 af       	std	Y+56, r24	; 0x38
    3c34:	89 a9       	ldd	r24, Y+49	; 0x31
    3c36:	89 8f       	std	Y+25, r24	; 0x19
    3c38:	9a a9       	ldd	r25, Y+50	; 0x32
    3c3a:	9a 8f       	std	Y+26, r25	; 0x1a
    3c3c:	8b a9       	ldd	r24, Y+51	; 0x33
    3c3e:	8b 8f       	std	Y+27, r24	; 0x1b
    3c40:	9c a9       	ldd	r25, Y+52	; 0x34
    3c42:	9c 8f       	std	Y+28, r25	; 0x1c
    3c44:	8d a9       	ldd	r24, Y+53	; 0x35
    3c46:	8d 8f       	std	Y+29, r24	; 0x1d
    3c48:	9e a9       	ldd	r25, Y+54	; 0x36
    3c4a:	9e 8f       	std	Y+30, r25	; 0x1e
    3c4c:	8f a9       	ldd	r24, Y+55	; 0x37
    3c4e:	8f 8f       	std	Y+31, r24	; 0x1f
    3c50:	98 ad       	ldd	r25, Y+56	; 0x38
    3c52:	98 a3       	std	Y+32, r25	; 0x20
    3c54:	a9 84       	ldd	r10, Y+9	; 0x09
    3c56:	ba 84       	ldd	r11, Y+10	; 0x0a
    3c58:	cb 84       	ldd	r12, Y+11	; 0x0b
    3c5a:	dc 84       	ldd	r13, Y+12	; 0x0c
    3c5c:	ed 84       	ldd	r14, Y+13	; 0x0d
    3c5e:	fe 84       	ldd	r15, Y+14	; 0x0e
    3c60:	0f 85       	ldd	r16, Y+15	; 0x0f
    3c62:	18 89       	ldd	r17, Y+16	; 0x10
    3c64:	2a 2d       	mov	r18, r10
    3c66:	3b 2d       	mov	r19, r11
    3c68:	4c 2d       	mov	r20, r12
    3c6a:	5d 2d       	mov	r21, r13
    3c6c:	6e 2d       	mov	r22, r14
    3c6e:	7f 2d       	mov	r23, r15
    3c70:	80 2f       	mov	r24, r16
    3c72:	91 2f       	mov	r25, r17
    3c74:	0f 2e       	mov	r0, r31
    3c76:	fa e0       	ldi	r31, 0x0A	; 10
    3c78:	af 2e       	mov	r10, r31
    3c7a:	f0 2d       	mov	r31, r0
    3c7c:	bb 24       	eor	r11, r11
    3c7e:	cc 24       	eor	r12, r12
    3c80:	dd 24       	eor	r13, r13
    3c82:	ee 24       	eor	r14, r14
    3c84:	ff 24       	eor	r15, r15
    3c86:	00 e0       	ldi	r16, 0x00	; 0
    3c88:	10 e0       	ldi	r17, 0x00	; 0
    3c8a:	0e 94 45 08 	call	0x108a	; 0x108a <__umoddi3>
    3c8e:	a2 2e       	mov	r10, r18
    3c90:	b3 2e       	mov	r11, r19
    3c92:	c4 2e       	mov	r12, r20
    3c94:	d5 2e       	mov	r13, r21
    3c96:	e6 2e       	mov	r14, r22
    3c98:	f7 2e       	mov	r15, r23
    3c9a:	08 2f       	mov	r16, r24
    3c9c:	19 2f       	mov	r17, r25
    3c9e:	a9 8a       	std	Y+17, r10	; 0x11
    3ca0:	ba 8a       	std	Y+18, r11	; 0x12
    3ca2:	cb 8a       	std	Y+19, r12	; 0x13
    3ca4:	dc 8a       	std	Y+20, r13	; 0x14
    3ca6:	ed 8a       	std	Y+21, r14	; 0x15
    3ca8:	fe 8a       	std	Y+22, r15	; 0x16
    3caa:	0f 8b       	std	Y+23, r16	; 0x17
    3cac:	18 8f       	std	Y+24, r17	; 0x18
    3cae:	89 8d       	ldd	r24, Y+25	; 0x19
    3cb0:	99 89       	ldd	r25, Y+17	; 0x11
    3cb2:	89 0f       	add	r24, r25
    3cb4:	2d 96       	adiw	r28, 0x0d	; 13
    3cb6:	8f af       	std	Y+63, r24	; 0x3f
    3cb8:	2d 97       	sbiw	r28, 0x0d	; 13
    3cba:	81 e0       	ldi	r24, 0x01	; 1
    3cbc:	65 96       	adiw	r28, 0x15	; 21
    3cbe:	8f af       	std	Y+63, r24	; 0x3f
    3cc0:	65 97       	sbiw	r28, 0x15	; 21
    3cc2:	2d 96       	adiw	r28, 0x0d	; 13
    3cc4:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cc6:	2d 97       	sbiw	r28, 0x0d	; 13
    3cc8:	89 8d       	ldd	r24, Y+25	; 0x19
    3cca:	98 17       	cp	r25, r24
    3ccc:	18 f0       	brcs	.+6      	; 0x3cd4 <LCD_PrintNumber+0x37c>
    3cce:	65 96       	adiw	r28, 0x15	; 21
    3cd0:	1f ae       	std	Y+63, r1	; 0x3f
    3cd2:	65 97       	sbiw	r28, 0x15	; 21
    3cd4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3cd6:	8a 89       	ldd	r24, Y+18	; 0x12
    3cd8:	98 0f       	add	r25, r24
    3cda:	2e 96       	adiw	r28, 0x0e	; 14
    3cdc:	9f af       	std	Y+63, r25	; 0x3f
    3cde:	2e 97       	sbiw	r28, 0x0e	; 14
    3ce0:	91 e0       	ldi	r25, 0x01	; 1
    3ce2:	66 96       	adiw	r28, 0x16	; 22
    3ce4:	9f af       	std	Y+63, r25	; 0x3f
    3ce6:	66 97       	sbiw	r28, 0x16	; 22
    3ce8:	2e 96       	adiw	r28, 0x0e	; 14
    3cea:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cec:	2e 97       	sbiw	r28, 0x0e	; 14
    3cee:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3cf0:	89 17       	cp	r24, r25
    3cf2:	18 f0       	brcs	.+6      	; 0x3cfa <LCD_PrintNumber+0x3a2>
    3cf4:	66 96       	adiw	r28, 0x16	; 22
    3cf6:	1f ae       	std	Y+63, r1	; 0x3f
    3cf8:	66 97       	sbiw	r28, 0x16	; 22
    3cfa:	65 96       	adiw	r28, 0x15	; 21
    3cfc:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cfe:	65 97       	sbiw	r28, 0x15	; 21
    3d00:	2e 96       	adiw	r28, 0x0e	; 14
    3d02:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d04:	2e 97       	sbiw	r28, 0x0e	; 14
    3d06:	89 0f       	add	r24, r25
    3d08:	67 96       	adiw	r28, 0x17	; 23
    3d0a:	8f af       	std	Y+63, r24	; 0x3f
    3d0c:	67 97       	sbiw	r28, 0x17	; 23
    3d0e:	81 e0       	ldi	r24, 0x01	; 1
    3d10:	68 96       	adiw	r28, 0x18	; 24
    3d12:	8f af       	std	Y+63, r24	; 0x3f
    3d14:	68 97       	sbiw	r28, 0x18	; 24
    3d16:	67 96       	adiw	r28, 0x17	; 23
    3d18:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d1a:	67 97       	sbiw	r28, 0x17	; 23
    3d1c:	2e 96       	adiw	r28, 0x0e	; 14
    3d1e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d20:	2e 97       	sbiw	r28, 0x0e	; 14
    3d22:	98 17       	cp	r25, r24
    3d24:	18 f0       	brcs	.+6      	; 0x3d2c <LCD_PrintNumber+0x3d4>
    3d26:	68 96       	adiw	r28, 0x18	; 24
    3d28:	1f ae       	std	Y+63, r1	; 0x3f
    3d2a:	68 97       	sbiw	r28, 0x18	; 24
    3d2c:	66 96       	adiw	r28, 0x16	; 22
    3d2e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d30:	66 97       	sbiw	r28, 0x16	; 22
    3d32:	68 96       	adiw	r28, 0x18	; 24
    3d34:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d36:	68 97       	sbiw	r28, 0x18	; 24
    3d38:	98 2b       	or	r25, r24
    3d3a:	66 96       	adiw	r28, 0x16	; 22
    3d3c:	9f af       	std	Y+63, r25	; 0x3f
    3d3e:	66 97       	sbiw	r28, 0x16	; 22
    3d40:	67 96       	adiw	r28, 0x17	; 23
    3d42:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d44:	67 97       	sbiw	r28, 0x17	; 23
    3d46:	2e 96       	adiw	r28, 0x0e	; 14
    3d48:	9f af       	std	Y+63, r25	; 0x3f
    3d4a:	2e 97       	sbiw	r28, 0x0e	; 14
    3d4c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3d4e:	9b 89       	ldd	r25, Y+19	; 0x13
    3d50:	89 0f       	add	r24, r25
    3d52:	2f 96       	adiw	r28, 0x0f	; 15
    3d54:	8f af       	std	Y+63, r24	; 0x3f
    3d56:	2f 97       	sbiw	r28, 0x0f	; 15
    3d58:	81 e0       	ldi	r24, 0x01	; 1
    3d5a:	69 96       	adiw	r28, 0x19	; 25
    3d5c:	8f af       	std	Y+63, r24	; 0x3f
    3d5e:	69 97       	sbiw	r28, 0x19	; 25
    3d60:	2f 96       	adiw	r28, 0x0f	; 15
    3d62:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d64:	2f 97       	sbiw	r28, 0x0f	; 15
    3d66:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3d68:	98 17       	cp	r25, r24
    3d6a:	18 f0       	brcs	.+6      	; 0x3d72 <LCD_PrintNumber+0x41a>
    3d6c:	69 96       	adiw	r28, 0x19	; 25
    3d6e:	1f ae       	std	Y+63, r1	; 0x3f
    3d70:	69 97       	sbiw	r28, 0x19	; 25
    3d72:	66 96       	adiw	r28, 0x16	; 22
    3d74:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d76:	66 97       	sbiw	r28, 0x16	; 22
    3d78:	2f 96       	adiw	r28, 0x0f	; 15
    3d7a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d7c:	2f 97       	sbiw	r28, 0x0f	; 15
    3d7e:	98 0f       	add	r25, r24
    3d80:	6a 96       	adiw	r28, 0x1a	; 26
    3d82:	9f af       	std	Y+63, r25	; 0x3f
    3d84:	6a 97       	sbiw	r28, 0x1a	; 26
    3d86:	91 e0       	ldi	r25, 0x01	; 1
    3d88:	6b 96       	adiw	r28, 0x1b	; 27
    3d8a:	9f af       	std	Y+63, r25	; 0x3f
    3d8c:	6b 97       	sbiw	r28, 0x1b	; 27
    3d8e:	6a 96       	adiw	r28, 0x1a	; 26
    3d90:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d92:	6a 97       	sbiw	r28, 0x1a	; 26
    3d94:	2f 96       	adiw	r28, 0x0f	; 15
    3d96:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d98:	2f 97       	sbiw	r28, 0x0f	; 15
    3d9a:	89 17       	cp	r24, r25
    3d9c:	18 f0       	brcs	.+6      	; 0x3da4 <LCD_PrintNumber+0x44c>
    3d9e:	6b 96       	adiw	r28, 0x1b	; 27
    3da0:	1f ae       	std	Y+63, r1	; 0x3f
    3da2:	6b 97       	sbiw	r28, 0x1b	; 27
    3da4:	69 96       	adiw	r28, 0x19	; 25
    3da6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3da8:	69 97       	sbiw	r28, 0x19	; 25
    3daa:	6b 96       	adiw	r28, 0x1b	; 27
    3dac:	9f ad       	ldd	r25, Y+63	; 0x3f
    3dae:	6b 97       	sbiw	r28, 0x1b	; 27
    3db0:	89 2b       	or	r24, r25
    3db2:	69 96       	adiw	r28, 0x19	; 25
    3db4:	8f af       	std	Y+63, r24	; 0x3f
    3db6:	69 97       	sbiw	r28, 0x19	; 25
    3db8:	6a 96       	adiw	r28, 0x1a	; 26
    3dba:	8f ad       	ldd	r24, Y+63	; 0x3f
    3dbc:	6a 97       	sbiw	r28, 0x1a	; 26
    3dbe:	2f 96       	adiw	r28, 0x0f	; 15
    3dc0:	8f af       	std	Y+63, r24	; 0x3f
    3dc2:	2f 97       	sbiw	r28, 0x0f	; 15
    3dc4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3dc6:	8c 89       	ldd	r24, Y+20	; 0x14
    3dc8:	98 0f       	add	r25, r24
    3dca:	60 96       	adiw	r28, 0x10	; 16
    3dcc:	9f af       	std	Y+63, r25	; 0x3f
    3dce:	60 97       	sbiw	r28, 0x10	; 16
    3dd0:	91 e0       	ldi	r25, 0x01	; 1
    3dd2:	6c 96       	adiw	r28, 0x1c	; 28
    3dd4:	9f af       	std	Y+63, r25	; 0x3f
    3dd6:	6c 97       	sbiw	r28, 0x1c	; 28
    3dd8:	60 96       	adiw	r28, 0x10	; 16
    3dda:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ddc:	60 97       	sbiw	r28, 0x10	; 16
    3dde:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3de0:	89 17       	cp	r24, r25
    3de2:	18 f0       	brcs	.+6      	; 0x3dea <LCD_PrintNumber+0x492>
    3de4:	6c 96       	adiw	r28, 0x1c	; 28
    3de6:	1f ae       	std	Y+63, r1	; 0x3f
    3de8:	6c 97       	sbiw	r28, 0x1c	; 28
    3dea:	69 96       	adiw	r28, 0x19	; 25
    3dec:	8f ad       	ldd	r24, Y+63	; 0x3f
    3dee:	69 97       	sbiw	r28, 0x19	; 25
    3df0:	60 96       	adiw	r28, 0x10	; 16
    3df2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3df4:	60 97       	sbiw	r28, 0x10	; 16
    3df6:	89 0f       	add	r24, r25
    3df8:	6d 96       	adiw	r28, 0x1d	; 29
    3dfa:	8f af       	std	Y+63, r24	; 0x3f
    3dfc:	6d 97       	sbiw	r28, 0x1d	; 29
    3dfe:	81 e0       	ldi	r24, 0x01	; 1
    3e00:	6e 96       	adiw	r28, 0x1e	; 30
    3e02:	8f af       	std	Y+63, r24	; 0x3f
    3e04:	6e 97       	sbiw	r28, 0x1e	; 30
    3e06:	6d 96       	adiw	r28, 0x1d	; 29
    3e08:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e0a:	6d 97       	sbiw	r28, 0x1d	; 29
    3e0c:	60 96       	adiw	r28, 0x10	; 16
    3e0e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e10:	60 97       	sbiw	r28, 0x10	; 16
    3e12:	98 17       	cp	r25, r24
    3e14:	18 f0       	brcs	.+6      	; 0x3e1c <LCD_PrintNumber+0x4c4>
    3e16:	6e 96       	adiw	r28, 0x1e	; 30
    3e18:	1f ae       	std	Y+63, r1	; 0x3f
    3e1a:	6e 97       	sbiw	r28, 0x1e	; 30
    3e1c:	6c 96       	adiw	r28, 0x1c	; 28
    3e1e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e20:	6c 97       	sbiw	r28, 0x1c	; 28
    3e22:	6e 96       	adiw	r28, 0x1e	; 30
    3e24:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e26:	6e 97       	sbiw	r28, 0x1e	; 30
    3e28:	98 2b       	or	r25, r24
    3e2a:	6c 96       	adiw	r28, 0x1c	; 28
    3e2c:	9f af       	std	Y+63, r25	; 0x3f
    3e2e:	6c 97       	sbiw	r28, 0x1c	; 28
    3e30:	6d 96       	adiw	r28, 0x1d	; 29
    3e32:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e34:	6d 97       	sbiw	r28, 0x1d	; 29
    3e36:	60 96       	adiw	r28, 0x10	; 16
    3e38:	9f af       	std	Y+63, r25	; 0x3f
    3e3a:	60 97       	sbiw	r28, 0x10	; 16
    3e3c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3e3e:	9d 89       	ldd	r25, Y+21	; 0x15
    3e40:	89 0f       	add	r24, r25
    3e42:	61 96       	adiw	r28, 0x11	; 17
    3e44:	8f af       	std	Y+63, r24	; 0x3f
    3e46:	61 97       	sbiw	r28, 0x11	; 17
    3e48:	81 e0       	ldi	r24, 0x01	; 1
    3e4a:	6f 96       	adiw	r28, 0x1f	; 31
    3e4c:	8f af       	std	Y+63, r24	; 0x3f
    3e4e:	6f 97       	sbiw	r28, 0x1f	; 31
    3e50:	61 96       	adiw	r28, 0x11	; 17
    3e52:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e54:	61 97       	sbiw	r28, 0x11	; 17
    3e56:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3e58:	98 17       	cp	r25, r24
    3e5a:	18 f0       	brcs	.+6      	; 0x3e62 <LCD_PrintNumber+0x50a>
    3e5c:	6f 96       	adiw	r28, 0x1f	; 31
    3e5e:	1f ae       	std	Y+63, r1	; 0x3f
    3e60:	6f 97       	sbiw	r28, 0x1f	; 31
    3e62:	6c 96       	adiw	r28, 0x1c	; 28
    3e64:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e66:	6c 97       	sbiw	r28, 0x1c	; 28
    3e68:	61 96       	adiw	r28, 0x11	; 17
    3e6a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e6c:	61 97       	sbiw	r28, 0x11	; 17
    3e6e:	98 0f       	add	r25, r24
    3e70:	a0 96       	adiw	r28, 0x20	; 32
    3e72:	9f af       	std	Y+63, r25	; 0x3f
    3e74:	a0 97       	sbiw	r28, 0x20	; 32
    3e76:	91 e0       	ldi	r25, 0x01	; 1
    3e78:	a1 96       	adiw	r28, 0x21	; 33
    3e7a:	9f af       	std	Y+63, r25	; 0x3f
    3e7c:	a1 97       	sbiw	r28, 0x21	; 33
    3e7e:	a0 96       	adiw	r28, 0x20	; 32
    3e80:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e82:	a0 97       	sbiw	r28, 0x20	; 32
    3e84:	61 96       	adiw	r28, 0x11	; 17
    3e86:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e88:	61 97       	sbiw	r28, 0x11	; 17
    3e8a:	89 17       	cp	r24, r25
    3e8c:	18 f0       	brcs	.+6      	; 0x3e94 <LCD_PrintNumber+0x53c>
    3e8e:	a1 96       	adiw	r28, 0x21	; 33
    3e90:	1f ae       	std	Y+63, r1	; 0x3f
    3e92:	a1 97       	sbiw	r28, 0x21	; 33
    3e94:	6f 96       	adiw	r28, 0x1f	; 31
    3e96:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e98:	6f 97       	sbiw	r28, 0x1f	; 31
    3e9a:	a1 96       	adiw	r28, 0x21	; 33
    3e9c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e9e:	a1 97       	sbiw	r28, 0x21	; 33
    3ea0:	89 2b       	or	r24, r25
    3ea2:	6f 96       	adiw	r28, 0x1f	; 31
    3ea4:	8f af       	std	Y+63, r24	; 0x3f
    3ea6:	6f 97       	sbiw	r28, 0x1f	; 31
    3ea8:	a0 96       	adiw	r28, 0x20	; 32
    3eaa:	8f ad       	ldd	r24, Y+63	; 0x3f
    3eac:	a0 97       	sbiw	r28, 0x20	; 32
    3eae:	61 96       	adiw	r28, 0x11	; 17
    3eb0:	8f af       	std	Y+63, r24	; 0x3f
    3eb2:	61 97       	sbiw	r28, 0x11	; 17
    3eb4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3eb6:	8e 89       	ldd	r24, Y+22	; 0x16
    3eb8:	98 0f       	add	r25, r24
    3eba:	62 96       	adiw	r28, 0x12	; 18
    3ebc:	9f af       	std	Y+63, r25	; 0x3f
    3ebe:	62 97       	sbiw	r28, 0x12	; 18
    3ec0:	91 e0       	ldi	r25, 0x01	; 1
    3ec2:	a2 96       	adiw	r28, 0x22	; 34
    3ec4:	9f af       	std	Y+63, r25	; 0x3f
    3ec6:	a2 97       	sbiw	r28, 0x22	; 34
    3ec8:	62 96       	adiw	r28, 0x12	; 18
    3eca:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ecc:	62 97       	sbiw	r28, 0x12	; 18
    3ece:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3ed0:	89 17       	cp	r24, r25
    3ed2:	18 f0       	brcs	.+6      	; 0x3eda <LCD_PrintNumber+0x582>
    3ed4:	a2 96       	adiw	r28, 0x22	; 34
    3ed6:	1f ae       	std	Y+63, r1	; 0x3f
    3ed8:	a2 97       	sbiw	r28, 0x22	; 34
    3eda:	6f 96       	adiw	r28, 0x1f	; 31
    3edc:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ede:	6f 97       	sbiw	r28, 0x1f	; 31
    3ee0:	62 96       	adiw	r28, 0x12	; 18
    3ee2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ee4:	62 97       	sbiw	r28, 0x12	; 18
    3ee6:	89 0f       	add	r24, r25
    3ee8:	a3 96       	adiw	r28, 0x23	; 35
    3eea:	8f af       	std	Y+63, r24	; 0x3f
    3eec:	a3 97       	sbiw	r28, 0x23	; 35
    3eee:	81 e0       	ldi	r24, 0x01	; 1
    3ef0:	a4 96       	adiw	r28, 0x24	; 36
    3ef2:	8f af       	std	Y+63, r24	; 0x3f
    3ef4:	a4 97       	sbiw	r28, 0x24	; 36
    3ef6:	a3 96       	adiw	r28, 0x23	; 35
    3ef8:	9f ad       	ldd	r25, Y+63	; 0x3f
    3efa:	a3 97       	sbiw	r28, 0x23	; 35
    3efc:	62 96       	adiw	r28, 0x12	; 18
    3efe:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f00:	62 97       	sbiw	r28, 0x12	; 18
    3f02:	98 17       	cp	r25, r24
    3f04:	18 f0       	brcs	.+6      	; 0x3f0c <LCD_PrintNumber+0x5b4>
    3f06:	a4 96       	adiw	r28, 0x24	; 36
    3f08:	1f ae       	std	Y+63, r1	; 0x3f
    3f0a:	a4 97       	sbiw	r28, 0x24	; 36
    3f0c:	a2 96       	adiw	r28, 0x22	; 34
    3f0e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f10:	a2 97       	sbiw	r28, 0x22	; 34
    3f12:	a4 96       	adiw	r28, 0x24	; 36
    3f14:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f16:	a4 97       	sbiw	r28, 0x24	; 36
    3f18:	98 2b       	or	r25, r24
    3f1a:	a2 96       	adiw	r28, 0x22	; 34
    3f1c:	9f af       	std	Y+63, r25	; 0x3f
    3f1e:	a2 97       	sbiw	r28, 0x22	; 34
    3f20:	a3 96       	adiw	r28, 0x23	; 35
    3f22:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f24:	a3 97       	sbiw	r28, 0x23	; 35
    3f26:	62 96       	adiw	r28, 0x12	; 18
    3f28:	9f af       	std	Y+63, r25	; 0x3f
    3f2a:	62 97       	sbiw	r28, 0x12	; 18
    3f2c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3f2e:	9f 89       	ldd	r25, Y+23	; 0x17
    3f30:	89 0f       	add	r24, r25
    3f32:	63 96       	adiw	r28, 0x13	; 19
    3f34:	8f af       	std	Y+63, r24	; 0x3f
    3f36:	63 97       	sbiw	r28, 0x13	; 19
    3f38:	81 e0       	ldi	r24, 0x01	; 1
    3f3a:	a5 96       	adiw	r28, 0x25	; 37
    3f3c:	8f af       	std	Y+63, r24	; 0x3f
    3f3e:	a5 97       	sbiw	r28, 0x25	; 37
    3f40:	63 96       	adiw	r28, 0x13	; 19
    3f42:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f44:	63 97       	sbiw	r28, 0x13	; 19
    3f46:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3f48:	98 17       	cp	r25, r24
    3f4a:	18 f0       	brcs	.+6      	; 0x3f52 <LCD_PrintNumber+0x5fa>
    3f4c:	a5 96       	adiw	r28, 0x25	; 37
    3f4e:	1f ae       	std	Y+63, r1	; 0x3f
    3f50:	a5 97       	sbiw	r28, 0x25	; 37
    3f52:	a2 96       	adiw	r28, 0x22	; 34
    3f54:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f56:	a2 97       	sbiw	r28, 0x22	; 34
    3f58:	63 96       	adiw	r28, 0x13	; 19
    3f5a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f5c:	63 97       	sbiw	r28, 0x13	; 19
    3f5e:	98 0f       	add	r25, r24
    3f60:	a6 96       	adiw	r28, 0x26	; 38
    3f62:	9f af       	std	Y+63, r25	; 0x3f
    3f64:	a6 97       	sbiw	r28, 0x26	; 38
    3f66:	91 e0       	ldi	r25, 0x01	; 1
    3f68:	a7 96       	adiw	r28, 0x27	; 39
    3f6a:	9f af       	std	Y+63, r25	; 0x3f
    3f6c:	a7 97       	sbiw	r28, 0x27	; 39
    3f6e:	a6 96       	adiw	r28, 0x26	; 38
    3f70:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f72:	a6 97       	sbiw	r28, 0x26	; 38
    3f74:	63 96       	adiw	r28, 0x13	; 19
    3f76:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f78:	63 97       	sbiw	r28, 0x13	; 19
    3f7a:	89 17       	cp	r24, r25
    3f7c:	18 f0       	brcs	.+6      	; 0x3f84 <LCD_PrintNumber+0x62c>
    3f7e:	a7 96       	adiw	r28, 0x27	; 39
    3f80:	1f ae       	std	Y+63, r1	; 0x3f
    3f82:	a7 97       	sbiw	r28, 0x27	; 39
    3f84:	a5 96       	adiw	r28, 0x25	; 37
    3f86:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f88:	a5 97       	sbiw	r28, 0x25	; 37
    3f8a:	a7 96       	adiw	r28, 0x27	; 39
    3f8c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f8e:	a7 97       	sbiw	r28, 0x27	; 39
    3f90:	89 2b       	or	r24, r25
    3f92:	a5 96       	adiw	r28, 0x25	; 37
    3f94:	8f af       	std	Y+63, r24	; 0x3f
    3f96:	a5 97       	sbiw	r28, 0x25	; 37
    3f98:	a6 96       	adiw	r28, 0x26	; 38
    3f9a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f9c:	a6 97       	sbiw	r28, 0x26	; 38
    3f9e:	63 96       	adiw	r28, 0x13	; 19
    3fa0:	8f af       	std	Y+63, r24	; 0x3f
    3fa2:	63 97       	sbiw	r28, 0x13	; 19
    3fa4:	98 a1       	ldd	r25, Y+32	; 0x20
    3fa6:	88 8d       	ldd	r24, Y+24	; 0x18
    3fa8:	98 0f       	add	r25, r24
    3faa:	64 96       	adiw	r28, 0x14	; 20
    3fac:	9f af       	std	Y+63, r25	; 0x3f
    3fae:	64 97       	sbiw	r28, 0x14	; 20
    3fb0:	a5 96       	adiw	r28, 0x25	; 37
    3fb2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fb4:	a5 97       	sbiw	r28, 0x25	; 37
    3fb6:	64 96       	adiw	r28, 0x14	; 20
    3fb8:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fba:	64 97       	sbiw	r28, 0x14	; 20
    3fbc:	89 0f       	add	r24, r25
    3fbe:	64 96       	adiw	r28, 0x14	; 20
    3fc0:	8f af       	std	Y+63, r24	; 0x3f
    3fc2:	64 97       	sbiw	r28, 0x14	; 20
    3fc4:	2d 96       	adiw	r28, 0x0d	; 13
    3fc6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fc8:	2d 97       	sbiw	r28, 0x0d	; 13
    3fca:	89 83       	std	Y+1, r24	; 0x01
    3fcc:	2e 96       	adiw	r28, 0x0e	; 14
    3fce:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fd0:	2e 97       	sbiw	r28, 0x0e	; 14
    3fd2:	9a 83       	std	Y+2, r25	; 0x02
    3fd4:	2f 96       	adiw	r28, 0x0f	; 15
    3fd6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fd8:	2f 97       	sbiw	r28, 0x0f	; 15
    3fda:	8b 83       	std	Y+3, r24	; 0x03
    3fdc:	60 96       	adiw	r28, 0x10	; 16
    3fde:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fe0:	60 97       	sbiw	r28, 0x10	; 16
    3fe2:	9c 83       	std	Y+4, r25	; 0x04
    3fe4:	61 96       	adiw	r28, 0x11	; 17
    3fe6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fe8:	61 97       	sbiw	r28, 0x11	; 17
    3fea:	8d 83       	std	Y+5, r24	; 0x05
    3fec:	62 96       	adiw	r28, 0x12	; 18
    3fee:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ff0:	62 97       	sbiw	r28, 0x12	; 18
    3ff2:	9e 83       	std	Y+6, r25	; 0x06
    3ff4:	63 96       	adiw	r28, 0x13	; 19
    3ff6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ff8:	63 97       	sbiw	r28, 0x13	; 19
    3ffa:	8f 83       	std	Y+7, r24	; 0x07
    3ffc:	64 96       	adiw	r28, 0x14	; 20
    3ffe:	9f ad       	ldd	r25, Y+63	; 0x3f
    4000:	64 97       	sbiw	r28, 0x14	; 20
    4002:	98 87       	std	Y+8, r25	; 0x08

	        num = num / 10;
    4004:	a9 84       	ldd	r10, Y+9	; 0x09
    4006:	ba 84       	ldd	r11, Y+10	; 0x0a
    4008:	cb 84       	ldd	r12, Y+11	; 0x0b
    400a:	dc 84       	ldd	r13, Y+12	; 0x0c
    400c:	ed 84       	ldd	r14, Y+13	; 0x0d
    400e:	fe 84       	ldd	r15, Y+14	; 0x0e
    4010:	0f 85       	ldd	r16, Y+15	; 0x0f
    4012:	18 89       	ldd	r17, Y+16	; 0x10
    4014:	2a 2d       	mov	r18, r10
    4016:	3b 2d       	mov	r19, r11
    4018:	4c 2d       	mov	r20, r12
    401a:	5d 2d       	mov	r21, r13
    401c:	6e 2d       	mov	r22, r14
    401e:	7f 2d       	mov	r23, r15
    4020:	80 2f       	mov	r24, r16
    4022:	91 2f       	mov	r25, r17
    4024:	0f 2e       	mov	r0, r31
    4026:	fa e0       	ldi	r31, 0x0A	; 10
    4028:	af 2e       	mov	r10, r31
    402a:	f0 2d       	mov	r31, r0
    402c:	bb 24       	eor	r11, r11
    402e:	cc 24       	eor	r12, r12
    4030:	dd 24       	eor	r13, r13
    4032:	ee 24       	eor	r14, r14
    4034:	ff 24       	eor	r15, r15
    4036:	00 e0       	ldi	r16, 0x00	; 0
    4038:	10 e0       	ldi	r17, 0x00	; 0
    403a:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__udivdi3>
    403e:	a2 2e       	mov	r10, r18
    4040:	b3 2e       	mov	r11, r19
    4042:	c4 2e       	mov	r12, r20
    4044:	d5 2e       	mov	r13, r21
    4046:	e6 2e       	mov	r14, r22
    4048:	f7 2e       	mov	r15, r23
    404a:	08 2f       	mov	r16, r24
    404c:	19 2f       	mov	r17, r25
    404e:	a9 86       	std	Y+9, r10	; 0x09
    4050:	ba 86       	std	Y+10, r11	; 0x0a
    4052:	cb 86       	std	Y+11, r12	; 0x0b
    4054:	dc 86       	std	Y+12, r13	; 0x0c
    4056:	ed 86       	std	Y+13, r14	; 0x0d
    4058:	fe 86       	std	Y+14, r15	; 0x0e
    405a:	0f 87       	std	Y+15, r16	; 0x0f
    405c:	18 8b       	std	Y+16, r17	; 0x10
	 }
	}
void LCD_PrintNumber(uint64 num)
{
	uint64 reverse= 1;
	    while (num > 0) //123
    405e:	89 85       	ldd	r24, Y+9	; 0x09
    4060:	9a 85       	ldd	r25, Y+10	; 0x0a
    4062:	89 2b       	or	r24, r25
    4064:	9b 85       	ldd	r25, Y+11	; 0x0b
    4066:	89 2b       	or	r24, r25
    4068:	9c 85       	ldd	r25, Y+12	; 0x0c
    406a:	89 2b       	or	r24, r25
    406c:	9d 85       	ldd	r25, Y+13	; 0x0d
    406e:	89 2b       	or	r24, r25
    4070:	9e 85       	ldd	r25, Y+14	; 0x0e
    4072:	89 2b       	or	r24, r25
    4074:	9f 85       	ldd	r25, Y+15	; 0x0f
    4076:	89 2b       	or	r24, r25
    4078:	98 89       	ldd	r25, Y+16	; 0x10
    407a:	89 2b       	or	r24, r25
    407c:	88 23       	and	r24, r24
    407e:	09 f0       	breq	.+2      	; 0x4082 <LCD_PrintNumber+0x72a>
    4080:	90 cc       	rjmp	.-1760   	; 0x39a2 <LCD_PrintNumber+0x4a>
    4082:	5e c0       	rjmp	.+188    	; 0x4140 <LCD_PrintNumber+0x7e8>
	    }

	    while(reverse>1) //321
	    {

	    	LCD_WriteData((reverse%10)+48);
    4084:	a9 80       	ldd	r10, Y+1	; 0x01
    4086:	ba 80       	ldd	r11, Y+2	; 0x02
    4088:	cb 80       	ldd	r12, Y+3	; 0x03
    408a:	dc 80       	ldd	r13, Y+4	; 0x04
    408c:	ed 80       	ldd	r14, Y+5	; 0x05
    408e:	fe 80       	ldd	r15, Y+6	; 0x06
    4090:	0f 81       	ldd	r16, Y+7	; 0x07
    4092:	18 85       	ldd	r17, Y+8	; 0x08
    4094:	2a 2d       	mov	r18, r10
    4096:	3b 2d       	mov	r19, r11
    4098:	4c 2d       	mov	r20, r12
    409a:	5d 2d       	mov	r21, r13
    409c:	6e 2d       	mov	r22, r14
    409e:	7f 2d       	mov	r23, r15
    40a0:	80 2f       	mov	r24, r16
    40a2:	91 2f       	mov	r25, r17
    40a4:	0f 2e       	mov	r0, r31
    40a6:	fa e0       	ldi	r31, 0x0A	; 10
    40a8:	af 2e       	mov	r10, r31
    40aa:	f0 2d       	mov	r31, r0
    40ac:	bb 24       	eor	r11, r11
    40ae:	cc 24       	eor	r12, r12
    40b0:	dd 24       	eor	r13, r13
    40b2:	ee 24       	eor	r14, r14
    40b4:	ff 24       	eor	r15, r15
    40b6:	00 e0       	ldi	r16, 0x00	; 0
    40b8:	10 e0       	ldi	r17, 0x00	; 0
    40ba:	0e 94 45 08 	call	0x108a	; 0x108a <__umoddi3>
    40be:	a2 2e       	mov	r10, r18
    40c0:	b3 2e       	mov	r11, r19
    40c2:	c4 2e       	mov	r12, r20
    40c4:	d5 2e       	mov	r13, r21
    40c6:	e6 2e       	mov	r14, r22
    40c8:	f7 2e       	mov	r15, r23
    40ca:	08 2f       	mov	r16, r24
    40cc:	19 2f       	mov	r17, r25
    40ce:	2a 2d       	mov	r18, r10
    40d0:	3b 2d       	mov	r19, r11
    40d2:	4c 2d       	mov	r20, r12
    40d4:	5d 2d       	mov	r21, r13
    40d6:	6e 2d       	mov	r22, r14
    40d8:	7f 2d       	mov	r23, r15
    40da:	80 2f       	mov	r24, r16
    40dc:	91 2f       	mov	r25, r17
    40de:	82 2f       	mov	r24, r18
    40e0:	80 5d       	subi	r24, 0xD0	; 208
    40e2:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
	    	reverse=reverse/10;
    40e6:	a9 80       	ldd	r10, Y+1	; 0x01
    40e8:	ba 80       	ldd	r11, Y+2	; 0x02
    40ea:	cb 80       	ldd	r12, Y+3	; 0x03
    40ec:	dc 80       	ldd	r13, Y+4	; 0x04
    40ee:	ed 80       	ldd	r14, Y+5	; 0x05
    40f0:	fe 80       	ldd	r15, Y+6	; 0x06
    40f2:	0f 81       	ldd	r16, Y+7	; 0x07
    40f4:	18 85       	ldd	r17, Y+8	; 0x08
    40f6:	2a 2d       	mov	r18, r10
    40f8:	3b 2d       	mov	r19, r11
    40fa:	4c 2d       	mov	r20, r12
    40fc:	5d 2d       	mov	r21, r13
    40fe:	6e 2d       	mov	r22, r14
    4100:	7f 2d       	mov	r23, r15
    4102:	80 2f       	mov	r24, r16
    4104:	91 2f       	mov	r25, r17
    4106:	0f 2e       	mov	r0, r31
    4108:	fa e0       	ldi	r31, 0x0A	; 10
    410a:	af 2e       	mov	r10, r31
    410c:	f0 2d       	mov	r31, r0
    410e:	bb 24       	eor	r11, r11
    4110:	cc 24       	eor	r12, r12
    4112:	dd 24       	eor	r13, r13
    4114:	ee 24       	eor	r14, r14
    4116:	ff 24       	eor	r15, r15
    4118:	00 e0       	ldi	r16, 0x00	; 0
    411a:	10 e0       	ldi	r17, 0x00	; 0
    411c:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__udivdi3>
    4120:	a2 2e       	mov	r10, r18
    4122:	b3 2e       	mov	r11, r19
    4124:	c4 2e       	mov	r12, r20
    4126:	d5 2e       	mov	r13, r21
    4128:	e6 2e       	mov	r14, r22
    412a:	f7 2e       	mov	r15, r23
    412c:	08 2f       	mov	r16, r24
    412e:	19 2f       	mov	r17, r25
    4130:	a9 82       	std	Y+1, r10	; 0x01
    4132:	ba 82       	std	Y+2, r11	; 0x02
    4134:	cb 82       	std	Y+3, r12	; 0x03
    4136:	dc 82       	std	Y+4, r13	; 0x04
    4138:	ed 82       	std	Y+5, r14	; 0x05
    413a:	fe 82       	std	Y+6, r15	; 0x06
    413c:	0f 83       	std	Y+7, r16	; 0x07
    413e:	18 87       	std	Y+8, r17	; 0x08
	        reverse= (reverse * 10) + num % 10;

	        num = num / 10;
	    }

	    while(reverse>1) //321
    4140:	88 85       	ldd	r24, Y+8	; 0x08
    4142:	88 23       	and	r24, r24
    4144:	09 f0       	breq	.+2      	; 0x4148 <LCD_PrintNumber+0x7f0>
    4146:	9e cf       	rjmp	.-196    	; 0x4084 <LCD_PrintNumber+0x72c>
    4148:	88 85       	ldd	r24, Y+8	; 0x08
    414a:	88 23       	and	r24, r24
    414c:	71 f5       	brne	.+92     	; 0x41aa <LCD_PrintNumber+0x852>
    414e:	8f 81       	ldd	r24, Y+7	; 0x07
    4150:	88 23       	and	r24, r24
    4152:	09 f0       	breq	.+2      	; 0x4156 <LCD_PrintNumber+0x7fe>
    4154:	97 cf       	rjmp	.-210    	; 0x4084 <LCD_PrintNumber+0x72c>
    4156:	8f 81       	ldd	r24, Y+7	; 0x07
    4158:	88 23       	and	r24, r24
    415a:	39 f5       	brne	.+78     	; 0x41aa <LCD_PrintNumber+0x852>
    415c:	8e 81       	ldd	r24, Y+6	; 0x06
    415e:	88 23       	and	r24, r24
    4160:	09 f0       	breq	.+2      	; 0x4164 <LCD_PrintNumber+0x80c>
    4162:	90 cf       	rjmp	.-224    	; 0x4084 <LCD_PrintNumber+0x72c>
    4164:	8e 81       	ldd	r24, Y+6	; 0x06
    4166:	88 23       	and	r24, r24
    4168:	01 f5       	brne	.+64     	; 0x41aa <LCD_PrintNumber+0x852>
    416a:	8d 81       	ldd	r24, Y+5	; 0x05
    416c:	88 23       	and	r24, r24
    416e:	09 f0       	breq	.+2      	; 0x4172 <LCD_PrintNumber+0x81a>
    4170:	89 cf       	rjmp	.-238    	; 0x4084 <LCD_PrintNumber+0x72c>
    4172:	8d 81       	ldd	r24, Y+5	; 0x05
    4174:	88 23       	and	r24, r24
    4176:	c9 f4       	brne	.+50     	; 0x41aa <LCD_PrintNumber+0x852>
    4178:	8c 81       	ldd	r24, Y+4	; 0x04
    417a:	88 23       	and	r24, r24
    417c:	09 f0       	breq	.+2      	; 0x4180 <LCD_PrintNumber+0x828>
    417e:	82 cf       	rjmp	.-252    	; 0x4084 <LCD_PrintNumber+0x72c>
    4180:	8c 81       	ldd	r24, Y+4	; 0x04
    4182:	88 23       	and	r24, r24
    4184:	91 f4       	brne	.+36     	; 0x41aa <LCD_PrintNumber+0x852>
    4186:	8b 81       	ldd	r24, Y+3	; 0x03
    4188:	88 23       	and	r24, r24
    418a:	09 f0       	breq	.+2      	; 0x418e <LCD_PrintNumber+0x836>
    418c:	7b cf       	rjmp	.-266    	; 0x4084 <LCD_PrintNumber+0x72c>
    418e:	8b 81       	ldd	r24, Y+3	; 0x03
    4190:	88 23       	and	r24, r24
    4192:	59 f4       	brne	.+22     	; 0x41aa <LCD_PrintNumber+0x852>
    4194:	8a 81       	ldd	r24, Y+2	; 0x02
    4196:	88 23       	and	r24, r24
    4198:	09 f0       	breq	.+2      	; 0x419c <LCD_PrintNumber+0x844>
    419a:	74 cf       	rjmp	.-280    	; 0x4084 <LCD_PrintNumber+0x72c>
    419c:	8a 81       	ldd	r24, Y+2	; 0x02
    419e:	88 23       	and	r24, r24
    41a0:	21 f4       	brne	.+8      	; 0x41aa <LCD_PrintNumber+0x852>
    41a2:	89 81       	ldd	r24, Y+1	; 0x01
    41a4:	82 30       	cpi	r24, 0x02	; 2
    41a6:	08 f0       	brcs	.+2      	; 0x41aa <LCD_PrintNumber+0x852>
    41a8:	6d cf       	rjmp	.-294    	; 0x4084 <LCD_PrintNumber+0x72c>
	    {

	    	LCD_WriteData((reverse%10)+48);
	    	reverse=reverse/10;
	    }
}
    41aa:	ca 59       	subi	r28, 0x9A	; 154
    41ac:	df 4f       	sbci	r29, 0xFF	; 255
    41ae:	0f b6       	in	r0, 0x3f	; 63
    41b0:	f8 94       	cli
    41b2:	de bf       	out	0x3e, r29	; 62
    41b4:	0f be       	out	0x3f, r0	; 63
    41b6:	cd bf       	out	0x3d, r28	; 61
    41b8:	cf 91       	pop	r28
    41ba:	df 91       	pop	r29
    41bc:	1f 91       	pop	r17
    41be:	0f 91       	pop	r16
    41c0:	ff 90       	pop	r15
    41c2:	ef 90       	pop	r14
    41c4:	df 90       	pop	r13
    41c6:	cf 90       	pop	r12
    41c8:	bf 90       	pop	r11
    41ca:	af 90       	pop	r10
    41cc:	08 95       	ret

000041ce <LCD_PrintBinary>:

void LCD_PrintBinary(uint8 num)
{
    41ce:	df 93       	push	r29
    41d0:	cf 93       	push	r28
    41d2:	00 d0       	rcall	.+0      	; 0x41d4 <LCD_PrintBinary+0x6>
    41d4:	0f 92       	push	r0
    41d6:	cd b7       	in	r28, 0x3d	; 61
    41d8:	de b7       	in	r29, 0x3e	; 62
    41da:	8a 83       	std	Y+2, r24	; 0x02
	for (sint8 i=7; i>=0; i--)
    41dc:	87 e0       	ldi	r24, 0x07	; 7
    41de:	89 83       	std	Y+1, r24	; 0x01
    41e0:	1d c0       	rjmp	.+58     	; 0x421c <LCD_PrintBinary+0x4e>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
    41e2:	8a 81       	ldd	r24, Y+2	; 0x02
    41e4:	28 2f       	mov	r18, r24
    41e6:	30 e0       	ldi	r19, 0x00	; 0
    41e8:	89 81       	ldd	r24, Y+1	; 0x01
    41ea:	99 27       	eor	r25, r25
    41ec:	87 fd       	sbrc	r24, 7
    41ee:	90 95       	com	r25
    41f0:	a9 01       	movw	r20, r18
    41f2:	02 c0       	rjmp	.+4      	; 0x41f8 <LCD_PrintBinary+0x2a>
    41f4:	55 95       	asr	r21
    41f6:	47 95       	ror	r20
    41f8:	8a 95       	dec	r24
    41fa:	e2 f7       	brpl	.-8      	; 0x41f4 <LCD_PrintBinary+0x26>
    41fc:	ca 01       	movw	r24, r20
    41fe:	81 70       	andi	r24, 0x01	; 1
    4200:	90 70       	andi	r25, 0x00	; 0
    4202:	88 23       	and	r24, r24
    4204:	19 f0       	breq	.+6      	; 0x420c <LCD_PrintBinary+0x3e>
    4206:	51 e3       	ldi	r21, 0x31	; 49
    4208:	5b 83       	std	Y+3, r21	; 0x03
    420a:	02 c0       	rjmp	.+4      	; 0x4210 <LCD_PrintBinary+0x42>
    420c:	80 e3       	ldi	r24, 0x30	; 48
    420e:	8b 83       	std	Y+3, r24	; 0x03
    4210:	8b 81       	ldd	r24, Y+3	; 0x03
    4212:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
	    }
}

void LCD_PrintBinary(uint8 num)
{
	for (sint8 i=7; i>=0; i--)
    4216:	89 81       	ldd	r24, Y+1	; 0x01
    4218:	81 50       	subi	r24, 0x01	; 1
    421a:	89 83       	std	Y+1, r24	; 0x01
    421c:	89 81       	ldd	r24, Y+1	; 0x01
    421e:	88 23       	and	r24, r24
    4220:	04 f7       	brge	.-64     	; 0x41e2 <LCD_PrintBinary+0x14>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
	}

}
    4222:	0f 90       	pop	r0
    4224:	0f 90       	pop	r0
    4226:	0f 90       	pop	r0
    4228:	cf 91       	pop	r28
    422a:	df 91       	pop	r29
    422c:	08 95       	ret

0000422e <LCD_PrintHex>:

void LCD_PrintHex(uint8 num)
{
    422e:	df 93       	push	r29
    4230:	cf 93       	push	r28
    4232:	00 d0       	rcall	.+0      	; 0x4234 <LCD_PrintHex+0x6>
    4234:	0f 92       	push	r0
    4236:	cd b7       	in	r28, 0x3d	; 61
    4238:	de b7       	in	r29, 0x3e	; 62
    423a:	8b 83       	std	Y+3, r24	; 0x03
	uint8 Upper = 0, Lower = 0;
    423c:	1a 82       	std	Y+2, r1	; 0x02
    423e:	19 82       	std	Y+1, r1	; 0x01
	LCD_WriteString("0X");
    4240:	80 e6       	ldi	r24, 0x60	; 96
    4242:	90 e0       	ldi	r25, 0x00	; 0
    4244:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <LCD_WriteString>

	Upper = num >> 4;     //0b000 0010
    4248:	8b 81       	ldd	r24, Y+3	; 0x03
    424a:	82 95       	swap	r24
    424c:	8f 70       	andi	r24, 0x0F	; 15
    424e:	8a 83       	std	Y+2, r24	; 0x02
	Lower = num & 0X0f;   //0b000 0000
    4250:	8b 81       	ldd	r24, Y+3	; 0x03
    4252:	8f 70       	andi	r24, 0x0F	; 15
    4254:	89 83       	std	Y+1, r24	; 0x01

	if (Upper < 10){
    4256:	8a 81       	ldd	r24, Y+2	; 0x02
    4258:	8a 30       	cpi	r24, 0x0A	; 10
    425a:	28 f4       	brcc	.+10     	; 0x4266 <LCD_PrintHex+0x38>
		LCD_WriteData(Upper+'0');
    425c:	8a 81       	ldd	r24, Y+2	; 0x02
    425e:	80 5d       	subi	r24, 0xD0	; 208
    4260:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
    4264:	04 c0       	rjmp	.+8      	; 0x426e <LCD_PrintHex+0x40>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    4266:	8a 81       	ldd	r24, Y+2	; 0x02
    4268:	89 5c       	subi	r24, 0xC9	; 201
    426a:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
	}

	if (Lower < 10){
    426e:	89 81       	ldd	r24, Y+1	; 0x01
    4270:	8a 30       	cpi	r24, 0x0A	; 10
    4272:	28 f4       	brcc	.+10     	; 0x427e <LCD_PrintHex+0x50>

		LCD_WriteData(Lower+'0');
    4274:	89 81       	ldd	r24, Y+1	; 0x01
    4276:	80 5d       	subi	r24, 0xD0	; 208
    4278:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
    427c:	04 c0       	rjmp	.+8      	; 0x4286 <LCD_PrintHex+0x58>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    427e:	8a 81       	ldd	r24, Y+2	; 0x02
    4280:	89 5c       	subi	r24, 0xC9	; 201
    4282:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>

	}
}
    4286:	0f 90       	pop	r0
    4288:	0f 90       	pop	r0
    428a:	0f 90       	pop	r0
    428c:	cf 91       	pop	r28
    428e:	df 91       	pop	r29
    4290:	08 95       	ret

00004292 <LCD_DrawCharInAdd>:
				0x07,
				0x00,
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
    4292:	df 93       	push	r29
    4294:	cf 93       	push	r28
    4296:	00 d0       	rcall	.+0      	; 0x4298 <LCD_DrawCharInAdd+0x6>
    4298:	cd b7       	in	r28, 0x3d	; 61
    429a:	de b7       	in	r29, 0x3e	; 62
    429c:	8a 83       	std	Y+2, r24	; 0x02
	LCD_WriteInst(0x40);
    429e:	80 e4       	ldi	r24, 0x40	; 64
    42a0:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
	for(uint8 i=0; i<8;i++){
    42a4:	19 82       	std	Y+1, r1	; 0x01
    42a6:	0c c0       	rjmp	.+24     	; 0x42c0 <LCD_DrawCharInAdd+0x2e>
		LCD_WriteData(arr[i]);
    42a8:	89 81       	ldd	r24, Y+1	; 0x01
    42aa:	88 2f       	mov	r24, r24
    42ac:	90 e0       	ldi	r25, 0x00	; 0
    42ae:	fc 01       	movw	r30, r24
    42b0:	e4 58       	subi	r30, 0x84	; 132
    42b2:	fe 4f       	sbci	r31, 0xFE	; 254
    42b4:	80 81       	ld	r24, Z
    42b6:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
	LCD_WriteInst(0x40);
	for(uint8 i=0; i<8;i++){
    42ba:	89 81       	ldd	r24, Y+1	; 0x01
    42bc:	8f 5f       	subi	r24, 0xFF	; 255
    42be:	89 83       	std	Y+1, r24	; 0x01
    42c0:	89 81       	ldd	r24, Y+1	; 0x01
    42c2:	88 30       	cpi	r24, 0x08	; 8
    42c4:	88 f3       	brcs	.-30     	; 0x42a8 <LCD_DrawCharInAdd+0x16>
		LCD_WriteData(arr[i]);
	}

	LCD_WriteInst(0x80);
    42c6:	80 e8       	ldi	r24, 0x80	; 128
    42c8:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
	LCD_WriteData(Data);
    42cc:	8a 81       	ldd	r24, Y+2	; 0x02
    42ce:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>

}
    42d2:	0f 90       	pop	r0
    42d4:	0f 90       	pop	r0
    42d6:	cf 91       	pop	r28
    42d8:	df 91       	pop	r29
    42da:	08 95       	ret

000042dc <LCD_Draw_Char>:

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    42dc:	df 93       	push	r29
    42de:	cf 93       	push	r28
    42e0:	00 d0       	rcall	.+0      	; 0x42e2 <LCD_Draw_Char+0x6>
    42e2:	00 d0       	rcall	.+0      	; 0x42e4 <LCD_Draw_Char+0x8>
    42e4:	cd b7       	in	r28, 0x3d	; 61
    42e6:	de b7       	in	r29, 0x3e	; 62
    42e8:	8a 83       	std	Y+2, r24	; 0x02
    42ea:	7c 83       	std	Y+4, r23	; 0x04
    42ec:	6b 83       	std	Y+3, r22	; 0x03
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    42ee:	8a 81       	ldd	r24, Y+2	; 0x02
    42f0:	88 2f       	mov	r24, r24
    42f2:	90 e0       	ldi	r25, 0x00	; 0
    42f4:	88 0f       	add	r24, r24
    42f6:	99 1f       	adc	r25, r25
    42f8:	88 0f       	add	r24, r24
    42fa:	99 1f       	adc	r25, r25
    42fc:	88 0f       	add	r24, r24
    42fe:	99 1f       	adc	r25, r25
    4300:	80 64       	ori	r24, 0x40	; 64
    4302:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
    for (uint8 j = 0; j < 8; j++) {
    4306:	19 82       	std	Y+1, r1	; 0x01
    4308:	0e c0       	rjmp	.+28     	; 0x4326 <LCD_Draw_Char+0x4a>
        LCD_WriteData(charArray[j]);
    430a:	89 81       	ldd	r24, Y+1	; 0x01
    430c:	28 2f       	mov	r18, r24
    430e:	30 e0       	ldi	r19, 0x00	; 0
    4310:	8b 81       	ldd	r24, Y+3	; 0x03
    4312:	9c 81       	ldd	r25, Y+4	; 0x04
    4314:	fc 01       	movw	r30, r24
    4316:	e2 0f       	add	r30, r18
    4318:	f3 1f       	adc	r31, r19
    431a:	80 81       	ld	r24, Z
    431c:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>

}

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    for (uint8 j = 0; j < 8; j++) {
    4320:	89 81       	ldd	r24, Y+1	; 0x01
    4322:	8f 5f       	subi	r24, 0xFF	; 255
    4324:	89 83       	std	Y+1, r24	; 0x01
    4326:	89 81       	ldd	r24, Y+1	; 0x01
    4328:	88 30       	cpi	r24, 0x08	; 8
    432a:	78 f3       	brcs	.-34     	; 0x430a <LCD_Draw_Char+0x2e>
        LCD_WriteData(charArray[j]);
    }
    LCD_WriteInst(0x80); // Set DDRAM address to return to the display area
    432c:	80 e8       	ldi	r24, 0x80	; 128
    432e:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
}
    4332:	0f 90       	pop	r0
    4334:	0f 90       	pop	r0
    4336:	0f 90       	pop	r0
    4338:	0f 90       	pop	r0
    433a:	cf 91       	pop	r28
    433c:	df 91       	pop	r29
    433e:	08 95       	ret

00004340 <LCD_Clear>:

void LCD_Clear(void)
{
    4340:	df 93       	push	r29
    4342:	cf 93       	push	r28
    4344:	cd b7       	in	r28, 0x3d	; 61
    4346:	de b7       	in	r29, 0x3e	; 62
	LCD_WriteInst(0x01);
    4348:	81 e0       	ldi	r24, 0x01	; 1
    434a:	0e 94 3b 1a 	call	0x3476	; 0x3476 <LCD_WriteInst>
}
    434e:	cf 91       	pop	r28
    4350:	df 91       	pop	r29
    4352:	08 95       	ret

00004354 <LCD_ReverseNumber>:
	return Input+0x30;
}
*/


sint32 LCD_ReverseNumber(sint32 NUM){
    4354:	ef 92       	push	r14
    4356:	ff 92       	push	r15
    4358:	0f 93       	push	r16
    435a:	1f 93       	push	r17
    435c:	df 93       	push	r29
    435e:	cf 93       	push	r28
    4360:	cd b7       	in	r28, 0x3d	; 61
    4362:	de b7       	in	r29, 0x3e	; 62
    4364:	28 97       	sbiw	r28, 0x08	; 8
    4366:	0f b6       	in	r0, 0x3f	; 63
    4368:	f8 94       	cli
    436a:	de bf       	out	0x3e, r29	; 62
    436c:	0f be       	out	0x3f, r0	; 63
    436e:	cd bf       	out	0x3d, r28	; 61
    4370:	6d 83       	std	Y+5, r22	; 0x05
    4372:	7e 83       	std	Y+6, r23	; 0x06
    4374:	8f 83       	std	Y+7, r24	; 0x07
    4376:	98 87       	std	Y+8, r25	; 0x08
	uint32 reverse =1;
    4378:	81 e0       	ldi	r24, 0x01	; 1
    437a:	90 e0       	ldi	r25, 0x00	; 0
    437c:	a0 e0       	ldi	r26, 0x00	; 0
    437e:	b0 e0       	ldi	r27, 0x00	; 0
    4380:	89 83       	std	Y+1, r24	; 0x01
    4382:	9a 83       	std	Y+2, r25	; 0x02
    4384:	ab 83       	std	Y+3, r26	; 0x03
    4386:	bc 83       	std	Y+4, r27	; 0x04
    4388:	36 c0       	rjmp	.+108    	; 0x43f6 <LCD_ReverseNumber+0xa2>
	while (NUM != 0){
		reverse = (reverse*10)+(NUM%10);
    438a:	89 81       	ldd	r24, Y+1	; 0x01
    438c:	9a 81       	ldd	r25, Y+2	; 0x02
    438e:	ab 81       	ldd	r26, Y+3	; 0x03
    4390:	bc 81       	ldd	r27, Y+4	; 0x04
    4392:	2a e0       	ldi	r18, 0x0A	; 10
    4394:	30 e0       	ldi	r19, 0x00	; 0
    4396:	40 e0       	ldi	r20, 0x00	; 0
    4398:	50 e0       	ldi	r21, 0x00	; 0
    439a:	bc 01       	movw	r22, r24
    439c:	cd 01       	movw	r24, r26
    439e:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__mulsi3>
    43a2:	7b 01       	movw	r14, r22
    43a4:	8c 01       	movw	r16, r24
    43a6:	8d 81       	ldd	r24, Y+5	; 0x05
    43a8:	9e 81       	ldd	r25, Y+6	; 0x06
    43aa:	af 81       	ldd	r26, Y+7	; 0x07
    43ac:	b8 85       	ldd	r27, Y+8	; 0x08
    43ae:	2a e0       	ldi	r18, 0x0A	; 10
    43b0:	30 e0       	ldi	r19, 0x00	; 0
    43b2:	40 e0       	ldi	r20, 0x00	; 0
    43b4:	50 e0       	ldi	r21, 0x00	; 0
    43b6:	bc 01       	movw	r22, r24
    43b8:	cd 01       	movw	r24, r26
    43ba:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__divmodsi4>
    43be:	dc 01       	movw	r26, r24
    43c0:	cb 01       	movw	r24, r22
    43c2:	8e 0d       	add	r24, r14
    43c4:	9f 1d       	adc	r25, r15
    43c6:	a0 1f       	adc	r26, r16
    43c8:	b1 1f       	adc	r27, r17
    43ca:	89 83       	std	Y+1, r24	; 0x01
    43cc:	9a 83       	std	Y+2, r25	; 0x02
    43ce:	ab 83       	std	Y+3, r26	; 0x03
    43d0:	bc 83       	std	Y+4, r27	; 0x04
		NUM = NUM / 10;
    43d2:	8d 81       	ldd	r24, Y+5	; 0x05
    43d4:	9e 81       	ldd	r25, Y+6	; 0x06
    43d6:	af 81       	ldd	r26, Y+7	; 0x07
    43d8:	b8 85       	ldd	r27, Y+8	; 0x08
    43da:	2a e0       	ldi	r18, 0x0A	; 10
    43dc:	30 e0       	ldi	r19, 0x00	; 0
    43de:	40 e0       	ldi	r20, 0x00	; 0
    43e0:	50 e0       	ldi	r21, 0x00	; 0
    43e2:	bc 01       	movw	r22, r24
    43e4:	cd 01       	movw	r24, r26
    43e6:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__divmodsi4>
    43ea:	da 01       	movw	r26, r20
    43ec:	c9 01       	movw	r24, r18
    43ee:	8d 83       	std	Y+5, r24	; 0x05
    43f0:	9e 83       	std	Y+6, r25	; 0x06
    43f2:	af 83       	std	Y+7, r26	; 0x07
    43f4:	b8 87       	std	Y+8, r27	; 0x08
*/


sint32 LCD_ReverseNumber(sint32 NUM){
	uint32 reverse =1;
	while (NUM != 0){
    43f6:	8d 81       	ldd	r24, Y+5	; 0x05
    43f8:	9e 81       	ldd	r25, Y+6	; 0x06
    43fa:	af 81       	ldd	r26, Y+7	; 0x07
    43fc:	b8 85       	ldd	r27, Y+8	; 0x08
    43fe:	00 97       	sbiw	r24, 0x00	; 0
    4400:	a1 05       	cpc	r26, r1
    4402:	b1 05       	cpc	r27, r1
    4404:	11 f6       	brne	.-124    	; 0x438a <LCD_ReverseNumber+0x36>
		reverse = (reverse*10)+(NUM%10);
		NUM = NUM / 10;
	}
	return reverse;
    4406:	89 81       	ldd	r24, Y+1	; 0x01
    4408:	9a 81       	ldd	r25, Y+2	; 0x02
    440a:	ab 81       	ldd	r26, Y+3	; 0x03
    440c:	bc 81       	ldd	r27, Y+4	; 0x04
}
    440e:	bc 01       	movw	r22, r24
    4410:	cd 01       	movw	r24, r26
    4412:	28 96       	adiw	r28, 0x08	; 8
    4414:	0f b6       	in	r0, 0x3f	; 63
    4416:	f8 94       	cli
    4418:	de bf       	out	0x3e, r29	; 62
    441a:	0f be       	out	0x3f, r0	; 63
    441c:	cd bf       	out	0x3d, r28	; 61
    441e:	cf 91       	pop	r28
    4420:	df 91       	pop	r29
    4422:	1f 91       	pop	r17
    4424:	0f 91       	pop	r16
    4426:	ff 90       	pop	r15
    4428:	ef 90       	pop	r14
    442a:	08 95       	ret

0000442c <LCD_WriteNum>:


void LCD_WriteNum(uint64 NUM) {
    442c:	af 92       	push	r10
    442e:	bf 92       	push	r11
    4430:	cf 92       	push	r12
    4432:	df 92       	push	r13
    4434:	ef 92       	push	r14
    4436:	ff 92       	push	r15
    4438:	0f 93       	push	r16
    443a:	1f 93       	push	r17
    443c:	df 93       	push	r29
    443e:	cf 93       	push	r28
    4440:	cd b7       	in	r28, 0x3d	; 61
    4442:	de b7       	in	r29, 0x3e	; 62
    4444:	60 97       	sbiw	r28, 0x10	; 16
    4446:	0f b6       	in	r0, 0x3f	; 63
    4448:	f8 94       	cli
    444a:	de bf       	out	0x3e, r29	; 62
    444c:	0f be       	out	0x3f, r0	; 63
    444e:	cd bf       	out	0x3d, r28	; 61
    4450:	29 87       	std	Y+9, r18	; 0x09
    4452:	3a 87       	std	Y+10, r19	; 0x0a
    4454:	4b 87       	std	Y+11, r20	; 0x0b
    4456:	5c 87       	std	Y+12, r21	; 0x0c
    4458:	6d 87       	std	Y+13, r22	; 0x0d
    445a:	7e 87       	std	Y+14, r23	; 0x0e
    445c:	8f 87       	std	Y+15, r24	; 0x0f
    445e:	98 8b       	std	Y+16, r25	; 0x10
	if (NUM == 0){
    4460:	89 85       	ldd	r24, Y+9	; 0x09
    4462:	9a 85       	ldd	r25, Y+10	; 0x0a
    4464:	89 2b       	or	r24, r25
    4466:	9b 85       	ldd	r25, Y+11	; 0x0b
    4468:	89 2b       	or	r24, r25
    446a:	9c 85       	ldd	r25, Y+12	; 0x0c
    446c:	89 2b       	or	r24, r25
    446e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4470:	89 2b       	or	r24, r25
    4472:	9e 85       	ldd	r25, Y+14	; 0x0e
    4474:	89 2b       	or	r24, r25
    4476:	9f 85       	ldd	r25, Y+15	; 0x0f
    4478:	89 2b       	or	r24, r25
    447a:	98 89       	ldd	r25, Y+16	; 0x10
    447c:	89 2b       	or	r24, r25
    447e:	88 23       	and	r24, r24
    4480:	91 f5       	brne	.+100    	; 0x44e6 <LCD_WriteNum+0xba>
		LCD_WriteData((NUM%10)+48);
    4482:	a9 84       	ldd	r10, Y+9	; 0x09
    4484:	ba 84       	ldd	r11, Y+10	; 0x0a
    4486:	cb 84       	ldd	r12, Y+11	; 0x0b
    4488:	dc 84       	ldd	r13, Y+12	; 0x0c
    448a:	ed 84       	ldd	r14, Y+13	; 0x0d
    448c:	fe 84       	ldd	r15, Y+14	; 0x0e
    448e:	0f 85       	ldd	r16, Y+15	; 0x0f
    4490:	18 89       	ldd	r17, Y+16	; 0x10
    4492:	2a 2d       	mov	r18, r10
    4494:	3b 2d       	mov	r19, r11
    4496:	4c 2d       	mov	r20, r12
    4498:	5d 2d       	mov	r21, r13
    449a:	6e 2d       	mov	r22, r14
    449c:	7f 2d       	mov	r23, r15
    449e:	80 2f       	mov	r24, r16
    44a0:	91 2f       	mov	r25, r17
    44a2:	0f 2e       	mov	r0, r31
    44a4:	fa e0       	ldi	r31, 0x0A	; 10
    44a6:	af 2e       	mov	r10, r31
    44a8:	f0 2d       	mov	r31, r0
    44aa:	bb 24       	eor	r11, r11
    44ac:	cc 24       	eor	r12, r12
    44ae:	dd 24       	eor	r13, r13
    44b0:	ee 24       	eor	r14, r14
    44b2:	ff 24       	eor	r15, r15
    44b4:	00 e0       	ldi	r16, 0x00	; 0
    44b6:	10 e0       	ldi	r17, 0x00	; 0
    44b8:	0e 94 45 08 	call	0x108a	; 0x108a <__umoddi3>
    44bc:	a2 2e       	mov	r10, r18
    44be:	b3 2e       	mov	r11, r19
    44c0:	c4 2e       	mov	r12, r20
    44c2:	d5 2e       	mov	r13, r21
    44c4:	e6 2e       	mov	r14, r22
    44c6:	f7 2e       	mov	r15, r23
    44c8:	08 2f       	mov	r16, r24
    44ca:	19 2f       	mov	r17, r25
    44cc:	2a 2d       	mov	r18, r10
    44ce:	3b 2d       	mov	r19, r11
    44d0:	4c 2d       	mov	r20, r12
    44d2:	5d 2d       	mov	r21, r13
    44d4:	6e 2d       	mov	r22, r14
    44d6:	7f 2d       	mov	r23, r15
    44d8:	80 2f       	mov	r24, r16
    44da:	91 2f       	mov	r25, r17
    44dc:	82 2f       	mov	r24, r18
    44de:	80 5d       	subi	r24, 0xD0	; 208
    44e0:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
    44e4:	9e c0       	rjmp	.+316    	; 0x4622 <LCD_WriteNum+0x1f6>
	}
	else{
		uint64 reverse=1;
    44e6:	81 e0       	ldi	r24, 0x01	; 1
    44e8:	89 83       	std	Y+1, r24	; 0x01
    44ea:	1a 82       	std	Y+2, r1	; 0x02
    44ec:	1b 82       	std	Y+3, r1	; 0x03
    44ee:	1c 82       	std	Y+4, r1	; 0x04
    44f0:	1d 82       	std	Y+5, r1	; 0x05
    44f2:	1e 82       	std	Y+6, r1	; 0x06
    44f4:	1f 82       	std	Y+7, r1	; 0x07
    44f6:	18 86       	std	Y+8, r1	; 0x08
		reverse = LCD_ReverseNumber(NUM);
    44f8:	89 85       	ldd	r24, Y+9	; 0x09
    44fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    44fc:	ab 85       	ldd	r26, Y+11	; 0x0b
    44fe:	bc 85       	ldd	r27, Y+12	; 0x0c
    4500:	bc 01       	movw	r22, r24
    4502:	cd 01       	movw	r24, r26
    4504:	0e 94 aa 21 	call	0x4354	; 0x4354 <LCD_ReverseNumber>
    4508:	dc 01       	movw	r26, r24
    450a:	cb 01       	movw	r24, r22
    450c:	89 83       	std	Y+1, r24	; 0x01
    450e:	9a 83       	std	Y+2, r25	; 0x02
    4510:	ab 83       	std	Y+3, r26	; 0x03
    4512:	bc 83       	std	Y+4, r27	; 0x04
    4514:	bb 0f       	add	r27, r27
    4516:	88 0b       	sbc	r24, r24
    4518:	98 2f       	mov	r25, r24
    451a:	dc 01       	movw	r26, r24
    451c:	8d 83       	std	Y+5, r24	; 0x05
    451e:	8e 83       	std	Y+6, r24	; 0x06
    4520:	8f 83       	std	Y+7, r24	; 0x07
    4522:	88 87       	std	Y+8, r24	; 0x08
    4524:	5e c0       	rjmp	.+188    	; 0x45e2 <LCD_WriteNum+0x1b6>
		while(reverse!=1)
		{
			LCD_WriteData((reverse%10)+48);
    4526:	a9 80       	ldd	r10, Y+1	; 0x01
    4528:	ba 80       	ldd	r11, Y+2	; 0x02
    452a:	cb 80       	ldd	r12, Y+3	; 0x03
    452c:	dc 80       	ldd	r13, Y+4	; 0x04
    452e:	ed 80       	ldd	r14, Y+5	; 0x05
    4530:	fe 80       	ldd	r15, Y+6	; 0x06
    4532:	0f 81       	ldd	r16, Y+7	; 0x07
    4534:	18 85       	ldd	r17, Y+8	; 0x08
    4536:	2a 2d       	mov	r18, r10
    4538:	3b 2d       	mov	r19, r11
    453a:	4c 2d       	mov	r20, r12
    453c:	5d 2d       	mov	r21, r13
    453e:	6e 2d       	mov	r22, r14
    4540:	7f 2d       	mov	r23, r15
    4542:	80 2f       	mov	r24, r16
    4544:	91 2f       	mov	r25, r17
    4546:	0f 2e       	mov	r0, r31
    4548:	fa e0       	ldi	r31, 0x0A	; 10
    454a:	af 2e       	mov	r10, r31
    454c:	f0 2d       	mov	r31, r0
    454e:	bb 24       	eor	r11, r11
    4550:	cc 24       	eor	r12, r12
    4552:	dd 24       	eor	r13, r13
    4554:	ee 24       	eor	r14, r14
    4556:	ff 24       	eor	r15, r15
    4558:	00 e0       	ldi	r16, 0x00	; 0
    455a:	10 e0       	ldi	r17, 0x00	; 0
    455c:	0e 94 45 08 	call	0x108a	; 0x108a <__umoddi3>
    4560:	a2 2e       	mov	r10, r18
    4562:	b3 2e       	mov	r11, r19
    4564:	c4 2e       	mov	r12, r20
    4566:	d5 2e       	mov	r13, r21
    4568:	e6 2e       	mov	r14, r22
    456a:	f7 2e       	mov	r15, r23
    456c:	08 2f       	mov	r16, r24
    456e:	19 2f       	mov	r17, r25
    4570:	2a 2d       	mov	r18, r10
    4572:	3b 2d       	mov	r19, r11
    4574:	4c 2d       	mov	r20, r12
    4576:	5d 2d       	mov	r21, r13
    4578:	6e 2d       	mov	r22, r14
    457a:	7f 2d       	mov	r23, r15
    457c:	80 2f       	mov	r24, r16
    457e:	91 2f       	mov	r25, r17
    4580:	82 2f       	mov	r24, r18
    4582:	80 5d       	subi	r24, 0xD0	; 208
    4584:	0e 94 46 1b 	call	0x368c	; 0x368c <LCD_WriteData>
			reverse/=10;
    4588:	a9 80       	ldd	r10, Y+1	; 0x01
    458a:	ba 80       	ldd	r11, Y+2	; 0x02
    458c:	cb 80       	ldd	r12, Y+3	; 0x03
    458e:	dc 80       	ldd	r13, Y+4	; 0x04
    4590:	ed 80       	ldd	r14, Y+5	; 0x05
    4592:	fe 80       	ldd	r15, Y+6	; 0x06
    4594:	0f 81       	ldd	r16, Y+7	; 0x07
    4596:	18 85       	ldd	r17, Y+8	; 0x08
    4598:	2a 2d       	mov	r18, r10
    459a:	3b 2d       	mov	r19, r11
    459c:	4c 2d       	mov	r20, r12
    459e:	5d 2d       	mov	r21, r13
    45a0:	6e 2d       	mov	r22, r14
    45a2:	7f 2d       	mov	r23, r15
    45a4:	80 2f       	mov	r24, r16
    45a6:	91 2f       	mov	r25, r17
    45a8:	0f 2e       	mov	r0, r31
    45aa:	fa e0       	ldi	r31, 0x0A	; 10
    45ac:	af 2e       	mov	r10, r31
    45ae:	f0 2d       	mov	r31, r0
    45b0:	bb 24       	eor	r11, r11
    45b2:	cc 24       	eor	r12, r12
    45b4:	dd 24       	eor	r13, r13
    45b6:	ee 24       	eor	r14, r14
    45b8:	ff 24       	eor	r15, r15
    45ba:	00 e0       	ldi	r16, 0x00	; 0
    45bc:	10 e0       	ldi	r17, 0x00	; 0
    45be:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__udivdi3>
    45c2:	a2 2e       	mov	r10, r18
    45c4:	b3 2e       	mov	r11, r19
    45c6:	c4 2e       	mov	r12, r20
    45c8:	d5 2e       	mov	r13, r21
    45ca:	e6 2e       	mov	r14, r22
    45cc:	f7 2e       	mov	r15, r23
    45ce:	08 2f       	mov	r16, r24
    45d0:	19 2f       	mov	r17, r25
    45d2:	a9 82       	std	Y+1, r10	; 0x01
    45d4:	ba 82       	std	Y+2, r11	; 0x02
    45d6:	cb 82       	std	Y+3, r12	; 0x03
    45d8:	dc 82       	std	Y+4, r13	; 0x04
    45da:	ed 82       	std	Y+5, r14	; 0x05
    45dc:	fe 82       	std	Y+6, r15	; 0x06
    45de:	0f 83       	std	Y+7, r16	; 0x07
    45e0:	18 87       	std	Y+8, r17	; 0x08
		LCD_WriteData((NUM%10)+48);
	}
	else{
		uint64 reverse=1;
		reverse = LCD_ReverseNumber(NUM);
		while(reverse!=1)
    45e2:	89 81       	ldd	r24, Y+1	; 0x01
    45e4:	81 30       	cpi	r24, 0x01	; 1
    45e6:	09 f0       	breq	.+2      	; 0x45ea <LCD_WriteNum+0x1be>
    45e8:	9e cf       	rjmp	.-196    	; 0x4526 <LCD_WriteNum+0xfa>
    45ea:	8a 81       	ldd	r24, Y+2	; 0x02
    45ec:	88 23       	and	r24, r24
    45ee:	09 f0       	breq	.+2      	; 0x45f2 <LCD_WriteNum+0x1c6>
    45f0:	9a cf       	rjmp	.-204    	; 0x4526 <LCD_WriteNum+0xfa>
    45f2:	8b 81       	ldd	r24, Y+3	; 0x03
    45f4:	88 23       	and	r24, r24
    45f6:	09 f0       	breq	.+2      	; 0x45fa <LCD_WriteNum+0x1ce>
    45f8:	96 cf       	rjmp	.-212    	; 0x4526 <LCD_WriteNum+0xfa>
    45fa:	8c 81       	ldd	r24, Y+4	; 0x04
    45fc:	88 23       	and	r24, r24
    45fe:	09 f0       	breq	.+2      	; 0x4602 <LCD_WriteNum+0x1d6>
    4600:	92 cf       	rjmp	.-220    	; 0x4526 <LCD_WriteNum+0xfa>
    4602:	8d 81       	ldd	r24, Y+5	; 0x05
    4604:	88 23       	and	r24, r24
    4606:	09 f0       	breq	.+2      	; 0x460a <LCD_WriteNum+0x1de>
    4608:	8e cf       	rjmp	.-228    	; 0x4526 <LCD_WriteNum+0xfa>
    460a:	8e 81       	ldd	r24, Y+6	; 0x06
    460c:	88 23       	and	r24, r24
    460e:	09 f0       	breq	.+2      	; 0x4612 <LCD_WriteNum+0x1e6>
    4610:	8a cf       	rjmp	.-236    	; 0x4526 <LCD_WriteNum+0xfa>
    4612:	8f 81       	ldd	r24, Y+7	; 0x07
    4614:	88 23       	and	r24, r24
    4616:	09 f0       	breq	.+2      	; 0x461a <LCD_WriteNum+0x1ee>
    4618:	86 cf       	rjmp	.-244    	; 0x4526 <LCD_WriteNum+0xfa>
    461a:	88 85       	ldd	r24, Y+8	; 0x08
    461c:	88 23       	and	r24, r24
    461e:	09 f0       	breq	.+2      	; 0x4622 <LCD_WriteNum+0x1f6>
    4620:	82 cf       	rjmp	.-252    	; 0x4526 <LCD_WriteNum+0xfa>
		{
			LCD_WriteData((reverse%10)+48);
			reverse/=10;
		}
	}
    4622:	60 96       	adiw	r28, 0x10	; 16
    4624:	0f b6       	in	r0, 0x3f	; 63
    4626:	f8 94       	cli
    4628:	de bf       	out	0x3e, r29	; 62
    462a:	0f be       	out	0x3f, r0	; 63
    462c:	cd bf       	out	0x3d, r28	; 61
    462e:	cf 91       	pop	r28
    4630:	df 91       	pop	r29
    4632:	1f 91       	pop	r17
    4634:	0f 91       	pop	r16
    4636:	ff 90       	pop	r15
    4638:	ef 90       	pop	r14
    463a:	df 90       	pop	r13
    463c:	cf 90       	pop	r12
    463e:	bf 90       	pop	r11
    4640:	af 90       	pop	r10
    4642:	08 95       	ret

00004644 <SevenSegments_voidInit>:
#include "SSD_config.h"
#include "SSD_private.h"

uint32 SSD_Arr[10] = {ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE};

void SevenSegments_voidInit(){
    4644:	df 93       	push	r29
    4646:	cf 93       	push	r28
    4648:	cd b7       	in	r28, 0x3d	; 61
    464a:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT, 0xff);
    464c:	84 e0       	ldi	r24, 0x04	; 4
    464e:	6f ef       	ldi	r22, 0xFF	; 255
    4650:	0e 94 6c 2c 	call	0x58d8	; 0x58d8 <DIO_voidSetPortDirection>
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT2, 0xff);
    4654:	82 e0       	ldi	r24, 0x02	; 2
    4656:	6f ef       	ldi	r22, 0xFF	; 255
    4658:	0e 94 6c 2c 	call	0x58d8	; 0x58d8 <DIO_voidSetPortDirection>
}
    465c:	cf 91       	pop	r28
    465e:	df 91       	pop	r29
    4660:	08 95       	ret

00004662 <SevenSegments_voidDispalyDecreasecount>:

void SevenSegments_voidDispalyDecreasecount(uint8 Copy_u8Seconds){
    4662:	df 93       	push	r29
    4664:	cf 93       	push	r28
    4666:	cd b7       	in	r28, 0x3d	; 61
    4668:	de b7       	in	r29, 0x3e	; 62
    466a:	a0 97       	sbiw	r28, 0x20	; 32
    466c:	0f b6       	in	r0, 0x3f	; 63
    466e:	f8 94       	cli
    4670:	de bf       	out	0x3e, r29	; 62
    4672:	0f be       	out	0x3f, r0	; 63
    4674:	cd bf       	out	0x3d, r28	; 61
    4676:	88 a3       	std	Y+32, r24	; 0x20
	uint8 i;
	if (Copy_u8Seconds < 10){
    4678:	88 a1       	ldd	r24, Y+32	; 0x20
    467a:	8a 30       	cpi	r24, 0x0A	; 10
    467c:	08 f0       	brcs	.+2      	; 0x4680 <SevenSegments_voidDispalyDecreasecount+0x1e>
    467e:	90 c0       	rjmp	.+288    	; 0x47a0 <SevenSegments_voidDispalyDecreasecount+0x13e>
		for(i = Copy_u8Seconds; i > 0; i--)
    4680:	88 a1       	ldd	r24, Y+32	; 0x20
    4682:	8f 8f       	std	Y+31, r24	; 0x1f
    4684:	88 c0       	rjmp	.+272    	; 0x4796 <SevenSegments_voidDispalyDecreasecount+0x134>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
    4686:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4688:	88 2f       	mov	r24, r24
    468a:	90 e0       	ldi	r25, 0x00	; 0
    468c:	88 0f       	add	r24, r24
    468e:	99 1f       	adc	r25, r25
    4690:	88 0f       	add	r24, r24
    4692:	99 1f       	adc	r25, r25
    4694:	fc 01       	movw	r30, r24
    4696:	e4 57       	subi	r30, 0x74	; 116
    4698:	fe 4f       	sbci	r31, 0xFE	; 254
    469a:	80 81       	ld	r24, Z
    469c:	91 81       	ldd	r25, Z+1	; 0x01
    469e:	a2 81       	ldd	r26, Z+2	; 0x02
    46a0:	b3 81       	ldd	r27, Z+3	; 0x03
    46a2:	98 2f       	mov	r25, r24
    46a4:	84 e0       	ldi	r24, 0x04	; 4
    46a6:	69 2f       	mov	r22, r25
    46a8:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
    46ac:	80 e0       	ldi	r24, 0x00	; 0
    46ae:	90 e0       	ldi	r25, 0x00	; 0
    46b0:	aa ef       	ldi	r26, 0xFA	; 250
    46b2:	b3 e4       	ldi	r27, 0x43	; 67
    46b4:	89 8f       	std	Y+25, r24	; 0x19
    46b6:	9a 8f       	std	Y+26, r25	; 0x1a
    46b8:	ab 8f       	std	Y+27, r26	; 0x1b
    46ba:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46bc:	69 8d       	ldd	r22, Y+25	; 0x19
    46be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    46c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    46c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    46c4:	20 e0       	ldi	r18, 0x00	; 0
    46c6:	30 e0       	ldi	r19, 0x00	; 0
    46c8:	4a ef       	ldi	r20, 0xFA	; 250
    46ca:	54 e4       	ldi	r21, 0x44	; 68
    46cc:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    46d0:	dc 01       	movw	r26, r24
    46d2:	cb 01       	movw	r24, r22
    46d4:	8d 8b       	std	Y+21, r24	; 0x15
    46d6:	9e 8b       	std	Y+22, r25	; 0x16
    46d8:	af 8b       	std	Y+23, r26	; 0x17
    46da:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    46dc:	6d 89       	ldd	r22, Y+21	; 0x15
    46de:	7e 89       	ldd	r23, Y+22	; 0x16
    46e0:	8f 89       	ldd	r24, Y+23	; 0x17
    46e2:	98 8d       	ldd	r25, Y+24	; 0x18
    46e4:	20 e0       	ldi	r18, 0x00	; 0
    46e6:	30 e0       	ldi	r19, 0x00	; 0
    46e8:	40 e8       	ldi	r20, 0x80	; 128
    46ea:	5f e3       	ldi	r21, 0x3F	; 63
    46ec:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    46f0:	88 23       	and	r24, r24
    46f2:	2c f4       	brge	.+10     	; 0x46fe <SevenSegments_voidDispalyDecreasecount+0x9c>
		__ticks = 1;
    46f4:	81 e0       	ldi	r24, 0x01	; 1
    46f6:	90 e0       	ldi	r25, 0x00	; 0
    46f8:	9c 8b       	std	Y+20, r25	; 0x14
    46fa:	8b 8b       	std	Y+19, r24	; 0x13
    46fc:	3f c0       	rjmp	.+126    	; 0x477c <SevenSegments_voidDispalyDecreasecount+0x11a>
	else if (__tmp > 65535)
    46fe:	6d 89       	ldd	r22, Y+21	; 0x15
    4700:	7e 89       	ldd	r23, Y+22	; 0x16
    4702:	8f 89       	ldd	r24, Y+23	; 0x17
    4704:	98 8d       	ldd	r25, Y+24	; 0x18
    4706:	20 e0       	ldi	r18, 0x00	; 0
    4708:	3f ef       	ldi	r19, 0xFF	; 255
    470a:	4f e7       	ldi	r20, 0x7F	; 127
    470c:	57 e4       	ldi	r21, 0x47	; 71
    470e:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    4712:	18 16       	cp	r1, r24
    4714:	4c f5       	brge	.+82     	; 0x4768 <SevenSegments_voidDispalyDecreasecount+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4716:	69 8d       	ldd	r22, Y+25	; 0x19
    4718:	7a 8d       	ldd	r23, Y+26	; 0x1a
    471a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    471c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    471e:	20 e0       	ldi	r18, 0x00	; 0
    4720:	30 e0       	ldi	r19, 0x00	; 0
    4722:	40 e2       	ldi	r20, 0x20	; 32
    4724:	51 e4       	ldi	r21, 0x41	; 65
    4726:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    472a:	dc 01       	movw	r26, r24
    472c:	cb 01       	movw	r24, r22
    472e:	bc 01       	movw	r22, r24
    4730:	cd 01       	movw	r24, r26
    4732:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4736:	dc 01       	movw	r26, r24
    4738:	cb 01       	movw	r24, r22
    473a:	9c 8b       	std	Y+20, r25	; 0x14
    473c:	8b 8b       	std	Y+19, r24	; 0x13
    473e:	0f c0       	rjmp	.+30     	; 0x475e <SevenSegments_voidDispalyDecreasecount+0xfc>
    4740:	88 ec       	ldi	r24, 0xC8	; 200
    4742:	90 e0       	ldi	r25, 0x00	; 0
    4744:	9a 8b       	std	Y+18, r25	; 0x12
    4746:	89 8b       	std	Y+17, r24	; 0x11
    4748:	89 89       	ldd	r24, Y+17	; 0x11
    474a:	9a 89       	ldd	r25, Y+18	; 0x12
    474c:	01 97       	sbiw	r24, 0x01	; 1
    474e:	f1 f7       	brne	.-4      	; 0x474c <SevenSegments_voidDispalyDecreasecount+0xea>
    4750:	9a 8b       	std	Y+18, r25	; 0x12
    4752:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4754:	8b 89       	ldd	r24, Y+19	; 0x13
    4756:	9c 89       	ldd	r25, Y+20	; 0x14
    4758:	01 97       	sbiw	r24, 0x01	; 1
    475a:	9c 8b       	std	Y+20, r25	; 0x14
    475c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    475e:	8b 89       	ldd	r24, Y+19	; 0x13
    4760:	9c 89       	ldd	r25, Y+20	; 0x14
    4762:	00 97       	sbiw	r24, 0x00	; 0
    4764:	69 f7       	brne	.-38     	; 0x4740 <SevenSegments_voidDispalyDecreasecount+0xde>
    4766:	14 c0       	rjmp	.+40     	; 0x4790 <SevenSegments_voidDispalyDecreasecount+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4768:	6d 89       	ldd	r22, Y+21	; 0x15
    476a:	7e 89       	ldd	r23, Y+22	; 0x16
    476c:	8f 89       	ldd	r24, Y+23	; 0x17
    476e:	98 8d       	ldd	r25, Y+24	; 0x18
    4770:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4774:	dc 01       	movw	r26, r24
    4776:	cb 01       	movw	r24, r22
    4778:	9c 8b       	std	Y+20, r25	; 0x14
    477a:	8b 8b       	std	Y+19, r24	; 0x13
    477c:	8b 89       	ldd	r24, Y+19	; 0x13
    477e:	9c 89       	ldd	r25, Y+20	; 0x14
    4780:	98 8b       	std	Y+16, r25	; 0x10
    4782:	8f 87       	std	Y+15, r24	; 0x0f
    4784:	8f 85       	ldd	r24, Y+15	; 0x0f
    4786:	98 89       	ldd	r25, Y+16	; 0x10
    4788:	01 97       	sbiw	r24, 0x01	; 1
    478a:	f1 f7       	brne	.-4      	; 0x4788 <SevenSegments_voidDispalyDecreasecount+0x126>
    478c:	98 8b       	std	Y+16, r25	; 0x10
    478e:	8f 87       	std	Y+15, r24	; 0x0f
}

void SevenSegments_voidDispalyDecreasecount(uint8 Copy_u8Seconds){
	uint8 i;
	if (Copy_u8Seconds < 10){
		for(i = Copy_u8Seconds; i > 0; i--)
    4790:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4792:	81 50       	subi	r24, 0x01	; 1
    4794:	8f 8f       	std	Y+31, r24	; 0x1f
    4796:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4798:	88 23       	and	r24, r24
    479a:	09 f0       	breq	.+2      	; 0x479e <SevenSegments_voidDispalyDecreasecount+0x13c>
    479c:	74 cf       	rjmp	.-280    	; 0x4686 <SevenSegments_voidDispalyDecreasecount+0x24>
    479e:	b3 c0       	rjmp	.+358    	; 0x4906 <SevenSegments_voidDispalyDecreasecount+0x2a4>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
    47a0:	88 a1       	ldd	r24, Y+32	; 0x20
    47a2:	83 36       	cpi	r24, 0x63	; 99
    47a4:	08 f0       	brcs	.+2      	; 0x47a8 <SevenSegments_voidDispalyDecreasecount+0x146>
    47a6:	af c0       	rjmp	.+350    	; 0x4906 <SevenSegments_voidDispalyDecreasecount+0x2a4>
		uint8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    47a8:	88 a1       	ldd	r24, Y+32	; 0x20
    47aa:	8f 8f       	std	Y+31, r24	; 0x1f
    47ac:	a8 c0       	rjmp	.+336    	; 0x48fe <SevenSegments_voidDispalyDecreasecount+0x29c>
		{
			fnum = i/10;
    47ae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    47b0:	9a e0       	ldi	r25, 0x0A	; 10
    47b2:	69 2f       	mov	r22, r25
    47b4:	0e 94 1e 2e 	call	0x5c3c	; 0x5c3c <__udivmodqi4>
    47b8:	8e 8f       	std	Y+30, r24	; 0x1e
			snum = i%10;
    47ba:	8f 8d       	ldd	r24, Y+31	; 0x1f
    47bc:	9a e0       	ldi	r25, 0x0A	; 10
    47be:	69 2f       	mov	r22, r25
    47c0:	0e 94 1e 2e 	call	0x5c3c	; 0x5c3c <__udivmodqi4>
    47c4:	89 2f       	mov	r24, r25
    47c6:	8d 8f       	std	Y+29, r24	; 0x1d
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
    47c8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    47ca:	88 2f       	mov	r24, r24
    47cc:	90 e0       	ldi	r25, 0x00	; 0
    47ce:	88 0f       	add	r24, r24
    47d0:	99 1f       	adc	r25, r25
    47d2:	88 0f       	add	r24, r24
    47d4:	99 1f       	adc	r25, r25
    47d6:	fc 01       	movw	r30, r24
    47d8:	e4 57       	subi	r30, 0x74	; 116
    47da:	fe 4f       	sbci	r31, 0xFE	; 254
    47dc:	80 81       	ld	r24, Z
    47de:	91 81       	ldd	r25, Z+1	; 0x01
    47e0:	a2 81       	ldd	r26, Z+2	; 0x02
    47e2:	b3 81       	ldd	r27, Z+3	; 0x03
    47e4:	98 2f       	mov	r25, r24
    47e6:	84 e0       	ldi	r24, 0x04	; 4
    47e8:	69 2f       	mov	r22, r25
    47ea:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
    47ee:	8d 8d       	ldd	r24, Y+29	; 0x1d
    47f0:	88 2f       	mov	r24, r24
    47f2:	90 e0       	ldi	r25, 0x00	; 0
    47f4:	88 0f       	add	r24, r24
    47f6:	99 1f       	adc	r25, r25
    47f8:	88 0f       	add	r24, r24
    47fa:	99 1f       	adc	r25, r25
    47fc:	fc 01       	movw	r30, r24
    47fe:	e4 57       	subi	r30, 0x74	; 116
    4800:	fe 4f       	sbci	r31, 0xFE	; 254
    4802:	80 81       	ld	r24, Z
    4804:	91 81       	ldd	r25, Z+1	; 0x01
    4806:	a2 81       	ldd	r26, Z+2	; 0x02
    4808:	b3 81       	ldd	r27, Z+3	; 0x03
    480a:	98 2f       	mov	r25, r24
    480c:	82 e0       	ldi	r24, 0x02	; 2
    480e:	69 2f       	mov	r22, r25
    4810:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
    4814:	80 e0       	ldi	r24, 0x00	; 0
    4816:	90 e0       	ldi	r25, 0x00	; 0
    4818:	aa ef       	ldi	r26, 0xFA	; 250
    481a:	b3 e4       	ldi	r27, 0x43	; 67
    481c:	8b 87       	std	Y+11, r24	; 0x0b
    481e:	9c 87       	std	Y+12, r25	; 0x0c
    4820:	ad 87       	std	Y+13, r26	; 0x0d
    4822:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4824:	6b 85       	ldd	r22, Y+11	; 0x0b
    4826:	7c 85       	ldd	r23, Y+12	; 0x0c
    4828:	8d 85       	ldd	r24, Y+13	; 0x0d
    482a:	9e 85       	ldd	r25, Y+14	; 0x0e
    482c:	20 e0       	ldi	r18, 0x00	; 0
    482e:	30 e0       	ldi	r19, 0x00	; 0
    4830:	4a ef       	ldi	r20, 0xFA	; 250
    4832:	54 e4       	ldi	r21, 0x44	; 68
    4834:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    4838:	dc 01       	movw	r26, r24
    483a:	cb 01       	movw	r24, r22
    483c:	8f 83       	std	Y+7, r24	; 0x07
    483e:	98 87       	std	Y+8, r25	; 0x08
    4840:	a9 87       	std	Y+9, r26	; 0x09
    4842:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4844:	6f 81       	ldd	r22, Y+7	; 0x07
    4846:	78 85       	ldd	r23, Y+8	; 0x08
    4848:	89 85       	ldd	r24, Y+9	; 0x09
    484a:	9a 85       	ldd	r25, Y+10	; 0x0a
    484c:	20 e0       	ldi	r18, 0x00	; 0
    484e:	30 e0       	ldi	r19, 0x00	; 0
    4850:	40 e8       	ldi	r20, 0x80	; 128
    4852:	5f e3       	ldi	r21, 0x3F	; 63
    4854:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    4858:	88 23       	and	r24, r24
    485a:	2c f4       	brge	.+10     	; 0x4866 <SevenSegments_voidDispalyDecreasecount+0x204>
		__ticks = 1;
    485c:	81 e0       	ldi	r24, 0x01	; 1
    485e:	90 e0       	ldi	r25, 0x00	; 0
    4860:	9e 83       	std	Y+6, r25	; 0x06
    4862:	8d 83       	std	Y+5, r24	; 0x05
    4864:	3f c0       	rjmp	.+126    	; 0x48e4 <SevenSegments_voidDispalyDecreasecount+0x282>
	else if (__tmp > 65535)
    4866:	6f 81       	ldd	r22, Y+7	; 0x07
    4868:	78 85       	ldd	r23, Y+8	; 0x08
    486a:	89 85       	ldd	r24, Y+9	; 0x09
    486c:	9a 85       	ldd	r25, Y+10	; 0x0a
    486e:	20 e0       	ldi	r18, 0x00	; 0
    4870:	3f ef       	ldi	r19, 0xFF	; 255
    4872:	4f e7       	ldi	r20, 0x7F	; 127
    4874:	57 e4       	ldi	r21, 0x47	; 71
    4876:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    487a:	18 16       	cp	r1, r24
    487c:	4c f5       	brge	.+82     	; 0x48d0 <SevenSegments_voidDispalyDecreasecount+0x26e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    487e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4880:	7c 85       	ldd	r23, Y+12	; 0x0c
    4882:	8d 85       	ldd	r24, Y+13	; 0x0d
    4884:	9e 85       	ldd	r25, Y+14	; 0x0e
    4886:	20 e0       	ldi	r18, 0x00	; 0
    4888:	30 e0       	ldi	r19, 0x00	; 0
    488a:	40 e2       	ldi	r20, 0x20	; 32
    488c:	51 e4       	ldi	r21, 0x41	; 65
    488e:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    4892:	dc 01       	movw	r26, r24
    4894:	cb 01       	movw	r24, r22
    4896:	bc 01       	movw	r22, r24
    4898:	cd 01       	movw	r24, r26
    489a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    489e:	dc 01       	movw	r26, r24
    48a0:	cb 01       	movw	r24, r22
    48a2:	9e 83       	std	Y+6, r25	; 0x06
    48a4:	8d 83       	std	Y+5, r24	; 0x05
    48a6:	0f c0       	rjmp	.+30     	; 0x48c6 <SevenSegments_voidDispalyDecreasecount+0x264>
    48a8:	88 ec       	ldi	r24, 0xC8	; 200
    48aa:	90 e0       	ldi	r25, 0x00	; 0
    48ac:	9c 83       	std	Y+4, r25	; 0x04
    48ae:	8b 83       	std	Y+3, r24	; 0x03
    48b0:	8b 81       	ldd	r24, Y+3	; 0x03
    48b2:	9c 81       	ldd	r25, Y+4	; 0x04
    48b4:	01 97       	sbiw	r24, 0x01	; 1
    48b6:	f1 f7       	brne	.-4      	; 0x48b4 <SevenSegments_voidDispalyDecreasecount+0x252>
    48b8:	9c 83       	std	Y+4, r25	; 0x04
    48ba:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48bc:	8d 81       	ldd	r24, Y+5	; 0x05
    48be:	9e 81       	ldd	r25, Y+6	; 0x06
    48c0:	01 97       	sbiw	r24, 0x01	; 1
    48c2:	9e 83       	std	Y+6, r25	; 0x06
    48c4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48c6:	8d 81       	ldd	r24, Y+5	; 0x05
    48c8:	9e 81       	ldd	r25, Y+6	; 0x06
    48ca:	00 97       	sbiw	r24, 0x00	; 0
    48cc:	69 f7       	brne	.-38     	; 0x48a8 <SevenSegments_voidDispalyDecreasecount+0x246>
    48ce:	14 c0       	rjmp	.+40     	; 0x48f8 <SevenSegments_voidDispalyDecreasecount+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48d0:	6f 81       	ldd	r22, Y+7	; 0x07
    48d2:	78 85       	ldd	r23, Y+8	; 0x08
    48d4:	89 85       	ldd	r24, Y+9	; 0x09
    48d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    48d8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    48dc:	dc 01       	movw	r26, r24
    48de:	cb 01       	movw	r24, r22
    48e0:	9e 83       	std	Y+6, r25	; 0x06
    48e2:	8d 83       	std	Y+5, r24	; 0x05
    48e4:	8d 81       	ldd	r24, Y+5	; 0x05
    48e6:	9e 81       	ldd	r25, Y+6	; 0x06
    48e8:	9a 83       	std	Y+2, r25	; 0x02
    48ea:	89 83       	std	Y+1, r24	; 0x01
    48ec:	89 81       	ldd	r24, Y+1	; 0x01
    48ee:	9a 81       	ldd	r25, Y+2	; 0x02
    48f0:	01 97       	sbiw	r24, 0x01	; 1
    48f2:	f1 f7       	brne	.-4      	; 0x48f0 <SevenSegments_voidDispalyDecreasecount+0x28e>
    48f4:	9a 83       	std	Y+2, r25	; 0x02
    48f6:	89 83       	std	Y+1, r24	; 0x01
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
		uint8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    48f8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    48fa:	81 50       	subi	r24, 0x01	; 1
    48fc:	8f 8f       	std	Y+31, r24	; 0x1f
    48fe:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4900:	88 23       	and	r24, r24
    4902:	09 f0       	breq	.+2      	; 0x4906 <SevenSegments_voidDispalyDecreasecount+0x2a4>
    4904:	54 cf       	rjmp	.-344    	; 0x47ae <SevenSegments_voidDispalyDecreasecount+0x14c>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
			_delay_ms(500);
		}
	}
}
    4906:	a0 96       	adiw	r28, 0x20	; 32
    4908:	0f b6       	in	r0, 0x3f	; 63
    490a:	f8 94       	cli
    490c:	de bf       	out	0x3e, r29	; 62
    490e:	0f be       	out	0x3f, r0	; 63
    4910:	cd bf       	out	0x3d, r28	; 61
    4912:	cf 91       	pop	r28
    4914:	df 91       	pop	r29
    4916:	08 95       	ret

00004918 <SevenSegments_voidDispaly>:

void SevenSegments_voidDispaly(uint8 Copy_u8Value){
    4918:	df 93       	push	r29
    491a:	cf 93       	push	r28
    491c:	cd b7       	in	r28, 0x3d	; 61
    491e:	de b7       	in	r29, 0x3e	; 62
    4920:	6f 97       	sbiw	r28, 0x1f	; 31
    4922:	0f b6       	in	r0, 0x3f	; 63
    4924:	f8 94       	cli
    4926:	de bf       	out	0x3e, r29	; 62
    4928:	0f be       	out	0x3f, r0	; 63
    492a:	cd bf       	out	0x3d, r28	; 61
    492c:	8f 8f       	std	Y+31, r24	; 0x1f
	if (Copy_u8Value < 10){
    492e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4930:	8a 30       	cpi	r24, 0x0A	; 10
    4932:	08 f0       	brcs	.+2      	; 0x4936 <SevenSegments_voidDispaly+0x1e>
    4934:	93 c0       	rjmp	.+294    	; 0x4a5c <SevenSegments_voidDispaly+0x144>
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[Copy_u8Value]);
    4936:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4938:	88 2f       	mov	r24, r24
    493a:	90 e0       	ldi	r25, 0x00	; 0
    493c:	88 0f       	add	r24, r24
    493e:	99 1f       	adc	r25, r25
    4940:	88 0f       	add	r24, r24
    4942:	99 1f       	adc	r25, r25
    4944:	fc 01       	movw	r30, r24
    4946:	e4 57       	subi	r30, 0x74	; 116
    4948:	fe 4f       	sbci	r31, 0xFE	; 254
    494a:	80 81       	ld	r24, Z
    494c:	91 81       	ldd	r25, Z+1	; 0x01
    494e:	a2 81       	ldd	r26, Z+2	; 0x02
    4950:	b3 81       	ldd	r27, Z+3	; 0x03
    4952:	98 2f       	mov	r25, r24
    4954:	82 e0       	ldi	r24, 0x02	; 2
    4956:	69 2f       	mov	r22, r25
    4958:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[0]);
    495c:	80 91 8c 01 	lds	r24, 0x018C
    4960:	90 91 8d 01 	lds	r25, 0x018D
    4964:	a0 91 8e 01 	lds	r26, 0x018E
    4968:	b0 91 8f 01 	lds	r27, 0x018F
    496c:	98 2f       	mov	r25, r24
    496e:	84 e0       	ldi	r24, 0x04	; 4
    4970:	69 2f       	mov	r22, r25
    4972:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
    4976:	80 e0       	ldi	r24, 0x00	; 0
    4978:	90 e0       	ldi	r25, 0x00	; 0
    497a:	a8 e4       	ldi	r26, 0x48	; 72
    497c:	b3 e4       	ldi	r27, 0x43	; 67
    497e:	89 8f       	std	Y+25, r24	; 0x19
    4980:	9a 8f       	std	Y+26, r25	; 0x1a
    4982:	ab 8f       	std	Y+27, r26	; 0x1b
    4984:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4986:	69 8d       	ldd	r22, Y+25	; 0x19
    4988:	7a 8d       	ldd	r23, Y+26	; 0x1a
    498a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    498c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    498e:	20 e0       	ldi	r18, 0x00	; 0
    4990:	30 e0       	ldi	r19, 0x00	; 0
    4992:	4a ef       	ldi	r20, 0xFA	; 250
    4994:	54 e4       	ldi	r21, 0x44	; 68
    4996:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    499a:	dc 01       	movw	r26, r24
    499c:	cb 01       	movw	r24, r22
    499e:	8d 8b       	std	Y+21, r24	; 0x15
    49a0:	9e 8b       	std	Y+22, r25	; 0x16
    49a2:	af 8b       	std	Y+23, r26	; 0x17
    49a4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    49a6:	6d 89       	ldd	r22, Y+21	; 0x15
    49a8:	7e 89       	ldd	r23, Y+22	; 0x16
    49aa:	8f 89       	ldd	r24, Y+23	; 0x17
    49ac:	98 8d       	ldd	r25, Y+24	; 0x18
    49ae:	20 e0       	ldi	r18, 0x00	; 0
    49b0:	30 e0       	ldi	r19, 0x00	; 0
    49b2:	40 e8       	ldi	r20, 0x80	; 128
    49b4:	5f e3       	ldi	r21, 0x3F	; 63
    49b6:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    49ba:	88 23       	and	r24, r24
    49bc:	2c f4       	brge	.+10     	; 0x49c8 <SevenSegments_voidDispaly+0xb0>
		__ticks = 1;
    49be:	81 e0       	ldi	r24, 0x01	; 1
    49c0:	90 e0       	ldi	r25, 0x00	; 0
    49c2:	9c 8b       	std	Y+20, r25	; 0x14
    49c4:	8b 8b       	std	Y+19, r24	; 0x13
    49c6:	3f c0       	rjmp	.+126    	; 0x4a46 <SevenSegments_voidDispaly+0x12e>
	else if (__tmp > 65535)
    49c8:	6d 89       	ldd	r22, Y+21	; 0x15
    49ca:	7e 89       	ldd	r23, Y+22	; 0x16
    49cc:	8f 89       	ldd	r24, Y+23	; 0x17
    49ce:	98 8d       	ldd	r25, Y+24	; 0x18
    49d0:	20 e0       	ldi	r18, 0x00	; 0
    49d2:	3f ef       	ldi	r19, 0xFF	; 255
    49d4:	4f e7       	ldi	r20, 0x7F	; 127
    49d6:	57 e4       	ldi	r21, 0x47	; 71
    49d8:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    49dc:	18 16       	cp	r1, r24
    49de:	4c f5       	brge	.+82     	; 0x4a32 <SevenSegments_voidDispaly+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49e0:	69 8d       	ldd	r22, Y+25	; 0x19
    49e2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    49e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    49e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    49e8:	20 e0       	ldi	r18, 0x00	; 0
    49ea:	30 e0       	ldi	r19, 0x00	; 0
    49ec:	40 e2       	ldi	r20, 0x20	; 32
    49ee:	51 e4       	ldi	r21, 0x41	; 65
    49f0:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    49f4:	dc 01       	movw	r26, r24
    49f6:	cb 01       	movw	r24, r22
    49f8:	bc 01       	movw	r22, r24
    49fa:	cd 01       	movw	r24, r26
    49fc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4a00:	dc 01       	movw	r26, r24
    4a02:	cb 01       	movw	r24, r22
    4a04:	9c 8b       	std	Y+20, r25	; 0x14
    4a06:	8b 8b       	std	Y+19, r24	; 0x13
    4a08:	0f c0       	rjmp	.+30     	; 0x4a28 <SevenSegments_voidDispaly+0x110>
    4a0a:	88 ec       	ldi	r24, 0xC8	; 200
    4a0c:	90 e0       	ldi	r25, 0x00	; 0
    4a0e:	9a 8b       	std	Y+18, r25	; 0x12
    4a10:	89 8b       	std	Y+17, r24	; 0x11
    4a12:	89 89       	ldd	r24, Y+17	; 0x11
    4a14:	9a 89       	ldd	r25, Y+18	; 0x12
    4a16:	01 97       	sbiw	r24, 0x01	; 1
    4a18:	f1 f7       	brne	.-4      	; 0x4a16 <SevenSegments_voidDispaly+0xfe>
    4a1a:	9a 8b       	std	Y+18, r25	; 0x12
    4a1c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a1e:	8b 89       	ldd	r24, Y+19	; 0x13
    4a20:	9c 89       	ldd	r25, Y+20	; 0x14
    4a22:	01 97       	sbiw	r24, 0x01	; 1
    4a24:	9c 8b       	std	Y+20, r25	; 0x14
    4a26:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a28:	8b 89       	ldd	r24, Y+19	; 0x13
    4a2a:	9c 89       	ldd	r25, Y+20	; 0x14
    4a2c:	00 97       	sbiw	r24, 0x00	; 0
    4a2e:	69 f7       	brne	.-38     	; 0x4a0a <SevenSegments_voidDispaly+0xf2>
    4a30:	c0 c0       	rjmp	.+384    	; 0x4bb2 <SevenSegments_voidDispaly+0x29a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a32:	6d 89       	ldd	r22, Y+21	; 0x15
    4a34:	7e 89       	ldd	r23, Y+22	; 0x16
    4a36:	8f 89       	ldd	r24, Y+23	; 0x17
    4a38:	98 8d       	ldd	r25, Y+24	; 0x18
    4a3a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4a3e:	dc 01       	movw	r26, r24
    4a40:	cb 01       	movw	r24, r22
    4a42:	9c 8b       	std	Y+20, r25	; 0x14
    4a44:	8b 8b       	std	Y+19, r24	; 0x13
    4a46:	8b 89       	ldd	r24, Y+19	; 0x13
    4a48:	9c 89       	ldd	r25, Y+20	; 0x14
    4a4a:	98 8b       	std	Y+16, r25	; 0x10
    4a4c:	8f 87       	std	Y+15, r24	; 0x0f
    4a4e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4a50:	98 89       	ldd	r25, Y+16	; 0x10
    4a52:	01 97       	sbiw	r24, 0x01	; 1
    4a54:	f1 f7       	brne	.-4      	; 0x4a52 <SevenSegments_voidDispaly+0x13a>
    4a56:	98 8b       	std	Y+16, r25	; 0x10
    4a58:	8f 87       	std	Y+15, r24	; 0x0f
    4a5a:	ab c0       	rjmp	.+342    	; 0x4bb2 <SevenSegments_voidDispaly+0x29a>
		_delay_ms(200);
	} else if (Copy_u8Value < 100){
    4a5c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4a5e:	84 36       	cpi	r24, 0x64	; 100
    4a60:	08 f0       	brcs	.+2      	; 0x4a64 <SevenSegments_voidDispaly+0x14c>
    4a62:	a7 c0       	rjmp	.+334    	; 0x4bb2 <SevenSegments_voidDispaly+0x29a>
		uint8 fnum = 0 , snum = 0;
    4a64:	1e 8e       	std	Y+30, r1	; 0x1e
    4a66:	1d 8e       	std	Y+29, r1	; 0x1d
		fnum = Copy_u8Value/10;
    4a68:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4a6a:	9a e0       	ldi	r25, 0x0A	; 10
    4a6c:	69 2f       	mov	r22, r25
    4a6e:	0e 94 1e 2e 	call	0x5c3c	; 0x5c3c <__udivmodqi4>
    4a72:	8e 8f       	std	Y+30, r24	; 0x1e
		snum = Copy_u8Value%10;
    4a74:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4a76:	9a e0       	ldi	r25, 0x0A	; 10
    4a78:	69 2f       	mov	r22, r25
    4a7a:	0e 94 1e 2e 	call	0x5c3c	; 0x5c3c <__udivmodqi4>
    4a7e:	89 2f       	mov	r24, r25
    4a80:	8d 8f       	std	Y+29, r24	; 0x1d
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
    4a82:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4a84:	88 2f       	mov	r24, r24
    4a86:	90 e0       	ldi	r25, 0x00	; 0
    4a88:	88 0f       	add	r24, r24
    4a8a:	99 1f       	adc	r25, r25
    4a8c:	88 0f       	add	r24, r24
    4a8e:	99 1f       	adc	r25, r25
    4a90:	fc 01       	movw	r30, r24
    4a92:	e4 57       	subi	r30, 0x74	; 116
    4a94:	fe 4f       	sbci	r31, 0xFE	; 254
    4a96:	80 81       	ld	r24, Z
    4a98:	91 81       	ldd	r25, Z+1	; 0x01
    4a9a:	a2 81       	ldd	r26, Z+2	; 0x02
    4a9c:	b3 81       	ldd	r27, Z+3	; 0x03
    4a9e:	98 2f       	mov	r25, r24
    4aa0:	84 e0       	ldi	r24, 0x04	; 4
    4aa2:	69 2f       	mov	r22, r25
    4aa4:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
    4aa8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4aaa:	88 2f       	mov	r24, r24
    4aac:	90 e0       	ldi	r25, 0x00	; 0
    4aae:	88 0f       	add	r24, r24
    4ab0:	99 1f       	adc	r25, r25
    4ab2:	88 0f       	add	r24, r24
    4ab4:	99 1f       	adc	r25, r25
    4ab6:	fc 01       	movw	r30, r24
    4ab8:	e4 57       	subi	r30, 0x74	; 116
    4aba:	fe 4f       	sbci	r31, 0xFE	; 254
    4abc:	80 81       	ld	r24, Z
    4abe:	91 81       	ldd	r25, Z+1	; 0x01
    4ac0:	a2 81       	ldd	r26, Z+2	; 0x02
    4ac2:	b3 81       	ldd	r27, Z+3	; 0x03
    4ac4:	98 2f       	mov	r25, r24
    4ac6:	82 e0       	ldi	r24, 0x02	; 2
    4ac8:	69 2f       	mov	r22, r25
    4aca:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
    4ace:	80 e0       	ldi	r24, 0x00	; 0
    4ad0:	90 e0       	ldi	r25, 0x00	; 0
    4ad2:	a8 e4       	ldi	r26, 0x48	; 72
    4ad4:	b3 e4       	ldi	r27, 0x43	; 67
    4ad6:	8b 87       	std	Y+11, r24	; 0x0b
    4ad8:	9c 87       	std	Y+12, r25	; 0x0c
    4ada:	ad 87       	std	Y+13, r26	; 0x0d
    4adc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ade:	6b 85       	ldd	r22, Y+11	; 0x0b
    4ae0:	7c 85       	ldd	r23, Y+12	; 0x0c
    4ae2:	8d 85       	ldd	r24, Y+13	; 0x0d
    4ae4:	9e 85       	ldd	r25, Y+14	; 0x0e
    4ae6:	20 e0       	ldi	r18, 0x00	; 0
    4ae8:	30 e0       	ldi	r19, 0x00	; 0
    4aea:	4a ef       	ldi	r20, 0xFA	; 250
    4aec:	54 e4       	ldi	r21, 0x44	; 68
    4aee:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    4af2:	dc 01       	movw	r26, r24
    4af4:	cb 01       	movw	r24, r22
    4af6:	8f 83       	std	Y+7, r24	; 0x07
    4af8:	98 87       	std	Y+8, r25	; 0x08
    4afa:	a9 87       	std	Y+9, r26	; 0x09
    4afc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4afe:	6f 81       	ldd	r22, Y+7	; 0x07
    4b00:	78 85       	ldd	r23, Y+8	; 0x08
    4b02:	89 85       	ldd	r24, Y+9	; 0x09
    4b04:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b06:	20 e0       	ldi	r18, 0x00	; 0
    4b08:	30 e0       	ldi	r19, 0x00	; 0
    4b0a:	40 e8       	ldi	r20, 0x80	; 128
    4b0c:	5f e3       	ldi	r21, 0x3F	; 63
    4b0e:	0e 94 b9 11 	call	0x2372	; 0x2372 <__ltsf2>
    4b12:	88 23       	and	r24, r24
    4b14:	2c f4       	brge	.+10     	; 0x4b20 <SevenSegments_voidDispaly+0x208>
		__ticks = 1;
    4b16:	81 e0       	ldi	r24, 0x01	; 1
    4b18:	90 e0       	ldi	r25, 0x00	; 0
    4b1a:	9e 83       	std	Y+6, r25	; 0x06
    4b1c:	8d 83       	std	Y+5, r24	; 0x05
    4b1e:	3f c0       	rjmp	.+126    	; 0x4b9e <SevenSegments_voidDispaly+0x286>
	else if (__tmp > 65535)
    4b20:	6f 81       	ldd	r22, Y+7	; 0x07
    4b22:	78 85       	ldd	r23, Y+8	; 0x08
    4b24:	89 85       	ldd	r24, Y+9	; 0x09
    4b26:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b28:	20 e0       	ldi	r18, 0x00	; 0
    4b2a:	3f ef       	ldi	r19, 0xFF	; 255
    4b2c:	4f e7       	ldi	r20, 0x7F	; 127
    4b2e:	57 e4       	ldi	r21, 0x47	; 71
    4b30:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gtsf2>
    4b34:	18 16       	cp	r1, r24
    4b36:	4c f5       	brge	.+82     	; 0x4b8a <SevenSegments_voidDispaly+0x272>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b38:	6b 85       	ldd	r22, Y+11	; 0x0b
    4b3a:	7c 85       	ldd	r23, Y+12	; 0x0c
    4b3c:	8d 85       	ldd	r24, Y+13	; 0x0d
    4b3e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4b40:	20 e0       	ldi	r18, 0x00	; 0
    4b42:	30 e0       	ldi	r19, 0x00	; 0
    4b44:	40 e2       	ldi	r20, 0x20	; 32
    4b46:	51 e4       	ldi	r21, 0x41	; 65
    4b48:	0e 94 5f 10 	call	0x20be	; 0x20be <__mulsf3>
    4b4c:	dc 01       	movw	r26, r24
    4b4e:	cb 01       	movw	r24, r22
    4b50:	bc 01       	movw	r22, r24
    4b52:	cd 01       	movw	r24, r26
    4b54:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4b58:	dc 01       	movw	r26, r24
    4b5a:	cb 01       	movw	r24, r22
    4b5c:	9e 83       	std	Y+6, r25	; 0x06
    4b5e:	8d 83       	std	Y+5, r24	; 0x05
    4b60:	0f c0       	rjmp	.+30     	; 0x4b80 <SevenSegments_voidDispaly+0x268>
    4b62:	88 ec       	ldi	r24, 0xC8	; 200
    4b64:	90 e0       	ldi	r25, 0x00	; 0
    4b66:	9c 83       	std	Y+4, r25	; 0x04
    4b68:	8b 83       	std	Y+3, r24	; 0x03
    4b6a:	8b 81       	ldd	r24, Y+3	; 0x03
    4b6c:	9c 81       	ldd	r25, Y+4	; 0x04
    4b6e:	01 97       	sbiw	r24, 0x01	; 1
    4b70:	f1 f7       	brne	.-4      	; 0x4b6e <SevenSegments_voidDispaly+0x256>
    4b72:	9c 83       	std	Y+4, r25	; 0x04
    4b74:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b76:	8d 81       	ldd	r24, Y+5	; 0x05
    4b78:	9e 81       	ldd	r25, Y+6	; 0x06
    4b7a:	01 97       	sbiw	r24, 0x01	; 1
    4b7c:	9e 83       	std	Y+6, r25	; 0x06
    4b7e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b80:	8d 81       	ldd	r24, Y+5	; 0x05
    4b82:	9e 81       	ldd	r25, Y+6	; 0x06
    4b84:	00 97       	sbiw	r24, 0x00	; 0
    4b86:	69 f7       	brne	.-38     	; 0x4b62 <SevenSegments_voidDispaly+0x24a>
    4b88:	14 c0       	rjmp	.+40     	; 0x4bb2 <SevenSegments_voidDispaly+0x29a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b8a:	6f 81       	ldd	r22, Y+7	; 0x07
    4b8c:	78 85       	ldd	r23, Y+8	; 0x08
    4b8e:	89 85       	ldd	r24, Y+9	; 0x09
    4b90:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b92:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4b96:	dc 01       	movw	r26, r24
    4b98:	cb 01       	movw	r24, r22
    4b9a:	9e 83       	std	Y+6, r25	; 0x06
    4b9c:	8d 83       	std	Y+5, r24	; 0x05
    4b9e:	8d 81       	ldd	r24, Y+5	; 0x05
    4ba0:	9e 81       	ldd	r25, Y+6	; 0x06
    4ba2:	9a 83       	std	Y+2, r25	; 0x02
    4ba4:	89 83       	std	Y+1, r24	; 0x01
    4ba6:	89 81       	ldd	r24, Y+1	; 0x01
    4ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    4baa:	01 97       	sbiw	r24, 0x01	; 1
    4bac:	f1 f7       	brne	.-4      	; 0x4baa <SevenSegments_voidDispaly+0x292>
    4bae:	9a 83       	std	Y+2, r25	; 0x02
    4bb0:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(200);
	}
}
    4bb2:	6f 96       	adiw	r28, 0x1f	; 31
    4bb4:	0f b6       	in	r0, 0x3f	; 63
    4bb6:	f8 94       	cli
    4bb8:	de bf       	out	0x3e, r29	; 62
    4bba:	0f be       	out	0x3f, r0	; 63
    4bbc:	cd bf       	out	0x3d, r28	; 61
    4bbe:	cf 91       	pop	r28
    4bc0:	df 91       	pop	r29
    4bc2:	08 95       	ret

00004bc4 <SevenSegment_voidInit>:

void SevenSegment_voidInit(void){
    4bc4:	df 93       	push	r29
    4bc6:	cf 93       	push	r28
    4bc8:	cd b7       	in	r28, 0x3d	; 61
    4bca:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT, 0xff);
    4bcc:	84 e0       	ldi	r24, 0x04	; 4
    4bce:	6f ef       	ldi	r22, 0xFF	; 255
    4bd0:	0e 94 6c 2c 	call	0x58d8	; 0x58d8 <DIO_voidSetPortDirection>
}
    4bd4:	cf 91       	pop	r28
    4bd6:	df 91       	pop	r29
    4bd8:	08 95       	ret

00004bda <SevenSegment_voidDispaly>:

void SevenSegment_voidDispaly(uint8 Copy_u8Value){
    4bda:	df 93       	push	r29
    4bdc:	cf 93       	push	r28
    4bde:	0f 92       	push	r0
    4be0:	cd b7       	in	r28, 0x3d	; 61
    4be2:	de b7       	in	r29, 0x3e	; 62
    4be4:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[Copy_u8Value]);
    4be6:	89 81       	ldd	r24, Y+1	; 0x01
    4be8:	88 2f       	mov	r24, r24
    4bea:	90 e0       	ldi	r25, 0x00	; 0
    4bec:	88 0f       	add	r24, r24
    4bee:	99 1f       	adc	r25, r25
    4bf0:	88 0f       	add	r24, r24
    4bf2:	99 1f       	adc	r25, r25
    4bf4:	fc 01       	movw	r30, r24
    4bf6:	e4 57       	subi	r30, 0x74	; 116
    4bf8:	fe 4f       	sbci	r31, 0xFE	; 254
    4bfa:	80 81       	ld	r24, Z
    4bfc:	91 81       	ldd	r25, Z+1	; 0x01
    4bfe:	a2 81       	ldd	r26, Z+2	; 0x02
    4c00:	b3 81       	ldd	r27, Z+3	; 0x03
    4c02:	98 2f       	mov	r25, r24
    4c04:	84 e0       	ldi	r24, 0x04	; 4
    4c06:	69 2f       	mov	r22, r25
    4c08:	0e 94 ae 2c 	call	0x595c	; 0x595c <DIO_voidSetPortValue>
}
    4c0c:	0f 90       	pop	r0
    4c0e:	cf 91       	pop	r28
    4c10:	df 91       	pop	r29
    4c12:	08 95       	ret

00004c14 <LED_voidInit>:
#include "LED_interface.h"



void  LED_voidInit(uint8 Copy_u8PortNum ,uint8 Copy_u8PinNum )
{
    4c14:	df 93       	push	r29
    4c16:	cf 93       	push	r28
    4c18:	00 d0       	rcall	.+0      	; 0x4c1a <LED_voidInit+0x6>
    4c1a:	cd b7       	in	r28, 0x3d	; 61
    4c1c:	de b7       	in	r29, 0x3e	; 62
    4c1e:	89 83       	std	Y+1, r24	; 0x01
    4c20:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidSetPinDirection(Copy_u8PortNum , Copy_u8PinNum , DIO_u8OUTPUT);
    4c22:	89 81       	ldd	r24, Y+1	; 0x01
    4c24:	6a 81       	ldd	r22, Y+2	; 0x02
    4c26:	41 e0       	ldi	r20, 0x01	; 1
    4c28:	0e 94 ef 29 	call	0x53de	; 0x53de <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(Copy_u8PortNum , Copy_u8PinNum , DIO_u8LOW);
    4c2c:	89 81       	ldd	r24, Y+1	; 0x01
    4c2e:	6a 81       	ldd	r22, Y+2	; 0x02
    4c30:	40 e0       	ldi	r20, 0x00	; 0
    4c32:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
}
    4c36:	0f 90       	pop	r0
    4c38:	0f 90       	pop	r0
    4c3a:	cf 91       	pop	r28
    4c3c:	df 91       	pop	r29
    4c3e:	08 95       	ret

00004c40 <LED_voidLedMode>:

void  LED_voidLedMode(uint8 Copy_u8PortNum ,uint8 Copy_u8PinNum ,uint8 Copy_u8Mode )
{
    4c40:	df 93       	push	r29
    4c42:	cf 93       	push	r28
    4c44:	00 d0       	rcall	.+0      	; 0x4c46 <LED_voidLedMode+0x6>
    4c46:	00 d0       	rcall	.+0      	; 0x4c48 <LED_voidLedMode+0x8>
    4c48:	0f 92       	push	r0
    4c4a:	cd b7       	in	r28, 0x3d	; 61
    4c4c:	de b7       	in	r29, 0x3e	; 62
    4c4e:	89 83       	std	Y+1, r24	; 0x01
    4c50:	6a 83       	std	Y+2, r22	; 0x02
    4c52:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8Mode)
    4c54:	8b 81       	ldd	r24, Y+3	; 0x03
    4c56:	28 2f       	mov	r18, r24
    4c58:	30 e0       	ldi	r19, 0x00	; 0
    4c5a:	3d 83       	std	Y+5, r19	; 0x05
    4c5c:	2c 83       	std	Y+4, r18	; 0x04
    4c5e:	8c 81       	ldd	r24, Y+4	; 0x04
    4c60:	9d 81       	ldd	r25, Y+5	; 0x05
    4c62:	81 30       	cpi	r24, 0x01	; 1
    4c64:	91 05       	cpc	r25, r1
    4c66:	79 f0       	breq	.+30     	; 0x4c86 <LED_voidLedMode+0x46>
    4c68:	2c 81       	ldd	r18, Y+4	; 0x04
    4c6a:	3d 81       	ldd	r19, Y+5	; 0x05
    4c6c:	22 30       	cpi	r18, 0x02	; 2
    4c6e:	31 05       	cpc	r19, r1
    4c70:	81 f0       	breq	.+32     	; 0x4c92 <LED_voidLedMode+0x52>
    4c72:	8c 81       	ldd	r24, Y+4	; 0x04
    4c74:	9d 81       	ldd	r25, Y+5	; 0x05
    4c76:	00 97       	sbiw	r24, 0x00	; 0
    4c78:	81 f4       	brne	.+32     	; 0x4c9a <LED_voidLedMode+0x5a>
	{
		case LED_OFF  :

			DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8LOW);
    4c7a:	89 81       	ldd	r24, Y+1	; 0x01
    4c7c:	6a 81       	ldd	r22, Y+2	; 0x02
    4c7e:	40 e0       	ldi	r20, 0x00	; 0
    4c80:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
    4c84:	0a c0       	rjmp	.+20     	; 0x4c9a <LED_voidLedMode+0x5a>

			break;

		case LED_ON   :

			DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8HIGH);
    4c86:	89 81       	ldd	r24, Y+1	; 0x01
    4c88:	6a 81       	ldd	r22, Y+2	; 0x02
    4c8a:	41 e0       	ldi	r20, 0x01	; 1
    4c8c:	0e 94 f1 2a 	call	0x55e2	; 0x55e2 <DIO_voidSetPinValue>
    4c90:	04 c0       	rjmp	.+8      	; 0x4c9a <LED_voidLedMode+0x5a>

			break;

		case LED_TOG  :

			DIO_voidSetTogglePin(Copy_u8PortNum ,Copy_u8PinNum);
    4c92:	89 81       	ldd	r24, Y+1	; 0x01
    4c94:	6a 81       	ldd	r22, Y+2	; 0x02
    4c96:	0e 94 f0 2c 	call	0x59e0	; 0x59e0 <DIO_voidSetTogglePin>

	}
}
    4c9a:	0f 90       	pop	r0
    4c9c:	0f 90       	pop	r0
    4c9e:	0f 90       	pop	r0
    4ca0:	0f 90       	pop	r0
    4ca2:	0f 90       	pop	r0
    4ca4:	cf 91       	pop	r28
    4ca6:	df 91       	pop	r29
    4ca8:	08 95       	ret

00004caa <Timer0_OverFlow_init>:
/* Version             :  1.0.0                             */
/************************************************************/

#include "Timer_interface.h"

void Timer0_OverFlow_init(uint8 prescaler , uint8 preload){
    4caa:	df 93       	push	r29
    4cac:	cf 93       	push	r28
    4cae:	00 d0       	rcall	.+0      	; 0x4cb0 <Timer0_OverFlow_init+0x6>
    4cb0:	cd b7       	in	r28, 0x3d	; 61
    4cb2:	de b7       	in	r29, 0x3e	; 62
    4cb4:	89 83       	std	Y+1, r24	; 0x01
    4cb6:	6a 83       	std	Y+2, r22	; 0x02

	// select over flow
	CLR_BIT(TCCR0,3);
    4cb8:	a3 e5       	ldi	r26, 0x53	; 83
    4cba:	b0 e0       	ldi	r27, 0x00	; 0
    4cbc:	e3 e5       	ldi	r30, 0x53	; 83
    4cbe:	f0 e0       	ldi	r31, 0x00	; 0
    4cc0:	80 81       	ld	r24, Z
    4cc2:	87 7f       	andi	r24, 0xF7	; 247
    4cc4:	8c 93       	st	X, r24
	CLR_BIT(TCCR0,6);
    4cc6:	a3 e5       	ldi	r26, 0x53	; 83
    4cc8:	b0 e0       	ldi	r27, 0x00	; 0
    4cca:	e3 e5       	ldi	r30, 0x53	; 83
    4ccc:	f0 e0       	ldi	r31, 0x00	; 0
    4cce:	80 81       	ld	r24, Z
    4cd0:	8f 7b       	andi	r24, 0xBF	; 191
    4cd2:	8c 93       	st	X, r24

	//
	TCNT0=preload;
    4cd4:	e2 e5       	ldi	r30, 0x52	; 82
    4cd6:	f0 e0       	ldi	r31, 0x00	; 0
    4cd8:	8a 81       	ldd	r24, Y+2	; 0x02
    4cda:	80 83       	st	Z, r24

	//select interrupt for over flow
	SET_BIT(TIMSK,0);
    4cdc:	a9 e5       	ldi	r26, 0x59	; 89
    4cde:	b0 e0       	ldi	r27, 0x00	; 0
    4ce0:	e9 e5       	ldi	r30, 0x59	; 89
    4ce2:	f0 e0       	ldi	r31, 0x00	; 0
    4ce4:	80 81       	ld	r24, Z
    4ce6:	81 60       	ori	r24, 0x01	; 1
    4ce8:	8c 93       	st	X, r24

	// prescaler
	if(prescaler==8){
    4cea:	89 81       	ldd	r24, Y+1	; 0x01
    4cec:	88 30       	cpi	r24, 0x08	; 8
    4cee:	b1 f4       	brne	.+44     	; 0x4d1c <Timer0_OverFlow_init+0x72>
		CLR_BIT(TCCR0,0);
    4cf0:	a3 e5       	ldi	r26, 0x53	; 83
    4cf2:	b0 e0       	ldi	r27, 0x00	; 0
    4cf4:	e3 e5       	ldi	r30, 0x53	; 83
    4cf6:	f0 e0       	ldi	r31, 0x00	; 0
    4cf8:	80 81       	ld	r24, Z
    4cfa:	8e 7f       	andi	r24, 0xFE	; 254
    4cfc:	8c 93       	st	X, r24
		SET_BIT(TCCR0,1);
    4cfe:	a3 e5       	ldi	r26, 0x53	; 83
    4d00:	b0 e0       	ldi	r27, 0x00	; 0
    4d02:	e3 e5       	ldi	r30, 0x53	; 83
    4d04:	f0 e0       	ldi	r31, 0x00	; 0
    4d06:	80 81       	ld	r24, Z
    4d08:	82 60       	ori	r24, 0x02	; 2
    4d0a:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,2);
    4d0c:	a3 e5       	ldi	r26, 0x53	; 83
    4d0e:	b0 e0       	ldi	r27, 0x00	; 0
    4d10:	e3 e5       	ldi	r30, 0x53	; 83
    4d12:	f0 e0       	ldi	r31, 0x00	; 0
    4d14:	80 81       	ld	r24, Z
    4d16:	8b 7f       	andi	r24, 0xFB	; 251
    4d18:	8c 93       	st	X, r24
    4d1a:	18 c0       	rjmp	.+48     	; 0x4d4c <Timer0_OverFlow_init+0xa2>
	}
	else if(prescaler==64){
    4d1c:	89 81       	ldd	r24, Y+1	; 0x01
    4d1e:	80 34       	cpi	r24, 0x40	; 64
    4d20:	a9 f4       	brne	.+42     	; 0x4d4c <Timer0_OverFlow_init+0xa2>
		SET_BIT(TCCR0,0);
    4d22:	a3 e5       	ldi	r26, 0x53	; 83
    4d24:	b0 e0       	ldi	r27, 0x00	; 0
    4d26:	e3 e5       	ldi	r30, 0x53	; 83
    4d28:	f0 e0       	ldi	r31, 0x00	; 0
    4d2a:	80 81       	ld	r24, Z
    4d2c:	81 60       	ori	r24, 0x01	; 1
    4d2e:	8c 93       	st	X, r24
		SET_BIT(TCCR0,1);
    4d30:	a3 e5       	ldi	r26, 0x53	; 83
    4d32:	b0 e0       	ldi	r27, 0x00	; 0
    4d34:	e3 e5       	ldi	r30, 0x53	; 83
    4d36:	f0 e0       	ldi	r31, 0x00	; 0
    4d38:	80 81       	ld	r24, Z
    4d3a:	82 60       	ori	r24, 0x02	; 2
    4d3c:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,2);
    4d3e:	a3 e5       	ldi	r26, 0x53	; 83
    4d40:	b0 e0       	ldi	r27, 0x00	; 0
    4d42:	e3 e5       	ldi	r30, 0x53	; 83
    4d44:	f0 e0       	ldi	r31, 0x00	; 0
    4d46:	80 81       	ld	r24, Z
    4d48:	8b 7f       	andi	r24, 0xFB	; 251
    4d4a:	8c 93       	st	X, r24
	}
}
    4d4c:	0f 90       	pop	r0
    4d4e:	0f 90       	pop	r0
    4d50:	cf 91       	pop	r28
    4d52:	df 91       	pop	r29
    4d54:	08 95       	ret

00004d56 <call_back_over_flow>:

void (*ptr_T0_overflow)(void);
void call_back_over_flow(void(*func)(void)){
    4d56:	df 93       	push	r29
    4d58:	cf 93       	push	r28
    4d5a:	00 d0       	rcall	.+0      	; 0x4d5c <call_back_over_flow+0x6>
    4d5c:	cd b7       	in	r28, 0x3d	; 61
    4d5e:	de b7       	in	r29, 0x3e	; 62
    4d60:	9a 83       	std	Y+2, r25	; 0x02
    4d62:	89 83       	std	Y+1, r24	; 0x01
	ptr_T0_overflow=func;
    4d64:	89 81       	ldd	r24, Y+1	; 0x01
    4d66:	9a 81       	ldd	r25, Y+2	; 0x02
    4d68:	90 93 be 01 	sts	0x01BE, r25
    4d6c:	80 93 bd 01 	sts	0x01BD, r24
}
    4d70:	0f 90       	pop	r0
    4d72:	0f 90       	pop	r0
    4d74:	cf 91       	pop	r28
    4d76:	df 91       	pop	r29
    4d78:	08 95       	ret

00004d7a <__vector_11>:
void __vector_11(void)__attribute((signal));
void __vector_11(void){
    4d7a:	1f 92       	push	r1
    4d7c:	0f 92       	push	r0
    4d7e:	0f b6       	in	r0, 0x3f	; 63
    4d80:	0f 92       	push	r0
    4d82:	11 24       	eor	r1, r1
    4d84:	2f 93       	push	r18
    4d86:	3f 93       	push	r19
    4d88:	4f 93       	push	r20
    4d8a:	5f 93       	push	r21
    4d8c:	6f 93       	push	r22
    4d8e:	7f 93       	push	r23
    4d90:	8f 93       	push	r24
    4d92:	9f 93       	push	r25
    4d94:	af 93       	push	r26
    4d96:	bf 93       	push	r27
    4d98:	ef 93       	push	r30
    4d9a:	ff 93       	push	r31
    4d9c:	df 93       	push	r29
    4d9e:	cf 93       	push	r28
    4da0:	cd b7       	in	r28, 0x3d	; 61
    4da2:	de b7       	in	r29, 0x3e	; 62
	ptr_T0_overflow();
    4da4:	e0 91 bd 01 	lds	r30, 0x01BD
    4da8:	f0 91 be 01 	lds	r31, 0x01BE
    4dac:	09 95       	icall
	//toggle
}
    4dae:	cf 91       	pop	r28
    4db0:	df 91       	pop	r29
    4db2:	ff 91       	pop	r31
    4db4:	ef 91       	pop	r30
    4db6:	bf 91       	pop	r27
    4db8:	af 91       	pop	r26
    4dba:	9f 91       	pop	r25
    4dbc:	8f 91       	pop	r24
    4dbe:	7f 91       	pop	r23
    4dc0:	6f 91       	pop	r22
    4dc2:	5f 91       	pop	r21
    4dc4:	4f 91       	pop	r20
    4dc6:	3f 91       	pop	r19
    4dc8:	2f 91       	pop	r18
    4dca:	0f 90       	pop	r0
    4dcc:	0f be       	out	0x3f, r0	; 63
    4dce:	0f 90       	pop	r0
    4dd0:	1f 90       	pop	r1
    4dd2:	18 95       	reti

00004dd4 <Timer0_CTC_init>:

void Timer0_CTC_init(uint8 prescaler, uint8 OCR_value){
    4dd4:	df 93       	push	r29
    4dd6:	cf 93       	push	r28
    4dd8:	00 d0       	rcall	.+0      	; 0x4dda <Timer0_CTC_init+0x6>
    4dda:	cd b7       	in	r28, 0x3d	; 61
    4ddc:	de b7       	in	r29, 0x3e	; 62
    4dde:	89 83       	std	Y+1, r24	; 0x01
    4de0:	6a 83       	std	Y+2, r22	; 0x02

	//select ctc page 78
	CLR_BIT(TCCR0,6);
    4de2:	a3 e5       	ldi	r26, 0x53	; 83
    4de4:	b0 e0       	ldi	r27, 0x00	; 0
    4de6:	e3 e5       	ldi	r30, 0x53	; 83
    4de8:	f0 e0       	ldi	r31, 0x00	; 0
    4dea:	80 81       	ld	r24, Z
    4dec:	8f 7b       	andi	r24, 0xBF	; 191
    4dee:	8c 93       	st	X, r24
	SET_BIT(TCCR0,3);
    4df0:	a3 e5       	ldi	r26, 0x53	; 83
    4df2:	b0 e0       	ldi	r27, 0x00	; 0
    4df4:	e3 e5       	ldi	r30, 0x53	; 83
    4df6:	f0 e0       	ldi	r31, 0x00	; 0
    4df8:	80 81       	ld	r24, Z
    4dfa:	88 60       	ori	r24, 0x08	; 8
    4dfc:	8c 93       	st	X, r24

	OCR0=OCR_value;
    4dfe:	ec e5       	ldi	r30, 0x5C	; 92
    4e00:	f0 e0       	ldi	r31, 0x00	; 0
    4e02:	8a 81       	ldd	r24, Y+2	; 0x02
    4e04:	80 83       	st	Z, r24

	//select interrupt for ctc
	SET_BIT(TIMSK,1);
    4e06:	a9 e5       	ldi	r26, 0x59	; 89
    4e08:	b0 e0       	ldi	r27, 0x00	; 0
    4e0a:	e9 e5       	ldi	r30, 0x59	; 89
    4e0c:	f0 e0       	ldi	r31, 0x00	; 0
    4e0e:	80 81       	ld	r24, Z
    4e10:	82 60       	ori	r24, 0x02	; 2
    4e12:	8c 93       	st	X, r24

	//select prescaler
		if(prescaler==8){
    4e14:	89 81       	ldd	r24, Y+1	; 0x01
    4e16:	88 30       	cpi	r24, 0x08	; 8
    4e18:	b1 f4       	brne	.+44     	; 0x4e46 <Timer0_CTC_init+0x72>
			CLR_BIT(TCCR0,0);
    4e1a:	a3 e5       	ldi	r26, 0x53	; 83
    4e1c:	b0 e0       	ldi	r27, 0x00	; 0
    4e1e:	e3 e5       	ldi	r30, 0x53	; 83
    4e20:	f0 e0       	ldi	r31, 0x00	; 0
    4e22:	80 81       	ld	r24, Z
    4e24:	8e 7f       	andi	r24, 0xFE	; 254
    4e26:	8c 93       	st	X, r24
			SET_BIT(TCCR0,1);
    4e28:	a3 e5       	ldi	r26, 0x53	; 83
    4e2a:	b0 e0       	ldi	r27, 0x00	; 0
    4e2c:	e3 e5       	ldi	r30, 0x53	; 83
    4e2e:	f0 e0       	ldi	r31, 0x00	; 0
    4e30:	80 81       	ld	r24, Z
    4e32:	82 60       	ori	r24, 0x02	; 2
    4e34:	8c 93       	st	X, r24
			CLR_BIT(TCCR0,2);
    4e36:	a3 e5       	ldi	r26, 0x53	; 83
    4e38:	b0 e0       	ldi	r27, 0x00	; 0
    4e3a:	e3 e5       	ldi	r30, 0x53	; 83
    4e3c:	f0 e0       	ldi	r31, 0x00	; 0
    4e3e:	80 81       	ld	r24, Z
    4e40:	8b 7f       	andi	r24, 0xFB	; 251
    4e42:	8c 93       	st	X, r24
    4e44:	18 c0       	rjmp	.+48     	; 0x4e76 <Timer0_CTC_init+0xa2>
		}
		else if(prescaler==64){
    4e46:	89 81       	ldd	r24, Y+1	; 0x01
    4e48:	80 34       	cpi	r24, 0x40	; 64
    4e4a:	a9 f4       	brne	.+42     	; 0x4e76 <Timer0_CTC_init+0xa2>
			SET_BIT(TCCR0,0);
    4e4c:	a3 e5       	ldi	r26, 0x53	; 83
    4e4e:	b0 e0       	ldi	r27, 0x00	; 0
    4e50:	e3 e5       	ldi	r30, 0x53	; 83
    4e52:	f0 e0       	ldi	r31, 0x00	; 0
    4e54:	80 81       	ld	r24, Z
    4e56:	81 60       	ori	r24, 0x01	; 1
    4e58:	8c 93       	st	X, r24
			SET_BIT(TCCR0,1);
    4e5a:	a3 e5       	ldi	r26, 0x53	; 83
    4e5c:	b0 e0       	ldi	r27, 0x00	; 0
    4e5e:	e3 e5       	ldi	r30, 0x53	; 83
    4e60:	f0 e0       	ldi	r31, 0x00	; 0
    4e62:	80 81       	ld	r24, Z
    4e64:	82 60       	ori	r24, 0x02	; 2
    4e66:	8c 93       	st	X, r24
			CLR_BIT(TCCR0,2);
    4e68:	a3 e5       	ldi	r26, 0x53	; 83
    4e6a:	b0 e0       	ldi	r27, 0x00	; 0
    4e6c:	e3 e5       	ldi	r30, 0x53	; 83
    4e6e:	f0 e0       	ldi	r31, 0x00	; 0
    4e70:	80 81       	ld	r24, Z
    4e72:	8b 7f       	andi	r24, 0xFB	; 251
    4e74:	8c 93       	st	X, r24
		}
}
    4e76:	0f 90       	pop	r0
    4e78:	0f 90       	pop	r0
    4e7a:	cf 91       	pop	r28
    4e7c:	df 91       	pop	r29
    4e7e:	08 95       	ret

00004e80 <Call_back_CTC>:
void (*ptr_T0_CTC)(void);
void Call_back_CTC(void(*func)(void)){
    4e80:	df 93       	push	r29
    4e82:	cf 93       	push	r28
    4e84:	00 d0       	rcall	.+0      	; 0x4e86 <Call_back_CTC+0x6>
    4e86:	cd b7       	in	r28, 0x3d	; 61
    4e88:	de b7       	in	r29, 0x3e	; 62
    4e8a:	9a 83       	std	Y+2, r25	; 0x02
    4e8c:	89 83       	std	Y+1, r24	; 0x01
	ptr_T0_CTC=func;
    4e8e:	89 81       	ldd	r24, Y+1	; 0x01
    4e90:	9a 81       	ldd	r25, Y+2	; 0x02
    4e92:	90 93 bc 01 	sts	0x01BC, r25
    4e96:	80 93 bb 01 	sts	0x01BB, r24
}
    4e9a:	0f 90       	pop	r0
    4e9c:	0f 90       	pop	r0
    4e9e:	cf 91       	pop	r28
    4ea0:	df 91       	pop	r29
    4ea2:	08 95       	ret

00004ea4 <__vector_10>:
void __vector_10(void)__attribute((signal));
void __vector_10(void){
    4ea4:	1f 92       	push	r1
    4ea6:	0f 92       	push	r0
    4ea8:	0f b6       	in	r0, 0x3f	; 63
    4eaa:	0f 92       	push	r0
    4eac:	11 24       	eor	r1, r1
    4eae:	2f 93       	push	r18
    4eb0:	3f 93       	push	r19
    4eb2:	4f 93       	push	r20
    4eb4:	5f 93       	push	r21
    4eb6:	6f 93       	push	r22
    4eb8:	7f 93       	push	r23
    4eba:	8f 93       	push	r24
    4ebc:	9f 93       	push	r25
    4ebe:	af 93       	push	r26
    4ec0:	bf 93       	push	r27
    4ec2:	ef 93       	push	r30
    4ec4:	ff 93       	push	r31
    4ec6:	df 93       	push	r29
    4ec8:	cf 93       	push	r28
    4eca:	cd b7       	in	r28, 0x3d	; 61
    4ecc:	de b7       	in	r29, 0x3e	; 62
	ptr_T0_CTC();
    4ece:	e0 91 bb 01 	lds	r30, 0x01BB
    4ed2:	f0 91 bc 01 	lds	r31, 0x01BC
    4ed6:	09 95       	icall
	//toggle
}
    4ed8:	cf 91       	pop	r28
    4eda:	df 91       	pop	r29
    4edc:	ff 91       	pop	r31
    4ede:	ef 91       	pop	r30
    4ee0:	bf 91       	pop	r27
    4ee2:	af 91       	pop	r26
    4ee4:	9f 91       	pop	r25
    4ee6:	8f 91       	pop	r24
    4ee8:	7f 91       	pop	r23
    4eea:	6f 91       	pop	r22
    4eec:	5f 91       	pop	r21
    4eee:	4f 91       	pop	r20
    4ef0:	3f 91       	pop	r19
    4ef2:	2f 91       	pop	r18
    4ef4:	0f 90       	pop	r0
    4ef6:	0f be       	out	0x3f, r0	; 63
    4ef8:	0f 90       	pop	r0
    4efa:	1f 90       	pop	r1
    4efc:	18 95       	reti

00004efe <ADC_voidInit>:
#include "ADC_config.h"



void ADC_voidInit(void)
{
    4efe:	df 93       	push	r29
    4f00:	cf 93       	push	r28
    4f02:	cd b7       	in	r28, 0x3d	; 61
    4f04:	de b7       	in	r29, 0x3e	; 62
	/* select vref: AVCC at reference voltage */
	SET_BIT(ADMUX, ADMUX_REFS0);
    4f06:	a7 e2       	ldi	r26, 0x27	; 39
    4f08:	b0 e0       	ldi	r27, 0x00	; 0
    4f0a:	e7 e2       	ldi	r30, 0x27	; 39
    4f0c:	f0 e0       	ldi	r31, 0x00	; 0
    4f0e:	80 81       	ld	r24, Z
    4f10:	80 64       	ori	r24, 0x40	; 64
    4f12:	8c 93       	st	X, r24
	CLR_BIT(ADMUX, ADMUX_REFS1);
    4f14:	a7 e2       	ldi	r26, 0x27	; 39
    4f16:	b0 e0       	ldi	r27, 0x00	; 0
    4f18:	e7 e2       	ldi	r30, 0x27	; 39
    4f1a:	f0 e0       	ldi	r31, 0x00	; 0
    4f1c:	80 81       	ld	r24, Z
    4f1e:	8f 77       	andi	r24, 0x7F	; 127
    4f20:	8c 93       	st	X, r24
	
	/* Activate Right adjust result 	*/
	//CLR_BIT(ADMUX, ADMUX_ADLAR);

	/*		No auto trigger 		*/
	CLR_BIT(ADCSRA, ADCSRA_ADATE);
    4f22:	a6 e2       	ldi	r26, 0x26	; 38
    4f24:	b0 e0       	ldi	r27, 0x00	; 0
    4f26:	e6 e2       	ldi	r30, 0x26	; 38
    4f28:	f0 e0       	ldi	r31, 0x00	; 0
    4f2a:	80 81       	ld	r24, Z
    4f2c:	8f 7d       	andi	r24, 0xDF	; 223
    4f2e:	8c 93       	st	X, r24

	/* 	ADC Prescaler Select Bits	*/
	SET_BIT(ADCSRA, ADCSRA_ADPS0);
    4f30:	a6 e2       	ldi	r26, 0x26	; 38
    4f32:	b0 e0       	ldi	r27, 0x00	; 0
    4f34:	e6 e2       	ldi	r30, 0x26	; 38
    4f36:	f0 e0       	ldi	r31, 0x00	; 0
    4f38:	80 81       	ld	r24, Z
    4f3a:	81 60       	ori	r24, 0x01	; 1
    4f3c:	8c 93       	st	X, r24
	SET_BIT(ADCSRA, ADCSRA_ADPS1);
    4f3e:	a6 e2       	ldi	r26, 0x26	; 38
    4f40:	b0 e0       	ldi	r27, 0x00	; 0
    4f42:	e6 e2       	ldi	r30, 0x26	; 38
    4f44:	f0 e0       	ldi	r31, 0x00	; 0
    4f46:	80 81       	ld	r24, Z
    4f48:	82 60       	ori	r24, 0x02	; 2
    4f4a:	8c 93       	st	X, r24
	SET_BIT(ADCSRA, ADCSRA_ADPS2);
    4f4c:	a6 e2       	ldi	r26, 0x26	; 38
    4f4e:	b0 e0       	ldi	r27, 0x00	; 0
    4f50:	e6 e2       	ldi	r30, 0x26	; 38
    4f52:	f0 e0       	ldi	r31, 0x00	; 0
    4f54:	80 81       	ld	r24, Z
    4f56:	84 60       	ori	r24, 0x04	; 4
    4f58:	8c 93       	st	X, r24


	/*		  set prescaler			*/
	ADCSRA &= ADC_PRESC_MASK;
    4f5a:	a6 e2       	ldi	r26, 0x26	; 38
    4f5c:	b0 e0       	ldi	r27, 0x00	; 0
    4f5e:	e6 e2       	ldi	r30, 0x26	; 38
    4f60:	f0 e0       	ldi	r31, 0x00	; 0
    4f62:	80 81       	ld	r24, Z
    4f64:	88 7f       	andi	r24, 0xF8	; 248
    4f66:	8c 93       	st	X, r24
	ADCSRA |= ADC_PRESC;
    4f68:	a6 e2       	ldi	r26, 0x26	; 38
    4f6a:	b0 e0       	ldi	r27, 0x00	; 0
    4f6c:	e6 e2       	ldi	r30, 0x26	; 38
    4f6e:	f0 e0       	ldi	r31, 0x00	; 0
    4f70:	80 81       	ld	r24, Z
    4f72:	87 60       	ori	r24, 0x07	; 7
    4f74:	8c 93       	st	X, r24

	/*			ADC Enable 			*/
	SET_BIT(ADCSRA, ADCSRA_ADEN);
    4f76:	a6 e2       	ldi	r26, 0x26	; 38
    4f78:	b0 e0       	ldi	r27, 0x00	; 0
    4f7a:	e6 e2       	ldi	r30, 0x26	; 38
    4f7c:	f0 e0       	ldi	r31, 0x00	; 0
    4f7e:	80 81       	ld	r24, Z
    4f80:	80 68       	ori	r24, 0x80	; 128
    4f82:	8c 93       	st	X, r24


}
    4f84:	cf 91       	pop	r28
    4f86:	df 91       	pop	r29
    4f88:	08 95       	ret

00004f8a <ADC_u8StartConversion>:



uint16 ADC_u8StartConversion(uint8 Copy_u8ChannelNumber)
{
    4f8a:	df 93       	push	r29
    4f8c:	cf 93       	push	r28
    4f8e:	0f 92       	push	r0
    4f90:	cd b7       	in	r28, 0x3d	; 61
    4f92:	de b7       	in	r29, 0x3e	; 62
    4f94:	89 83       	std	Y+1, r24	; 0x01
	/*		 ADC Set Channel		*/
	ADMUX &= ADC_CHANNEL_MASK;
    4f96:	a7 e2       	ldi	r26, 0x27	; 39
    4f98:	b0 e0       	ldi	r27, 0x00	; 0
    4f9a:	e7 e2       	ldi	r30, 0x27	; 39
    4f9c:	f0 e0       	ldi	r31, 0x00	; 0
    4f9e:	80 81       	ld	r24, Z
    4fa0:	80 7e       	andi	r24, 0xE0	; 224
    4fa2:	8c 93       	st	X, r24
	ADMUX |= Copy_u8ChannelNumber;
    4fa4:	a7 e2       	ldi	r26, 0x27	; 39
    4fa6:	b0 e0       	ldi	r27, 0x00	; 0
    4fa8:	e7 e2       	ldi	r30, 0x27	; 39
    4faa:	f0 e0       	ldi	r31, 0x00	; 0
    4fac:	90 81       	ld	r25, Z
    4fae:	89 81       	ldd	r24, Y+1	; 0x01
    4fb0:	89 2b       	or	r24, r25
    4fb2:	8c 93       	st	X, r24
//	/*		   	Enable ADC  		*/
//	SET_BIT(ADCSRA, ADCSRA_ADSC);


	/*		Start Conversion		*/
	SET_BIT(ADCSRA, ADCSRA_ADSC);
    4fb4:	a6 e2       	ldi	r26, 0x26	; 38
    4fb6:	b0 e0       	ldi	r27, 0x00	; 0
    4fb8:	e6 e2       	ldi	r30, 0x26	; 38
    4fba:	f0 e0       	ldi	r31, 0x00	; 0
    4fbc:	80 81       	ld	r24, Z
    4fbe:	80 64       	ori	r24, 0x40	; 64
    4fc0:	8c 93       	st	X, r24


	/* Wait for Conversion Complete falg */
	while (GET_BIT(ADCSRA, ADCSRA_ADIF) == 0 );
    4fc2:	e6 e2       	ldi	r30, 0x26	; 38
    4fc4:	f0 e0       	ldi	r31, 0x00	; 0
    4fc6:	80 81       	ld	r24, Z
    4fc8:	82 95       	swap	r24
    4fca:	8f 70       	andi	r24, 0x0F	; 15
    4fcc:	88 2f       	mov	r24, r24
    4fce:	90 e0       	ldi	r25, 0x00	; 0
    4fd0:	81 70       	andi	r24, 0x01	; 1
    4fd2:	90 70       	andi	r25, 0x00	; 0
    4fd4:	00 97       	sbiw	r24, 0x00	; 0
    4fd6:	a9 f3       	breq	.-22     	; 0x4fc2 <ADC_u8StartConversion+0x38>
	SET_BIT(ADCSRA, ADCSRA_ADIF);  // reset flag 
    4fd8:	a6 e2       	ldi	r26, 0x26	; 38
    4fda:	b0 e0       	ldi	r27, 0x00	; 0
    4fdc:	e6 e2       	ldi	r30, 0x26	; 38
    4fde:	f0 e0       	ldi	r31, 0x00	; 0
    4fe0:	80 81       	ld	r24, Z
    4fe2:	80 61       	ori	r24, 0x10	; 16
    4fe4:	8c 93       	st	X, r24


	return ADC;
    4fe6:	e4 e2       	ldi	r30, 0x24	; 36
    4fe8:	f0 e0       	ldi	r31, 0x00	; 0
    4fea:	80 81       	ld	r24, Z
    4fec:	91 81       	ldd	r25, Z+1	; 0x01
}
    4fee:	0f 90       	pop	r0
    4ff0:	cf 91       	pop	r28
    4ff2:	df 91       	pop	r29
    4ff4:	08 95       	ret

00004ff6 <GIE_voidEnable>:
#include "GIE_interface.h"
#include "GIE_config.h"
#include "GIE_private.h"

void GIE_voidEnable ()
{
    4ff6:	df 93       	push	r29
    4ff8:	cf 93       	push	r28
    4ffa:	cd b7       	in	r28, 0x3d	; 61
    4ffc:	de b7       	in	r29, 0x3e	; 62
    SET_BIT(SREG, SREG_BIT7);
    4ffe:	af e5       	ldi	r26, 0x5F	; 95
    5000:	b0 e0       	ldi	r27, 0x00	; 0
    5002:	ef e5       	ldi	r30, 0x5F	; 95
    5004:	f0 e0       	ldi	r31, 0x00	; 0
    5006:	80 81       	ld	r24, Z
    5008:	80 68       	ori	r24, 0x80	; 128
    500a:	8c 93       	st	X, r24
}
    500c:	cf 91       	pop	r28
    500e:	df 91       	pop	r29
    5010:	08 95       	ret

00005012 <GIE_voidDisable>:

void GIE_voidDisable ()
{
    5012:	df 93       	push	r29
    5014:	cf 93       	push	r28
    5016:	cd b7       	in	r28, 0x3d	; 61
    5018:	de b7       	in	r29, 0x3e	; 62
    CLR_BIT(SREG, SREG_BIT7);
    501a:	af e5       	ldi	r26, 0x5F	; 95
    501c:	b0 e0       	ldi	r27, 0x00	; 0
    501e:	ef e5       	ldi	r30, 0x5F	; 95
    5020:	f0 e0       	ldi	r31, 0x00	; 0
    5022:	80 81       	ld	r24, Z
    5024:	8f 77       	andi	r24, 0x7F	; 127
    5026:	8c 93       	st	X, r24
}
    5028:	cf 91       	pop	r28
    502a:	df 91       	pop	r29
    502c:	08 95       	ret

0000502e <EXT_INT_voidInit>:
 #include "EXT_INT_config.h"
 #include "EXT_INT_private.h"

void (*GAPF[3])(void) = {NULL, NULL, NULL}; // Group of array of Pointers
void EXT_INT_voidInit(uint8 Copy_u8INT_Num, uint8 Copy_u8SenseControl)
{
    502e:	df 93       	push	r29
    5030:	cf 93       	push	r28
    5032:	cd b7       	in	r28, 0x3d	; 61
    5034:	de b7       	in	r29, 0x3e	; 62
    5036:	28 97       	sbiw	r28, 0x08	; 8
    5038:	0f b6       	in	r0, 0x3f	; 63
    503a:	f8 94       	cli
    503c:	de bf       	out	0x3e, r29	; 62
    503e:	0f be       	out	0x3f, r0	; 63
    5040:	cd bf       	out	0x3d, r28	; 61
    5042:	89 83       	std	Y+1, r24	; 0x01
    5044:	6a 83       	std	Y+2, r22	; 0x02
    if(Copy_u8INT_Num == INT0)
    5046:	89 81       	ldd	r24, Y+1	; 0x01
    5048:	88 23       	and	r24, r24
    504a:	09 f0       	breq	.+2      	; 0x504e <EXT_INT_voidInit+0x20>
    504c:	63 c0       	rjmp	.+198    	; 0x5114 <EXT_INT_voidInit+0xe6>
    {
        switch(Copy_u8SenseControl)
    504e:	8a 81       	ldd	r24, Y+2	; 0x02
    5050:	28 2f       	mov	r18, r24
    5052:	30 e0       	ldi	r19, 0x00	; 0
    5054:	38 87       	std	Y+8, r19	; 0x08
    5056:	2f 83       	std	Y+7, r18	; 0x07
    5058:	8f 81       	ldd	r24, Y+7	; 0x07
    505a:	98 85       	ldd	r25, Y+8	; 0x08
    505c:	82 30       	cpi	r24, 0x02	; 2
    505e:	91 05       	cpc	r25, r1
    5060:	29 f1       	breq	.+74     	; 0x50ac <EXT_INT_voidInit+0x7e>
    5062:	2f 81       	ldd	r18, Y+7	; 0x07
    5064:	38 85       	ldd	r19, Y+8	; 0x08
    5066:	23 30       	cpi	r18, 0x03	; 3
    5068:	31 05       	cpc	r19, r1
    506a:	34 f4       	brge	.+12     	; 0x5078 <EXT_INT_voidInit+0x4a>
    506c:	8f 81       	ldd	r24, Y+7	; 0x07
    506e:	98 85       	ldd	r25, Y+8	; 0x08
    5070:	81 30       	cpi	r24, 0x01	; 1
    5072:	91 05       	cpc	r25, r1
    5074:	61 f0       	breq	.+24     	; 0x508e <EXT_INT_voidInit+0x60>
    5076:	46 c0       	rjmp	.+140    	; 0x5104 <EXT_INT_voidInit+0xd6>
    5078:	2f 81       	ldd	r18, Y+7	; 0x07
    507a:	38 85       	ldd	r19, Y+8	; 0x08
    507c:	23 30       	cpi	r18, 0x03	; 3
    507e:	31 05       	cpc	r19, r1
    5080:	21 f1       	breq	.+72     	; 0x50ca <EXT_INT_voidInit+0x9c>
    5082:	8f 81       	ldd	r24, Y+7	; 0x07
    5084:	98 85       	ldd	r25, Y+8	; 0x08
    5086:	84 30       	cpi	r24, 0x04	; 4
    5088:	91 05       	cpc	r25, r1
    508a:	71 f1       	breq	.+92     	; 0x50e8 <EXT_INT_voidInit+0xba>
    508c:	3b c0       	rjmp	.+118    	; 0x5104 <EXT_INT_voidInit+0xd6>
        {
            case INT_LOW_LEVEL:
             CLR_BIT(MCUCR, MCUCR_ISC00); 
    508e:	a5 e5       	ldi	r26, 0x55	; 85
    5090:	b0 e0       	ldi	r27, 0x00	; 0
    5092:	e5 e5       	ldi	r30, 0x55	; 85
    5094:	f0 e0       	ldi	r31, 0x00	; 0
    5096:	80 81       	ld	r24, Z
    5098:	8e 7f       	andi	r24, 0xFE	; 254
    509a:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC01); 
    509c:	a5 e5       	ldi	r26, 0x55	; 85
    509e:	b0 e0       	ldi	r27, 0x00	; 0
    50a0:	e5 e5       	ldi	r30, 0x55	; 85
    50a2:	f0 e0       	ldi	r31, 0x00	; 0
    50a4:	80 81       	ld	r24, Z
    50a6:	8d 7f       	andi	r24, 0xFD	; 253
    50a8:	8c 93       	st	X, r24
    50aa:	2c c0       	rjmp	.+88     	; 0x5104 <EXT_INT_voidInit+0xd6>
             break;
            
            case INT_ANY_CHANGE:
             SET_BIT(MCUCR, MCUCR_ISC00); 
    50ac:	a5 e5       	ldi	r26, 0x55	; 85
    50ae:	b0 e0       	ldi	r27, 0x00	; 0
    50b0:	e5 e5       	ldi	r30, 0x55	; 85
    50b2:	f0 e0       	ldi	r31, 0x00	; 0
    50b4:	80 81       	ld	r24, Z
    50b6:	81 60       	ori	r24, 0x01	; 1
    50b8:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC01); 
    50ba:	a5 e5       	ldi	r26, 0x55	; 85
    50bc:	b0 e0       	ldi	r27, 0x00	; 0
    50be:	e5 e5       	ldi	r30, 0x55	; 85
    50c0:	f0 e0       	ldi	r31, 0x00	; 0
    50c2:	80 81       	ld	r24, Z
    50c4:	8d 7f       	andi	r24, 0xFD	; 253
    50c6:	8c 93       	st	X, r24
    50c8:	1d c0       	rjmp	.+58     	; 0x5104 <EXT_INT_voidInit+0xd6>
             break;
            
            case INT_FALLING_EDGE:
             CLR_BIT(MCUCR, MCUCR_ISC00); 
    50ca:	a5 e5       	ldi	r26, 0x55	; 85
    50cc:	b0 e0       	ldi	r27, 0x00	; 0
    50ce:	e5 e5       	ldi	r30, 0x55	; 85
    50d0:	f0 e0       	ldi	r31, 0x00	; 0
    50d2:	80 81       	ld	r24, Z
    50d4:	8e 7f       	andi	r24, 0xFE	; 254
    50d6:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC01); 
    50d8:	a5 e5       	ldi	r26, 0x55	; 85
    50da:	b0 e0       	ldi	r27, 0x00	; 0
    50dc:	e5 e5       	ldi	r30, 0x55	; 85
    50de:	f0 e0       	ldi	r31, 0x00	; 0
    50e0:	80 81       	ld	r24, Z
    50e2:	82 60       	ori	r24, 0x02	; 2
    50e4:	8c 93       	st	X, r24
    50e6:	0e c0       	rjmp	.+28     	; 0x5104 <EXT_INT_voidInit+0xd6>
             break;
            
            case INT_RISSING_EDGE:
             SET_BIT(MCUCR, MCUCR_ISC00); 
    50e8:	a5 e5       	ldi	r26, 0x55	; 85
    50ea:	b0 e0       	ldi	r27, 0x00	; 0
    50ec:	e5 e5       	ldi	r30, 0x55	; 85
    50ee:	f0 e0       	ldi	r31, 0x00	; 0
    50f0:	80 81       	ld	r24, Z
    50f2:	81 60       	ori	r24, 0x01	; 1
    50f4:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC01); 
    50f6:	a5 e5       	ldi	r26, 0x55	; 85
    50f8:	b0 e0       	ldi	r27, 0x00	; 0
    50fa:	e5 e5       	ldi	r30, 0x55	; 85
    50fc:	f0 e0       	ldi	r31, 0x00	; 0
    50fe:	80 81       	ld	r24, Z
    5100:	82 60       	ori	r24, 0x02	; 2
    5102:	8c 93       	st	X, r24
             break;
        }

        SET_BIT(GICR, GICR_INT0);               
    5104:	ab e5       	ldi	r26, 0x5B	; 91
    5106:	b0 e0       	ldi	r27, 0x00	; 0
    5108:	eb e5       	ldi	r30, 0x5B	; 91
    510a:	f0 e0       	ldi	r31, 0x00	; 0
    510c:	80 81       	ld	r24, Z
    510e:	80 64       	ori	r24, 0x40	; 64
    5110:	8c 93       	st	X, r24
    5112:	90 c0       	rjmp	.+288    	; 0x5234 <EXT_INT_voidInit+0x206>
    }
    
    else if(Copy_u8INT_Num == INT1)
    5114:	89 81       	ldd	r24, Y+1	; 0x01
    5116:	81 30       	cpi	r24, 0x01	; 1
    5118:	09 f0       	breq	.+2      	; 0x511c <EXT_INT_voidInit+0xee>
    511a:	63 c0       	rjmp	.+198    	; 0x51e2 <EXT_INT_voidInit+0x1b4>
    {
        switch(Copy_u8SenseControl)
    511c:	8a 81       	ldd	r24, Y+2	; 0x02
    511e:	28 2f       	mov	r18, r24
    5120:	30 e0       	ldi	r19, 0x00	; 0
    5122:	3e 83       	std	Y+6, r19	; 0x06
    5124:	2d 83       	std	Y+5, r18	; 0x05
    5126:	8d 81       	ldd	r24, Y+5	; 0x05
    5128:	9e 81       	ldd	r25, Y+6	; 0x06
    512a:	82 30       	cpi	r24, 0x02	; 2
    512c:	91 05       	cpc	r25, r1
    512e:	29 f1       	breq	.+74     	; 0x517a <EXT_INT_voidInit+0x14c>
    5130:	2d 81       	ldd	r18, Y+5	; 0x05
    5132:	3e 81       	ldd	r19, Y+6	; 0x06
    5134:	23 30       	cpi	r18, 0x03	; 3
    5136:	31 05       	cpc	r19, r1
    5138:	34 f4       	brge	.+12     	; 0x5146 <EXT_INT_voidInit+0x118>
    513a:	8d 81       	ldd	r24, Y+5	; 0x05
    513c:	9e 81       	ldd	r25, Y+6	; 0x06
    513e:	81 30       	cpi	r24, 0x01	; 1
    5140:	91 05       	cpc	r25, r1
    5142:	61 f0       	breq	.+24     	; 0x515c <EXT_INT_voidInit+0x12e>
    5144:	46 c0       	rjmp	.+140    	; 0x51d2 <EXT_INT_voidInit+0x1a4>
    5146:	2d 81       	ldd	r18, Y+5	; 0x05
    5148:	3e 81       	ldd	r19, Y+6	; 0x06
    514a:	23 30       	cpi	r18, 0x03	; 3
    514c:	31 05       	cpc	r19, r1
    514e:	21 f1       	breq	.+72     	; 0x5198 <EXT_INT_voidInit+0x16a>
    5150:	8d 81       	ldd	r24, Y+5	; 0x05
    5152:	9e 81       	ldd	r25, Y+6	; 0x06
    5154:	84 30       	cpi	r24, 0x04	; 4
    5156:	91 05       	cpc	r25, r1
    5158:	71 f1       	breq	.+92     	; 0x51b6 <EXT_INT_voidInit+0x188>
    515a:	3b c0       	rjmp	.+118    	; 0x51d2 <EXT_INT_voidInit+0x1a4>
        {
            case INT_LOW_LEVEL:
             CLR_BIT(MCUCR, MCUCR_ISC10); 
    515c:	a5 e5       	ldi	r26, 0x55	; 85
    515e:	b0 e0       	ldi	r27, 0x00	; 0
    5160:	e5 e5       	ldi	r30, 0x55	; 85
    5162:	f0 e0       	ldi	r31, 0x00	; 0
    5164:	80 81       	ld	r24, Z
    5166:	8b 7f       	andi	r24, 0xFB	; 251
    5168:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC11); 
    516a:	a5 e5       	ldi	r26, 0x55	; 85
    516c:	b0 e0       	ldi	r27, 0x00	; 0
    516e:	e5 e5       	ldi	r30, 0x55	; 85
    5170:	f0 e0       	ldi	r31, 0x00	; 0
    5172:	80 81       	ld	r24, Z
    5174:	87 7f       	andi	r24, 0xF7	; 247
    5176:	8c 93       	st	X, r24
    5178:	2c c0       	rjmp	.+88     	; 0x51d2 <EXT_INT_voidInit+0x1a4>
             break;
            
            case INT_ANY_CHANGE:
             SET_BIT(MCUCR, MCUCR_ISC10); 
    517a:	a5 e5       	ldi	r26, 0x55	; 85
    517c:	b0 e0       	ldi	r27, 0x00	; 0
    517e:	e5 e5       	ldi	r30, 0x55	; 85
    5180:	f0 e0       	ldi	r31, 0x00	; 0
    5182:	80 81       	ld	r24, Z
    5184:	84 60       	ori	r24, 0x04	; 4
    5186:	8c 93       	st	X, r24
             CLR_BIT(MCUCR, MCUCR_ISC11); 
    5188:	a5 e5       	ldi	r26, 0x55	; 85
    518a:	b0 e0       	ldi	r27, 0x00	; 0
    518c:	e5 e5       	ldi	r30, 0x55	; 85
    518e:	f0 e0       	ldi	r31, 0x00	; 0
    5190:	80 81       	ld	r24, Z
    5192:	87 7f       	andi	r24, 0xF7	; 247
    5194:	8c 93       	st	X, r24
    5196:	1d c0       	rjmp	.+58     	; 0x51d2 <EXT_INT_voidInit+0x1a4>
             break;
            
            case INT_FALLING_EDGE:
             CLR_BIT(MCUCR, MCUCR_ISC10); 
    5198:	a5 e5       	ldi	r26, 0x55	; 85
    519a:	b0 e0       	ldi	r27, 0x00	; 0
    519c:	e5 e5       	ldi	r30, 0x55	; 85
    519e:	f0 e0       	ldi	r31, 0x00	; 0
    51a0:	80 81       	ld	r24, Z
    51a2:	8b 7f       	andi	r24, 0xFB	; 251
    51a4:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC11); 
    51a6:	a5 e5       	ldi	r26, 0x55	; 85
    51a8:	b0 e0       	ldi	r27, 0x00	; 0
    51aa:	e5 e5       	ldi	r30, 0x55	; 85
    51ac:	f0 e0       	ldi	r31, 0x00	; 0
    51ae:	80 81       	ld	r24, Z
    51b0:	88 60       	ori	r24, 0x08	; 8
    51b2:	8c 93       	st	X, r24
    51b4:	0e c0       	rjmp	.+28     	; 0x51d2 <EXT_INT_voidInit+0x1a4>
             break;
            
            case INT_RISSING_EDGE:
             SET_BIT(MCUCR, MCUCR_ISC10); 
    51b6:	a5 e5       	ldi	r26, 0x55	; 85
    51b8:	b0 e0       	ldi	r27, 0x00	; 0
    51ba:	e5 e5       	ldi	r30, 0x55	; 85
    51bc:	f0 e0       	ldi	r31, 0x00	; 0
    51be:	80 81       	ld	r24, Z
    51c0:	84 60       	ori	r24, 0x04	; 4
    51c2:	8c 93       	st	X, r24
             SET_BIT(MCUCR, MCUCR_ISC11); 
    51c4:	a5 e5       	ldi	r26, 0x55	; 85
    51c6:	b0 e0       	ldi	r27, 0x00	; 0
    51c8:	e5 e5       	ldi	r30, 0x55	; 85
    51ca:	f0 e0       	ldi	r31, 0x00	; 0
    51cc:	80 81       	ld	r24, Z
    51ce:	88 60       	ori	r24, 0x08	; 8
    51d0:	8c 93       	st	X, r24
             break;

        }
        SET_BIT(GICR, GICR_INT1);
    51d2:	ab e5       	ldi	r26, 0x5B	; 91
    51d4:	b0 e0       	ldi	r27, 0x00	; 0
    51d6:	eb e5       	ldi	r30, 0x5B	; 91
    51d8:	f0 e0       	ldi	r31, 0x00	; 0
    51da:	80 81       	ld	r24, Z
    51dc:	80 68       	ori	r24, 0x80	; 128
    51de:	8c 93       	st	X, r24
    51e0:	29 c0       	rjmp	.+82     	; 0x5234 <EXT_INT_voidInit+0x206>
    }

    else if(Copy_u8INT_Num == INT2)
    51e2:	89 81       	ldd	r24, Y+1	; 0x01
    51e4:	82 30       	cpi	r24, 0x02	; 2
    51e6:	31 f5       	brne	.+76     	; 0x5234 <EXT_INT_voidInit+0x206>
    {
        switch(Copy_u8SenseControl)
    51e8:	8a 81       	ldd	r24, Y+2	; 0x02
    51ea:	28 2f       	mov	r18, r24
    51ec:	30 e0       	ldi	r19, 0x00	; 0
    51ee:	3c 83       	std	Y+4, r19	; 0x04
    51f0:	2b 83       	std	Y+3, r18	; 0x03
    51f2:	8b 81       	ldd	r24, Y+3	; 0x03
    51f4:	9c 81       	ldd	r25, Y+4	; 0x04
    51f6:	83 30       	cpi	r24, 0x03	; 3
    51f8:	91 05       	cpc	r25, r1
    51fa:	31 f0       	breq	.+12     	; 0x5208 <EXT_INT_voidInit+0x1da>
    51fc:	2b 81       	ldd	r18, Y+3	; 0x03
    51fe:	3c 81       	ldd	r19, Y+4	; 0x04
    5200:	24 30       	cpi	r18, 0x04	; 4
    5202:	31 05       	cpc	r19, r1
    5204:	49 f0       	breq	.+18     	; 0x5218 <EXT_INT_voidInit+0x1ea>
    5206:	0f c0       	rjmp	.+30     	; 0x5226 <EXT_INT_voidInit+0x1f8>
        {
            case INT_FALLING_EDGE: CLR_BIT(MCUCSR, MCUCSR_ISC2); break;
    5208:	a4 e5       	ldi	r26, 0x54	; 84
    520a:	b0 e0       	ldi	r27, 0x00	; 0
    520c:	e4 e5       	ldi	r30, 0x54	; 84
    520e:	f0 e0       	ldi	r31, 0x00	; 0
    5210:	80 81       	ld	r24, Z
    5212:	8f 7b       	andi	r24, 0xBF	; 191
    5214:	8c 93       	st	X, r24
    5216:	07 c0       	rjmp	.+14     	; 0x5226 <EXT_INT_voidInit+0x1f8>
            case INT_RISSING_EDGE: SET_BIT(MCUCSR, MCUCSR_ISC2); break;
    5218:	a4 e5       	ldi	r26, 0x54	; 84
    521a:	b0 e0       	ldi	r27, 0x00	; 0
    521c:	e4 e5       	ldi	r30, 0x54	; 84
    521e:	f0 e0       	ldi	r31, 0x00	; 0
    5220:	80 81       	ld	r24, Z
    5222:	80 64       	ori	r24, 0x40	; 64
    5224:	8c 93       	st	X, r24
        }
        SET_BIT(GICR, GICR_INT2);
    5226:	ab e5       	ldi	r26, 0x5B	; 91
    5228:	b0 e0       	ldi	r27, 0x00	; 0
    522a:	eb e5       	ldi	r30, 0x5B	; 91
    522c:	f0 e0       	ldi	r31, 0x00	; 0
    522e:	80 81       	ld	r24, Z
    5230:	80 62       	ori	r24, 0x20	; 32
    5232:	8c 93       	st	X, r24
    }
}
    5234:	28 96       	adiw	r28, 0x08	; 8
    5236:	0f b6       	in	r0, 0x3f	; 63
    5238:	f8 94       	cli
    523a:	de bf       	out	0x3e, r29	; 62
    523c:	0f be       	out	0x3f, r0	; 63
    523e:	cd bf       	out	0x3d, r28	; 61
    5240:	cf 91       	pop	r28
    5242:	df 91       	pop	r29
    5244:	08 95       	ret

00005246 <EXT_INT_voidSetCallBack>:

void EXT_INT_voidSetCallBack(void (*PF)(void), uint8 Copyu8EXT_INT_Num)  
{
    5246:	df 93       	push	r29
    5248:	cf 93       	push	r28
    524a:	00 d0       	rcall	.+0      	; 0x524c <EXT_INT_voidSetCallBack+0x6>
    524c:	0f 92       	push	r0
    524e:	cd b7       	in	r28, 0x3d	; 61
    5250:	de b7       	in	r29, 0x3e	; 62
    5252:	9a 83       	std	Y+2, r25	; 0x02
    5254:	89 83       	std	Y+1, r24	; 0x01
    5256:	6b 83       	std	Y+3, r22	; 0x03
    GAPF[Copyu8EXT_INT_Num] = PF; 
    5258:	8b 81       	ldd	r24, Y+3	; 0x03
    525a:	88 2f       	mov	r24, r24
    525c:	90 e0       	ldi	r25, 0x00	; 0
    525e:	88 0f       	add	r24, r24
    5260:	99 1f       	adc	r25, r25
    5262:	fc 01       	movw	r30, r24
    5264:	eb 54       	subi	r30, 0x4B	; 75
    5266:	fe 4f       	sbci	r31, 0xFE	; 254
    5268:	89 81       	ldd	r24, Y+1	; 0x01
    526a:	9a 81       	ldd	r25, Y+2	; 0x02
    526c:	91 83       	std	Z+1, r25	; 0x01
    526e:	80 83       	st	Z, r24
}
    5270:	0f 90       	pop	r0
    5272:	0f 90       	pop	r0
    5274:	0f 90       	pop	r0
    5276:	cf 91       	pop	r28
    5278:	df 91       	pop	r29
    527a:	08 95       	ret

0000527c <__vector_1>:


void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
    527c:	1f 92       	push	r1
    527e:	0f 92       	push	r0
    5280:	0f b6       	in	r0, 0x3f	; 63
    5282:	0f 92       	push	r0
    5284:	11 24       	eor	r1, r1
    5286:	2f 93       	push	r18
    5288:	3f 93       	push	r19
    528a:	4f 93       	push	r20
    528c:	5f 93       	push	r21
    528e:	6f 93       	push	r22
    5290:	7f 93       	push	r23
    5292:	8f 93       	push	r24
    5294:	9f 93       	push	r25
    5296:	af 93       	push	r26
    5298:	bf 93       	push	r27
    529a:	ef 93       	push	r30
    529c:	ff 93       	push	r31
    529e:	df 93       	push	r29
    52a0:	cf 93       	push	r28
    52a2:	cd b7       	in	r28, 0x3d	; 61
    52a4:	de b7       	in	r29, 0x3e	; 62
    GAPF[INT0]();
    52a6:	e0 91 b5 01 	lds	r30, 0x01B5
    52aa:	f0 91 b6 01 	lds	r31, 0x01B6
    52ae:	09 95       	icall
}
    52b0:	cf 91       	pop	r28
    52b2:	df 91       	pop	r29
    52b4:	ff 91       	pop	r31
    52b6:	ef 91       	pop	r30
    52b8:	bf 91       	pop	r27
    52ba:	af 91       	pop	r26
    52bc:	9f 91       	pop	r25
    52be:	8f 91       	pop	r24
    52c0:	7f 91       	pop	r23
    52c2:	6f 91       	pop	r22
    52c4:	5f 91       	pop	r21
    52c6:	4f 91       	pop	r20
    52c8:	3f 91       	pop	r19
    52ca:	2f 91       	pop	r18
    52cc:	0f 90       	pop	r0
    52ce:	0f be       	out	0x3f, r0	; 63
    52d0:	0f 90       	pop	r0
    52d2:	1f 90       	pop	r1
    52d4:	18 95       	reti

000052d6 <__vector_2>:

void __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
    52d6:	1f 92       	push	r1
    52d8:	0f 92       	push	r0
    52da:	0f b6       	in	r0, 0x3f	; 63
    52dc:	0f 92       	push	r0
    52de:	11 24       	eor	r1, r1
    52e0:	2f 93       	push	r18
    52e2:	3f 93       	push	r19
    52e4:	4f 93       	push	r20
    52e6:	5f 93       	push	r21
    52e8:	6f 93       	push	r22
    52ea:	7f 93       	push	r23
    52ec:	8f 93       	push	r24
    52ee:	9f 93       	push	r25
    52f0:	af 93       	push	r26
    52f2:	bf 93       	push	r27
    52f4:	ef 93       	push	r30
    52f6:	ff 93       	push	r31
    52f8:	df 93       	push	r29
    52fa:	cf 93       	push	r28
    52fc:	cd b7       	in	r28, 0x3d	; 61
    52fe:	de b7       	in	r29, 0x3e	; 62
    GAPF[INT1]();
    5300:	e0 91 b7 01 	lds	r30, 0x01B7
    5304:	f0 91 b8 01 	lds	r31, 0x01B8
    5308:	09 95       	icall
}
    530a:	cf 91       	pop	r28
    530c:	df 91       	pop	r29
    530e:	ff 91       	pop	r31
    5310:	ef 91       	pop	r30
    5312:	bf 91       	pop	r27
    5314:	af 91       	pop	r26
    5316:	9f 91       	pop	r25
    5318:	8f 91       	pop	r24
    531a:	7f 91       	pop	r23
    531c:	6f 91       	pop	r22
    531e:	5f 91       	pop	r21
    5320:	4f 91       	pop	r20
    5322:	3f 91       	pop	r19
    5324:	2f 91       	pop	r18
    5326:	0f 90       	pop	r0
    5328:	0f be       	out	0x3f, r0	; 63
    532a:	0f 90       	pop	r0
    532c:	1f 90       	pop	r1
    532e:	18 95       	reti

00005330 <__vector_3>:

void __vector_3(void) __attribute__((signal));
void __vector_3(void)
{
    5330:	1f 92       	push	r1
    5332:	0f 92       	push	r0
    5334:	0f b6       	in	r0, 0x3f	; 63
    5336:	0f 92       	push	r0
    5338:	11 24       	eor	r1, r1
    533a:	2f 93       	push	r18
    533c:	3f 93       	push	r19
    533e:	4f 93       	push	r20
    5340:	5f 93       	push	r21
    5342:	6f 93       	push	r22
    5344:	7f 93       	push	r23
    5346:	8f 93       	push	r24
    5348:	9f 93       	push	r25
    534a:	af 93       	push	r26
    534c:	bf 93       	push	r27
    534e:	ef 93       	push	r30
    5350:	ff 93       	push	r31
    5352:	df 93       	push	r29
    5354:	cf 93       	push	r28
    5356:	cd b7       	in	r28, 0x3d	; 61
    5358:	de b7       	in	r29, 0x3e	; 62
    GAPF[INT2]();
    535a:	e0 91 b9 01 	lds	r30, 0x01B9
    535e:	f0 91 ba 01 	lds	r31, 0x01BA
    5362:	09 95       	icall
}
    5364:	cf 91       	pop	r28
    5366:	df 91       	pop	r29
    5368:	ff 91       	pop	r31
    536a:	ef 91       	pop	r30
    536c:	bf 91       	pop	r27
    536e:	af 91       	pop	r26
    5370:	9f 91       	pop	r25
    5372:	8f 91       	pop	r24
    5374:	7f 91       	pop	r23
    5376:	6f 91       	pop	r22
    5378:	5f 91       	pop	r21
    537a:	4f 91       	pop	r20
    537c:	3f 91       	pop	r19
    537e:	2f 91       	pop	r18
    5380:	0f 90       	pop	r0
    5382:	0f be       	out	0x3f, r0	; 63
    5384:	0f 90       	pop	r0
    5386:	1f 90       	pop	r1
    5388:	18 95       	reti

0000538a <EXT_INT_voidClearFlag>:


void EXT_INT_voidClearFlag(uint8 Copy_u8INT_Num)
{
    538a:	df 93       	push	r29
    538c:	cf 93       	push	r28
    538e:	0f 92       	push	r0
    5390:	cd b7       	in	r28, 0x3d	; 61
    5392:	de b7       	in	r29, 0x3e	; 62
    5394:	89 83       	std	Y+1, r24	; 0x01
    if(Copy_u8INT_Num == INT0)
    5396:	89 81       	ldd	r24, Y+1	; 0x01
    5398:	88 23       	and	r24, r24
    539a:	41 f4       	brne	.+16     	; 0x53ac <EXT_INT_voidClearFlag+0x22>
    {
        SET_BIT(GIFR, GIFR_INTF0);
    539c:	aa e5       	ldi	r26, 0x5A	; 90
    539e:	b0 e0       	ldi	r27, 0x00	; 0
    53a0:	ea e5       	ldi	r30, 0x5A	; 90
    53a2:	f0 e0       	ldi	r31, 0x00	; 0
    53a4:	80 81       	ld	r24, Z
    53a6:	80 64       	ori	r24, 0x40	; 64
    53a8:	8c 93       	st	X, r24
    53aa:	15 c0       	rjmp	.+42     	; 0x53d6 <EXT_INT_voidClearFlag+0x4c>
    }

    else if(Copy_u8INT_Num == INT1)
    53ac:	89 81       	ldd	r24, Y+1	; 0x01
    53ae:	81 30       	cpi	r24, 0x01	; 1
    53b0:	41 f4       	brne	.+16     	; 0x53c2 <EXT_INT_voidClearFlag+0x38>
    {
        SET_BIT(GIFR, GIFR_INTF1);
    53b2:	aa e5       	ldi	r26, 0x5A	; 90
    53b4:	b0 e0       	ldi	r27, 0x00	; 0
    53b6:	ea e5       	ldi	r30, 0x5A	; 90
    53b8:	f0 e0       	ldi	r31, 0x00	; 0
    53ba:	80 81       	ld	r24, Z
    53bc:	80 68       	ori	r24, 0x80	; 128
    53be:	8c 93       	st	X, r24
    53c0:	0a c0       	rjmp	.+20     	; 0x53d6 <EXT_INT_voidClearFlag+0x4c>
    }

    else if(Copy_u8INT_Num == INT2)
    53c2:	89 81       	ldd	r24, Y+1	; 0x01
    53c4:	82 30       	cpi	r24, 0x02	; 2
    53c6:	39 f4       	brne	.+14     	; 0x53d6 <EXT_INT_voidClearFlag+0x4c>
    {
        SET_BIT(GIFR, GIFR_INTF2);
    53c8:	aa e5       	ldi	r26, 0x5A	; 90
    53ca:	b0 e0       	ldi	r27, 0x00	; 0
    53cc:	ea e5       	ldi	r30, 0x5A	; 90
    53ce:	f0 e0       	ldi	r31, 0x00	; 0
    53d0:	80 81       	ld	r24, Z
    53d2:	80 62       	ori	r24, 0x20	; 32
    53d4:	8c 93       	st	X, r24
    }
}
    53d6:	0f 90       	pop	r0
    53d8:	cf 91       	pop	r28
    53da:	df 91       	pop	r29
    53dc:	08 95       	ret

000053de <DIO_voidSetPinDirection>:


/*************************************************/

void DIO_voidSetPinDirection(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Mode )
{
    53de:	df 93       	push	r29
    53e0:	cf 93       	push	r28
    53e2:	cd b7       	in	r28, 0x3d	; 61
    53e4:	de b7       	in	r29, 0x3e	; 62
    53e6:	27 97       	sbiw	r28, 0x07	; 7
    53e8:	0f b6       	in	r0, 0x3f	; 63
    53ea:	f8 94       	cli
    53ec:	de bf       	out	0x3e, r29	; 62
    53ee:	0f be       	out	0x3f, r0	; 63
    53f0:	cd bf       	out	0x3d, r28	; 61
    53f2:	89 83       	std	Y+1, r24	; 0x01
    53f4:	6a 83       	std	Y+2, r22	; 0x02
    53f6:	4b 83       	std	Y+3, r20	; 0x03
		if (DIO_u8OUTPUT == Copy_u8Mode)
    53f8:	8b 81       	ldd	r24, Y+3	; 0x03
    53fa:	81 30       	cpi	r24, 0x01	; 1
    53fc:	09 f0       	breq	.+2      	; 0x5400 <DIO_voidSetPinDirection+0x22>
    53fe:	70 c0       	rjmp	.+224    	; 0x54e0 <DIO_voidSetPinDirection+0x102>
		{
			switch(Copy_u8PortNum)
    5400:	89 81       	ldd	r24, Y+1	; 0x01
    5402:	28 2f       	mov	r18, r24
    5404:	30 e0       	ldi	r19, 0x00	; 0
    5406:	3f 83       	std	Y+7, r19	; 0x07
    5408:	2e 83       	std	Y+6, r18	; 0x06
    540a:	8e 81       	ldd	r24, Y+6	; 0x06
    540c:	9f 81       	ldd	r25, Y+7	; 0x07
    540e:	82 30       	cpi	r24, 0x02	; 2
    5410:	91 05       	cpc	r25, r1
    5412:	51 f1       	breq	.+84     	; 0x5468 <DIO_voidSetPinDirection+0x8a>
    5414:	2e 81       	ldd	r18, Y+6	; 0x06
    5416:	3f 81       	ldd	r19, Y+7	; 0x07
    5418:	23 30       	cpi	r18, 0x03	; 3
    541a:	31 05       	cpc	r19, r1
    541c:	34 f4       	brge	.+12     	; 0x542a <DIO_voidSetPinDirection+0x4c>
    541e:	8e 81       	ldd	r24, Y+6	; 0x06
    5420:	9f 81       	ldd	r25, Y+7	; 0x07
    5422:	81 30       	cpi	r24, 0x01	; 1
    5424:	91 05       	cpc	r25, r1
    5426:	61 f0       	breq	.+24     	; 0x5440 <DIO_voidSetPinDirection+0x62>
    5428:	d3 c0       	rjmp	.+422    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
    542a:	2e 81       	ldd	r18, Y+6	; 0x06
    542c:	3f 81       	ldd	r19, Y+7	; 0x07
    542e:	23 30       	cpi	r18, 0x03	; 3
    5430:	31 05       	cpc	r19, r1
    5432:	71 f1       	breq	.+92     	; 0x5490 <DIO_voidSetPinDirection+0xb2>
    5434:	8e 81       	ldd	r24, Y+6	; 0x06
    5436:	9f 81       	ldd	r25, Y+7	; 0x07
    5438:	84 30       	cpi	r24, 0x04	; 4
    543a:	91 05       	cpc	r25, r1
    543c:	e9 f1       	breq	.+122    	; 0x54b8 <DIO_voidSetPinDirection+0xda>
    543e:	c8 c0       	rjmp	.+400    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(DDRA , Copy_u8PinNum);       break;
    5440:	aa e3       	ldi	r26, 0x3A	; 58
    5442:	b0 e0       	ldi	r27, 0x00	; 0
    5444:	ea e3       	ldi	r30, 0x3A	; 58
    5446:	f0 e0       	ldi	r31, 0x00	; 0
    5448:	80 81       	ld	r24, Z
    544a:	48 2f       	mov	r20, r24
    544c:	8a 81       	ldd	r24, Y+2	; 0x02
    544e:	28 2f       	mov	r18, r24
    5450:	30 e0       	ldi	r19, 0x00	; 0
    5452:	81 e0       	ldi	r24, 0x01	; 1
    5454:	90 e0       	ldi	r25, 0x00	; 0
    5456:	02 2e       	mov	r0, r18
    5458:	02 c0       	rjmp	.+4      	; 0x545e <DIO_voidSetPinDirection+0x80>
    545a:	88 0f       	add	r24, r24
    545c:	99 1f       	adc	r25, r25
    545e:	0a 94       	dec	r0
    5460:	e2 f7       	brpl	.-8      	; 0x545a <DIO_voidSetPinDirection+0x7c>
    5462:	84 2b       	or	r24, r20
    5464:	8c 93       	st	X, r24
    5466:	b4 c0       	rjmp	.+360    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :         SET_BIT(DDRB , Copy_u8PinNum);       break;
    5468:	a7 e3       	ldi	r26, 0x37	; 55
    546a:	b0 e0       	ldi	r27, 0x00	; 0
    546c:	e7 e3       	ldi	r30, 0x37	; 55
    546e:	f0 e0       	ldi	r31, 0x00	; 0
    5470:	80 81       	ld	r24, Z
    5472:	48 2f       	mov	r20, r24
    5474:	8a 81       	ldd	r24, Y+2	; 0x02
    5476:	28 2f       	mov	r18, r24
    5478:	30 e0       	ldi	r19, 0x00	; 0
    547a:	81 e0       	ldi	r24, 0x01	; 1
    547c:	90 e0       	ldi	r25, 0x00	; 0
    547e:	02 2e       	mov	r0, r18
    5480:	02 c0       	rjmp	.+4      	; 0x5486 <DIO_voidSetPinDirection+0xa8>
    5482:	88 0f       	add	r24, r24
    5484:	99 1f       	adc	r25, r25
    5486:	0a 94       	dec	r0
    5488:	e2 f7       	brpl	.-8      	; 0x5482 <DIO_voidSetPinDirection+0xa4>
    548a:	84 2b       	or	r24, r20
    548c:	8c 93       	st	X, r24
    548e:	a0 c0       	rjmp	.+320    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :         SET_BIT(DDRC , Copy_u8PinNum);       break;
    5490:	a4 e3       	ldi	r26, 0x34	; 52
    5492:	b0 e0       	ldi	r27, 0x00	; 0
    5494:	e4 e3       	ldi	r30, 0x34	; 52
    5496:	f0 e0       	ldi	r31, 0x00	; 0
    5498:	80 81       	ld	r24, Z
    549a:	48 2f       	mov	r20, r24
    549c:	8a 81       	ldd	r24, Y+2	; 0x02
    549e:	28 2f       	mov	r18, r24
    54a0:	30 e0       	ldi	r19, 0x00	; 0
    54a2:	81 e0       	ldi	r24, 0x01	; 1
    54a4:	90 e0       	ldi	r25, 0x00	; 0
    54a6:	02 2e       	mov	r0, r18
    54a8:	02 c0       	rjmp	.+4      	; 0x54ae <DIO_voidSetPinDirection+0xd0>
    54aa:	88 0f       	add	r24, r24
    54ac:	99 1f       	adc	r25, r25
    54ae:	0a 94       	dec	r0
    54b0:	e2 f7       	brpl	.-8      	; 0x54aa <DIO_voidSetPinDirection+0xcc>
    54b2:	84 2b       	or	r24, r20
    54b4:	8c 93       	st	X, r24
    54b6:	8c c0       	rjmp	.+280    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :         SET_BIT(DDRD , Copy_u8PinNum);       break;
    54b8:	a1 e3       	ldi	r26, 0x31	; 49
    54ba:	b0 e0       	ldi	r27, 0x00	; 0
    54bc:	e1 e3       	ldi	r30, 0x31	; 49
    54be:	f0 e0       	ldi	r31, 0x00	; 0
    54c0:	80 81       	ld	r24, Z
    54c2:	48 2f       	mov	r20, r24
    54c4:	8a 81       	ldd	r24, Y+2	; 0x02
    54c6:	28 2f       	mov	r18, r24
    54c8:	30 e0       	ldi	r19, 0x00	; 0
    54ca:	81 e0       	ldi	r24, 0x01	; 1
    54cc:	90 e0       	ldi	r25, 0x00	; 0
    54ce:	02 2e       	mov	r0, r18
    54d0:	02 c0       	rjmp	.+4      	; 0x54d6 <DIO_voidSetPinDirection+0xf8>
    54d2:	88 0f       	add	r24, r24
    54d4:	99 1f       	adc	r25, r25
    54d6:	0a 94       	dec	r0
    54d8:	e2 f7       	brpl	.-8      	; 0x54d2 <DIO_voidSetPinDirection+0xf4>
    54da:	84 2b       	or	r24, r20
    54dc:	8c 93       	st	X, r24
    54de:	78 c0       	rjmp	.+240    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
			}
		}
		else if (DIO_u8INPUT == Copy_u8Mode)
    54e0:	8b 81       	ldd	r24, Y+3	; 0x03
    54e2:	88 23       	and	r24, r24
    54e4:	09 f0       	breq	.+2      	; 0x54e8 <DIO_voidSetPinDirection+0x10a>
    54e6:	74 c0       	rjmp	.+232    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
		{
			switch(Copy_u8PortNum)
    54e8:	89 81       	ldd	r24, Y+1	; 0x01
    54ea:	28 2f       	mov	r18, r24
    54ec:	30 e0       	ldi	r19, 0x00	; 0
    54ee:	3d 83       	std	Y+5, r19	; 0x05
    54f0:	2c 83       	std	Y+4, r18	; 0x04
    54f2:	8c 81       	ldd	r24, Y+4	; 0x04
    54f4:	9d 81       	ldd	r25, Y+5	; 0x05
    54f6:	82 30       	cpi	r24, 0x02	; 2
    54f8:	91 05       	cpc	r25, r1
    54fa:	61 f1       	breq	.+88     	; 0x5554 <DIO_voidSetPinDirection+0x176>
    54fc:	2c 81       	ldd	r18, Y+4	; 0x04
    54fe:	3d 81       	ldd	r19, Y+5	; 0x05
    5500:	23 30       	cpi	r18, 0x03	; 3
    5502:	31 05       	cpc	r19, r1
    5504:	34 f4       	brge	.+12     	; 0x5512 <DIO_voidSetPinDirection+0x134>
    5506:	8c 81       	ldd	r24, Y+4	; 0x04
    5508:	9d 81       	ldd	r25, Y+5	; 0x05
    550a:	81 30       	cpi	r24, 0x01	; 1
    550c:	91 05       	cpc	r25, r1
    550e:	69 f0       	breq	.+26     	; 0x552a <DIO_voidSetPinDirection+0x14c>
    5510:	5f c0       	rjmp	.+190    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
    5512:	2c 81       	ldd	r18, Y+4	; 0x04
    5514:	3d 81       	ldd	r19, Y+5	; 0x05
    5516:	23 30       	cpi	r18, 0x03	; 3
    5518:	31 05       	cpc	r19, r1
    551a:	89 f1       	breq	.+98     	; 0x557e <DIO_voidSetPinDirection+0x1a0>
    551c:	8c 81       	ldd	r24, Y+4	; 0x04
    551e:	9d 81       	ldd	r25, Y+5	; 0x05
    5520:	84 30       	cpi	r24, 0x04	; 4
    5522:	91 05       	cpc	r25, r1
    5524:	09 f4       	brne	.+2      	; 0x5528 <DIO_voidSetPinDirection+0x14a>
    5526:	40 c0       	rjmp	.+128    	; 0x55a8 <DIO_voidSetPinDirection+0x1ca>
    5528:	53 c0       	rjmp	.+166    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :      CLR_BIT( DDRA, Copy_u8PinNum);    break;
    552a:	aa e3       	ldi	r26, 0x3A	; 58
    552c:	b0 e0       	ldi	r27, 0x00	; 0
    552e:	ea e3       	ldi	r30, 0x3A	; 58
    5530:	f0 e0       	ldi	r31, 0x00	; 0
    5532:	80 81       	ld	r24, Z
    5534:	48 2f       	mov	r20, r24
    5536:	8a 81       	ldd	r24, Y+2	; 0x02
    5538:	28 2f       	mov	r18, r24
    553a:	30 e0       	ldi	r19, 0x00	; 0
    553c:	81 e0       	ldi	r24, 0x01	; 1
    553e:	90 e0       	ldi	r25, 0x00	; 0
    5540:	02 2e       	mov	r0, r18
    5542:	02 c0       	rjmp	.+4      	; 0x5548 <DIO_voidSetPinDirection+0x16a>
    5544:	88 0f       	add	r24, r24
    5546:	99 1f       	adc	r25, r25
    5548:	0a 94       	dec	r0
    554a:	e2 f7       	brpl	.-8      	; 0x5544 <DIO_voidSetPinDirection+0x166>
    554c:	80 95       	com	r24
    554e:	84 23       	and	r24, r20
    5550:	8c 93       	st	X, r24
    5552:	3e c0       	rjmp	.+124    	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :      CLR_BIT( DDRB, Copy_u8PinNum);    break;
    5554:	a7 e3       	ldi	r26, 0x37	; 55
    5556:	b0 e0       	ldi	r27, 0x00	; 0
    5558:	e7 e3       	ldi	r30, 0x37	; 55
    555a:	f0 e0       	ldi	r31, 0x00	; 0
    555c:	80 81       	ld	r24, Z
    555e:	48 2f       	mov	r20, r24
    5560:	8a 81       	ldd	r24, Y+2	; 0x02
    5562:	28 2f       	mov	r18, r24
    5564:	30 e0       	ldi	r19, 0x00	; 0
    5566:	81 e0       	ldi	r24, 0x01	; 1
    5568:	90 e0       	ldi	r25, 0x00	; 0
    556a:	02 2e       	mov	r0, r18
    556c:	02 c0       	rjmp	.+4      	; 0x5572 <DIO_voidSetPinDirection+0x194>
    556e:	88 0f       	add	r24, r24
    5570:	99 1f       	adc	r25, r25
    5572:	0a 94       	dec	r0
    5574:	e2 f7       	brpl	.-8      	; 0x556e <DIO_voidSetPinDirection+0x190>
    5576:	80 95       	com	r24
    5578:	84 23       	and	r24, r20
    557a:	8c 93       	st	X, r24
    557c:	29 c0       	rjmp	.+82     	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :      CLR_BIT( DDRC, Copy_u8PinNum);    break;
    557e:	a4 e3       	ldi	r26, 0x34	; 52
    5580:	b0 e0       	ldi	r27, 0x00	; 0
    5582:	e4 e3       	ldi	r30, 0x34	; 52
    5584:	f0 e0       	ldi	r31, 0x00	; 0
    5586:	80 81       	ld	r24, Z
    5588:	48 2f       	mov	r20, r24
    558a:	8a 81       	ldd	r24, Y+2	; 0x02
    558c:	28 2f       	mov	r18, r24
    558e:	30 e0       	ldi	r19, 0x00	; 0
    5590:	81 e0       	ldi	r24, 0x01	; 1
    5592:	90 e0       	ldi	r25, 0x00	; 0
    5594:	02 2e       	mov	r0, r18
    5596:	02 c0       	rjmp	.+4      	; 0x559c <DIO_voidSetPinDirection+0x1be>
    5598:	88 0f       	add	r24, r24
    559a:	99 1f       	adc	r25, r25
    559c:	0a 94       	dec	r0
    559e:	e2 f7       	brpl	.-8      	; 0x5598 <DIO_voidSetPinDirection+0x1ba>
    55a0:	80 95       	com	r24
    55a2:	84 23       	and	r24, r20
    55a4:	8c 93       	st	X, r24
    55a6:	14 c0       	rjmp	.+40     	; 0x55d0 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :      CLR_BIT( DDRD, Copy_u8PinNum);    break;
    55a8:	a1 e3       	ldi	r26, 0x31	; 49
    55aa:	b0 e0       	ldi	r27, 0x00	; 0
    55ac:	e1 e3       	ldi	r30, 0x31	; 49
    55ae:	f0 e0       	ldi	r31, 0x00	; 0
    55b0:	80 81       	ld	r24, Z
    55b2:	48 2f       	mov	r20, r24
    55b4:	8a 81       	ldd	r24, Y+2	; 0x02
    55b6:	28 2f       	mov	r18, r24
    55b8:	30 e0       	ldi	r19, 0x00	; 0
    55ba:	81 e0       	ldi	r24, 0x01	; 1
    55bc:	90 e0       	ldi	r25, 0x00	; 0
    55be:	02 2e       	mov	r0, r18
    55c0:	02 c0       	rjmp	.+4      	; 0x55c6 <DIO_voidSetPinDirection+0x1e8>
    55c2:	88 0f       	add	r24, r24
    55c4:	99 1f       	adc	r25, r25
    55c6:	0a 94       	dec	r0
    55c8:	e2 f7       	brpl	.-8      	; 0x55c2 <DIO_voidSetPinDirection+0x1e4>
    55ca:	80 95       	com	r24
    55cc:	84 23       	and	r24, r20
    55ce:	8c 93       	st	X, r24
				default :             /* return error */                  break;
			}
		}
}
    55d0:	27 96       	adiw	r28, 0x07	; 7
    55d2:	0f b6       	in	r0, 0x3f	; 63
    55d4:	f8 94       	cli
    55d6:	de bf       	out	0x3e, r29	; 62
    55d8:	0f be       	out	0x3f, r0	; 63
    55da:	cd bf       	out	0x3d, r28	; 61
    55dc:	cf 91       	pop	r28
    55de:	df 91       	pop	r29
    55e0:	08 95       	ret

000055e2 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Value )
{
    55e2:	df 93       	push	r29
    55e4:	cf 93       	push	r28
    55e6:	cd b7       	in	r28, 0x3d	; 61
    55e8:	de b7       	in	r29, 0x3e	; 62
    55ea:	27 97       	sbiw	r28, 0x07	; 7
    55ec:	0f b6       	in	r0, 0x3f	; 63
    55ee:	f8 94       	cli
    55f0:	de bf       	out	0x3e, r29	; 62
    55f2:	0f be       	out	0x3f, r0	; 63
    55f4:	cd bf       	out	0x3d, r28	; 61
    55f6:	89 83       	std	Y+1, r24	; 0x01
    55f8:	6a 83       	std	Y+2, r22	; 0x02
    55fa:	4b 83       	std	Y+3, r20	; 0x03
	if (DIO_u8HIGH == Copy_u8Value)
    55fc:	8b 81       	ldd	r24, Y+3	; 0x03
    55fe:	81 30       	cpi	r24, 0x01	; 1
    5600:	09 f0       	breq	.+2      	; 0x5604 <DIO_voidSetPinValue+0x22>
    5602:	70 c0       	rjmp	.+224    	; 0x56e4 <DIO_voidSetPinValue+0x102>
		{
			switch(Copy_u8PortNum)
    5604:	89 81       	ldd	r24, Y+1	; 0x01
    5606:	28 2f       	mov	r18, r24
    5608:	30 e0       	ldi	r19, 0x00	; 0
    560a:	3f 83       	std	Y+7, r19	; 0x07
    560c:	2e 83       	std	Y+6, r18	; 0x06
    560e:	8e 81       	ldd	r24, Y+6	; 0x06
    5610:	9f 81       	ldd	r25, Y+7	; 0x07
    5612:	82 30       	cpi	r24, 0x02	; 2
    5614:	91 05       	cpc	r25, r1
    5616:	51 f1       	breq	.+84     	; 0x566c <DIO_voidSetPinValue+0x8a>
    5618:	2e 81       	ldd	r18, Y+6	; 0x06
    561a:	3f 81       	ldd	r19, Y+7	; 0x07
    561c:	23 30       	cpi	r18, 0x03	; 3
    561e:	31 05       	cpc	r19, r1
    5620:	34 f4       	brge	.+12     	; 0x562e <DIO_voidSetPinValue+0x4c>
    5622:	8e 81       	ldd	r24, Y+6	; 0x06
    5624:	9f 81       	ldd	r25, Y+7	; 0x07
    5626:	81 30       	cpi	r24, 0x01	; 1
    5628:	91 05       	cpc	r25, r1
    562a:	61 f0       	breq	.+24     	; 0x5644 <DIO_voidSetPinValue+0x62>
    562c:	d3 c0       	rjmp	.+422    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
    562e:	2e 81       	ldd	r18, Y+6	; 0x06
    5630:	3f 81       	ldd	r19, Y+7	; 0x07
    5632:	23 30       	cpi	r18, 0x03	; 3
    5634:	31 05       	cpc	r19, r1
    5636:	71 f1       	breq	.+92     	; 0x5694 <DIO_voidSetPinValue+0xb2>
    5638:	8e 81       	ldd	r24, Y+6	; 0x06
    563a:	9f 81       	ldd	r25, Y+7	; 0x07
    563c:	84 30       	cpi	r24, 0x04	; 4
    563e:	91 05       	cpc	r25, r1
    5640:	e9 f1       	breq	.+122    	; 0x56bc <DIO_voidSetPinValue+0xda>
    5642:	c8 c0       	rjmp	.+400    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(PORTA , Copy_u8PinNum);       break;
    5644:	ab e3       	ldi	r26, 0x3B	; 59
    5646:	b0 e0       	ldi	r27, 0x00	; 0
    5648:	eb e3       	ldi	r30, 0x3B	; 59
    564a:	f0 e0       	ldi	r31, 0x00	; 0
    564c:	80 81       	ld	r24, Z
    564e:	48 2f       	mov	r20, r24
    5650:	8a 81       	ldd	r24, Y+2	; 0x02
    5652:	28 2f       	mov	r18, r24
    5654:	30 e0       	ldi	r19, 0x00	; 0
    5656:	81 e0       	ldi	r24, 0x01	; 1
    5658:	90 e0       	ldi	r25, 0x00	; 0
    565a:	02 2e       	mov	r0, r18
    565c:	02 c0       	rjmp	.+4      	; 0x5662 <DIO_voidSetPinValue+0x80>
    565e:	88 0f       	add	r24, r24
    5660:	99 1f       	adc	r25, r25
    5662:	0a 94       	dec	r0
    5664:	e2 f7       	brpl	.-8      	; 0x565e <DIO_voidSetPinValue+0x7c>
    5666:	84 2b       	or	r24, r20
    5668:	8c 93       	st	X, r24
    566a:	b4 c0       	rjmp	.+360    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         SET_BIT(PORTB , Copy_u8PinNum);       break;
    566c:	a8 e3       	ldi	r26, 0x38	; 56
    566e:	b0 e0       	ldi	r27, 0x00	; 0
    5670:	e8 e3       	ldi	r30, 0x38	; 56
    5672:	f0 e0       	ldi	r31, 0x00	; 0
    5674:	80 81       	ld	r24, Z
    5676:	48 2f       	mov	r20, r24
    5678:	8a 81       	ldd	r24, Y+2	; 0x02
    567a:	28 2f       	mov	r18, r24
    567c:	30 e0       	ldi	r19, 0x00	; 0
    567e:	81 e0       	ldi	r24, 0x01	; 1
    5680:	90 e0       	ldi	r25, 0x00	; 0
    5682:	02 2e       	mov	r0, r18
    5684:	02 c0       	rjmp	.+4      	; 0x568a <DIO_voidSetPinValue+0xa8>
    5686:	88 0f       	add	r24, r24
    5688:	99 1f       	adc	r25, r25
    568a:	0a 94       	dec	r0
    568c:	e2 f7       	brpl	.-8      	; 0x5686 <DIO_voidSetPinValue+0xa4>
    568e:	84 2b       	or	r24, r20
    5690:	8c 93       	st	X, r24
    5692:	a0 c0       	rjmp	.+320    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         SET_BIT(PORTC , Copy_u8PinNum);       break;
    5694:	a5 e3       	ldi	r26, 0x35	; 53
    5696:	b0 e0       	ldi	r27, 0x00	; 0
    5698:	e5 e3       	ldi	r30, 0x35	; 53
    569a:	f0 e0       	ldi	r31, 0x00	; 0
    569c:	80 81       	ld	r24, Z
    569e:	48 2f       	mov	r20, r24
    56a0:	8a 81       	ldd	r24, Y+2	; 0x02
    56a2:	28 2f       	mov	r18, r24
    56a4:	30 e0       	ldi	r19, 0x00	; 0
    56a6:	81 e0       	ldi	r24, 0x01	; 1
    56a8:	90 e0       	ldi	r25, 0x00	; 0
    56aa:	02 2e       	mov	r0, r18
    56ac:	02 c0       	rjmp	.+4      	; 0x56b2 <DIO_voidSetPinValue+0xd0>
    56ae:	88 0f       	add	r24, r24
    56b0:	99 1f       	adc	r25, r25
    56b2:	0a 94       	dec	r0
    56b4:	e2 f7       	brpl	.-8      	; 0x56ae <DIO_voidSetPinValue+0xcc>
    56b6:	84 2b       	or	r24, r20
    56b8:	8c 93       	st	X, r24
    56ba:	8c c0       	rjmp	.+280    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         SET_BIT(PORTD , Copy_u8PinNum);       break;
    56bc:	a2 e3       	ldi	r26, 0x32	; 50
    56be:	b0 e0       	ldi	r27, 0x00	; 0
    56c0:	e2 e3       	ldi	r30, 0x32	; 50
    56c2:	f0 e0       	ldi	r31, 0x00	; 0
    56c4:	80 81       	ld	r24, Z
    56c6:	48 2f       	mov	r20, r24
    56c8:	8a 81       	ldd	r24, Y+2	; 0x02
    56ca:	28 2f       	mov	r18, r24
    56cc:	30 e0       	ldi	r19, 0x00	; 0
    56ce:	81 e0       	ldi	r24, 0x01	; 1
    56d0:	90 e0       	ldi	r25, 0x00	; 0
    56d2:	02 2e       	mov	r0, r18
    56d4:	02 c0       	rjmp	.+4      	; 0x56da <DIO_voidSetPinValue+0xf8>
    56d6:	88 0f       	add	r24, r24
    56d8:	99 1f       	adc	r25, r25
    56da:	0a 94       	dec	r0
    56dc:	e2 f7       	brpl	.-8      	; 0x56d6 <DIO_voidSetPinValue+0xf4>
    56de:	84 2b       	or	r24, r20
    56e0:	8c 93       	st	X, r24
    56e2:	78 c0       	rjmp	.+240    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
				default :                  /* return error */                    break;
			}
		}
		else if (DIO_u8LOW == Copy_u8Value)
    56e4:	8b 81       	ldd	r24, Y+3	; 0x03
    56e6:	88 23       	and	r24, r24
    56e8:	09 f0       	breq	.+2      	; 0x56ec <DIO_voidSetPinValue+0x10a>
    56ea:	74 c0       	rjmp	.+232    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
		{
			switch(Copy_u8PortNum){
    56ec:	89 81       	ldd	r24, Y+1	; 0x01
    56ee:	28 2f       	mov	r18, r24
    56f0:	30 e0       	ldi	r19, 0x00	; 0
    56f2:	3d 83       	std	Y+5, r19	; 0x05
    56f4:	2c 83       	std	Y+4, r18	; 0x04
    56f6:	8c 81       	ldd	r24, Y+4	; 0x04
    56f8:	9d 81       	ldd	r25, Y+5	; 0x05
    56fa:	82 30       	cpi	r24, 0x02	; 2
    56fc:	91 05       	cpc	r25, r1
    56fe:	61 f1       	breq	.+88     	; 0x5758 <DIO_voidSetPinValue+0x176>
    5700:	2c 81       	ldd	r18, Y+4	; 0x04
    5702:	3d 81       	ldd	r19, Y+5	; 0x05
    5704:	23 30       	cpi	r18, 0x03	; 3
    5706:	31 05       	cpc	r19, r1
    5708:	34 f4       	brge	.+12     	; 0x5716 <DIO_voidSetPinValue+0x134>
    570a:	8c 81       	ldd	r24, Y+4	; 0x04
    570c:	9d 81       	ldd	r25, Y+5	; 0x05
    570e:	81 30       	cpi	r24, 0x01	; 1
    5710:	91 05       	cpc	r25, r1
    5712:	69 f0       	breq	.+26     	; 0x572e <DIO_voidSetPinValue+0x14c>
    5714:	5f c0       	rjmp	.+190    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
    5716:	2c 81       	ldd	r18, Y+4	; 0x04
    5718:	3d 81       	ldd	r19, Y+5	; 0x05
    571a:	23 30       	cpi	r18, 0x03	; 3
    571c:	31 05       	cpc	r19, r1
    571e:	89 f1       	breq	.+98     	; 0x5782 <DIO_voidSetPinValue+0x1a0>
    5720:	8c 81       	ldd	r24, Y+4	; 0x04
    5722:	9d 81       	ldd	r25, Y+5	; 0x05
    5724:	84 30       	cpi	r24, 0x04	; 4
    5726:	91 05       	cpc	r25, r1
    5728:	09 f4       	brne	.+2      	; 0x572c <DIO_voidSetPinValue+0x14a>
    572a:	40 c0       	rjmp	.+128    	; 0x57ac <DIO_voidSetPinValue+0x1ca>
    572c:	53 c0       	rjmp	.+166    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>

				case DIO_u8PORTA :         CLR_BIT( PORTA , Copy_u8PinNum);        break;
    572e:	ab e3       	ldi	r26, 0x3B	; 59
    5730:	b0 e0       	ldi	r27, 0x00	; 0
    5732:	eb e3       	ldi	r30, 0x3B	; 59
    5734:	f0 e0       	ldi	r31, 0x00	; 0
    5736:	80 81       	ld	r24, Z
    5738:	48 2f       	mov	r20, r24
    573a:	8a 81       	ldd	r24, Y+2	; 0x02
    573c:	28 2f       	mov	r18, r24
    573e:	30 e0       	ldi	r19, 0x00	; 0
    5740:	81 e0       	ldi	r24, 0x01	; 1
    5742:	90 e0       	ldi	r25, 0x00	; 0
    5744:	02 2e       	mov	r0, r18
    5746:	02 c0       	rjmp	.+4      	; 0x574c <DIO_voidSetPinValue+0x16a>
    5748:	88 0f       	add	r24, r24
    574a:	99 1f       	adc	r25, r25
    574c:	0a 94       	dec	r0
    574e:	e2 f7       	brpl	.-8      	; 0x5748 <DIO_voidSetPinValue+0x166>
    5750:	80 95       	com	r24
    5752:	84 23       	and	r24, r20
    5754:	8c 93       	st	X, r24
    5756:	3e c0       	rjmp	.+124    	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         CLR_BIT( PORTB , Copy_u8PinNum);        break;
    5758:	a8 e3       	ldi	r26, 0x38	; 56
    575a:	b0 e0       	ldi	r27, 0x00	; 0
    575c:	e8 e3       	ldi	r30, 0x38	; 56
    575e:	f0 e0       	ldi	r31, 0x00	; 0
    5760:	80 81       	ld	r24, Z
    5762:	48 2f       	mov	r20, r24
    5764:	8a 81       	ldd	r24, Y+2	; 0x02
    5766:	28 2f       	mov	r18, r24
    5768:	30 e0       	ldi	r19, 0x00	; 0
    576a:	81 e0       	ldi	r24, 0x01	; 1
    576c:	90 e0       	ldi	r25, 0x00	; 0
    576e:	02 2e       	mov	r0, r18
    5770:	02 c0       	rjmp	.+4      	; 0x5776 <DIO_voidSetPinValue+0x194>
    5772:	88 0f       	add	r24, r24
    5774:	99 1f       	adc	r25, r25
    5776:	0a 94       	dec	r0
    5778:	e2 f7       	brpl	.-8      	; 0x5772 <DIO_voidSetPinValue+0x190>
    577a:	80 95       	com	r24
    577c:	84 23       	and	r24, r20
    577e:	8c 93       	st	X, r24
    5780:	29 c0       	rjmp	.+82     	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         CLR_BIT( PORTC , Copy_u8PinNum);        break;
    5782:	a5 e3       	ldi	r26, 0x35	; 53
    5784:	b0 e0       	ldi	r27, 0x00	; 0
    5786:	e5 e3       	ldi	r30, 0x35	; 53
    5788:	f0 e0       	ldi	r31, 0x00	; 0
    578a:	80 81       	ld	r24, Z
    578c:	48 2f       	mov	r20, r24
    578e:	8a 81       	ldd	r24, Y+2	; 0x02
    5790:	28 2f       	mov	r18, r24
    5792:	30 e0       	ldi	r19, 0x00	; 0
    5794:	81 e0       	ldi	r24, 0x01	; 1
    5796:	90 e0       	ldi	r25, 0x00	; 0
    5798:	02 2e       	mov	r0, r18
    579a:	02 c0       	rjmp	.+4      	; 0x57a0 <DIO_voidSetPinValue+0x1be>
    579c:	88 0f       	add	r24, r24
    579e:	99 1f       	adc	r25, r25
    57a0:	0a 94       	dec	r0
    57a2:	e2 f7       	brpl	.-8      	; 0x579c <DIO_voidSetPinValue+0x1ba>
    57a4:	80 95       	com	r24
    57a6:	84 23       	and	r24, r20
    57a8:	8c 93       	st	X, r24
    57aa:	14 c0       	rjmp	.+40     	; 0x57d4 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         CLR_BIT( PORTD , Copy_u8PinNum);        break;
    57ac:	a2 e3       	ldi	r26, 0x32	; 50
    57ae:	b0 e0       	ldi	r27, 0x00	; 0
    57b0:	e2 e3       	ldi	r30, 0x32	; 50
    57b2:	f0 e0       	ldi	r31, 0x00	; 0
    57b4:	80 81       	ld	r24, Z
    57b6:	48 2f       	mov	r20, r24
    57b8:	8a 81       	ldd	r24, Y+2	; 0x02
    57ba:	28 2f       	mov	r18, r24
    57bc:	30 e0       	ldi	r19, 0x00	; 0
    57be:	81 e0       	ldi	r24, 0x01	; 1
    57c0:	90 e0       	ldi	r25, 0x00	; 0
    57c2:	02 2e       	mov	r0, r18
    57c4:	02 c0       	rjmp	.+4      	; 0x57ca <DIO_voidSetPinValue+0x1e8>
    57c6:	88 0f       	add	r24, r24
    57c8:	99 1f       	adc	r25, r25
    57ca:	0a 94       	dec	r0
    57cc:	e2 f7       	brpl	.-8      	; 0x57c6 <DIO_voidSetPinValue+0x1e4>
    57ce:	80 95       	com	r24
    57d0:	84 23       	and	r24, r20
    57d2:	8c 93       	st	X, r24
				default :                     /* return error */                   break;
				}
		}
		else {/*   return error  */}
}
    57d4:	27 96       	adiw	r28, 0x07	; 7
    57d6:	0f b6       	in	r0, 0x3f	; 63
    57d8:	f8 94       	cli
    57da:	de bf       	out	0x3e, r29	; 62
    57dc:	0f be       	out	0x3f, r0	; 63
    57de:	cd bf       	out	0x3d, r28	; 61
    57e0:	cf 91       	pop	r28
    57e2:	df 91       	pop	r29
    57e4:	08 95       	ret

000057e6 <DIO_u8GetPinValue>:

uint8 DIO_u8GetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum )
{
    57e6:	df 93       	push	r29
    57e8:	cf 93       	push	r28
    57ea:	00 d0       	rcall	.+0      	; 0x57ec <DIO_u8GetPinValue+0x6>
    57ec:	00 d0       	rcall	.+0      	; 0x57ee <DIO_u8GetPinValue+0x8>
    57ee:	0f 92       	push	r0
    57f0:	cd b7       	in	r28, 0x3d	; 61
    57f2:	de b7       	in	r29, 0x3e	; 62
    57f4:	8a 83       	std	Y+2, r24	; 0x02
    57f6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 BIT;
	switch(Copy_u8PortNum)
    57f8:	8a 81       	ldd	r24, Y+2	; 0x02
    57fa:	28 2f       	mov	r18, r24
    57fc:	30 e0       	ldi	r19, 0x00	; 0
    57fe:	3d 83       	std	Y+5, r19	; 0x05
    5800:	2c 83       	std	Y+4, r18	; 0x04
    5802:	4c 81       	ldd	r20, Y+4	; 0x04
    5804:	5d 81       	ldd	r21, Y+5	; 0x05
    5806:	42 30       	cpi	r20, 0x02	; 2
    5808:	51 05       	cpc	r21, r1
    580a:	41 f1       	breq	.+80     	; 0x585c <DIO_u8GetPinValue+0x76>
    580c:	8c 81       	ldd	r24, Y+4	; 0x04
    580e:	9d 81       	ldd	r25, Y+5	; 0x05
    5810:	83 30       	cpi	r24, 0x03	; 3
    5812:	91 05       	cpc	r25, r1
    5814:	34 f4       	brge	.+12     	; 0x5822 <DIO_u8GetPinValue+0x3c>
    5816:	2c 81       	ldd	r18, Y+4	; 0x04
    5818:	3d 81       	ldd	r19, Y+5	; 0x05
    581a:	21 30       	cpi	r18, 0x01	; 1
    581c:	31 05       	cpc	r19, r1
    581e:	61 f0       	breq	.+24     	; 0x5838 <DIO_u8GetPinValue+0x52>
    5820:	52 c0       	rjmp	.+164    	; 0x58c6 <DIO_u8GetPinValue+0xe0>
    5822:	4c 81       	ldd	r20, Y+4	; 0x04
    5824:	5d 81       	ldd	r21, Y+5	; 0x05
    5826:	43 30       	cpi	r20, 0x03	; 3
    5828:	51 05       	cpc	r21, r1
    582a:	51 f1       	breq	.+84     	; 0x5880 <DIO_u8GetPinValue+0x9a>
    582c:	8c 81       	ldd	r24, Y+4	; 0x04
    582e:	9d 81       	ldd	r25, Y+5	; 0x05
    5830:	84 30       	cpi	r24, 0x04	; 4
    5832:	91 05       	cpc	r25, r1
    5834:	b9 f1       	breq	.+110    	; 0x58a4 <DIO_u8GetPinValue+0xbe>
    5836:	47 c0       	rjmp	.+142    	; 0x58c6 <DIO_u8GetPinValue+0xe0>
		{
				case DIO_u8PORTA :         BIT = GET_BIT(PINA , Copy_u8PinNum);       break;
    5838:	e9 e3       	ldi	r30, 0x39	; 57
    583a:	f0 e0       	ldi	r31, 0x00	; 0
    583c:	80 81       	ld	r24, Z
    583e:	28 2f       	mov	r18, r24
    5840:	30 e0       	ldi	r19, 0x00	; 0
    5842:	8b 81       	ldd	r24, Y+3	; 0x03
    5844:	88 2f       	mov	r24, r24
    5846:	90 e0       	ldi	r25, 0x00	; 0
    5848:	a9 01       	movw	r20, r18
    584a:	02 c0       	rjmp	.+4      	; 0x5850 <DIO_u8GetPinValue+0x6a>
    584c:	55 95       	asr	r21
    584e:	47 95       	ror	r20
    5850:	8a 95       	dec	r24
    5852:	e2 f7       	brpl	.-8      	; 0x584c <DIO_u8GetPinValue+0x66>
    5854:	ca 01       	movw	r24, r20
    5856:	81 70       	andi	r24, 0x01	; 1
    5858:	89 83       	std	Y+1, r24	; 0x01
    585a:	35 c0       	rjmp	.+106    	; 0x58c6 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTB :         BIT = GET_BIT(PINB , Copy_u8PinNum);       break;
    585c:	e6 e3       	ldi	r30, 0x36	; 54
    585e:	f0 e0       	ldi	r31, 0x00	; 0
    5860:	80 81       	ld	r24, Z
    5862:	28 2f       	mov	r18, r24
    5864:	30 e0       	ldi	r19, 0x00	; 0
    5866:	8b 81       	ldd	r24, Y+3	; 0x03
    5868:	88 2f       	mov	r24, r24
    586a:	90 e0       	ldi	r25, 0x00	; 0
    586c:	a9 01       	movw	r20, r18
    586e:	02 c0       	rjmp	.+4      	; 0x5874 <DIO_u8GetPinValue+0x8e>
    5870:	55 95       	asr	r21
    5872:	47 95       	ror	r20
    5874:	8a 95       	dec	r24
    5876:	e2 f7       	brpl	.-8      	; 0x5870 <DIO_u8GetPinValue+0x8a>
    5878:	ca 01       	movw	r24, r20
    587a:	81 70       	andi	r24, 0x01	; 1
    587c:	89 83       	std	Y+1, r24	; 0x01
    587e:	23 c0       	rjmp	.+70     	; 0x58c6 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTC :         BIT = GET_BIT(PINC , Copy_u8PinNum);       break;
    5880:	e3 e3       	ldi	r30, 0x33	; 51
    5882:	f0 e0       	ldi	r31, 0x00	; 0
    5884:	80 81       	ld	r24, Z
    5886:	28 2f       	mov	r18, r24
    5888:	30 e0       	ldi	r19, 0x00	; 0
    588a:	8b 81       	ldd	r24, Y+3	; 0x03
    588c:	88 2f       	mov	r24, r24
    588e:	90 e0       	ldi	r25, 0x00	; 0
    5890:	a9 01       	movw	r20, r18
    5892:	02 c0       	rjmp	.+4      	; 0x5898 <DIO_u8GetPinValue+0xb2>
    5894:	55 95       	asr	r21
    5896:	47 95       	ror	r20
    5898:	8a 95       	dec	r24
    589a:	e2 f7       	brpl	.-8      	; 0x5894 <DIO_u8GetPinValue+0xae>
    589c:	ca 01       	movw	r24, r20
    589e:	81 70       	andi	r24, 0x01	; 1
    58a0:	89 83       	std	Y+1, r24	; 0x01
    58a2:	11 c0       	rjmp	.+34     	; 0x58c6 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTD :         BIT = GET_BIT(PIND , Copy_u8PinNum);       break;
    58a4:	e0 e3       	ldi	r30, 0x30	; 48
    58a6:	f0 e0       	ldi	r31, 0x00	; 0
    58a8:	80 81       	ld	r24, Z
    58aa:	28 2f       	mov	r18, r24
    58ac:	30 e0       	ldi	r19, 0x00	; 0
    58ae:	8b 81       	ldd	r24, Y+3	; 0x03
    58b0:	88 2f       	mov	r24, r24
    58b2:	90 e0       	ldi	r25, 0x00	; 0
    58b4:	a9 01       	movw	r20, r18
    58b6:	02 c0       	rjmp	.+4      	; 0x58bc <DIO_u8GetPinValue+0xd6>
    58b8:	55 95       	asr	r21
    58ba:	47 95       	ror	r20
    58bc:	8a 95       	dec	r24
    58be:	e2 f7       	brpl	.-8      	; 0x58b8 <DIO_u8GetPinValue+0xd2>
    58c0:	ca 01       	movw	r24, r20
    58c2:	81 70       	andi	r24, 0x01	; 1
    58c4:	89 83       	std	Y+1, r24	; 0x01
		}
	return BIT;
    58c6:	89 81       	ldd	r24, Y+1	; 0x01
}
    58c8:	0f 90       	pop	r0
    58ca:	0f 90       	pop	r0
    58cc:	0f 90       	pop	r0
    58ce:	0f 90       	pop	r0
    58d0:	0f 90       	pop	r0
    58d2:	cf 91       	pop	r28
    58d4:	df 91       	pop	r29
    58d6:	08 95       	ret

000058d8 <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(uint8 Copy_u8PortNum, uint8 Copy_u8Mode )
{
    58d8:	df 93       	push	r29
    58da:	cf 93       	push	r28
    58dc:	00 d0       	rcall	.+0      	; 0x58de <DIO_voidSetPortDirection+0x6>
    58de:	00 d0       	rcall	.+0      	; 0x58e0 <DIO_voidSetPortDirection+0x8>
    58e0:	cd b7       	in	r28, 0x3d	; 61
    58e2:	de b7       	in	r29, 0x3e	; 62
    58e4:	89 83       	std	Y+1, r24	; 0x01
    58e6:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    58e8:	89 81       	ldd	r24, Y+1	; 0x01
    58ea:	28 2f       	mov	r18, r24
    58ec:	30 e0       	ldi	r19, 0x00	; 0
    58ee:	3c 83       	std	Y+4, r19	; 0x04
    58f0:	2b 83       	std	Y+3, r18	; 0x03
    58f2:	8b 81       	ldd	r24, Y+3	; 0x03
    58f4:	9c 81       	ldd	r25, Y+4	; 0x04
    58f6:	82 30       	cpi	r24, 0x02	; 2
    58f8:	91 05       	cpc	r25, r1
    58fa:	d9 f0       	breq	.+54     	; 0x5932 <DIO_voidSetPortDirection+0x5a>
    58fc:	2b 81       	ldd	r18, Y+3	; 0x03
    58fe:	3c 81       	ldd	r19, Y+4	; 0x04
    5900:	23 30       	cpi	r18, 0x03	; 3
    5902:	31 05       	cpc	r19, r1
    5904:	34 f4       	brge	.+12     	; 0x5912 <DIO_voidSetPortDirection+0x3a>
    5906:	8b 81       	ldd	r24, Y+3	; 0x03
    5908:	9c 81       	ldd	r25, Y+4	; 0x04
    590a:	81 30       	cpi	r24, 0x01	; 1
    590c:	91 05       	cpc	r25, r1
    590e:	61 f0       	breq	.+24     	; 0x5928 <DIO_voidSetPortDirection+0x50>
    5910:	1e c0       	rjmp	.+60     	; 0x594e <DIO_voidSetPortDirection+0x76>
    5912:	2b 81       	ldd	r18, Y+3	; 0x03
    5914:	3c 81       	ldd	r19, Y+4	; 0x04
    5916:	23 30       	cpi	r18, 0x03	; 3
    5918:	31 05       	cpc	r19, r1
    591a:	81 f0       	breq	.+32     	; 0x593c <DIO_voidSetPortDirection+0x64>
    591c:	8b 81       	ldd	r24, Y+3	; 0x03
    591e:	9c 81       	ldd	r25, Y+4	; 0x04
    5920:	84 30       	cpi	r24, 0x04	; 4
    5922:	91 05       	cpc	r25, r1
    5924:	81 f0       	breq	.+32     	; 0x5946 <DIO_voidSetPortDirection+0x6e>
    5926:	13 c0       	rjmp	.+38     	; 0x594e <DIO_voidSetPortDirection+0x76>
		{
			case DIO_u8PORTA :         DDRA  = Copy_u8Mode;       break;
    5928:	ea e3       	ldi	r30, 0x3A	; 58
    592a:	f0 e0       	ldi	r31, 0x00	; 0
    592c:	8a 81       	ldd	r24, Y+2	; 0x02
    592e:	80 83       	st	Z, r24
    5930:	0e c0       	rjmp	.+28     	; 0x594e <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTB :         DDRB  = Copy_u8Mode;       break;
    5932:	e7 e3       	ldi	r30, 0x37	; 55
    5934:	f0 e0       	ldi	r31, 0x00	; 0
    5936:	8a 81       	ldd	r24, Y+2	; 0x02
    5938:	80 83       	st	Z, r24
    593a:	09 c0       	rjmp	.+18     	; 0x594e <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTC :         DDRC  = Copy_u8Mode;       break;
    593c:	e4 e3       	ldi	r30, 0x34	; 52
    593e:	f0 e0       	ldi	r31, 0x00	; 0
    5940:	8a 81       	ldd	r24, Y+2	; 0x02
    5942:	80 83       	st	Z, r24
    5944:	04 c0       	rjmp	.+8      	; 0x594e <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTD :         DDRD  = Copy_u8Mode;       break;
    5946:	e1 e3       	ldi	r30, 0x31	; 49
    5948:	f0 e0       	ldi	r31, 0x00	; 0
    594a:	8a 81       	ldd	r24, Y+2	; 0x02
    594c:	80 83       	st	Z, r24
		}
}
    594e:	0f 90       	pop	r0
    5950:	0f 90       	pop	r0
    5952:	0f 90       	pop	r0
    5954:	0f 90       	pop	r0
    5956:	cf 91       	pop	r28
    5958:	df 91       	pop	r29
    595a:	08 95       	ret

0000595c <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(uint8 Copy_u8PortNum, uint8 Copy_u8Value )
{
    595c:	df 93       	push	r29
    595e:	cf 93       	push	r28
    5960:	00 d0       	rcall	.+0      	; 0x5962 <DIO_voidSetPortValue+0x6>
    5962:	00 d0       	rcall	.+0      	; 0x5964 <DIO_voidSetPortValue+0x8>
    5964:	cd b7       	in	r28, 0x3d	; 61
    5966:	de b7       	in	r29, 0x3e	; 62
    5968:	89 83       	std	Y+1, r24	; 0x01
    596a:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    596c:	89 81       	ldd	r24, Y+1	; 0x01
    596e:	28 2f       	mov	r18, r24
    5970:	30 e0       	ldi	r19, 0x00	; 0
    5972:	3c 83       	std	Y+4, r19	; 0x04
    5974:	2b 83       	std	Y+3, r18	; 0x03
    5976:	8b 81       	ldd	r24, Y+3	; 0x03
    5978:	9c 81       	ldd	r25, Y+4	; 0x04
    597a:	82 30       	cpi	r24, 0x02	; 2
    597c:	91 05       	cpc	r25, r1
    597e:	d9 f0       	breq	.+54     	; 0x59b6 <DIO_voidSetPortValue+0x5a>
    5980:	2b 81       	ldd	r18, Y+3	; 0x03
    5982:	3c 81       	ldd	r19, Y+4	; 0x04
    5984:	23 30       	cpi	r18, 0x03	; 3
    5986:	31 05       	cpc	r19, r1
    5988:	34 f4       	brge	.+12     	; 0x5996 <DIO_voidSetPortValue+0x3a>
    598a:	8b 81       	ldd	r24, Y+3	; 0x03
    598c:	9c 81       	ldd	r25, Y+4	; 0x04
    598e:	81 30       	cpi	r24, 0x01	; 1
    5990:	91 05       	cpc	r25, r1
    5992:	61 f0       	breq	.+24     	; 0x59ac <DIO_voidSetPortValue+0x50>
    5994:	1e c0       	rjmp	.+60     	; 0x59d2 <DIO_voidSetPortValue+0x76>
    5996:	2b 81       	ldd	r18, Y+3	; 0x03
    5998:	3c 81       	ldd	r19, Y+4	; 0x04
    599a:	23 30       	cpi	r18, 0x03	; 3
    599c:	31 05       	cpc	r19, r1
    599e:	81 f0       	breq	.+32     	; 0x59c0 <DIO_voidSetPortValue+0x64>
    59a0:	8b 81       	ldd	r24, Y+3	; 0x03
    59a2:	9c 81       	ldd	r25, Y+4	; 0x04
    59a4:	84 30       	cpi	r24, 0x04	; 4
    59a6:	91 05       	cpc	r25, r1
    59a8:	81 f0       	breq	.+32     	; 0x59ca <DIO_voidSetPortValue+0x6e>
    59aa:	13 c0       	rjmp	.+38     	; 0x59d2 <DIO_voidSetPortValue+0x76>
		{
			case DIO_u8PORTA :         PORTA  = Copy_u8Value;       break;
    59ac:	eb e3       	ldi	r30, 0x3B	; 59
    59ae:	f0 e0       	ldi	r31, 0x00	; 0
    59b0:	8a 81       	ldd	r24, Y+2	; 0x02
    59b2:	80 83       	st	Z, r24
    59b4:	0e c0       	rjmp	.+28     	; 0x59d2 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTB :         PORTB  = Copy_u8Value;       break;
    59b6:	e8 e3       	ldi	r30, 0x38	; 56
    59b8:	f0 e0       	ldi	r31, 0x00	; 0
    59ba:	8a 81       	ldd	r24, Y+2	; 0x02
    59bc:	80 83       	st	Z, r24
    59be:	09 c0       	rjmp	.+18     	; 0x59d2 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTC :         PORTC  = Copy_u8Value;       break;
    59c0:	e5 e3       	ldi	r30, 0x35	; 53
    59c2:	f0 e0       	ldi	r31, 0x00	; 0
    59c4:	8a 81       	ldd	r24, Y+2	; 0x02
    59c6:	80 83       	st	Z, r24
    59c8:	04 c0       	rjmp	.+8      	; 0x59d2 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTD :         PORTD  = Copy_u8Value;       break;
    59ca:	e2 e3       	ldi	r30, 0x32	; 50
    59cc:	f0 e0       	ldi	r31, 0x00	; 0
    59ce:	8a 81       	ldd	r24, Y+2	; 0x02
    59d0:	80 83       	st	Z, r24
		}
}
    59d2:	0f 90       	pop	r0
    59d4:	0f 90       	pop	r0
    59d6:	0f 90       	pop	r0
    59d8:	0f 90       	pop	r0
    59da:	cf 91       	pop	r28
    59dc:	df 91       	pop	r29
    59de:	08 95       	ret

000059e0 <DIO_voidSetTogglePin>:

void DIO_voidSetTogglePin(uint8 Copy_u8PortNum , uint8 Copy_u8PinNum)
{
    59e0:	df 93       	push	r29
    59e2:	cf 93       	push	r28
    59e4:	00 d0       	rcall	.+0      	; 0x59e6 <DIO_voidSetTogglePin+0x6>
    59e6:	00 d0       	rcall	.+0      	; 0x59e8 <DIO_voidSetTogglePin+0x8>
    59e8:	cd b7       	in	r28, 0x3d	; 61
    59ea:	de b7       	in	r29, 0x3e	; 62
    59ec:	89 83       	std	Y+1, r24	; 0x01
    59ee:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    59f0:	89 81       	ldd	r24, Y+1	; 0x01
    59f2:	28 2f       	mov	r18, r24
    59f4:	30 e0       	ldi	r19, 0x00	; 0
    59f6:	3c 83       	std	Y+4, r19	; 0x04
    59f8:	2b 83       	std	Y+3, r18	; 0x03
    59fa:	8b 81       	ldd	r24, Y+3	; 0x03
    59fc:	9c 81       	ldd	r25, Y+4	; 0x04
    59fe:	82 30       	cpi	r24, 0x02	; 2
    5a00:	91 05       	cpc	r25, r1
    5a02:	51 f1       	breq	.+84     	; 0x5a58 <DIO_voidSetTogglePin+0x78>
    5a04:	2b 81       	ldd	r18, Y+3	; 0x03
    5a06:	3c 81       	ldd	r19, Y+4	; 0x04
    5a08:	23 30       	cpi	r18, 0x03	; 3
    5a0a:	31 05       	cpc	r19, r1
    5a0c:	34 f4       	brge	.+12     	; 0x5a1a <DIO_voidSetTogglePin+0x3a>
    5a0e:	8b 81       	ldd	r24, Y+3	; 0x03
    5a10:	9c 81       	ldd	r25, Y+4	; 0x04
    5a12:	81 30       	cpi	r24, 0x01	; 1
    5a14:	91 05       	cpc	r25, r1
    5a16:	61 f0       	breq	.+24     	; 0x5a30 <DIO_voidSetTogglePin+0x50>
    5a18:	5a c0       	rjmp	.+180    	; 0x5ace <DIO_voidSetTogglePin+0xee>
    5a1a:	2b 81       	ldd	r18, Y+3	; 0x03
    5a1c:	3c 81       	ldd	r19, Y+4	; 0x04
    5a1e:	23 30       	cpi	r18, 0x03	; 3
    5a20:	31 05       	cpc	r19, r1
    5a22:	71 f1       	breq	.+92     	; 0x5a80 <DIO_voidSetTogglePin+0xa0>
    5a24:	8b 81       	ldd	r24, Y+3	; 0x03
    5a26:	9c 81       	ldd	r25, Y+4	; 0x04
    5a28:	84 30       	cpi	r24, 0x04	; 4
    5a2a:	91 05       	cpc	r25, r1
    5a2c:	e9 f1       	breq	.+122    	; 0x5aa8 <DIO_voidSetTogglePin+0xc8>
    5a2e:	4f c0       	rjmp	.+158    	; 0x5ace <DIO_voidSetTogglePin+0xee>
		{
			case DIO_u8PORTA :        TOG_BIT(PORTA , Copy_u8PinNum);       break;
    5a30:	ab e3       	ldi	r26, 0x3B	; 59
    5a32:	b0 e0       	ldi	r27, 0x00	; 0
    5a34:	eb e3       	ldi	r30, 0x3B	; 59
    5a36:	f0 e0       	ldi	r31, 0x00	; 0
    5a38:	80 81       	ld	r24, Z
    5a3a:	48 2f       	mov	r20, r24
    5a3c:	8a 81       	ldd	r24, Y+2	; 0x02
    5a3e:	28 2f       	mov	r18, r24
    5a40:	30 e0       	ldi	r19, 0x00	; 0
    5a42:	81 e0       	ldi	r24, 0x01	; 1
    5a44:	90 e0       	ldi	r25, 0x00	; 0
    5a46:	02 2e       	mov	r0, r18
    5a48:	02 c0       	rjmp	.+4      	; 0x5a4e <DIO_voidSetTogglePin+0x6e>
    5a4a:	88 0f       	add	r24, r24
    5a4c:	99 1f       	adc	r25, r25
    5a4e:	0a 94       	dec	r0
    5a50:	e2 f7       	brpl	.-8      	; 0x5a4a <DIO_voidSetTogglePin+0x6a>
    5a52:	84 27       	eor	r24, r20
    5a54:	8c 93       	st	X, r24
    5a56:	3b c0       	rjmp	.+118    	; 0x5ace <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTB :        TOG_BIT(PORTB , Copy_u8PinNum);       break;
    5a58:	a8 e3       	ldi	r26, 0x38	; 56
    5a5a:	b0 e0       	ldi	r27, 0x00	; 0
    5a5c:	e8 e3       	ldi	r30, 0x38	; 56
    5a5e:	f0 e0       	ldi	r31, 0x00	; 0
    5a60:	80 81       	ld	r24, Z
    5a62:	48 2f       	mov	r20, r24
    5a64:	8a 81       	ldd	r24, Y+2	; 0x02
    5a66:	28 2f       	mov	r18, r24
    5a68:	30 e0       	ldi	r19, 0x00	; 0
    5a6a:	81 e0       	ldi	r24, 0x01	; 1
    5a6c:	90 e0       	ldi	r25, 0x00	; 0
    5a6e:	02 2e       	mov	r0, r18
    5a70:	02 c0       	rjmp	.+4      	; 0x5a76 <DIO_voidSetTogglePin+0x96>
    5a72:	88 0f       	add	r24, r24
    5a74:	99 1f       	adc	r25, r25
    5a76:	0a 94       	dec	r0
    5a78:	e2 f7       	brpl	.-8      	; 0x5a72 <DIO_voidSetTogglePin+0x92>
    5a7a:	84 27       	eor	r24, r20
    5a7c:	8c 93       	st	X, r24
    5a7e:	27 c0       	rjmp	.+78     	; 0x5ace <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTC :        TOG_BIT(PORTC , Copy_u8PinNum);       break;
    5a80:	a5 e3       	ldi	r26, 0x35	; 53
    5a82:	b0 e0       	ldi	r27, 0x00	; 0
    5a84:	e5 e3       	ldi	r30, 0x35	; 53
    5a86:	f0 e0       	ldi	r31, 0x00	; 0
    5a88:	80 81       	ld	r24, Z
    5a8a:	48 2f       	mov	r20, r24
    5a8c:	8a 81       	ldd	r24, Y+2	; 0x02
    5a8e:	28 2f       	mov	r18, r24
    5a90:	30 e0       	ldi	r19, 0x00	; 0
    5a92:	81 e0       	ldi	r24, 0x01	; 1
    5a94:	90 e0       	ldi	r25, 0x00	; 0
    5a96:	02 2e       	mov	r0, r18
    5a98:	02 c0       	rjmp	.+4      	; 0x5a9e <DIO_voidSetTogglePin+0xbe>
    5a9a:	88 0f       	add	r24, r24
    5a9c:	99 1f       	adc	r25, r25
    5a9e:	0a 94       	dec	r0
    5aa0:	e2 f7       	brpl	.-8      	; 0x5a9a <DIO_voidSetTogglePin+0xba>
    5aa2:	84 27       	eor	r24, r20
    5aa4:	8c 93       	st	X, r24
    5aa6:	13 c0       	rjmp	.+38     	; 0x5ace <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTD :        TOG_BIT(PORTD, Copy_u8PinNum);       break;
    5aa8:	a2 e3       	ldi	r26, 0x32	; 50
    5aaa:	b0 e0       	ldi	r27, 0x00	; 0
    5aac:	e2 e3       	ldi	r30, 0x32	; 50
    5aae:	f0 e0       	ldi	r31, 0x00	; 0
    5ab0:	80 81       	ld	r24, Z
    5ab2:	48 2f       	mov	r20, r24
    5ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    5ab6:	28 2f       	mov	r18, r24
    5ab8:	30 e0       	ldi	r19, 0x00	; 0
    5aba:	81 e0       	ldi	r24, 0x01	; 1
    5abc:	90 e0       	ldi	r25, 0x00	; 0
    5abe:	02 2e       	mov	r0, r18
    5ac0:	02 c0       	rjmp	.+4      	; 0x5ac6 <DIO_voidSetTogglePin+0xe6>
    5ac2:	88 0f       	add	r24, r24
    5ac4:	99 1f       	adc	r25, r25
    5ac6:	0a 94       	dec	r0
    5ac8:	e2 f7       	brpl	.-8      	; 0x5ac2 <DIO_voidSetTogglePin+0xe2>
    5aca:	84 27       	eor	r24, r20
    5acc:	8c 93       	st	X, r24
		}
}
    5ace:	0f 90       	pop	r0
    5ad0:	0f 90       	pop	r0
    5ad2:	0f 90       	pop	r0
    5ad4:	0f 90       	pop	r0
    5ad6:	cf 91       	pop	r28
    5ad8:	df 91       	pop	r29
    5ada:	08 95       	ret

00005adc <DIO_u8GetPinValue_Store>:
uint8 DIO_u8GetPinValue_Store(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8* BIT)
{
    5adc:	df 93       	push	r29
    5ade:	cf 93       	push	r28
    5ae0:	cd b7       	in	r28, 0x3d	; 61
    5ae2:	de b7       	in	r29, 0x3e	; 62
    5ae4:	27 97       	sbiw	r28, 0x07	; 7
    5ae6:	0f b6       	in	r0, 0x3f	; 63
    5ae8:	f8 94       	cli
    5aea:	de bf       	out	0x3e, r29	; 62
    5aec:	0f be       	out	0x3f, r0	; 63
    5aee:	cd bf       	out	0x3d, r28	; 61
    5af0:	8a 83       	std	Y+2, r24	; 0x02
    5af2:	6b 83       	std	Y+3, r22	; 0x03
    5af4:	5d 83       	std	Y+5, r21	; 0x05
    5af6:	4c 83       	std	Y+4, r20	; 0x04
    uint8 value = 0; // Create a local variable to store the pin value
    5af8:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8PortNum)
    5afa:	8a 81       	ldd	r24, Y+2	; 0x02
    5afc:	28 2f       	mov	r18, r24
    5afe:	30 e0       	ldi	r19, 0x00	; 0
    5b00:	3f 83       	std	Y+7, r19	; 0x07
    5b02:	2e 83       	std	Y+6, r18	; 0x06
    5b04:	4e 81       	ldd	r20, Y+6	; 0x06
    5b06:	5f 81       	ldd	r21, Y+7	; 0x07
    5b08:	42 30       	cpi	r20, 0x02	; 2
    5b0a:	51 05       	cpc	r21, r1
    5b0c:	59 f1       	breq	.+86     	; 0x5b64 <DIO_u8GetPinValue_Store+0x88>
    5b0e:	8e 81       	ldd	r24, Y+6	; 0x06
    5b10:	9f 81       	ldd	r25, Y+7	; 0x07
    5b12:	83 30       	cpi	r24, 0x03	; 3
    5b14:	91 05       	cpc	r25, r1
    5b16:	34 f4       	brge	.+12     	; 0x5b24 <DIO_u8GetPinValue_Store+0x48>
    5b18:	2e 81       	ldd	r18, Y+6	; 0x06
    5b1a:	3f 81       	ldd	r19, Y+7	; 0x07
    5b1c:	21 30       	cpi	r18, 0x01	; 1
    5b1e:	31 05       	cpc	r19, r1
    5b20:	69 f0       	breq	.+26     	; 0x5b3c <DIO_u8GetPinValue_Store+0x60>
    5b22:	5b c0       	rjmp	.+182    	; 0x5bda <DIO_u8GetPinValue_Store+0xfe>
    5b24:	4e 81       	ldd	r20, Y+6	; 0x06
    5b26:	5f 81       	ldd	r21, Y+7	; 0x07
    5b28:	43 30       	cpi	r20, 0x03	; 3
    5b2a:	51 05       	cpc	r21, r1
    5b2c:	79 f1       	breq	.+94     	; 0x5b8c <DIO_u8GetPinValue_Store+0xb0>
    5b2e:	8e 81       	ldd	r24, Y+6	; 0x06
    5b30:	9f 81       	ldd	r25, Y+7	; 0x07
    5b32:	84 30       	cpi	r24, 0x04	; 4
    5b34:	91 05       	cpc	r25, r1
    5b36:	09 f4       	brne	.+2      	; 0x5b3a <DIO_u8GetPinValue_Store+0x5e>
    5b38:	3d c0       	rjmp	.+122    	; 0x5bb4 <DIO_u8GetPinValue_Store+0xd8>
    5b3a:	4f c0       	rjmp	.+158    	; 0x5bda <DIO_u8GetPinValue_Store+0xfe>
		{
				case DIO_u8PORTA :         *BIT = GET_BIT(PINA , Copy_u8PinNum);       break;
    5b3c:	e9 e3       	ldi	r30, 0x39	; 57
    5b3e:	f0 e0       	ldi	r31, 0x00	; 0
    5b40:	80 81       	ld	r24, Z
    5b42:	28 2f       	mov	r18, r24
    5b44:	30 e0       	ldi	r19, 0x00	; 0
    5b46:	8b 81       	ldd	r24, Y+3	; 0x03
    5b48:	88 2f       	mov	r24, r24
    5b4a:	90 e0       	ldi	r25, 0x00	; 0
    5b4c:	a9 01       	movw	r20, r18
    5b4e:	02 c0       	rjmp	.+4      	; 0x5b54 <DIO_u8GetPinValue_Store+0x78>
    5b50:	55 95       	asr	r21
    5b52:	47 95       	ror	r20
    5b54:	8a 95       	dec	r24
    5b56:	e2 f7       	brpl	.-8      	; 0x5b50 <DIO_u8GetPinValue_Store+0x74>
    5b58:	ca 01       	movw	r24, r20
    5b5a:	81 70       	andi	r24, 0x01	; 1
    5b5c:	ec 81       	ldd	r30, Y+4	; 0x04
    5b5e:	fd 81       	ldd	r31, Y+5	; 0x05
    5b60:	80 83       	st	Z, r24
    5b62:	3b c0       	rjmp	.+118    	; 0x5bda <DIO_u8GetPinValue_Store+0xfe>
				case DIO_u8PORTB :         *BIT = GET_BIT(PINB , Copy_u8PinNum);       break;
    5b64:	e6 e3       	ldi	r30, 0x36	; 54
    5b66:	f0 e0       	ldi	r31, 0x00	; 0
    5b68:	80 81       	ld	r24, Z
    5b6a:	28 2f       	mov	r18, r24
    5b6c:	30 e0       	ldi	r19, 0x00	; 0
    5b6e:	8b 81       	ldd	r24, Y+3	; 0x03
    5b70:	88 2f       	mov	r24, r24
    5b72:	90 e0       	ldi	r25, 0x00	; 0
    5b74:	a9 01       	movw	r20, r18
    5b76:	02 c0       	rjmp	.+4      	; 0x5b7c <DIO_u8GetPinValue_Store+0xa0>
    5b78:	55 95       	asr	r21
    5b7a:	47 95       	ror	r20
    5b7c:	8a 95       	dec	r24
    5b7e:	e2 f7       	brpl	.-8      	; 0x5b78 <DIO_u8GetPinValue_Store+0x9c>
    5b80:	ca 01       	movw	r24, r20
    5b82:	81 70       	andi	r24, 0x01	; 1
    5b84:	ec 81       	ldd	r30, Y+4	; 0x04
    5b86:	fd 81       	ldd	r31, Y+5	; 0x05
    5b88:	80 83       	st	Z, r24
    5b8a:	27 c0       	rjmp	.+78     	; 0x5bda <DIO_u8GetPinValue_Store+0xfe>
				case DIO_u8PORTC :         *BIT = GET_BIT(PINC , Copy_u8PinNum);       break;
    5b8c:	e3 e3       	ldi	r30, 0x33	; 51
    5b8e:	f0 e0       	ldi	r31, 0x00	; 0
    5b90:	80 81       	ld	r24, Z
    5b92:	28 2f       	mov	r18, r24
    5b94:	30 e0       	ldi	r19, 0x00	; 0
    5b96:	8b 81       	ldd	r24, Y+3	; 0x03
    5b98:	88 2f       	mov	r24, r24
    5b9a:	90 e0       	ldi	r25, 0x00	; 0
    5b9c:	a9 01       	movw	r20, r18
    5b9e:	02 c0       	rjmp	.+4      	; 0x5ba4 <DIO_u8GetPinValue_Store+0xc8>
    5ba0:	55 95       	asr	r21
    5ba2:	47 95       	ror	r20
    5ba4:	8a 95       	dec	r24
    5ba6:	e2 f7       	brpl	.-8      	; 0x5ba0 <DIO_u8GetPinValue_Store+0xc4>
    5ba8:	ca 01       	movw	r24, r20
    5baa:	81 70       	andi	r24, 0x01	; 1
    5bac:	ec 81       	ldd	r30, Y+4	; 0x04
    5bae:	fd 81       	ldd	r31, Y+5	; 0x05
    5bb0:	80 83       	st	Z, r24
    5bb2:	13 c0       	rjmp	.+38     	; 0x5bda <DIO_u8GetPinValue_Store+0xfe>
				case DIO_u8PORTD :         *BIT = GET_BIT(PIND , Copy_u8PinNum);       break;
    5bb4:	e0 e3       	ldi	r30, 0x30	; 48
    5bb6:	f0 e0       	ldi	r31, 0x00	; 0
    5bb8:	80 81       	ld	r24, Z
    5bba:	28 2f       	mov	r18, r24
    5bbc:	30 e0       	ldi	r19, 0x00	; 0
    5bbe:	8b 81       	ldd	r24, Y+3	; 0x03
    5bc0:	88 2f       	mov	r24, r24
    5bc2:	90 e0       	ldi	r25, 0x00	; 0
    5bc4:	a9 01       	movw	r20, r18
    5bc6:	02 c0       	rjmp	.+4      	; 0x5bcc <DIO_u8GetPinValue_Store+0xf0>
    5bc8:	55 95       	asr	r21
    5bca:	47 95       	ror	r20
    5bcc:	8a 95       	dec	r24
    5bce:	e2 f7       	brpl	.-8      	; 0x5bc8 <DIO_u8GetPinValue_Store+0xec>
    5bd0:	ca 01       	movw	r24, r20
    5bd2:	81 70       	andi	r24, 0x01	; 1
    5bd4:	ec 81       	ldd	r30, Y+4	; 0x04
    5bd6:	fd 81       	ldd	r31, Y+5	; 0x05
    5bd8:	80 83       	st	Z, r24
		}

	 // Store the value in the provided pointer
	    if (BIT != NULL)
    5bda:	8c 81       	ldd	r24, Y+4	; 0x04
    5bdc:	9d 81       	ldd	r25, Y+5	; 0x05
    5bde:	00 97       	sbiw	r24, 0x00	; 0
    5be0:	21 f0       	breq	.+8      	; 0x5bea <DIO_u8GetPinValue_Store+0x10e>
	    {
	        *BIT = value;
    5be2:	ec 81       	ldd	r30, Y+4	; 0x04
    5be4:	fd 81       	ldd	r31, Y+5	; 0x05
    5be6:	89 81       	ldd	r24, Y+1	; 0x01
    5be8:	80 83       	st	Z, r24
	    }
	return value;
    5bea:	89 81       	ldd	r24, Y+1	; 0x01
}
    5bec:	27 96       	adiw	r28, 0x07	; 7
    5bee:	0f b6       	in	r0, 0x3f	; 63
    5bf0:	f8 94       	cli
    5bf2:	de bf       	out	0x3e, r29	; 62
    5bf4:	0f be       	out	0x3f, r0	; 63
    5bf6:	cd bf       	out	0x3d, r28	; 61
    5bf8:	cf 91       	pop	r28
    5bfa:	df 91       	pop	r29
    5bfc:	08 95       	ret

00005bfe <__mulsi3>:
    5bfe:	62 9f       	mul	r22, r18
    5c00:	d0 01       	movw	r26, r0
    5c02:	73 9f       	mul	r23, r19
    5c04:	f0 01       	movw	r30, r0
    5c06:	82 9f       	mul	r24, r18
    5c08:	e0 0d       	add	r30, r0
    5c0a:	f1 1d       	adc	r31, r1
    5c0c:	64 9f       	mul	r22, r20
    5c0e:	e0 0d       	add	r30, r0
    5c10:	f1 1d       	adc	r31, r1
    5c12:	92 9f       	mul	r25, r18
    5c14:	f0 0d       	add	r31, r0
    5c16:	83 9f       	mul	r24, r19
    5c18:	f0 0d       	add	r31, r0
    5c1a:	74 9f       	mul	r23, r20
    5c1c:	f0 0d       	add	r31, r0
    5c1e:	65 9f       	mul	r22, r21
    5c20:	f0 0d       	add	r31, r0
    5c22:	99 27       	eor	r25, r25
    5c24:	72 9f       	mul	r23, r18
    5c26:	b0 0d       	add	r27, r0
    5c28:	e1 1d       	adc	r30, r1
    5c2a:	f9 1f       	adc	r31, r25
    5c2c:	63 9f       	mul	r22, r19
    5c2e:	b0 0d       	add	r27, r0
    5c30:	e1 1d       	adc	r30, r1
    5c32:	f9 1f       	adc	r31, r25
    5c34:	bd 01       	movw	r22, r26
    5c36:	cf 01       	movw	r24, r30
    5c38:	11 24       	eor	r1, r1
    5c3a:	08 95       	ret

00005c3c <__udivmodqi4>:
    5c3c:	99 1b       	sub	r25, r25
    5c3e:	79 e0       	ldi	r23, 0x09	; 9
    5c40:	04 c0       	rjmp	.+8      	; 0x5c4a <__udivmodqi4_ep>

00005c42 <__udivmodqi4_loop>:
    5c42:	99 1f       	adc	r25, r25
    5c44:	96 17       	cp	r25, r22
    5c46:	08 f0       	brcs	.+2      	; 0x5c4a <__udivmodqi4_ep>
    5c48:	96 1b       	sub	r25, r22

00005c4a <__udivmodqi4_ep>:
    5c4a:	88 1f       	adc	r24, r24
    5c4c:	7a 95       	dec	r23
    5c4e:	c9 f7       	brne	.-14     	; 0x5c42 <__udivmodqi4_loop>
    5c50:	80 95       	com	r24
    5c52:	08 95       	ret

00005c54 <__udivmodsi4>:
    5c54:	a1 e2       	ldi	r26, 0x21	; 33
    5c56:	1a 2e       	mov	r1, r26
    5c58:	aa 1b       	sub	r26, r26
    5c5a:	bb 1b       	sub	r27, r27
    5c5c:	fd 01       	movw	r30, r26
    5c5e:	0d c0       	rjmp	.+26     	; 0x5c7a <__udivmodsi4_ep>

00005c60 <__udivmodsi4_loop>:
    5c60:	aa 1f       	adc	r26, r26
    5c62:	bb 1f       	adc	r27, r27
    5c64:	ee 1f       	adc	r30, r30
    5c66:	ff 1f       	adc	r31, r31
    5c68:	a2 17       	cp	r26, r18
    5c6a:	b3 07       	cpc	r27, r19
    5c6c:	e4 07       	cpc	r30, r20
    5c6e:	f5 07       	cpc	r31, r21
    5c70:	20 f0       	brcs	.+8      	; 0x5c7a <__udivmodsi4_ep>
    5c72:	a2 1b       	sub	r26, r18
    5c74:	b3 0b       	sbc	r27, r19
    5c76:	e4 0b       	sbc	r30, r20
    5c78:	f5 0b       	sbc	r31, r21

00005c7a <__udivmodsi4_ep>:
    5c7a:	66 1f       	adc	r22, r22
    5c7c:	77 1f       	adc	r23, r23
    5c7e:	88 1f       	adc	r24, r24
    5c80:	99 1f       	adc	r25, r25
    5c82:	1a 94       	dec	r1
    5c84:	69 f7       	brne	.-38     	; 0x5c60 <__udivmodsi4_loop>
    5c86:	60 95       	com	r22
    5c88:	70 95       	com	r23
    5c8a:	80 95       	com	r24
    5c8c:	90 95       	com	r25
    5c8e:	9b 01       	movw	r18, r22
    5c90:	ac 01       	movw	r20, r24
    5c92:	bd 01       	movw	r22, r26
    5c94:	cf 01       	movw	r24, r30
    5c96:	08 95       	ret

00005c98 <__divmodsi4>:
    5c98:	97 fb       	bst	r25, 7
    5c9a:	09 2e       	mov	r0, r25
    5c9c:	05 26       	eor	r0, r21
    5c9e:	0e d0       	rcall	.+28     	; 0x5cbc <__divmodsi4_neg1>
    5ca0:	57 fd       	sbrc	r21, 7
    5ca2:	04 d0       	rcall	.+8      	; 0x5cac <__divmodsi4_neg2>
    5ca4:	d7 df       	rcall	.-82     	; 0x5c54 <__udivmodsi4>
    5ca6:	0a d0       	rcall	.+20     	; 0x5cbc <__divmodsi4_neg1>
    5ca8:	00 1c       	adc	r0, r0
    5caa:	38 f4       	brcc	.+14     	; 0x5cba <__divmodsi4_exit>

00005cac <__divmodsi4_neg2>:
    5cac:	50 95       	com	r21
    5cae:	40 95       	com	r20
    5cb0:	30 95       	com	r19
    5cb2:	21 95       	neg	r18
    5cb4:	3f 4f       	sbci	r19, 0xFF	; 255
    5cb6:	4f 4f       	sbci	r20, 0xFF	; 255
    5cb8:	5f 4f       	sbci	r21, 0xFF	; 255

00005cba <__divmodsi4_exit>:
    5cba:	08 95       	ret

00005cbc <__divmodsi4_neg1>:
    5cbc:	f6 f7       	brtc	.-4      	; 0x5cba <__divmodsi4_exit>
    5cbe:	90 95       	com	r25
    5cc0:	80 95       	com	r24
    5cc2:	70 95       	com	r23
    5cc4:	61 95       	neg	r22
    5cc6:	7f 4f       	sbci	r23, 0xFF	; 255
    5cc8:	8f 4f       	sbci	r24, 0xFF	; 255
    5cca:	9f 4f       	sbci	r25, 0xFF	; 255
    5ccc:	08 95       	ret

00005cce <__prologue_saves__>:
    5cce:	2f 92       	push	r2
    5cd0:	3f 92       	push	r3
    5cd2:	4f 92       	push	r4
    5cd4:	5f 92       	push	r5
    5cd6:	6f 92       	push	r6
    5cd8:	7f 92       	push	r7
    5cda:	8f 92       	push	r8
    5cdc:	9f 92       	push	r9
    5cde:	af 92       	push	r10
    5ce0:	bf 92       	push	r11
    5ce2:	cf 92       	push	r12
    5ce4:	df 92       	push	r13
    5ce6:	ef 92       	push	r14
    5ce8:	ff 92       	push	r15
    5cea:	0f 93       	push	r16
    5cec:	1f 93       	push	r17
    5cee:	cf 93       	push	r28
    5cf0:	df 93       	push	r29
    5cf2:	cd b7       	in	r28, 0x3d	; 61
    5cf4:	de b7       	in	r29, 0x3e	; 62
    5cf6:	ca 1b       	sub	r28, r26
    5cf8:	db 0b       	sbc	r29, r27
    5cfa:	0f b6       	in	r0, 0x3f	; 63
    5cfc:	f8 94       	cli
    5cfe:	de bf       	out	0x3e, r29	; 62
    5d00:	0f be       	out	0x3f, r0	; 63
    5d02:	cd bf       	out	0x3d, r28	; 61
    5d04:	09 94       	ijmp

00005d06 <__epilogue_restores__>:
    5d06:	2a 88       	ldd	r2, Y+18	; 0x12
    5d08:	39 88       	ldd	r3, Y+17	; 0x11
    5d0a:	48 88       	ldd	r4, Y+16	; 0x10
    5d0c:	5f 84       	ldd	r5, Y+15	; 0x0f
    5d0e:	6e 84       	ldd	r6, Y+14	; 0x0e
    5d10:	7d 84       	ldd	r7, Y+13	; 0x0d
    5d12:	8c 84       	ldd	r8, Y+12	; 0x0c
    5d14:	9b 84       	ldd	r9, Y+11	; 0x0b
    5d16:	aa 84       	ldd	r10, Y+10	; 0x0a
    5d18:	b9 84       	ldd	r11, Y+9	; 0x09
    5d1a:	c8 84       	ldd	r12, Y+8	; 0x08
    5d1c:	df 80       	ldd	r13, Y+7	; 0x07
    5d1e:	ee 80       	ldd	r14, Y+6	; 0x06
    5d20:	fd 80       	ldd	r15, Y+5	; 0x05
    5d22:	0c 81       	ldd	r16, Y+4	; 0x04
    5d24:	1b 81       	ldd	r17, Y+3	; 0x03
    5d26:	aa 81       	ldd	r26, Y+2	; 0x02
    5d28:	b9 81       	ldd	r27, Y+1	; 0x01
    5d2a:	ce 0f       	add	r28, r30
    5d2c:	d1 1d       	adc	r29, r1
    5d2e:	0f b6       	in	r0, 0x3f	; 63
    5d30:	f8 94       	cli
    5d32:	de bf       	out	0x3e, r29	; 62
    5d34:	0f be       	out	0x3f, r0	; 63
    5d36:	cd bf       	out	0x3d, r28	; 61
    5d38:	ed 01       	movw	r28, r26
    5d3a:	08 95       	ret

00005d3c <strlen>:
    5d3c:	fc 01       	movw	r30, r24
    5d3e:	01 90       	ld	r0, Z+
    5d40:	00 20       	and	r0, r0
    5d42:	e9 f7       	brne	.-6      	; 0x5d3e <strlen+0x2>
    5d44:	80 95       	com	r24
    5d46:	90 95       	com	r25
    5d48:	8e 0f       	add	r24, r30
    5d4a:	9f 1f       	adc	r25, r31
    5d4c:	08 95       	ret

00005d4e <_exit>:
    5d4e:	f8 94       	cli

00005d50 <__stop_program>:
    5d50:	ff cf       	rjmp	.-2      	; 0x5d50 <__stop_program>
