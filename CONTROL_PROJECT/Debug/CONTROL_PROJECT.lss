
CONTROL_PROJECT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000052a0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000024e  00800060  000052a0  00005314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002c04  00000000  00000000  00005564  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001567  00000000  00000000  00008168  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000240  00000000  00000000  000096cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000299  00000000  00000000  0000990f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000034eb  00000000  00000000  00009ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001878  00000000  00000000  0000d093  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017e9  00000000  00000000  0000e90b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  000100f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000393  00000000  00000000  00010354  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000265a  00000000  00000000  000106e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00012d41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 ea       	ldi	r30, 0xA0	; 160
      68:	f2 e5       	ldi	r31, 0x52	; 82
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 3a       	cpi	r26, 0xAE	; 174
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <main>
      7a:	0c 94 4e 29 	jmp	0x529c	; 0x529c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__ashldi3>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	df 93       	push	r29
      8a:	cf 93       	push	r28
      8c:	cd b7       	in	r28, 0x3d	; 61
      8e:	de b7       	in	r29, 0x3e	; 62
      90:	60 97       	sbiw	r28, 0x10	; 16
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
      9c:	a8 2f       	mov	r26, r24
      9e:	00 23       	and	r16, r16
      a0:	09 f4       	brne	.+2      	; 0xa4 <__ashldi3+0x22>
      a2:	61 c0       	rjmp	.+194    	; 0x166 <__ashldi3+0xe4>
      a4:	7e 01       	movw	r14, r28
      a6:	08 94       	sec
      a8:	e1 1c       	adc	r14, r1
      aa:	f1 1c       	adc	r15, r1
      ac:	88 e0       	ldi	r24, 0x08	; 8
      ae:	f7 01       	movw	r30, r14
      b0:	11 92       	st	Z+, r1
      b2:	8a 95       	dec	r24
      b4:	e9 f7       	brne	.-6      	; 0xb0 <__ashldi3+0x2e>
      b6:	29 83       	std	Y+1, r18	; 0x01
      b8:	3a 83       	std	Y+2, r19	; 0x02
      ba:	4b 83       	std	Y+3, r20	; 0x03
      bc:	5c 83       	std	Y+4, r21	; 0x04
      be:	6d 83       	std	Y+5, r22	; 0x05
      c0:	7e 83       	std	Y+6, r23	; 0x06
      c2:	af 83       	std	Y+7, r26	; 0x07
      c4:	98 87       	std	Y+8, r25	; 0x08
      c6:	80 e2       	ldi	r24, 0x20	; 32
      c8:	80 1b       	sub	r24, r16
      ca:	e8 2f       	mov	r30, r24
      cc:	ff 27       	eor	r31, r31
      ce:	e7 fd       	sbrc	r30, 7
      d0:	f0 95       	com	r31
      d2:	49 81       	ldd	r20, Y+1	; 0x01
      d4:	5a 81       	ldd	r21, Y+2	; 0x02
      d6:	6b 81       	ldd	r22, Y+3	; 0x03
      d8:	7c 81       	ldd	r23, Y+4	; 0x04
      da:	18 16       	cp	r1, r24
      dc:	84 f0       	brlt	.+32     	; 0xfe <__ashldi3+0x7c>
      de:	19 86       	std	Y+9, r1	; 0x09
      e0:	1a 86       	std	Y+10, r1	; 0x0a
      e2:	1b 86       	std	Y+11, r1	; 0x0b
      e4:	1c 86       	std	Y+12, r1	; 0x0c
      e6:	88 27       	eor	r24, r24
      e8:	99 27       	eor	r25, r25
      ea:	8e 1b       	sub	r24, r30
      ec:	9f 0b       	sbc	r25, r31
      ee:	04 c0       	rjmp	.+8      	; 0xf8 <__ashldi3+0x76>
      f0:	44 0f       	add	r20, r20
      f2:	55 1f       	adc	r21, r21
      f4:	66 1f       	adc	r22, r22
      f6:	77 1f       	adc	r23, r23
      f8:	8a 95       	dec	r24
      fa:	d2 f7       	brpl	.-12     	; 0xf0 <__ashldi3+0x6e>
      fc:	28 c0       	rjmp	.+80     	; 0x14e <__ashldi3+0xcc>
      fe:	20 2f       	mov	r18, r16
     100:	33 27       	eor	r19, r19
     102:	27 fd       	sbrc	r18, 7
     104:	30 95       	com	r19
     106:	db 01       	movw	r26, r22
     108:	ca 01       	movw	r24, r20
     10a:	02 2e       	mov	r0, r18
     10c:	04 c0       	rjmp	.+8      	; 0x116 <__ashldi3+0x94>
     10e:	88 0f       	add	r24, r24
     110:	99 1f       	adc	r25, r25
     112:	aa 1f       	adc	r26, r26
     114:	bb 1f       	adc	r27, r27
     116:	0a 94       	dec	r0
     118:	d2 f7       	brpl	.-12     	; 0x10e <__ashldi3+0x8c>
     11a:	89 87       	std	Y+9, r24	; 0x09
     11c:	9a 87       	std	Y+10, r25	; 0x0a
     11e:	ab 87       	std	Y+11, r26	; 0x0b
     120:	bc 87       	std	Y+12, r27	; 0x0c
     122:	04 c0       	rjmp	.+8      	; 0x12c <__ashldi3+0xaa>
     124:	76 95       	lsr	r23
     126:	67 95       	ror	r22
     128:	57 95       	ror	r21
     12a:	47 95       	ror	r20
     12c:	ea 95       	dec	r30
     12e:	d2 f7       	brpl	.-12     	; 0x124 <__ashldi3+0xa2>
     130:	8d 81       	ldd	r24, Y+5	; 0x05
     132:	9e 81       	ldd	r25, Y+6	; 0x06
     134:	af 81       	ldd	r26, Y+7	; 0x07
     136:	b8 85       	ldd	r27, Y+8	; 0x08
     138:	04 c0       	rjmp	.+8      	; 0x142 <__ashldi3+0xc0>
     13a:	88 0f       	add	r24, r24
     13c:	99 1f       	adc	r25, r25
     13e:	aa 1f       	adc	r26, r26
     140:	bb 1f       	adc	r27, r27
     142:	2a 95       	dec	r18
     144:	d2 f7       	brpl	.-12     	; 0x13a <__ashldi3+0xb8>
     146:	48 2b       	or	r20, r24
     148:	59 2b       	or	r21, r25
     14a:	6a 2b       	or	r22, r26
     14c:	7b 2b       	or	r23, r27
     14e:	4d 87       	std	Y+13, r20	; 0x0d
     150:	5e 87       	std	Y+14, r21	; 0x0e
     152:	6f 87       	std	Y+15, r22	; 0x0f
     154:	78 8b       	std	Y+16, r23	; 0x10
     156:	29 85       	ldd	r18, Y+9	; 0x09
     158:	3a 85       	ldd	r19, Y+10	; 0x0a
     15a:	4b 85       	ldd	r20, Y+11	; 0x0b
     15c:	5c 85       	ldd	r21, Y+12	; 0x0c
     15e:	6d 85       	ldd	r22, Y+13	; 0x0d
     160:	7e 85       	ldd	r23, Y+14	; 0x0e
     162:	af 85       	ldd	r26, Y+15	; 0x0f
     164:	98 89       	ldd	r25, Y+16	; 0x10
     166:	8a 2f       	mov	r24, r26
     168:	60 96       	adiw	r28, 0x10	; 16
     16a:	0f b6       	in	r0, 0x3f	; 63
     16c:	f8 94       	cli
     16e:	de bf       	out	0x3e, r29	; 62
     170:	0f be       	out	0x3f, r0	; 63
     172:	cd bf       	out	0x3d, r28	; 61
     174:	cf 91       	pop	r28
     176:	df 91       	pop	r29
     178:	0f 91       	pop	r16
     17a:	ff 90       	pop	r15
     17c:	ef 90       	pop	r14
     17e:	08 95       	ret

00000180 <__fixunssfsi>:
     180:	ef 92       	push	r14
     182:	ff 92       	push	r15
     184:	0f 93       	push	r16
     186:	1f 93       	push	r17
     188:	7b 01       	movw	r14, r22
     18a:	8c 01       	movw	r16, r24
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 e0       	ldi	r20, 0x00	; 0
     192:	5f e4       	ldi	r21, 0x4F	; 79
     194:	0e 94 81 11 	call	0x2302	; 0x2302 <__gesf2>
     198:	88 23       	and	r24, r24
     19a:	8c f0       	brlt	.+34     	; 0x1be <__fixunssfsi+0x3e>
     19c:	c8 01       	movw	r24, r16
     19e:	b7 01       	movw	r22, r14
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	40 e0       	ldi	r20, 0x00	; 0
     1a6:	5f e4       	ldi	r21, 0x4F	; 79
     1a8:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__subsf3>
     1ac:	0e 94 3f 12 	call	0x247e	; 0x247e <__fixsfsi>
     1b0:	9b 01       	movw	r18, r22
     1b2:	ac 01       	movw	r20, r24
     1b4:	20 50       	subi	r18, 0x00	; 0
     1b6:	30 40       	sbci	r19, 0x00	; 0
     1b8:	40 40       	sbci	r20, 0x00	; 0
     1ba:	50 48       	sbci	r21, 0x80	; 128
     1bc:	06 c0       	rjmp	.+12     	; 0x1ca <__fixunssfsi+0x4a>
     1be:	c8 01       	movw	r24, r16
     1c0:	b7 01       	movw	r22, r14
     1c2:	0e 94 3f 12 	call	0x247e	; 0x247e <__fixsfsi>
     1c6:	9b 01       	movw	r18, r22
     1c8:	ac 01       	movw	r20, r24
     1ca:	b9 01       	movw	r22, r18
     1cc:	ca 01       	movw	r24, r20
     1ce:	1f 91       	pop	r17
     1d0:	0f 91       	pop	r16
     1d2:	ff 90       	pop	r15
     1d4:	ef 90       	pop	r14
     1d6:	08 95       	ret

000001d8 <__floatundisf>:
     1d8:	a2 e0       	ldi	r26, 0x02	; 2
     1da:	b0 e0       	ldi	r27, 0x00	; 0
     1dc:	e2 ef       	ldi	r30, 0xF2	; 242
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	0c 94 0e 29 	jmp	0x521c	; 0x521c <__prologue_saves__>
     1e4:	12 2f       	mov	r17, r18
     1e6:	b3 2e       	mov	r11, r19
     1e8:	a4 2e       	mov	r10, r20
     1ea:	95 2e       	mov	r9, r21
     1ec:	86 2e       	mov	r8, r22
     1ee:	37 2e       	mov	r3, r23
     1f0:	28 2e       	mov	r2, r24
     1f2:	9a 83       	std	Y+2, r25	; 0x02
     1f4:	c2 2e       	mov	r12, r18
     1f6:	d3 2e       	mov	r13, r19
     1f8:	e4 2e       	mov	r14, r20
     1fa:	f5 2e       	mov	r15, r21
     1fc:	a7 01       	movw	r20, r14
     1fe:	96 01       	movw	r18, r12
     200:	60 e0       	ldi	r22, 0x00	; 0
     202:	70 e0       	ldi	r23, 0x00	; 0
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	21 17       	cp	r18, r17
     20a:	a1 f4       	brne	.+40     	; 0x234 <__floatundisf+0x5c>
     20c:	3b 15       	cp	r19, r11
     20e:	91 f4       	brne	.+36     	; 0x234 <__floatundisf+0x5c>
     210:	4a 15       	cp	r20, r10
     212:	81 f4       	brne	.+32     	; 0x234 <__floatundisf+0x5c>
     214:	59 15       	cp	r21, r9
     216:	71 f4       	brne	.+28     	; 0x234 <__floatundisf+0x5c>
     218:	68 15       	cp	r22, r8
     21a:	61 f4       	brne	.+24     	; 0x234 <__floatundisf+0x5c>
     21c:	73 15       	cp	r23, r3
     21e:	51 f4       	brne	.+20     	; 0x234 <__floatundisf+0x5c>
     220:	82 15       	cp	r24, r2
     222:	41 f4       	brne	.+16     	; 0x234 <__floatundisf+0x5c>
     224:	aa 81       	ldd	r26, Y+2	; 0x02
     226:	9a 17       	cp	r25, r26
     228:	29 f4       	brne	.+10     	; 0x234 <__floatundisf+0x5c>
     22a:	c7 01       	movw	r24, r14
     22c:	b6 01       	movw	r22, r12
     22e:	0e 94 93 12 	call	0x2526	; 0x2526 <__floatunsisf>
     232:	aa c0       	rjmp	.+340    	; 0x388 <__floatundisf+0x1b0>
     234:	21 2f       	mov	r18, r17
     236:	3b 2d       	mov	r19, r11
     238:	4a 2d       	mov	r20, r10
     23a:	59 2d       	mov	r21, r9
     23c:	68 2d       	mov	r22, r8
     23e:	73 2d       	mov	r23, r3
     240:	82 2d       	mov	r24, r2
     242:	9a 81       	ldd	r25, Y+2	; 0x02
     244:	00 e2       	ldi	r16, 0x20	; 32
     246:	0e 94 0c 13 	call	0x2618	; 0x2618 <__lshrdi3>
     24a:	c9 01       	movw	r24, r18
     24c:	da 01       	movw	r26, r20
     24e:	80 30       	cpi	r24, 0x00	; 0
     250:	e0 e0       	ldi	r30, 0x00	; 0
     252:	9e 07       	cpc	r25, r30
     254:	e1 e0       	ldi	r30, 0x01	; 1
     256:	ae 07       	cpc	r26, r30
     258:	e0 e0       	ldi	r30, 0x00	; 0
     25a:	be 07       	cpc	r27, r30
     25c:	80 f4       	brcc	.+32     	; 0x27e <__floatundisf+0xa6>
     25e:	8f 3f       	cpi	r24, 0xFF	; 255
     260:	91 05       	cpc	r25, r1
     262:	a1 05       	cpc	r26, r1
     264:	b1 05       	cpc	r27, r1
     266:	31 f0       	breq	.+12     	; 0x274 <__floatundisf+0x9c>
     268:	28 f0       	brcs	.+10     	; 0x274 <__floatundisf+0x9c>
     26a:	28 e0       	ldi	r18, 0x08	; 8
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	40 e0       	ldi	r20, 0x00	; 0
     270:	50 e0       	ldi	r21, 0x00	; 0
     272:	16 c0       	rjmp	.+44     	; 0x2a0 <__floatundisf+0xc8>
     274:	20 e0       	ldi	r18, 0x00	; 0
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	40 e0       	ldi	r20, 0x00	; 0
     27a:	50 e0       	ldi	r21, 0x00	; 0
     27c:	11 c0       	rjmp	.+34     	; 0x2a0 <__floatundisf+0xc8>
     27e:	80 30       	cpi	r24, 0x00	; 0
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	9f 07       	cpc	r25, r31
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	af 07       	cpc	r26, r31
     288:	f1 e0       	ldi	r31, 0x01	; 1
     28a:	bf 07       	cpc	r27, r31
     28c:	28 f0       	brcs	.+10     	; 0x298 <__floatundisf+0xc0>
     28e:	28 e1       	ldi	r18, 0x18	; 24
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	40 e0       	ldi	r20, 0x00	; 0
     294:	50 e0       	ldi	r21, 0x00	; 0
     296:	04 c0       	rjmp	.+8      	; 0x2a0 <__floatundisf+0xc8>
     298:	20 e1       	ldi	r18, 0x10	; 16
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	40 e0       	ldi	r20, 0x00	; 0
     29e:	50 e0       	ldi	r21, 0x00	; 0
     2a0:	02 2e       	mov	r0, r18
     2a2:	04 c0       	rjmp	.+8      	; 0x2ac <__floatundisf+0xd4>
     2a4:	b6 95       	lsr	r27
     2a6:	a7 95       	ror	r26
     2a8:	97 95       	ror	r25
     2aa:	87 95       	ror	r24
     2ac:	0a 94       	dec	r0
     2ae:	d2 f7       	brpl	.-12     	; 0x2a4 <__floatundisf+0xcc>
     2b0:	fc 01       	movw	r30, r24
     2b2:	e3 57       	subi	r30, 0x73	; 115
     2b4:	fe 4f       	sbci	r31, 0xFE	; 254
     2b6:	80 81       	ld	r24, Z
     2b8:	29 01       	movw	r4, r18
     2ba:	3a 01       	movw	r6, r20
     2bc:	48 0e       	add	r4, r24
     2be:	51 1c       	adc	r5, r1
     2c0:	61 1c       	adc	r6, r1
     2c2:	71 1c       	adc	r7, r1
     2c4:	49 82       	std	Y+1, r4	; 0x01
     2c6:	21 2f       	mov	r18, r17
     2c8:	3b 2d       	mov	r19, r11
     2ca:	4a 2d       	mov	r20, r10
     2cc:	59 2d       	mov	r21, r9
     2ce:	68 2d       	mov	r22, r8
     2d0:	73 2d       	mov	r23, r3
     2d2:	82 2d       	mov	r24, r2
     2d4:	9a 81       	ldd	r25, Y+2	; 0x02
     2d6:	04 2d       	mov	r16, r4
     2d8:	0e 94 0c 13 	call	0x2618	; 0x2618 <__lshrdi3>
     2dc:	c9 01       	movw	r24, r18
     2de:	da 01       	movw	r26, r20
     2e0:	4c 01       	movw	r8, r24
     2e2:	5d 01       	movw	r10, r26
     2e4:	80 e2       	ldi	r24, 0x20	; 32
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	84 19       	sub	r24, r4
     2ea:	95 09       	sbc	r25, r5
     2ec:	04 c0       	rjmp	.+8      	; 0x2f6 <__floatundisf+0x11e>
     2ee:	cc 0c       	add	r12, r12
     2f0:	dd 1c       	adc	r13, r13
     2f2:	ee 1c       	adc	r14, r14
     2f4:	ff 1c       	adc	r15, r15
     2f6:	8a 95       	dec	r24
     2f8:	d2 f7       	brpl	.-12     	; 0x2ee <__floatundisf+0x116>
     2fa:	c1 14       	cp	r12, r1
     2fc:	d1 04       	cpc	r13, r1
     2fe:	e1 04       	cpc	r14, r1
     300:	f1 04       	cpc	r15, r1
     302:	41 f0       	breq	.+16     	; 0x314 <__floatundisf+0x13c>
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	a0 e0       	ldi	r26, 0x00	; 0
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	88 2a       	or	r8, r24
     30e:	99 2a       	or	r9, r25
     310:	aa 2a       	or	r10, r26
     312:	bb 2a       	or	r11, r27
     314:	90 e2       	ldi	r25, 0x20	; 32
     316:	49 16       	cp	r4, r25
     318:	51 04       	cpc	r5, r1
     31a:	61 04       	cpc	r6, r1
     31c:	71 04       	cpc	r7, r1
     31e:	59 f4       	brne	.+22     	; 0x336 <__floatundisf+0x15e>
     320:	0f 2e       	mov	r0, r31
     322:	f0 e0       	ldi	r31, 0x00	; 0
     324:	ef 2e       	mov	r14, r31
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	ff 2e       	mov	r15, r31
     32a:	f0 e8       	ldi	r31, 0x80	; 128
     32c:	0f 2f       	mov	r16, r31
     32e:	ff e4       	ldi	r31, 0x4F	; 79
     330:	1f 2f       	mov	r17, r31
     332:	f0 2d       	mov	r31, r0
     334:	21 c0       	rjmp	.+66     	; 0x378 <__floatundisf+0x1a0>
     336:	af e1       	ldi	r26, 0x1F	; 31
     338:	4a 16       	cp	r4, r26
     33a:	51 04       	cpc	r5, r1
     33c:	61 04       	cpc	r6, r1
     33e:	71 04       	cpc	r7, r1
     340:	59 f4       	brne	.+22     	; 0x358 <__floatundisf+0x180>
     342:	0f 2e       	mov	r0, r31
     344:	f0 e0       	ldi	r31, 0x00	; 0
     346:	ef 2e       	mov	r14, r31
     348:	f0 e0       	ldi	r31, 0x00	; 0
     34a:	ff 2e       	mov	r15, r31
     34c:	f0 e0       	ldi	r31, 0x00	; 0
     34e:	0f 2f       	mov	r16, r31
     350:	ff e4       	ldi	r31, 0x4F	; 79
     352:	1f 2f       	mov	r17, r31
     354:	f0 2d       	mov	r31, r0
     356:	10 c0       	rjmp	.+32     	; 0x378 <__floatundisf+0x1a0>
     358:	61 e0       	ldi	r22, 0x01	; 1
     35a:	70 e0       	ldi	r23, 0x00	; 0
     35c:	80 e0       	ldi	r24, 0x00	; 0
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	09 80       	ldd	r0, Y+1	; 0x01
     362:	04 c0       	rjmp	.+8      	; 0x36c <__floatundisf+0x194>
     364:	66 0f       	add	r22, r22
     366:	77 1f       	adc	r23, r23
     368:	88 1f       	adc	r24, r24
     36a:	99 1f       	adc	r25, r25
     36c:	0a 94       	dec	r0
     36e:	d2 f7       	brpl	.-12     	; 0x364 <__floatundisf+0x18c>
     370:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <__floatsisf>
     374:	7b 01       	movw	r14, r22
     376:	8c 01       	movw	r16, r24
     378:	c5 01       	movw	r24, r10
     37a:	b4 01       	movw	r22, r8
     37c:	0e 94 93 12 	call	0x2526	; 0x2526 <__floatunsisf>
     380:	a8 01       	movw	r20, r16
     382:	97 01       	movw	r18, r14
     384:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
     388:	22 96       	adiw	r28, 0x02	; 2
     38a:	e2 e1       	ldi	r30, 0x12	; 18
     38c:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <__epilogue_restores__>

00000390 <__udivdi3>:
     390:	ae e5       	ldi	r26, 0x5E	; 94
     392:	b0 e0       	ldi	r27, 0x00	; 0
     394:	ee ec       	ldi	r30, 0xCE	; 206
     396:	f1 e0       	ldi	r31, 0x01	; 1
     398:	0c 94 0e 29 	jmp	0x521c	; 0x521c <__prologue_saves__>
     39c:	a8 e0       	ldi	r26, 0x08	; 8
     39e:	4e 01       	movw	r8, r28
     3a0:	08 94       	sec
     3a2:	81 1c       	adc	r8, r1
     3a4:	91 1c       	adc	r9, r1
     3a6:	f4 01       	movw	r30, r8
     3a8:	6a 2e       	mov	r6, r26
     3aa:	11 92       	st	Z+, r1
     3ac:	6a 94       	dec	r6
     3ae:	e9 f7       	brne	.-6      	; 0x3aa <__udivdi3+0x1a>
     3b0:	29 83       	std	Y+1, r18	; 0x01
     3b2:	3a 83       	std	Y+2, r19	; 0x02
     3b4:	4b 83       	std	Y+3, r20	; 0x03
     3b6:	5c 83       	std	Y+4, r21	; 0x04
     3b8:	6d 83       	std	Y+5, r22	; 0x05
     3ba:	7e 83       	std	Y+6, r23	; 0x06
     3bc:	8f 83       	std	Y+7, r24	; 0x07
     3be:	98 87       	std	Y+8, r25	; 0x08
     3c0:	ce 01       	movw	r24, r28
     3c2:	09 96       	adiw	r24, 0x09	; 9
     3c4:	fc 01       	movw	r30, r24
     3c6:	11 92       	st	Z+, r1
     3c8:	aa 95       	dec	r26
     3ca:	e9 f7       	brne	.-6      	; 0x3c6 <__udivdi3+0x36>
     3cc:	a9 86       	std	Y+9, r10	; 0x09
     3ce:	ba 86       	std	Y+10, r11	; 0x0a
     3d0:	cb 86       	std	Y+11, r12	; 0x0b
     3d2:	dc 86       	std	Y+12, r13	; 0x0c
     3d4:	ed 86       	std	Y+13, r14	; 0x0d
     3d6:	fe 86       	std	Y+14, r15	; 0x0e
     3d8:	0f 87       	std	Y+15, r16	; 0x0f
     3da:	18 8b       	std	Y+16, r17	; 0x10
     3dc:	29 84       	ldd	r2, Y+9	; 0x09
     3de:	3a 84       	ldd	r3, Y+10	; 0x0a
     3e0:	4b 84       	ldd	r4, Y+11	; 0x0b
     3e2:	5c 84       	ldd	r5, Y+12	; 0x0c
     3e4:	ed 84       	ldd	r14, Y+13	; 0x0d
     3e6:	fe 84       	ldd	r15, Y+14	; 0x0e
     3e8:	0f 85       	ldd	r16, Y+15	; 0x0f
     3ea:	18 89       	ldd	r17, Y+16	; 0x10
     3ec:	69 80       	ldd	r6, Y+1	; 0x01
     3ee:	7a 80       	ldd	r7, Y+2	; 0x02
     3f0:	8b 80       	ldd	r8, Y+3	; 0x03
     3f2:	9c 80       	ldd	r9, Y+4	; 0x04
     3f4:	6d a6       	std	Y+45, r6	; 0x2d
     3f6:	7e a6       	std	Y+46, r7	; 0x2e
     3f8:	8f a6       	std	Y+47, r8	; 0x2f
     3fa:	98 aa       	std	Y+48, r9	; 0x30
     3fc:	6d 80       	ldd	r6, Y+5	; 0x05
     3fe:	7e 80       	ldd	r7, Y+6	; 0x06
     400:	8f 80       	ldd	r8, Y+7	; 0x07
     402:	98 84       	ldd	r9, Y+8	; 0x08
     404:	e1 14       	cp	r14, r1
     406:	f1 04       	cpc	r15, r1
     408:	01 05       	cpc	r16, r1
     40a:	11 05       	cpc	r17, r1
     40c:	09 f0       	breq	.+2      	; 0x410 <__udivdi3+0x80>
     40e:	b3 c3       	rjmp	.+1894   	; 0xb76 <__stack+0x317>
     410:	62 14       	cp	r6, r2
     412:	73 04       	cpc	r7, r3
     414:	84 04       	cpc	r8, r4
     416:	95 04       	cpc	r9, r5
     418:	08 f0       	brcs	.+2      	; 0x41c <__udivdi3+0x8c>
     41a:	3d c1       	rjmp	.+634    	; 0x696 <__udivdi3+0x306>
     41c:	00 e0       	ldi	r16, 0x00	; 0
     41e:	20 16       	cp	r2, r16
     420:	00 e0       	ldi	r16, 0x00	; 0
     422:	30 06       	cpc	r3, r16
     424:	01 e0       	ldi	r16, 0x01	; 1
     426:	40 06       	cpc	r4, r16
     428:	00 e0       	ldi	r16, 0x00	; 0
     42a:	50 06       	cpc	r5, r16
     42c:	88 f4       	brcc	.+34     	; 0x450 <__udivdi3+0xc0>
     42e:	1f ef       	ldi	r17, 0xFF	; 255
     430:	21 16       	cp	r2, r17
     432:	31 04       	cpc	r3, r1
     434:	41 04       	cpc	r4, r1
     436:	51 04       	cpc	r5, r1
     438:	39 f0       	breq	.+14     	; 0x448 <__udivdi3+0xb8>
     43a:	30 f0       	brcs	.+12     	; 0x448 <__udivdi3+0xb8>
     43c:	48 e0       	ldi	r20, 0x08	; 8
     43e:	e4 2e       	mov	r14, r20
     440:	f1 2c       	mov	r15, r1
     442:	01 2d       	mov	r16, r1
     444:	11 2d       	mov	r17, r1
     446:	18 c0       	rjmp	.+48     	; 0x478 <__udivdi3+0xe8>
     448:	ee 24       	eor	r14, r14
     44a:	ff 24       	eor	r15, r15
     44c:	87 01       	movw	r16, r14
     44e:	14 c0       	rjmp	.+40     	; 0x478 <__udivdi3+0xe8>
     450:	20 e0       	ldi	r18, 0x00	; 0
     452:	22 16       	cp	r2, r18
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	32 06       	cpc	r3, r18
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	42 06       	cpc	r4, r18
     45c:	21 e0       	ldi	r18, 0x01	; 1
     45e:	52 06       	cpc	r5, r18
     460:	30 f0       	brcs	.+12     	; 0x46e <__udivdi3+0xde>
     462:	38 e1       	ldi	r19, 0x18	; 24
     464:	e3 2e       	mov	r14, r19
     466:	f1 2c       	mov	r15, r1
     468:	01 2d       	mov	r16, r1
     46a:	11 2d       	mov	r17, r1
     46c:	05 c0       	rjmp	.+10     	; 0x478 <__udivdi3+0xe8>
     46e:	20 e1       	ldi	r18, 0x10	; 16
     470:	e2 2e       	mov	r14, r18
     472:	f1 2c       	mov	r15, r1
     474:	01 2d       	mov	r16, r1
     476:	11 2d       	mov	r17, r1
     478:	d2 01       	movw	r26, r4
     47a:	c1 01       	movw	r24, r2
     47c:	0e 2c       	mov	r0, r14
     47e:	04 c0       	rjmp	.+8      	; 0x488 <__udivdi3+0xf8>
     480:	b6 95       	lsr	r27
     482:	a7 95       	ror	r26
     484:	97 95       	ror	r25
     486:	87 95       	ror	r24
     488:	0a 94       	dec	r0
     48a:	d2 f7       	brpl	.-12     	; 0x480 <__udivdi3+0xf0>
     48c:	83 57       	subi	r24, 0x73	; 115
     48e:	9e 4f       	sbci	r25, 0xFE	; 254
     490:	dc 01       	movw	r26, r24
     492:	2c 91       	ld	r18, X
     494:	80 e2       	ldi	r24, 0x20	; 32
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	a0 e0       	ldi	r26, 0x00	; 0
     49a:	b0 e0       	ldi	r27, 0x00	; 0
     49c:	8e 19       	sub	r24, r14
     49e:	9f 09       	sbc	r25, r15
     4a0:	a0 0b       	sbc	r26, r16
     4a2:	b1 0b       	sbc	r27, r17
     4a4:	7c 01       	movw	r14, r24
     4a6:	8d 01       	movw	r16, r26
     4a8:	e2 1a       	sub	r14, r18
     4aa:	f1 08       	sbc	r15, r1
     4ac:	01 09       	sbc	r16, r1
     4ae:	11 09       	sbc	r17, r1
     4b0:	e1 14       	cp	r14, r1
     4b2:	f1 04       	cpc	r15, r1
     4b4:	01 05       	cpc	r16, r1
     4b6:	11 05       	cpc	r17, r1
     4b8:	a1 f1       	breq	.+104    	; 0x522 <__udivdi3+0x192>
     4ba:	0e 2c       	mov	r0, r14
     4bc:	04 c0       	rjmp	.+8      	; 0x4c6 <__udivdi3+0x136>
     4be:	22 0c       	add	r2, r2
     4c0:	33 1c       	adc	r3, r3
     4c2:	44 1c       	adc	r4, r4
     4c4:	55 1c       	adc	r5, r5
     4c6:	0a 94       	dec	r0
     4c8:	d2 f7       	brpl	.-12     	; 0x4be <__udivdi3+0x12e>
     4ca:	a4 01       	movw	r20, r8
     4cc:	93 01       	movw	r18, r6
     4ce:	0e 2c       	mov	r0, r14
     4d0:	04 c0       	rjmp	.+8      	; 0x4da <__udivdi3+0x14a>
     4d2:	22 0f       	add	r18, r18
     4d4:	33 1f       	adc	r19, r19
     4d6:	44 1f       	adc	r20, r20
     4d8:	55 1f       	adc	r21, r21
     4da:	0a 94       	dec	r0
     4dc:	d2 f7       	brpl	.-12     	; 0x4d2 <__udivdi3+0x142>
     4de:	80 e2       	ldi	r24, 0x20	; 32
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	8e 19       	sub	r24, r14
     4e4:	9f 09       	sbc	r25, r15
     4e6:	6d a4       	ldd	r6, Y+45	; 0x2d
     4e8:	7e a4       	ldd	r7, Y+46	; 0x2e
     4ea:	8f a4       	ldd	r8, Y+47	; 0x2f
     4ec:	98 a8       	ldd	r9, Y+48	; 0x30
     4ee:	04 c0       	rjmp	.+8      	; 0x4f8 <__udivdi3+0x168>
     4f0:	96 94       	lsr	r9
     4f2:	87 94       	ror	r8
     4f4:	77 94       	ror	r7
     4f6:	67 94       	ror	r6
     4f8:	8a 95       	dec	r24
     4fa:	d2 f7       	brpl	.-12     	; 0x4f0 <__udivdi3+0x160>
     4fc:	62 2a       	or	r6, r18
     4fe:	73 2a       	or	r7, r19
     500:	84 2a       	or	r8, r20
     502:	95 2a       	or	r9, r21
     504:	ad a4       	ldd	r10, Y+45	; 0x2d
     506:	be a4       	ldd	r11, Y+46	; 0x2e
     508:	cf a4       	ldd	r12, Y+47	; 0x2f
     50a:	d8 a8       	ldd	r13, Y+48	; 0x30
     50c:	04 c0       	rjmp	.+8      	; 0x516 <__udivdi3+0x186>
     50e:	aa 0c       	add	r10, r10
     510:	bb 1c       	adc	r11, r11
     512:	cc 1c       	adc	r12, r12
     514:	dd 1c       	adc	r13, r13
     516:	ea 94       	dec	r14
     518:	d2 f7       	brpl	.-12     	; 0x50e <__udivdi3+0x17e>
     51a:	ad a6       	std	Y+45, r10	; 0x2d
     51c:	be a6       	std	Y+46, r11	; 0x2e
     51e:	cf a6       	std	Y+47, r12	; 0x2f
     520:	d8 aa       	std	Y+48, r13	; 0x30
     522:	62 01       	movw	r12, r4
     524:	ee 24       	eor	r14, r14
     526:	ff 24       	eor	r15, r15
     528:	cd aa       	std	Y+53, r12	; 0x35
     52a:	de aa       	std	Y+54, r13	; 0x36
     52c:	ef aa       	std	Y+55, r14	; 0x37
     52e:	f8 ae       	std	Y+56, r15	; 0x38
     530:	92 01       	movw	r18, r4
     532:	81 01       	movw	r16, r2
     534:	20 70       	andi	r18, 0x00	; 0
     536:	30 70       	andi	r19, 0x00	; 0
     538:	09 af       	std	Y+57, r16	; 0x39
     53a:	1a af       	std	Y+58, r17	; 0x3a
     53c:	2b af       	std	Y+59, r18	; 0x3b
     53e:	3c af       	std	Y+60, r19	; 0x3c
     540:	c4 01       	movw	r24, r8
     542:	b3 01       	movw	r22, r6
     544:	a7 01       	movw	r20, r14
     546:	96 01       	movw	r18, r12
     548:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     54c:	7b 01       	movw	r14, r22
     54e:	8c 01       	movw	r16, r24
     550:	c4 01       	movw	r24, r8
     552:	b3 01       	movw	r22, r6
     554:	2d a9       	ldd	r18, Y+53	; 0x35
     556:	3e a9       	ldd	r19, Y+54	; 0x36
     558:	4f a9       	ldd	r20, Y+55	; 0x37
     55a:	58 ad       	ldd	r21, Y+56	; 0x38
     55c:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     560:	c9 01       	movw	r24, r18
     562:	da 01       	movw	r26, r20
     564:	3c 01       	movw	r6, r24
     566:	4d 01       	movw	r8, r26
     568:	c4 01       	movw	r24, r8
     56a:	b3 01       	movw	r22, r6
     56c:	29 ad       	ldd	r18, Y+57	; 0x39
     56e:	3a ad       	ldd	r19, Y+58	; 0x3a
     570:	4b ad       	ldd	r20, Y+59	; 0x3b
     572:	5c ad       	ldd	r21, Y+60	; 0x3c
     574:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     578:	9b 01       	movw	r18, r22
     57a:	ac 01       	movw	r20, r24
     57c:	87 01       	movw	r16, r14
     57e:	ff 24       	eor	r15, r15
     580:	ee 24       	eor	r14, r14
     582:	ad a4       	ldd	r10, Y+45	; 0x2d
     584:	be a4       	ldd	r11, Y+46	; 0x2e
     586:	cf a4       	ldd	r12, Y+47	; 0x2f
     588:	d8 a8       	ldd	r13, Y+48	; 0x30
     58a:	c6 01       	movw	r24, r12
     58c:	aa 27       	eor	r26, r26
     58e:	bb 27       	eor	r27, r27
     590:	57 01       	movw	r10, r14
     592:	68 01       	movw	r12, r16
     594:	a8 2a       	or	r10, r24
     596:	b9 2a       	or	r11, r25
     598:	ca 2a       	or	r12, r26
     59a:	db 2a       	or	r13, r27
     59c:	a2 16       	cp	r10, r18
     59e:	b3 06       	cpc	r11, r19
     5a0:	c4 06       	cpc	r12, r20
     5a2:	d5 06       	cpc	r13, r21
     5a4:	e0 f4       	brcc	.+56     	; 0x5de <__udivdi3+0x24e>
     5a6:	08 94       	sec
     5a8:	61 08       	sbc	r6, r1
     5aa:	71 08       	sbc	r7, r1
     5ac:	81 08       	sbc	r8, r1
     5ae:	91 08       	sbc	r9, r1
     5b0:	a2 0c       	add	r10, r2
     5b2:	b3 1c       	adc	r11, r3
     5b4:	c4 1c       	adc	r12, r4
     5b6:	d5 1c       	adc	r13, r5
     5b8:	a2 14       	cp	r10, r2
     5ba:	b3 04       	cpc	r11, r3
     5bc:	c4 04       	cpc	r12, r4
     5be:	d5 04       	cpc	r13, r5
     5c0:	70 f0       	brcs	.+28     	; 0x5de <__udivdi3+0x24e>
     5c2:	a2 16       	cp	r10, r18
     5c4:	b3 06       	cpc	r11, r19
     5c6:	c4 06       	cpc	r12, r20
     5c8:	d5 06       	cpc	r13, r21
     5ca:	48 f4       	brcc	.+18     	; 0x5de <__udivdi3+0x24e>
     5cc:	08 94       	sec
     5ce:	61 08       	sbc	r6, r1
     5d0:	71 08       	sbc	r7, r1
     5d2:	81 08       	sbc	r8, r1
     5d4:	91 08       	sbc	r9, r1
     5d6:	a2 0c       	add	r10, r2
     5d8:	b3 1c       	adc	r11, r3
     5da:	c4 1c       	adc	r12, r4
     5dc:	d5 1c       	adc	r13, r5
     5de:	a2 1a       	sub	r10, r18
     5e0:	b3 0a       	sbc	r11, r19
     5e2:	c4 0a       	sbc	r12, r20
     5e4:	d5 0a       	sbc	r13, r21
     5e6:	c6 01       	movw	r24, r12
     5e8:	b5 01       	movw	r22, r10
     5ea:	2d a9       	ldd	r18, Y+53	; 0x35
     5ec:	3e a9       	ldd	r19, Y+54	; 0x36
     5ee:	4f a9       	ldd	r20, Y+55	; 0x37
     5f0:	58 ad       	ldd	r21, Y+56	; 0x38
     5f2:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     5f6:	7b 01       	movw	r14, r22
     5f8:	8c 01       	movw	r16, r24
     5fa:	c6 01       	movw	r24, r12
     5fc:	b5 01       	movw	r22, r10
     5fe:	2d a9       	ldd	r18, Y+53	; 0x35
     600:	3e a9       	ldd	r19, Y+54	; 0x36
     602:	4f a9       	ldd	r20, Y+55	; 0x37
     604:	58 ad       	ldd	r21, Y+56	; 0x38
     606:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     60a:	c9 01       	movw	r24, r18
     60c:	da 01       	movw	r26, r20
     60e:	5c 01       	movw	r10, r24
     610:	6d 01       	movw	r12, r26
     612:	c6 01       	movw	r24, r12
     614:	b5 01       	movw	r22, r10
     616:	29 ad       	ldd	r18, Y+57	; 0x39
     618:	3a ad       	ldd	r19, Y+58	; 0x3a
     61a:	4b ad       	ldd	r20, Y+59	; 0x3b
     61c:	5c ad       	ldd	r21, Y+60	; 0x3c
     61e:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     622:	9b 01       	movw	r18, r22
     624:	ac 01       	movw	r20, r24
     626:	87 01       	movw	r16, r14
     628:	ff 24       	eor	r15, r15
     62a:	ee 24       	eor	r14, r14
     62c:	8d a5       	ldd	r24, Y+45	; 0x2d
     62e:	9e a5       	ldd	r25, Y+46	; 0x2e
     630:	af a5       	ldd	r26, Y+47	; 0x2f
     632:	b8 a9       	ldd	r27, Y+48	; 0x30
     634:	a0 70       	andi	r26, 0x00	; 0
     636:	b0 70       	andi	r27, 0x00	; 0
     638:	e8 2a       	or	r14, r24
     63a:	f9 2a       	or	r15, r25
     63c:	0a 2b       	or	r16, r26
     63e:	1b 2b       	or	r17, r27
     640:	e2 16       	cp	r14, r18
     642:	f3 06       	cpc	r15, r19
     644:	04 07       	cpc	r16, r20
     646:	15 07       	cpc	r17, r21
     648:	c0 f4       	brcc	.+48     	; 0x67a <__udivdi3+0x2ea>
     64a:	08 94       	sec
     64c:	a1 08       	sbc	r10, r1
     64e:	b1 08       	sbc	r11, r1
     650:	c1 08       	sbc	r12, r1
     652:	d1 08       	sbc	r13, r1
     654:	e2 0c       	add	r14, r2
     656:	f3 1c       	adc	r15, r3
     658:	04 1d       	adc	r16, r4
     65a:	15 1d       	adc	r17, r5
     65c:	e2 14       	cp	r14, r2
     65e:	f3 04       	cpc	r15, r3
     660:	04 05       	cpc	r16, r4
     662:	15 05       	cpc	r17, r5
     664:	50 f0       	brcs	.+20     	; 0x67a <__udivdi3+0x2ea>
     666:	e2 16       	cp	r14, r18
     668:	f3 06       	cpc	r15, r19
     66a:	04 07       	cpc	r16, r20
     66c:	15 07       	cpc	r17, r21
     66e:	28 f4       	brcc	.+10     	; 0x67a <__udivdi3+0x2ea>
     670:	08 94       	sec
     672:	a1 08       	sbc	r10, r1
     674:	b1 08       	sbc	r11, r1
     676:	c1 08       	sbc	r12, r1
     678:	d1 08       	sbc	r13, r1
     67a:	d3 01       	movw	r26, r6
     67c:	99 27       	eor	r25, r25
     67e:	88 27       	eor	r24, r24
     680:	86 01       	movw	r16, r12
     682:	75 01       	movw	r14, r10
     684:	e8 2a       	or	r14, r24
     686:	f9 2a       	or	r15, r25
     688:	0a 2b       	or	r16, r26
     68a:	1b 2b       	or	r17, r27
     68c:	e9 aa       	std	Y+49, r14	; 0x31
     68e:	fa aa       	std	Y+50, r15	; 0x32
     690:	0b ab       	std	Y+51, r16	; 0x33
     692:	1c ab       	std	Y+52, r17	; 0x34
     694:	cf c4       	rjmp	.+2462   	; 0x1034 <__stack+0x7d5>
     696:	21 14       	cp	r2, r1
     698:	31 04       	cpc	r3, r1
     69a:	41 04       	cpc	r4, r1
     69c:	51 04       	cpc	r5, r1
     69e:	71 f4       	brne	.+28     	; 0x6bc <__udivdi3+0x32c>
     6a0:	61 e0       	ldi	r22, 0x01	; 1
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 e0       	ldi	r20, 0x00	; 0
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     6b4:	c9 01       	movw	r24, r18
     6b6:	da 01       	movw	r26, r20
     6b8:	1c 01       	movw	r2, r24
     6ba:	2d 01       	movw	r4, r26
     6bc:	00 e0       	ldi	r16, 0x00	; 0
     6be:	20 16       	cp	r2, r16
     6c0:	00 e0       	ldi	r16, 0x00	; 0
     6c2:	30 06       	cpc	r3, r16
     6c4:	01 e0       	ldi	r16, 0x01	; 1
     6c6:	40 06       	cpc	r4, r16
     6c8:	00 e0       	ldi	r16, 0x00	; 0
     6ca:	50 06       	cpc	r5, r16
     6cc:	88 f4       	brcc	.+34     	; 0x6f0 <__udivdi3+0x360>
     6ce:	1f ef       	ldi	r17, 0xFF	; 255
     6d0:	21 16       	cp	r2, r17
     6d2:	31 04       	cpc	r3, r1
     6d4:	41 04       	cpc	r4, r1
     6d6:	51 04       	cpc	r5, r1
     6d8:	31 f0       	breq	.+12     	; 0x6e6 <__udivdi3+0x356>
     6da:	28 f0       	brcs	.+10     	; 0x6e6 <__udivdi3+0x356>
     6dc:	48 e0       	ldi	r20, 0x08	; 8
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	17 c0       	rjmp	.+46     	; 0x714 <__udivdi3+0x384>
     6e6:	40 e0       	ldi	r20, 0x00	; 0
     6e8:	50 e0       	ldi	r21, 0x00	; 0
     6ea:	60 e0       	ldi	r22, 0x00	; 0
     6ec:	70 e0       	ldi	r23, 0x00	; 0
     6ee:	12 c0       	rjmp	.+36     	; 0x714 <__udivdi3+0x384>
     6f0:	20 e0       	ldi	r18, 0x00	; 0
     6f2:	22 16       	cp	r2, r18
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	32 06       	cpc	r3, r18
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	42 06       	cpc	r4, r18
     6fc:	21 e0       	ldi	r18, 0x01	; 1
     6fe:	52 06       	cpc	r5, r18
     700:	28 f0       	brcs	.+10     	; 0x70c <__udivdi3+0x37c>
     702:	48 e1       	ldi	r20, 0x18	; 24
     704:	50 e0       	ldi	r21, 0x00	; 0
     706:	60 e0       	ldi	r22, 0x00	; 0
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	04 c0       	rjmp	.+8      	; 0x714 <__udivdi3+0x384>
     70c:	40 e1       	ldi	r20, 0x10	; 16
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	d2 01       	movw	r26, r4
     716:	c1 01       	movw	r24, r2
     718:	04 2e       	mov	r0, r20
     71a:	04 c0       	rjmp	.+8      	; 0x724 <__udivdi3+0x394>
     71c:	b6 95       	lsr	r27
     71e:	a7 95       	ror	r26
     720:	97 95       	ror	r25
     722:	87 95       	ror	r24
     724:	0a 94       	dec	r0
     726:	d2 f7       	brpl	.-12     	; 0x71c <__udivdi3+0x38c>
     728:	83 57       	subi	r24, 0x73	; 115
     72a:	9e 4f       	sbci	r25, 0xFE	; 254
     72c:	dc 01       	movw	r26, r24
     72e:	2c 91       	ld	r18, X
     730:	e0 e2       	ldi	r30, 0x20	; 32
     732:	ee 2e       	mov	r14, r30
     734:	f1 2c       	mov	r15, r1
     736:	01 2d       	mov	r16, r1
     738:	11 2d       	mov	r17, r1
     73a:	d8 01       	movw	r26, r16
     73c:	c7 01       	movw	r24, r14
     73e:	84 1b       	sub	r24, r20
     740:	95 0b       	sbc	r25, r21
     742:	a6 0b       	sbc	r26, r22
     744:	b7 0b       	sbc	r27, r23
     746:	82 1b       	sub	r24, r18
     748:	91 09       	sbc	r25, r1
     74a:	a1 09       	sbc	r26, r1
     74c:	b1 09       	sbc	r27, r1
     74e:	00 97       	sbiw	r24, 0x00	; 0
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__udivdi3+0x3de>
     756:	64 01       	movw	r12, r8
     758:	53 01       	movw	r10, r6
     75a:	a2 18       	sub	r10, r2
     75c:	b3 08       	sbc	r11, r3
     75e:	c4 08       	sbc	r12, r4
     760:	d5 08       	sbc	r13, r5
     762:	31 e0       	ldi	r19, 0x01	; 1
     764:	63 2e       	mov	r6, r19
     766:	71 2c       	mov	r7, r1
     768:	81 2c       	mov	r8, r1
     76a:	91 2c       	mov	r9, r1
     76c:	1e c1       	rjmp	.+572    	; 0x9aa <__stack+0x14b>
     76e:	6f 96       	adiw	r28, 0x1f	; 31
     770:	8f af       	std	Y+63, r24	; 0x3f
     772:	6f 97       	sbiw	r28, 0x1f	; 31
     774:	08 2e       	mov	r0, r24
     776:	04 c0       	rjmp	.+8      	; 0x780 <__udivdi3+0x3f0>
     778:	22 0c       	add	r2, r2
     77a:	33 1c       	adc	r3, r3
     77c:	44 1c       	adc	r4, r4
     77e:	55 1c       	adc	r5, r5
     780:	0a 94       	dec	r0
     782:	d2 f7       	brpl	.-12     	; 0x778 <__udivdi3+0x3e8>
     784:	ee 2d       	mov	r30, r14
     786:	e8 1b       	sub	r30, r24
     788:	64 01       	movw	r12, r8
     78a:	53 01       	movw	r10, r6
     78c:	0e 2e       	mov	r0, r30
     78e:	04 c0       	rjmp	.+8      	; 0x798 <__udivdi3+0x408>
     790:	d6 94       	lsr	r13
     792:	c7 94       	ror	r12
     794:	b7 94       	ror	r11
     796:	a7 94       	ror	r10
     798:	0a 94       	dec	r0
     79a:	d2 f7       	brpl	.-12     	; 0x790 <__udivdi3+0x400>
     79c:	a4 01       	movw	r20, r8
     79e:	93 01       	movw	r18, r6
     7a0:	6f 96       	adiw	r28, 0x1f	; 31
     7a2:	0f ac       	ldd	r0, Y+63	; 0x3f
     7a4:	6f 97       	sbiw	r28, 0x1f	; 31
     7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <__udivdi3+0x420>
     7a8:	22 0f       	add	r18, r18
     7aa:	33 1f       	adc	r19, r19
     7ac:	44 1f       	adc	r20, r20
     7ae:	55 1f       	adc	r21, r21
     7b0:	0a 94       	dec	r0
     7b2:	d2 f7       	brpl	.-12     	; 0x7a8 <__udivdi3+0x418>
     7b4:	6d a4       	ldd	r6, Y+45	; 0x2d
     7b6:	7e a4       	ldd	r7, Y+46	; 0x2e
     7b8:	8f a4       	ldd	r8, Y+47	; 0x2f
     7ba:	98 a8       	ldd	r9, Y+48	; 0x30
     7bc:	0e 2e       	mov	r0, r30
     7be:	04 c0       	rjmp	.+8      	; 0x7c8 <__udivdi3+0x438>
     7c0:	96 94       	lsr	r9
     7c2:	87 94       	ror	r8
     7c4:	77 94       	ror	r7
     7c6:	67 94       	ror	r6
     7c8:	0a 94       	dec	r0
     7ca:	d2 f7       	brpl	.-12     	; 0x7c0 <__udivdi3+0x430>
     7cc:	84 01       	movw	r16, r8
     7ce:	73 01       	movw	r14, r6
     7d0:	e2 2a       	or	r14, r18
     7d2:	f3 2a       	or	r15, r19
     7d4:	04 2b       	or	r16, r20
     7d6:	15 2b       	or	r17, r21
     7d8:	e9 a6       	std	Y+41, r14	; 0x29
     7da:	fa a6       	std	Y+42, r15	; 0x2a
     7dc:	0b a7       	std	Y+43, r16	; 0x2b
     7de:	1c a7       	std	Y+44, r17	; 0x2c
     7e0:	32 01       	movw	r6, r4
     7e2:	88 24       	eor	r8, r8
     7e4:	99 24       	eor	r9, r9
     7e6:	92 01       	movw	r18, r4
     7e8:	81 01       	movw	r16, r2
     7ea:	20 70       	andi	r18, 0x00	; 0
     7ec:	30 70       	andi	r19, 0x00	; 0
     7ee:	21 96       	adiw	r28, 0x01	; 1
     7f0:	0c af       	std	Y+60, r16	; 0x3c
     7f2:	1d af       	std	Y+61, r17	; 0x3d
     7f4:	2e af       	std	Y+62, r18	; 0x3e
     7f6:	3f af       	std	Y+63, r19	; 0x3f
     7f8:	21 97       	sbiw	r28, 0x01	; 1
     7fa:	c6 01       	movw	r24, r12
     7fc:	b5 01       	movw	r22, r10
     7fe:	a4 01       	movw	r20, r8
     800:	93 01       	movw	r18, r6
     802:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     806:	7b 01       	movw	r14, r22
     808:	8c 01       	movw	r16, r24
     80a:	c6 01       	movw	r24, r12
     80c:	b5 01       	movw	r22, r10
     80e:	a4 01       	movw	r20, r8
     810:	93 01       	movw	r18, r6
     812:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     816:	c9 01       	movw	r24, r18
     818:	da 01       	movw	r26, r20
     81a:	25 96       	adiw	r28, 0x05	; 5
     81c:	8c af       	std	Y+60, r24	; 0x3c
     81e:	9d af       	std	Y+61, r25	; 0x3d
     820:	ae af       	std	Y+62, r26	; 0x3e
     822:	bf af       	std	Y+63, r27	; 0x3f
     824:	25 97       	sbiw	r28, 0x05	; 5
     826:	bc 01       	movw	r22, r24
     828:	cd 01       	movw	r24, r26
     82a:	21 96       	adiw	r28, 0x01	; 1
     82c:	2c ad       	ldd	r18, Y+60	; 0x3c
     82e:	3d ad       	ldd	r19, Y+61	; 0x3d
     830:	4e ad       	ldd	r20, Y+62	; 0x3e
     832:	5f ad       	ldd	r21, Y+63	; 0x3f
     834:	21 97       	sbiw	r28, 0x01	; 1
     836:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     83a:	9b 01       	movw	r18, r22
     83c:	ac 01       	movw	r20, r24
     83e:	87 01       	movw	r16, r14
     840:	ff 24       	eor	r15, r15
     842:	ee 24       	eor	r14, r14
     844:	a9 a4       	ldd	r10, Y+41	; 0x29
     846:	ba a4       	ldd	r11, Y+42	; 0x2a
     848:	cb a4       	ldd	r12, Y+43	; 0x2b
     84a:	dc a4       	ldd	r13, Y+44	; 0x2c
     84c:	c6 01       	movw	r24, r12
     84e:	aa 27       	eor	r26, r26
     850:	bb 27       	eor	r27, r27
     852:	5c 01       	movw	r10, r24
     854:	6d 01       	movw	r12, r26
     856:	ae 28       	or	r10, r14
     858:	bf 28       	or	r11, r15
     85a:	c0 2a       	or	r12, r16
     85c:	d1 2a       	or	r13, r17
     85e:	a2 16       	cp	r10, r18
     860:	b3 06       	cpc	r11, r19
     862:	c4 06       	cpc	r12, r20
     864:	d5 06       	cpc	r13, r21
     866:	60 f5       	brcc	.+88     	; 0x8c0 <__stack+0x61>
     868:	25 96       	adiw	r28, 0x05	; 5
     86a:	6c ad       	ldd	r22, Y+60	; 0x3c
     86c:	7d ad       	ldd	r23, Y+61	; 0x3d
     86e:	8e ad       	ldd	r24, Y+62	; 0x3e
     870:	9f ad       	ldd	r25, Y+63	; 0x3f
     872:	25 97       	sbiw	r28, 0x05	; 5
     874:	61 50       	subi	r22, 0x01	; 1
     876:	70 40       	sbci	r23, 0x00	; 0
     878:	80 40       	sbci	r24, 0x00	; 0
     87a:	90 40       	sbci	r25, 0x00	; 0
     87c:	25 96       	adiw	r28, 0x05	; 5
     87e:	6c af       	std	Y+60, r22	; 0x3c
     880:	7d af       	std	Y+61, r23	; 0x3d
     882:	8e af       	std	Y+62, r24	; 0x3e
     884:	9f af       	std	Y+63, r25	; 0x3f
     886:	25 97       	sbiw	r28, 0x05	; 5
     888:	a2 0c       	add	r10, r2
     88a:	b3 1c       	adc	r11, r3
     88c:	c4 1c       	adc	r12, r4
     88e:	d5 1c       	adc	r13, r5
     890:	a2 14       	cp	r10, r2
     892:	b3 04       	cpc	r11, r3
     894:	c4 04       	cpc	r12, r4
     896:	d5 04       	cpc	r13, r5
     898:	98 f0       	brcs	.+38     	; 0x8c0 <__stack+0x61>
     89a:	a2 16       	cp	r10, r18
     89c:	b3 06       	cpc	r11, r19
     89e:	c4 06       	cpc	r12, r20
     8a0:	d5 06       	cpc	r13, r21
     8a2:	70 f4       	brcc	.+28     	; 0x8c0 <__stack+0x61>
     8a4:	61 50       	subi	r22, 0x01	; 1
     8a6:	70 40       	sbci	r23, 0x00	; 0
     8a8:	80 40       	sbci	r24, 0x00	; 0
     8aa:	90 40       	sbci	r25, 0x00	; 0
     8ac:	25 96       	adiw	r28, 0x05	; 5
     8ae:	6c af       	std	Y+60, r22	; 0x3c
     8b0:	7d af       	std	Y+61, r23	; 0x3d
     8b2:	8e af       	std	Y+62, r24	; 0x3e
     8b4:	9f af       	std	Y+63, r25	; 0x3f
     8b6:	25 97       	sbiw	r28, 0x05	; 5
     8b8:	a2 0c       	add	r10, r2
     8ba:	b3 1c       	adc	r11, r3
     8bc:	c4 1c       	adc	r12, r4
     8be:	d5 1c       	adc	r13, r5
     8c0:	a2 1a       	sub	r10, r18
     8c2:	b3 0a       	sbc	r11, r19
     8c4:	c4 0a       	sbc	r12, r20
     8c6:	d5 0a       	sbc	r13, r21
     8c8:	c6 01       	movw	r24, r12
     8ca:	b5 01       	movw	r22, r10
     8cc:	a4 01       	movw	r20, r8
     8ce:	93 01       	movw	r18, r6
     8d0:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     8d4:	7b 01       	movw	r14, r22
     8d6:	8c 01       	movw	r16, r24
     8d8:	c6 01       	movw	r24, r12
     8da:	b5 01       	movw	r22, r10
     8dc:	a4 01       	movw	r20, r8
     8de:	93 01       	movw	r18, r6
     8e0:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     8e4:	c9 01       	movw	r24, r18
     8e6:	da 01       	movw	r26, r20
     8e8:	3c 01       	movw	r6, r24
     8ea:	4d 01       	movw	r8, r26
     8ec:	c4 01       	movw	r24, r8
     8ee:	b3 01       	movw	r22, r6
     8f0:	21 96       	adiw	r28, 0x01	; 1
     8f2:	2c ad       	ldd	r18, Y+60	; 0x3c
     8f4:	3d ad       	ldd	r19, Y+61	; 0x3d
     8f6:	4e ad       	ldd	r20, Y+62	; 0x3e
     8f8:	5f ad       	ldd	r21, Y+63	; 0x3f
     8fa:	21 97       	sbiw	r28, 0x01	; 1
     8fc:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     900:	9b 01       	movw	r18, r22
     902:	ac 01       	movw	r20, r24
     904:	87 01       	movw	r16, r14
     906:	ff 24       	eor	r15, r15
     908:	ee 24       	eor	r14, r14
     90a:	89 a5       	ldd	r24, Y+41	; 0x29
     90c:	9a a5       	ldd	r25, Y+42	; 0x2a
     90e:	ab a5       	ldd	r26, Y+43	; 0x2b
     910:	bc a5       	ldd	r27, Y+44	; 0x2c
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	57 01       	movw	r10, r14
     918:	68 01       	movw	r12, r16
     91a:	a8 2a       	or	r10, r24
     91c:	b9 2a       	or	r11, r25
     91e:	ca 2a       	or	r12, r26
     920:	db 2a       	or	r13, r27
     922:	a2 16       	cp	r10, r18
     924:	b3 06       	cpc	r11, r19
     926:	c4 06       	cpc	r12, r20
     928:	d5 06       	cpc	r13, r21
     92a:	e0 f4       	brcc	.+56     	; 0x964 <__stack+0x105>
     92c:	08 94       	sec
     92e:	61 08       	sbc	r6, r1
     930:	71 08       	sbc	r7, r1
     932:	81 08       	sbc	r8, r1
     934:	91 08       	sbc	r9, r1
     936:	a2 0c       	add	r10, r2
     938:	b3 1c       	adc	r11, r3
     93a:	c4 1c       	adc	r12, r4
     93c:	d5 1c       	adc	r13, r5
     93e:	a2 14       	cp	r10, r2
     940:	b3 04       	cpc	r11, r3
     942:	c4 04       	cpc	r12, r4
     944:	d5 04       	cpc	r13, r5
     946:	70 f0       	brcs	.+28     	; 0x964 <__stack+0x105>
     948:	a2 16       	cp	r10, r18
     94a:	b3 06       	cpc	r11, r19
     94c:	c4 06       	cpc	r12, r20
     94e:	d5 06       	cpc	r13, r21
     950:	48 f4       	brcc	.+18     	; 0x964 <__stack+0x105>
     952:	08 94       	sec
     954:	61 08       	sbc	r6, r1
     956:	71 08       	sbc	r7, r1
     958:	81 08       	sbc	r8, r1
     95a:	91 08       	sbc	r9, r1
     95c:	a2 0c       	add	r10, r2
     95e:	b3 1c       	adc	r11, r3
     960:	c4 1c       	adc	r12, r4
     962:	d5 1c       	adc	r13, r5
     964:	8d a5       	ldd	r24, Y+45	; 0x2d
     966:	9e a5       	ldd	r25, Y+46	; 0x2e
     968:	af a5       	ldd	r26, Y+47	; 0x2f
     96a:	b8 a9       	ldd	r27, Y+48	; 0x30
     96c:	6f 96       	adiw	r28, 0x1f	; 31
     96e:	0f ac       	ldd	r0, Y+63	; 0x3f
     970:	6f 97       	sbiw	r28, 0x1f	; 31
     972:	04 c0       	rjmp	.+8      	; 0x97c <__stack+0x11d>
     974:	88 0f       	add	r24, r24
     976:	99 1f       	adc	r25, r25
     978:	aa 1f       	adc	r26, r26
     97a:	bb 1f       	adc	r27, r27
     97c:	0a 94       	dec	r0
     97e:	d2 f7       	brpl	.-12     	; 0x974 <__stack+0x115>
     980:	8d a7       	std	Y+45, r24	; 0x2d
     982:	9e a7       	std	Y+46, r25	; 0x2e
     984:	af a7       	std	Y+47, r26	; 0x2f
     986:	b8 ab       	std	Y+48, r27	; 0x30
     988:	a2 1a       	sub	r10, r18
     98a:	b3 0a       	sbc	r11, r19
     98c:	c4 0a       	sbc	r12, r20
     98e:	d5 0a       	sbc	r13, r21
     990:	25 96       	adiw	r28, 0x05	; 5
     992:	ec ac       	ldd	r14, Y+60	; 0x3c
     994:	fd ac       	ldd	r15, Y+61	; 0x3d
     996:	0e ad       	ldd	r16, Y+62	; 0x3e
     998:	1f ad       	ldd	r17, Y+63	; 0x3f
     99a:	25 97       	sbiw	r28, 0x05	; 5
     99c:	d7 01       	movw	r26, r14
     99e:	99 27       	eor	r25, r25
     9a0:	88 27       	eor	r24, r24
     9a2:	68 2a       	or	r6, r24
     9a4:	79 2a       	or	r7, r25
     9a6:	8a 2a       	or	r8, r26
     9a8:	9b 2a       	or	r9, r27
     9aa:	82 01       	movw	r16, r4
     9ac:	22 27       	eor	r18, r18
     9ae:	33 27       	eor	r19, r19
     9b0:	29 96       	adiw	r28, 0x09	; 9
     9b2:	0c af       	std	Y+60, r16	; 0x3c
     9b4:	1d af       	std	Y+61, r17	; 0x3d
     9b6:	2e af       	std	Y+62, r18	; 0x3e
     9b8:	3f af       	std	Y+63, r19	; 0x3f
     9ba:	29 97       	sbiw	r28, 0x09	; 9
     9bc:	a2 01       	movw	r20, r4
     9be:	91 01       	movw	r18, r2
     9c0:	40 70       	andi	r20, 0x00	; 0
     9c2:	50 70       	andi	r21, 0x00	; 0
     9c4:	2d 96       	adiw	r28, 0x0d	; 13
     9c6:	2c af       	std	Y+60, r18	; 0x3c
     9c8:	3d af       	std	Y+61, r19	; 0x3d
     9ca:	4e af       	std	Y+62, r20	; 0x3e
     9cc:	5f af       	std	Y+63, r21	; 0x3f
     9ce:	2d 97       	sbiw	r28, 0x0d	; 13
     9d0:	c6 01       	movw	r24, r12
     9d2:	b5 01       	movw	r22, r10
     9d4:	29 96       	adiw	r28, 0x09	; 9
     9d6:	2c ad       	ldd	r18, Y+60	; 0x3c
     9d8:	3d ad       	ldd	r19, Y+61	; 0x3d
     9da:	4e ad       	ldd	r20, Y+62	; 0x3e
     9dc:	5f ad       	ldd	r21, Y+63	; 0x3f
     9de:	29 97       	sbiw	r28, 0x09	; 9
     9e0:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     9e4:	7b 01       	movw	r14, r22
     9e6:	8c 01       	movw	r16, r24
     9e8:	c6 01       	movw	r24, r12
     9ea:	b5 01       	movw	r22, r10
     9ec:	29 96       	adiw	r28, 0x09	; 9
     9ee:	2c ad       	ldd	r18, Y+60	; 0x3c
     9f0:	3d ad       	ldd	r19, Y+61	; 0x3d
     9f2:	4e ad       	ldd	r20, Y+62	; 0x3e
     9f4:	5f ad       	ldd	r21, Y+63	; 0x3f
     9f6:	29 97       	sbiw	r28, 0x09	; 9
     9f8:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     9fc:	c9 01       	movw	r24, r18
     9fe:	da 01       	movw	r26, r20
     a00:	61 96       	adiw	r28, 0x11	; 17
     a02:	8c af       	std	Y+60, r24	; 0x3c
     a04:	9d af       	std	Y+61, r25	; 0x3d
     a06:	ae af       	std	Y+62, r26	; 0x3e
     a08:	bf af       	std	Y+63, r27	; 0x3f
     a0a:	61 97       	sbiw	r28, 0x11	; 17
     a0c:	bc 01       	movw	r22, r24
     a0e:	cd 01       	movw	r24, r26
     a10:	2d 96       	adiw	r28, 0x0d	; 13
     a12:	2c ad       	ldd	r18, Y+60	; 0x3c
     a14:	3d ad       	ldd	r19, Y+61	; 0x3d
     a16:	4e ad       	ldd	r20, Y+62	; 0x3e
     a18:	5f ad       	ldd	r21, Y+63	; 0x3f
     a1a:	2d 97       	sbiw	r28, 0x0d	; 13
     a1c:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     a20:	9b 01       	movw	r18, r22
     a22:	ac 01       	movw	r20, r24
     a24:	87 01       	movw	r16, r14
     a26:	ff 24       	eor	r15, r15
     a28:	ee 24       	eor	r14, r14
     a2a:	ad a4       	ldd	r10, Y+45	; 0x2d
     a2c:	be a4       	ldd	r11, Y+46	; 0x2e
     a2e:	cf a4       	ldd	r12, Y+47	; 0x2f
     a30:	d8 a8       	ldd	r13, Y+48	; 0x30
     a32:	c6 01       	movw	r24, r12
     a34:	aa 27       	eor	r26, r26
     a36:	bb 27       	eor	r27, r27
     a38:	57 01       	movw	r10, r14
     a3a:	68 01       	movw	r12, r16
     a3c:	a8 2a       	or	r10, r24
     a3e:	b9 2a       	or	r11, r25
     a40:	ca 2a       	or	r12, r26
     a42:	db 2a       	or	r13, r27
     a44:	a2 16       	cp	r10, r18
     a46:	b3 06       	cpc	r11, r19
     a48:	c4 06       	cpc	r12, r20
     a4a:	d5 06       	cpc	r13, r21
     a4c:	60 f5       	brcc	.+88     	; 0xaa6 <__stack+0x247>
     a4e:	61 96       	adiw	r28, 0x11	; 17
     a50:	6c ad       	ldd	r22, Y+60	; 0x3c
     a52:	7d ad       	ldd	r23, Y+61	; 0x3d
     a54:	8e ad       	ldd	r24, Y+62	; 0x3e
     a56:	9f ad       	ldd	r25, Y+63	; 0x3f
     a58:	61 97       	sbiw	r28, 0x11	; 17
     a5a:	61 50       	subi	r22, 0x01	; 1
     a5c:	70 40       	sbci	r23, 0x00	; 0
     a5e:	80 40       	sbci	r24, 0x00	; 0
     a60:	90 40       	sbci	r25, 0x00	; 0
     a62:	61 96       	adiw	r28, 0x11	; 17
     a64:	6c af       	std	Y+60, r22	; 0x3c
     a66:	7d af       	std	Y+61, r23	; 0x3d
     a68:	8e af       	std	Y+62, r24	; 0x3e
     a6a:	9f af       	std	Y+63, r25	; 0x3f
     a6c:	61 97       	sbiw	r28, 0x11	; 17
     a6e:	a2 0c       	add	r10, r2
     a70:	b3 1c       	adc	r11, r3
     a72:	c4 1c       	adc	r12, r4
     a74:	d5 1c       	adc	r13, r5
     a76:	a2 14       	cp	r10, r2
     a78:	b3 04       	cpc	r11, r3
     a7a:	c4 04       	cpc	r12, r4
     a7c:	d5 04       	cpc	r13, r5
     a7e:	98 f0       	brcs	.+38     	; 0xaa6 <__stack+0x247>
     a80:	a2 16       	cp	r10, r18
     a82:	b3 06       	cpc	r11, r19
     a84:	c4 06       	cpc	r12, r20
     a86:	d5 06       	cpc	r13, r21
     a88:	70 f4       	brcc	.+28     	; 0xaa6 <__stack+0x247>
     a8a:	61 50       	subi	r22, 0x01	; 1
     a8c:	70 40       	sbci	r23, 0x00	; 0
     a8e:	80 40       	sbci	r24, 0x00	; 0
     a90:	90 40       	sbci	r25, 0x00	; 0
     a92:	61 96       	adiw	r28, 0x11	; 17
     a94:	6c af       	std	Y+60, r22	; 0x3c
     a96:	7d af       	std	Y+61, r23	; 0x3d
     a98:	8e af       	std	Y+62, r24	; 0x3e
     a9a:	9f af       	std	Y+63, r25	; 0x3f
     a9c:	61 97       	sbiw	r28, 0x11	; 17
     a9e:	a2 0c       	add	r10, r2
     aa0:	b3 1c       	adc	r11, r3
     aa2:	c4 1c       	adc	r12, r4
     aa4:	d5 1c       	adc	r13, r5
     aa6:	a2 1a       	sub	r10, r18
     aa8:	b3 0a       	sbc	r11, r19
     aaa:	c4 0a       	sbc	r12, r20
     aac:	d5 0a       	sbc	r13, r21
     aae:	c6 01       	movw	r24, r12
     ab0:	b5 01       	movw	r22, r10
     ab2:	29 96       	adiw	r28, 0x09	; 9
     ab4:	2c ad       	ldd	r18, Y+60	; 0x3c
     ab6:	3d ad       	ldd	r19, Y+61	; 0x3d
     ab8:	4e ad       	ldd	r20, Y+62	; 0x3e
     aba:	5f ad       	ldd	r21, Y+63	; 0x3f
     abc:	29 97       	sbiw	r28, 0x09	; 9
     abe:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     ac2:	7b 01       	movw	r14, r22
     ac4:	8c 01       	movw	r16, r24
     ac6:	c6 01       	movw	r24, r12
     ac8:	b5 01       	movw	r22, r10
     aca:	29 96       	adiw	r28, 0x09	; 9
     acc:	2c ad       	ldd	r18, Y+60	; 0x3c
     ace:	3d ad       	ldd	r19, Y+61	; 0x3d
     ad0:	4e ad       	ldd	r20, Y+62	; 0x3e
     ad2:	5f ad       	ldd	r21, Y+63	; 0x3f
     ad4:	29 97       	sbiw	r28, 0x09	; 9
     ad6:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     ada:	c9 01       	movw	r24, r18
     adc:	da 01       	movw	r26, r20
     ade:	5c 01       	movw	r10, r24
     ae0:	6d 01       	movw	r12, r26
     ae2:	c6 01       	movw	r24, r12
     ae4:	b5 01       	movw	r22, r10
     ae6:	2d 96       	adiw	r28, 0x0d	; 13
     ae8:	2c ad       	ldd	r18, Y+60	; 0x3c
     aea:	3d ad       	ldd	r19, Y+61	; 0x3d
     aec:	4e ad       	ldd	r20, Y+62	; 0x3e
     aee:	5f ad       	ldd	r21, Y+63	; 0x3f
     af0:	2d 97       	sbiw	r28, 0x0d	; 13
     af2:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     af6:	9b 01       	movw	r18, r22
     af8:	ac 01       	movw	r20, r24
     afa:	87 01       	movw	r16, r14
     afc:	ff 24       	eor	r15, r15
     afe:	ee 24       	eor	r14, r14
     b00:	8d a5       	ldd	r24, Y+45	; 0x2d
     b02:	9e a5       	ldd	r25, Y+46	; 0x2e
     b04:	af a5       	ldd	r26, Y+47	; 0x2f
     b06:	b8 a9       	ldd	r27, Y+48	; 0x30
     b08:	a0 70       	andi	r26, 0x00	; 0
     b0a:	b0 70       	andi	r27, 0x00	; 0
     b0c:	e8 2a       	or	r14, r24
     b0e:	f9 2a       	or	r15, r25
     b10:	0a 2b       	or	r16, r26
     b12:	1b 2b       	or	r17, r27
     b14:	e2 16       	cp	r14, r18
     b16:	f3 06       	cpc	r15, r19
     b18:	04 07       	cpc	r16, r20
     b1a:	15 07       	cpc	r17, r21
     b1c:	c0 f4       	brcc	.+48     	; 0xb4e <__stack+0x2ef>
     b1e:	08 94       	sec
     b20:	a1 08       	sbc	r10, r1
     b22:	b1 08       	sbc	r11, r1
     b24:	c1 08       	sbc	r12, r1
     b26:	d1 08       	sbc	r13, r1
     b28:	e2 0c       	add	r14, r2
     b2a:	f3 1c       	adc	r15, r3
     b2c:	04 1d       	adc	r16, r4
     b2e:	15 1d       	adc	r17, r5
     b30:	e2 14       	cp	r14, r2
     b32:	f3 04       	cpc	r15, r3
     b34:	04 05       	cpc	r16, r4
     b36:	15 05       	cpc	r17, r5
     b38:	50 f0       	brcs	.+20     	; 0xb4e <__stack+0x2ef>
     b3a:	e2 16       	cp	r14, r18
     b3c:	f3 06       	cpc	r15, r19
     b3e:	04 07       	cpc	r16, r20
     b40:	15 07       	cpc	r17, r21
     b42:	28 f4       	brcc	.+10     	; 0xb4e <__stack+0x2ef>
     b44:	08 94       	sec
     b46:	a1 08       	sbc	r10, r1
     b48:	b1 08       	sbc	r11, r1
     b4a:	c1 08       	sbc	r12, r1
     b4c:	d1 08       	sbc	r13, r1
     b4e:	61 96       	adiw	r28, 0x11	; 17
     b50:	ec ac       	ldd	r14, Y+60	; 0x3c
     b52:	fd ac       	ldd	r15, Y+61	; 0x3d
     b54:	0e ad       	ldd	r16, Y+62	; 0x3e
     b56:	1f ad       	ldd	r17, Y+63	; 0x3f
     b58:	61 97       	sbiw	r28, 0x11	; 17
     b5a:	d7 01       	movw	r26, r14
     b5c:	99 27       	eor	r25, r25
     b5e:	88 27       	eor	r24, r24
     b60:	96 01       	movw	r18, r12
     b62:	85 01       	movw	r16, r10
     b64:	08 2b       	or	r16, r24
     b66:	19 2b       	or	r17, r25
     b68:	2a 2b       	or	r18, r26
     b6a:	3b 2b       	or	r19, r27
     b6c:	09 ab       	std	Y+49, r16	; 0x31
     b6e:	1a ab       	std	Y+50, r17	; 0x32
     b70:	2b ab       	std	Y+51, r18	; 0x33
     b72:	3c ab       	std	Y+52, r19	; 0x34
     b74:	62 c2       	rjmp	.+1220   	; 0x103a <__stack+0x7db>
     b76:	6e 14       	cp	r6, r14
     b78:	7f 04       	cpc	r7, r15
     b7a:	80 06       	cpc	r8, r16
     b7c:	91 06       	cpc	r9, r17
     b7e:	08 f4       	brcc	.+2      	; 0xb82 <__stack+0x323>
     b80:	51 c2       	rjmp	.+1186   	; 0x1024 <__stack+0x7c5>
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	e2 16       	cp	r14, r18
     b86:	20 e0       	ldi	r18, 0x00	; 0
     b88:	f2 06       	cpc	r15, r18
     b8a:	21 e0       	ldi	r18, 0x01	; 1
     b8c:	02 07       	cpc	r16, r18
     b8e:	20 e0       	ldi	r18, 0x00	; 0
     b90:	12 07       	cpc	r17, r18
     b92:	88 f4       	brcc	.+34     	; 0xbb6 <__stack+0x357>
     b94:	3f ef       	ldi	r19, 0xFF	; 255
     b96:	e3 16       	cp	r14, r19
     b98:	f1 04       	cpc	r15, r1
     b9a:	01 05       	cpc	r16, r1
     b9c:	11 05       	cpc	r17, r1
     b9e:	31 f0       	breq	.+12     	; 0xbac <__stack+0x34d>
     ba0:	28 f0       	brcs	.+10     	; 0xbac <__stack+0x34d>
     ba2:	48 e0       	ldi	r20, 0x08	; 8
     ba4:	50 e0       	ldi	r21, 0x00	; 0
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	17 c0       	rjmp	.+46     	; 0xbda <__stack+0x37b>
     bac:	40 e0       	ldi	r20, 0x00	; 0
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	60 e0       	ldi	r22, 0x00	; 0
     bb2:	70 e0       	ldi	r23, 0x00	; 0
     bb4:	12 c0       	rjmp	.+36     	; 0xbda <__stack+0x37b>
     bb6:	40 e0       	ldi	r20, 0x00	; 0
     bb8:	e4 16       	cp	r14, r20
     bba:	40 e0       	ldi	r20, 0x00	; 0
     bbc:	f4 06       	cpc	r15, r20
     bbe:	40 e0       	ldi	r20, 0x00	; 0
     bc0:	04 07       	cpc	r16, r20
     bc2:	41 e0       	ldi	r20, 0x01	; 1
     bc4:	14 07       	cpc	r17, r20
     bc6:	28 f0       	brcs	.+10     	; 0xbd2 <__stack+0x373>
     bc8:	48 e1       	ldi	r20, 0x18	; 24
     bca:	50 e0       	ldi	r21, 0x00	; 0
     bcc:	60 e0       	ldi	r22, 0x00	; 0
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	04 c0       	rjmp	.+8      	; 0xbda <__stack+0x37b>
     bd2:	40 e1       	ldi	r20, 0x10	; 16
     bd4:	50 e0       	ldi	r21, 0x00	; 0
     bd6:	60 e0       	ldi	r22, 0x00	; 0
     bd8:	70 e0       	ldi	r23, 0x00	; 0
     bda:	d8 01       	movw	r26, r16
     bdc:	c7 01       	movw	r24, r14
     bde:	04 2e       	mov	r0, r20
     be0:	04 c0       	rjmp	.+8      	; 0xbea <__stack+0x38b>
     be2:	b6 95       	lsr	r27
     be4:	a7 95       	ror	r26
     be6:	97 95       	ror	r25
     be8:	87 95       	ror	r24
     bea:	0a 94       	dec	r0
     bec:	d2 f7       	brpl	.-12     	; 0xbe2 <__stack+0x383>
     bee:	83 57       	subi	r24, 0x73	; 115
     bf0:	9e 4f       	sbci	r25, 0xFE	; 254
     bf2:	dc 01       	movw	r26, r24
     bf4:	2c 91       	ld	r18, X
     bf6:	30 e2       	ldi	r19, 0x20	; 32
     bf8:	a3 2e       	mov	r10, r19
     bfa:	b1 2c       	mov	r11, r1
     bfc:	c1 2c       	mov	r12, r1
     bfe:	d1 2c       	mov	r13, r1
     c00:	d6 01       	movw	r26, r12
     c02:	c5 01       	movw	r24, r10
     c04:	84 1b       	sub	r24, r20
     c06:	95 0b       	sbc	r25, r21
     c08:	a6 0b       	sbc	r26, r22
     c0a:	b7 0b       	sbc	r27, r23
     c0c:	82 1b       	sub	r24, r18
     c0e:	91 09       	sbc	r25, r1
     c10:	a1 09       	sbc	r26, r1
     c12:	b1 09       	sbc	r27, r1
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	a1 05       	cpc	r26, r1
     c18:	b1 05       	cpc	r27, r1
     c1a:	89 f4       	brne	.+34     	; 0xc3e <__stack+0x3df>
     c1c:	e6 14       	cp	r14, r6
     c1e:	f7 04       	cpc	r15, r7
     c20:	08 05       	cpc	r16, r8
     c22:	19 05       	cpc	r17, r9
     c24:	08 f4       	brcc	.+2      	; 0xc28 <__stack+0x3c9>
     c26:	f2 c1       	rjmp	.+996    	; 0x100c <__stack+0x7ad>
     c28:	6d a4       	ldd	r6, Y+45	; 0x2d
     c2a:	7e a4       	ldd	r7, Y+46	; 0x2e
     c2c:	8f a4       	ldd	r8, Y+47	; 0x2f
     c2e:	98 a8       	ldd	r9, Y+48	; 0x30
     c30:	62 14       	cp	r6, r2
     c32:	73 04       	cpc	r7, r3
     c34:	84 04       	cpc	r8, r4
     c36:	95 04       	cpc	r9, r5
     c38:	08 f0       	brcs	.+2      	; 0xc3c <__stack+0x3dd>
     c3a:	e8 c1       	rjmp	.+976    	; 0x100c <__stack+0x7ad>
     c3c:	f3 c1       	rjmp	.+998    	; 0x1024 <__stack+0x7c5>
     c3e:	6e 96       	adiw	r28, 0x1e	; 30
     c40:	8f af       	std	Y+63, r24	; 0x3f
     c42:	6e 97       	sbiw	r28, 0x1e	; 30
     c44:	08 2e       	mov	r0, r24
     c46:	04 c0       	rjmp	.+8      	; 0xc50 <__stack+0x3f1>
     c48:	ee 0c       	add	r14, r14
     c4a:	ff 1c       	adc	r15, r15
     c4c:	00 1f       	adc	r16, r16
     c4e:	11 1f       	adc	r17, r17
     c50:	0a 94       	dec	r0
     c52:	d2 f7       	brpl	.-12     	; 0xc48 <__stack+0x3e9>
     c54:	6a 2d       	mov	r22, r10
     c56:	68 1b       	sub	r22, r24
     c58:	d2 01       	movw	r26, r4
     c5a:	c1 01       	movw	r24, r2
     c5c:	06 2e       	mov	r0, r22
     c5e:	04 c0       	rjmp	.+8      	; 0xc68 <__stack+0x409>
     c60:	b6 95       	lsr	r27
     c62:	a7 95       	ror	r26
     c64:	97 95       	ror	r25
     c66:	87 95       	ror	r24
     c68:	0a 94       	dec	r0
     c6a:	d2 f7       	brpl	.-12     	; 0xc60 <__stack+0x401>
     c6c:	5c 01       	movw	r10, r24
     c6e:	6d 01       	movw	r12, r26
     c70:	ae 28       	or	r10, r14
     c72:	bf 28       	or	r11, r15
     c74:	c0 2a       	or	r12, r16
     c76:	d1 2a       	or	r13, r17
     c78:	ad a2       	std	Y+37, r10	; 0x25
     c7a:	be a2       	std	Y+38, r11	; 0x26
     c7c:	cf a2       	std	Y+39, r12	; 0x27
     c7e:	d8 a6       	std	Y+40, r13	; 0x28
     c80:	72 01       	movw	r14, r4
     c82:	61 01       	movw	r12, r2
     c84:	6e 96       	adiw	r28, 0x1e	; 30
     c86:	0f ac       	ldd	r0, Y+63	; 0x3f
     c88:	6e 97       	sbiw	r28, 0x1e	; 30
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <__stack+0x435>
     c8c:	cc 0c       	add	r12, r12
     c8e:	dd 1c       	adc	r13, r13
     c90:	ee 1c       	adc	r14, r14
     c92:	ff 1c       	adc	r15, r15
     c94:	0a 94       	dec	r0
     c96:	d2 f7       	brpl	.-12     	; 0xc8c <__stack+0x42d>
     c98:	c9 a2       	std	Y+33, r12	; 0x21
     c9a:	da a2       	std	Y+34, r13	; 0x22
     c9c:	eb a2       	std	Y+35, r14	; 0x23
     c9e:	fc a2       	std	Y+36, r15	; 0x24
     ca0:	64 01       	movw	r12, r8
     ca2:	53 01       	movw	r10, r6
     ca4:	06 2e       	mov	r0, r22
     ca6:	04 c0       	rjmp	.+8      	; 0xcb0 <__stack+0x451>
     ca8:	d6 94       	lsr	r13
     caa:	c7 94       	ror	r12
     cac:	b7 94       	ror	r11
     cae:	a7 94       	ror	r10
     cb0:	0a 94       	dec	r0
     cb2:	d2 f7       	brpl	.-12     	; 0xca8 <__stack+0x449>
     cb4:	d4 01       	movw	r26, r8
     cb6:	c3 01       	movw	r24, r6
     cb8:	6e 96       	adiw	r28, 0x1e	; 30
     cba:	0f ac       	ldd	r0, Y+63	; 0x3f
     cbc:	6e 97       	sbiw	r28, 0x1e	; 30
     cbe:	04 c0       	rjmp	.+8      	; 0xcc8 <__stack+0x469>
     cc0:	88 0f       	add	r24, r24
     cc2:	99 1f       	adc	r25, r25
     cc4:	aa 1f       	adc	r26, r26
     cc6:	bb 1f       	adc	r27, r27
     cc8:	0a 94       	dec	r0
     cca:	d2 f7       	brpl	.-12     	; 0xcc0 <__stack+0x461>
     ccc:	ed a4       	ldd	r14, Y+45	; 0x2d
     cce:	fe a4       	ldd	r15, Y+46	; 0x2e
     cd0:	0f a5       	ldd	r16, Y+47	; 0x2f
     cd2:	18 a9       	ldd	r17, Y+48	; 0x30
     cd4:	04 c0       	rjmp	.+8      	; 0xcde <__stack+0x47f>
     cd6:	16 95       	lsr	r17
     cd8:	07 95       	ror	r16
     cda:	f7 94       	ror	r15
     cdc:	e7 94       	ror	r14
     cde:	6a 95       	dec	r22
     ce0:	d2 f7       	brpl	.-12     	; 0xcd6 <__stack+0x477>
     ce2:	37 01       	movw	r6, r14
     ce4:	48 01       	movw	r8, r16
     ce6:	68 2a       	or	r6, r24
     ce8:	79 2a       	or	r7, r25
     cea:	8a 2a       	or	r8, r26
     cec:	9b 2a       	or	r9, r27
     cee:	6d 8e       	std	Y+29, r6	; 0x1d
     cf0:	7e 8e       	std	Y+30, r7	; 0x1e
     cf2:	8f 8e       	std	Y+31, r8	; 0x1f
     cf4:	98 a2       	std	Y+32, r9	; 0x20
     cf6:	ed a0       	ldd	r14, Y+37	; 0x25
     cf8:	fe a0       	ldd	r15, Y+38	; 0x26
     cfa:	0f a1       	ldd	r16, Y+39	; 0x27
     cfc:	18 a5       	ldd	r17, Y+40	; 0x28
     cfe:	38 01       	movw	r6, r16
     d00:	88 24       	eor	r8, r8
     d02:	99 24       	eor	r9, r9
     d04:	98 01       	movw	r18, r16
     d06:	87 01       	movw	r16, r14
     d08:	20 70       	andi	r18, 0x00	; 0
     d0a:	30 70       	andi	r19, 0x00	; 0
     d0c:	65 96       	adiw	r28, 0x15	; 21
     d0e:	0c af       	std	Y+60, r16	; 0x3c
     d10:	1d af       	std	Y+61, r17	; 0x3d
     d12:	2e af       	std	Y+62, r18	; 0x3e
     d14:	3f af       	std	Y+63, r19	; 0x3f
     d16:	65 97       	sbiw	r28, 0x15	; 21
     d18:	c6 01       	movw	r24, r12
     d1a:	b5 01       	movw	r22, r10
     d1c:	a4 01       	movw	r20, r8
     d1e:	93 01       	movw	r18, r6
     d20:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     d24:	7b 01       	movw	r14, r22
     d26:	8c 01       	movw	r16, r24
     d28:	c6 01       	movw	r24, r12
     d2a:	b5 01       	movw	r22, r10
     d2c:	a4 01       	movw	r20, r8
     d2e:	93 01       	movw	r18, r6
     d30:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     d34:	c9 01       	movw	r24, r18
     d36:	da 01       	movw	r26, r20
     d38:	1c 01       	movw	r2, r24
     d3a:	2d 01       	movw	r4, r26
     d3c:	c2 01       	movw	r24, r4
     d3e:	b1 01       	movw	r22, r2
     d40:	65 96       	adiw	r28, 0x15	; 21
     d42:	2c ad       	ldd	r18, Y+60	; 0x3c
     d44:	3d ad       	ldd	r19, Y+61	; 0x3d
     d46:	4e ad       	ldd	r20, Y+62	; 0x3e
     d48:	5f ad       	ldd	r21, Y+63	; 0x3f
     d4a:	65 97       	sbiw	r28, 0x15	; 21
     d4c:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     d50:	9b 01       	movw	r18, r22
     d52:	ac 01       	movw	r20, r24
     d54:	87 01       	movw	r16, r14
     d56:	ff 24       	eor	r15, r15
     d58:	ee 24       	eor	r14, r14
     d5a:	ad 8c       	ldd	r10, Y+29	; 0x1d
     d5c:	be 8c       	ldd	r11, Y+30	; 0x1e
     d5e:	cf 8c       	ldd	r12, Y+31	; 0x1f
     d60:	d8 a0       	ldd	r13, Y+32	; 0x20
     d62:	c6 01       	movw	r24, r12
     d64:	aa 27       	eor	r26, r26
     d66:	bb 27       	eor	r27, r27
     d68:	57 01       	movw	r10, r14
     d6a:	68 01       	movw	r12, r16
     d6c:	a8 2a       	or	r10, r24
     d6e:	b9 2a       	or	r11, r25
     d70:	ca 2a       	or	r12, r26
     d72:	db 2a       	or	r13, r27
     d74:	a2 16       	cp	r10, r18
     d76:	b3 06       	cpc	r11, r19
     d78:	c4 06       	cpc	r12, r20
     d7a:	d5 06       	cpc	r13, r21
     d7c:	00 f5       	brcc	.+64     	; 0xdbe <__stack+0x55f>
     d7e:	08 94       	sec
     d80:	21 08       	sbc	r2, r1
     d82:	31 08       	sbc	r3, r1
     d84:	41 08       	sbc	r4, r1
     d86:	51 08       	sbc	r5, r1
     d88:	ed a0       	ldd	r14, Y+37	; 0x25
     d8a:	fe a0       	ldd	r15, Y+38	; 0x26
     d8c:	0f a1       	ldd	r16, Y+39	; 0x27
     d8e:	18 a5       	ldd	r17, Y+40	; 0x28
     d90:	ae 0c       	add	r10, r14
     d92:	bf 1c       	adc	r11, r15
     d94:	c0 1e       	adc	r12, r16
     d96:	d1 1e       	adc	r13, r17
     d98:	ae 14       	cp	r10, r14
     d9a:	bf 04       	cpc	r11, r15
     d9c:	c0 06       	cpc	r12, r16
     d9e:	d1 06       	cpc	r13, r17
     da0:	70 f0       	brcs	.+28     	; 0xdbe <__stack+0x55f>
     da2:	a2 16       	cp	r10, r18
     da4:	b3 06       	cpc	r11, r19
     da6:	c4 06       	cpc	r12, r20
     da8:	d5 06       	cpc	r13, r21
     daa:	48 f4       	brcc	.+18     	; 0xdbe <__stack+0x55f>
     dac:	08 94       	sec
     dae:	21 08       	sbc	r2, r1
     db0:	31 08       	sbc	r3, r1
     db2:	41 08       	sbc	r4, r1
     db4:	51 08       	sbc	r5, r1
     db6:	ae 0c       	add	r10, r14
     db8:	bf 1c       	adc	r11, r15
     dba:	c0 1e       	adc	r12, r16
     dbc:	d1 1e       	adc	r13, r17
     dbe:	a2 1a       	sub	r10, r18
     dc0:	b3 0a       	sbc	r11, r19
     dc2:	c4 0a       	sbc	r12, r20
     dc4:	d5 0a       	sbc	r13, r21
     dc6:	c6 01       	movw	r24, r12
     dc8:	b5 01       	movw	r22, r10
     dca:	a4 01       	movw	r20, r8
     dcc:	93 01       	movw	r18, r6
     dce:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     dd2:	7b 01       	movw	r14, r22
     dd4:	8c 01       	movw	r16, r24
     dd6:	c6 01       	movw	r24, r12
     dd8:	b5 01       	movw	r22, r10
     dda:	a4 01       	movw	r20, r8
     ddc:	93 01       	movw	r18, r6
     dde:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
     de2:	c9 01       	movw	r24, r18
     de4:	da 01       	movw	r26, r20
     de6:	3c 01       	movw	r6, r24
     de8:	4d 01       	movw	r8, r26
     dea:	c4 01       	movw	r24, r8
     dec:	b3 01       	movw	r22, r6
     dee:	65 96       	adiw	r28, 0x15	; 21
     df0:	2c ad       	ldd	r18, Y+60	; 0x3c
     df2:	3d ad       	ldd	r19, Y+61	; 0x3d
     df4:	4e ad       	ldd	r20, Y+62	; 0x3e
     df6:	5f ad       	ldd	r21, Y+63	; 0x3f
     df8:	65 97       	sbiw	r28, 0x15	; 21
     dfa:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     dfe:	9b 01       	movw	r18, r22
     e00:	ac 01       	movw	r20, r24
     e02:	87 01       	movw	r16, r14
     e04:	ff 24       	eor	r15, r15
     e06:	ee 24       	eor	r14, r14
     e08:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e0a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e0c:	af 8d       	ldd	r26, Y+31	; 0x1f
     e0e:	b8 a1       	ldd	r27, Y+32	; 0x20
     e10:	a0 70       	andi	r26, 0x00	; 0
     e12:	b0 70       	andi	r27, 0x00	; 0
     e14:	57 01       	movw	r10, r14
     e16:	68 01       	movw	r12, r16
     e18:	a8 2a       	or	r10, r24
     e1a:	b9 2a       	or	r11, r25
     e1c:	ca 2a       	or	r12, r26
     e1e:	db 2a       	or	r13, r27
     e20:	a2 16       	cp	r10, r18
     e22:	b3 06       	cpc	r11, r19
     e24:	c4 06       	cpc	r12, r20
     e26:	d5 06       	cpc	r13, r21
     e28:	00 f5       	brcc	.+64     	; 0xe6a <__stack+0x60b>
     e2a:	08 94       	sec
     e2c:	61 08       	sbc	r6, r1
     e2e:	71 08       	sbc	r7, r1
     e30:	81 08       	sbc	r8, r1
     e32:	91 08       	sbc	r9, r1
     e34:	6d a1       	ldd	r22, Y+37	; 0x25
     e36:	7e a1       	ldd	r23, Y+38	; 0x26
     e38:	8f a1       	ldd	r24, Y+39	; 0x27
     e3a:	98 a5       	ldd	r25, Y+40	; 0x28
     e3c:	a6 0e       	add	r10, r22
     e3e:	b7 1e       	adc	r11, r23
     e40:	c8 1e       	adc	r12, r24
     e42:	d9 1e       	adc	r13, r25
     e44:	a6 16       	cp	r10, r22
     e46:	b7 06       	cpc	r11, r23
     e48:	c8 06       	cpc	r12, r24
     e4a:	d9 06       	cpc	r13, r25
     e4c:	70 f0       	brcs	.+28     	; 0xe6a <__stack+0x60b>
     e4e:	a2 16       	cp	r10, r18
     e50:	b3 06       	cpc	r11, r19
     e52:	c4 06       	cpc	r12, r20
     e54:	d5 06       	cpc	r13, r21
     e56:	48 f4       	brcc	.+18     	; 0xe6a <__stack+0x60b>
     e58:	08 94       	sec
     e5a:	61 08       	sbc	r6, r1
     e5c:	71 08       	sbc	r7, r1
     e5e:	81 08       	sbc	r8, r1
     e60:	91 08       	sbc	r9, r1
     e62:	a6 0e       	add	r10, r22
     e64:	b7 1e       	adc	r11, r23
     e66:	c8 1e       	adc	r12, r24
     e68:	d9 1e       	adc	r13, r25
     e6a:	d6 01       	movw	r26, r12
     e6c:	c5 01       	movw	r24, r10
     e6e:	82 1b       	sub	r24, r18
     e70:	93 0b       	sbc	r25, r19
     e72:	a4 0b       	sbc	r26, r20
     e74:	b5 0b       	sbc	r27, r21
     e76:	89 8f       	std	Y+25, r24	; 0x19
     e78:	9a 8f       	std	Y+26, r25	; 0x1a
     e7a:	ab 8f       	std	Y+27, r26	; 0x1b
     e7c:	bc 8f       	std	Y+28, r27	; 0x1c
     e7e:	d1 01       	movw	r26, r2
     e80:	99 27       	eor	r25, r25
     e82:	88 27       	eor	r24, r24
     e84:	64 01       	movw	r12, r8
     e86:	53 01       	movw	r10, r6
     e88:	a8 2a       	or	r10, r24
     e8a:	b9 2a       	or	r11, r25
     e8c:	ca 2a       	or	r12, r26
     e8e:	db 2a       	or	r13, r27
     e90:	a9 aa       	std	Y+49, r10	; 0x31
     e92:	ba aa       	std	Y+50, r11	; 0x32
     e94:	cb aa       	std	Y+51, r12	; 0x33
     e96:	dc aa       	std	Y+52, r13	; 0x34
     e98:	86 01       	movw	r16, r12
     e9a:	75 01       	movw	r14, r10
     e9c:	2f ef       	ldi	r18, 0xFF	; 255
     e9e:	3f ef       	ldi	r19, 0xFF	; 255
     ea0:	40 e0       	ldi	r20, 0x00	; 0
     ea2:	50 e0       	ldi	r21, 0x00	; 0
     ea4:	e2 22       	and	r14, r18
     ea6:	f3 22       	and	r15, r19
     ea8:	04 23       	and	r16, r20
     eaa:	15 23       	and	r17, r21
     eac:	a6 01       	movw	r20, r12
     eae:	66 27       	eor	r22, r22
     eb0:	77 27       	eor	r23, r23
     eb2:	6d 96       	adiw	r28, 0x1d	; 29
     eb4:	4c af       	std	Y+60, r20	; 0x3c
     eb6:	5d af       	std	Y+61, r21	; 0x3d
     eb8:	6e af       	std	Y+62, r22	; 0x3e
     eba:	7f af       	std	Y+63, r23	; 0x3f
     ebc:	6d 97       	sbiw	r28, 0x1d	; 29
     ebe:	a9 a0       	ldd	r10, Y+33	; 0x21
     ec0:	ba a0       	ldd	r11, Y+34	; 0x22
     ec2:	cb a0       	ldd	r12, Y+35	; 0x23
     ec4:	dc a0       	ldd	r13, Y+36	; 0x24
     ec6:	6f ef       	ldi	r22, 0xFF	; 255
     ec8:	7f ef       	ldi	r23, 0xFF	; 255
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	a6 22       	and	r10, r22
     ed0:	b7 22       	and	r11, r23
     ed2:	c8 22       	and	r12, r24
     ed4:	d9 22       	and	r13, r25
     ed6:	89 a1       	ldd	r24, Y+33	; 0x21
     ed8:	9a a1       	ldd	r25, Y+34	; 0x22
     eda:	ab a1       	ldd	r26, Y+35	; 0x23
     edc:	bc a1       	ldd	r27, Y+36	; 0x24
     ede:	1d 01       	movw	r2, r26
     ee0:	44 24       	eor	r4, r4
     ee2:	55 24       	eor	r5, r5
     ee4:	c8 01       	movw	r24, r16
     ee6:	b7 01       	movw	r22, r14
     ee8:	a6 01       	movw	r20, r12
     eea:	95 01       	movw	r18, r10
     eec:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     ef0:	69 96       	adiw	r28, 0x19	; 25
     ef2:	6c af       	std	Y+60, r22	; 0x3c
     ef4:	7d af       	std	Y+61, r23	; 0x3d
     ef6:	8e af       	std	Y+62, r24	; 0x3e
     ef8:	9f af       	std	Y+63, r25	; 0x3f
     efa:	69 97       	sbiw	r28, 0x19	; 25
     efc:	c8 01       	movw	r24, r16
     efe:	b7 01       	movw	r22, r14
     f00:	a2 01       	movw	r20, r4
     f02:	91 01       	movw	r18, r2
     f04:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     f08:	3b 01       	movw	r6, r22
     f0a:	4c 01       	movw	r8, r24
     f0c:	6d 96       	adiw	r28, 0x1d	; 29
     f0e:	6c ad       	ldd	r22, Y+60	; 0x3c
     f10:	7d ad       	ldd	r23, Y+61	; 0x3d
     f12:	8e ad       	ldd	r24, Y+62	; 0x3e
     f14:	9f ad       	ldd	r25, Y+63	; 0x3f
     f16:	6d 97       	sbiw	r28, 0x1d	; 29
     f18:	a6 01       	movw	r20, r12
     f1a:	95 01       	movw	r18, r10
     f1c:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     f20:	7b 01       	movw	r14, r22
     f22:	8c 01       	movw	r16, r24
     f24:	6d 96       	adiw	r28, 0x1d	; 29
     f26:	6c ad       	ldd	r22, Y+60	; 0x3c
     f28:	7d ad       	ldd	r23, Y+61	; 0x3d
     f2a:	8e ad       	ldd	r24, Y+62	; 0x3e
     f2c:	9f ad       	ldd	r25, Y+63	; 0x3f
     f2e:	6d 97       	sbiw	r28, 0x1d	; 29
     f30:	a2 01       	movw	r20, r4
     f32:	91 01       	movw	r18, r2
     f34:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
     f38:	5b 01       	movw	r10, r22
     f3a:	6c 01       	movw	r12, r24
     f3c:	a8 01       	movw	r20, r16
     f3e:	97 01       	movw	r18, r14
     f40:	26 0d       	add	r18, r6
     f42:	37 1d       	adc	r19, r7
     f44:	48 1d       	adc	r20, r8
     f46:	59 1d       	adc	r21, r9
     f48:	69 96       	adiw	r28, 0x19	; 25
     f4a:	6c ac       	ldd	r6, Y+60	; 0x3c
     f4c:	7d ac       	ldd	r7, Y+61	; 0x3d
     f4e:	8e ac       	ldd	r8, Y+62	; 0x3e
     f50:	9f ac       	ldd	r9, Y+63	; 0x3f
     f52:	69 97       	sbiw	r28, 0x19	; 25
     f54:	c4 01       	movw	r24, r8
     f56:	aa 27       	eor	r26, r26
     f58:	bb 27       	eor	r27, r27
     f5a:	28 0f       	add	r18, r24
     f5c:	39 1f       	adc	r19, r25
     f5e:	4a 1f       	adc	r20, r26
     f60:	5b 1f       	adc	r21, r27
     f62:	2e 15       	cp	r18, r14
     f64:	3f 05       	cpc	r19, r15
     f66:	40 07       	cpc	r20, r16
     f68:	51 07       	cpc	r21, r17
     f6a:	48 f4       	brcc	.+18     	; 0xf7e <__stack+0x71f>
     f6c:	e1 2c       	mov	r14, r1
     f6e:	f1 2c       	mov	r15, r1
     f70:	61 e0       	ldi	r22, 0x01	; 1
     f72:	06 2f       	mov	r16, r22
     f74:	11 2d       	mov	r17, r1
     f76:	ae 0c       	add	r10, r14
     f78:	bf 1c       	adc	r11, r15
     f7a:	c0 1e       	adc	r12, r16
     f7c:	d1 1e       	adc	r13, r17
     f7e:	ca 01       	movw	r24, r20
     f80:	aa 27       	eor	r26, r26
     f82:	bb 27       	eor	r27, r27
     f84:	bc 01       	movw	r22, r24
     f86:	cd 01       	movw	r24, r26
     f88:	6a 0d       	add	r22, r10
     f8a:	7b 1d       	adc	r23, r11
     f8c:	8c 1d       	adc	r24, r12
     f8e:	9d 1d       	adc	r25, r13
     f90:	69 8c       	ldd	r6, Y+25	; 0x19
     f92:	7a 8c       	ldd	r7, Y+26	; 0x1a
     f94:	8b 8c       	ldd	r8, Y+27	; 0x1b
     f96:	9c 8c       	ldd	r9, Y+28	; 0x1c
     f98:	66 16       	cp	r6, r22
     f9a:	77 06       	cpc	r7, r23
     f9c:	88 06       	cpc	r8, r24
     f9e:	99 06       	cpc	r9, r25
     fa0:	40 f1       	brcs	.+80     	; 0xff2 <__stack+0x793>
     fa2:	66 15       	cp	r22, r6
     fa4:	77 05       	cpc	r23, r7
     fa6:	88 05       	cpc	r24, r8
     fa8:	99 05       	cpc	r25, r9
     faa:	09 f0       	breq	.+2      	; 0xfae <__stack+0x74f>
     fac:	43 c0       	rjmp	.+134    	; 0x1034 <__stack+0x7d5>
     fae:	d9 01       	movw	r26, r18
     fb0:	99 27       	eor	r25, r25
     fb2:	88 27       	eor	r24, r24
     fb4:	69 96       	adiw	r28, 0x19	; 25
     fb6:	2c ad       	ldd	r18, Y+60	; 0x3c
     fb8:	3d ad       	ldd	r19, Y+61	; 0x3d
     fba:	4e ad       	ldd	r20, Y+62	; 0x3e
     fbc:	5f ad       	ldd	r21, Y+63	; 0x3f
     fbe:	69 97       	sbiw	r28, 0x19	; 25
     fc0:	40 70       	andi	r20, 0x00	; 0
     fc2:	50 70       	andi	r21, 0x00	; 0
     fc4:	82 0f       	add	r24, r18
     fc6:	93 1f       	adc	r25, r19
     fc8:	a4 1f       	adc	r26, r20
     fca:	b5 1f       	adc	r27, r21
     fcc:	2d a5       	ldd	r18, Y+45	; 0x2d
     fce:	3e a5       	ldd	r19, Y+46	; 0x2e
     fd0:	4f a5       	ldd	r20, Y+47	; 0x2f
     fd2:	58 a9       	ldd	r21, Y+48	; 0x30
     fd4:	6e 96       	adiw	r28, 0x1e	; 30
     fd6:	0f ac       	ldd	r0, Y+63	; 0x3f
     fd8:	6e 97       	sbiw	r28, 0x1e	; 30
     fda:	04 c0       	rjmp	.+8      	; 0xfe4 <__stack+0x785>
     fdc:	22 0f       	add	r18, r18
     fde:	33 1f       	adc	r19, r19
     fe0:	44 1f       	adc	r20, r20
     fe2:	55 1f       	adc	r21, r21
     fe4:	0a 94       	dec	r0
     fe6:	d2 f7       	brpl	.-12     	; 0xfdc <__stack+0x77d>
     fe8:	28 17       	cp	r18, r24
     fea:	39 07       	cpc	r19, r25
     fec:	4a 07       	cpc	r20, r26
     fee:	5b 07       	cpc	r21, r27
     ff0:	08 f5       	brcc	.+66     	; 0x1034 <__stack+0x7d5>
     ff2:	09 a9       	ldd	r16, Y+49	; 0x31
     ff4:	1a a9       	ldd	r17, Y+50	; 0x32
     ff6:	2b a9       	ldd	r18, Y+51	; 0x33
     ff8:	3c a9       	ldd	r19, Y+52	; 0x34
     ffa:	01 50       	subi	r16, 0x01	; 1
     ffc:	10 40       	sbci	r17, 0x00	; 0
     ffe:	20 40       	sbci	r18, 0x00	; 0
    1000:	30 40       	sbci	r19, 0x00	; 0
    1002:	09 ab       	std	Y+49, r16	; 0x31
    1004:	1a ab       	std	Y+50, r17	; 0x32
    1006:	2b ab       	std	Y+51, r18	; 0x33
    1008:	3c ab       	std	Y+52, r19	; 0x34
    100a:	14 c0       	rjmp	.+40     	; 0x1034 <__stack+0x7d5>
    100c:	66 24       	eor	r6, r6
    100e:	77 24       	eor	r7, r7
    1010:	43 01       	movw	r8, r6
    1012:	21 e0       	ldi	r18, 0x01	; 1
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	40 e0       	ldi	r20, 0x00	; 0
    1018:	50 e0       	ldi	r21, 0x00	; 0
    101a:	29 ab       	std	Y+49, r18	; 0x31
    101c:	3a ab       	std	Y+50, r19	; 0x32
    101e:	4b ab       	std	Y+51, r20	; 0x33
    1020:	5c ab       	std	Y+52, r21	; 0x34
    1022:	0b c0       	rjmp	.+22     	; 0x103a <__stack+0x7db>
    1024:	66 24       	eor	r6, r6
    1026:	77 24       	eor	r7, r7
    1028:	43 01       	movw	r8, r6
    102a:	19 aa       	std	Y+49, r1	; 0x31
    102c:	1a aa       	std	Y+50, r1	; 0x32
    102e:	1b aa       	std	Y+51, r1	; 0x33
    1030:	1c aa       	std	Y+52, r1	; 0x34
    1032:	03 c0       	rjmp	.+6      	; 0x103a <__stack+0x7db>
    1034:	66 24       	eor	r6, r6
    1036:	77 24       	eor	r7, r7
    1038:	43 01       	movw	r8, r6
    103a:	fe 01       	movw	r30, r28
    103c:	71 96       	adiw	r30, 0x11	; 17
    103e:	88 e0       	ldi	r24, 0x08	; 8
    1040:	df 01       	movw	r26, r30
    1042:	1d 92       	st	X+, r1
    1044:	8a 95       	dec	r24
    1046:	e9 f7       	brne	.-6      	; 0x1042 <__stack+0x7e3>
    1048:	a9 a8       	ldd	r10, Y+49	; 0x31
    104a:	ba a8       	ldd	r11, Y+50	; 0x32
    104c:	cb a8       	ldd	r12, Y+51	; 0x33
    104e:	dc a8       	ldd	r13, Y+52	; 0x34
    1050:	a9 8a       	std	Y+17, r10	; 0x11
    1052:	ba 8a       	std	Y+18, r11	; 0x12
    1054:	cb 8a       	std	Y+19, r12	; 0x13
    1056:	dc 8a       	std	Y+20, r13	; 0x14
    1058:	6d 8a       	std	Y+21, r6	; 0x15
    105a:	7e 8a       	std	Y+22, r7	; 0x16
    105c:	8f 8a       	std	Y+23, r8	; 0x17
    105e:	98 8e       	std	Y+24, r9	; 0x18
    1060:	29 a9       	ldd	r18, Y+49	; 0x31
    1062:	3a 89       	ldd	r19, Y+18	; 0x12
    1064:	4b 89       	ldd	r20, Y+19	; 0x13
    1066:	5c 89       	ldd	r21, Y+20	; 0x14
    1068:	66 2d       	mov	r22, r6
    106a:	7e 89       	ldd	r23, Y+22	; 0x16
    106c:	8f 89       	ldd	r24, Y+23	; 0x17
    106e:	98 8d       	ldd	r25, Y+24	; 0x18
    1070:	c2 5a       	subi	r28, 0xA2	; 162
    1072:	df 4f       	sbci	r29, 0xFF	; 255
    1074:	e2 e1       	ldi	r30, 0x12	; 18
    1076:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <__epilogue_restores__>

0000107a <__umoddi3>:
    107a:	ab e5       	ldi	r26, 0x5B	; 91
    107c:	b0 e0       	ldi	r27, 0x00	; 0
    107e:	e3 e4       	ldi	r30, 0x43	; 67
    1080:	f8 e0       	ldi	r31, 0x08	; 8
    1082:	0c 94 0e 29 	jmp	0x521c	; 0x521c <__prologue_saves__>
    1086:	a8 e0       	ldi	r26, 0x08	; 8
    1088:	4e 01       	movw	r8, r28
    108a:	08 94       	sec
    108c:	81 1c       	adc	r8, r1
    108e:	91 1c       	adc	r9, r1
    1090:	f4 01       	movw	r30, r8
    1092:	6a 2e       	mov	r6, r26
    1094:	11 92       	st	Z+, r1
    1096:	6a 94       	dec	r6
    1098:	e9 f7       	brne	.-6      	; 0x1094 <__umoddi3+0x1a>
    109a:	29 83       	std	Y+1, r18	; 0x01
    109c:	3a 83       	std	Y+2, r19	; 0x02
    109e:	4b 83       	std	Y+3, r20	; 0x03
    10a0:	5c 83       	std	Y+4, r21	; 0x04
    10a2:	6d 83       	std	Y+5, r22	; 0x05
    10a4:	7e 83       	std	Y+6, r23	; 0x06
    10a6:	8f 83       	std	Y+7, r24	; 0x07
    10a8:	98 87       	std	Y+8, r25	; 0x08
    10aa:	ce 01       	movw	r24, r28
    10ac:	09 96       	adiw	r24, 0x09	; 9
    10ae:	fc 01       	movw	r30, r24
    10b0:	11 92       	st	Z+, r1
    10b2:	aa 95       	dec	r26
    10b4:	e9 f7       	brne	.-6      	; 0x10b0 <__umoddi3+0x36>
    10b6:	a9 86       	std	Y+9, r10	; 0x09
    10b8:	ba 86       	std	Y+10, r11	; 0x0a
    10ba:	cb 86       	std	Y+11, r12	; 0x0b
    10bc:	dc 86       	std	Y+12, r13	; 0x0c
    10be:	ed 86       	std	Y+13, r14	; 0x0d
    10c0:	fe 86       	std	Y+14, r15	; 0x0e
    10c2:	0f 87       	std	Y+15, r16	; 0x0f
    10c4:	18 8b       	std	Y+16, r17	; 0x10
    10c6:	29 84       	ldd	r2, Y+9	; 0x09
    10c8:	3a 84       	ldd	r3, Y+10	; 0x0a
    10ca:	4b 84       	ldd	r4, Y+11	; 0x0b
    10cc:	5c 84       	ldd	r5, Y+12	; 0x0c
    10ce:	ad 84       	ldd	r10, Y+13	; 0x0d
    10d0:	be 84       	ldd	r11, Y+14	; 0x0e
    10d2:	cf 84       	ldd	r12, Y+15	; 0x0f
    10d4:	d8 88       	ldd	r13, Y+16	; 0x10
    10d6:	29 81       	ldd	r18, Y+1	; 0x01
    10d8:	3a 81       	ldd	r19, Y+2	; 0x02
    10da:	4b 81       	ldd	r20, Y+3	; 0x03
    10dc:	5c 81       	ldd	r21, Y+4	; 0x04
    10de:	69 96       	adiw	r28, 0x19	; 25
    10e0:	2f af       	std	Y+63, r18	; 0x3f
    10e2:	69 97       	sbiw	r28, 0x19	; 25
    10e4:	6a 96       	adiw	r28, 0x1a	; 26
    10e6:	3f af       	std	Y+63, r19	; 0x3f
    10e8:	6a 97       	sbiw	r28, 0x1a	; 26
    10ea:	6b 96       	adiw	r28, 0x1b	; 27
    10ec:	4f af       	std	Y+63, r20	; 0x3f
    10ee:	6b 97       	sbiw	r28, 0x1b	; 27
    10f0:	6c 96       	adiw	r28, 0x1c	; 28
    10f2:	5f af       	std	Y+63, r21	; 0x3f
    10f4:	6c 97       	sbiw	r28, 0x1c	; 28
    10f6:	6c 96       	adiw	r28, 0x1c	; 28
    10f8:	6c ac       	ldd	r6, Y+60	; 0x3c
    10fa:	7d ac       	ldd	r7, Y+61	; 0x3d
    10fc:	8e ac       	ldd	r8, Y+62	; 0x3e
    10fe:	9f ac       	ldd	r9, Y+63	; 0x3f
    1100:	6c 97       	sbiw	r28, 0x1c	; 28
    1102:	69 aa       	std	Y+49, r6	; 0x31
    1104:	7a aa       	std	Y+50, r7	; 0x32
    1106:	8b aa       	std	Y+51, r8	; 0x33
    1108:	9c aa       	std	Y+52, r9	; 0x34
    110a:	6d 81       	ldd	r22, Y+5	; 0x05
    110c:	7e 81       	ldd	r23, Y+6	; 0x06
    110e:	8f 81       	ldd	r24, Y+7	; 0x07
    1110:	98 85       	ldd	r25, Y+8	; 0x08
    1112:	3b 01       	movw	r6, r22
    1114:	4c 01       	movw	r8, r24
    1116:	6d aa       	std	Y+53, r6	; 0x35
    1118:	7e aa       	std	Y+54, r7	; 0x36
    111a:	8f aa       	std	Y+55, r8	; 0x37
    111c:	98 ae       	std	Y+56, r9	; 0x38
    111e:	a1 14       	cp	r10, r1
    1120:	b1 04       	cpc	r11, r1
    1122:	c1 04       	cpc	r12, r1
    1124:	d1 04       	cpc	r13, r1
    1126:	09 f0       	breq	.+2      	; 0x112a <__umoddi3+0xb0>
    1128:	04 c3       	rjmp	.+1544   	; 0x1732 <__umoddi3+0x6b8>
    112a:	62 14       	cp	r6, r2
    112c:	73 04       	cpc	r7, r3
    112e:	84 04       	cpc	r8, r4
    1130:	95 04       	cpc	r9, r5
    1132:	08 f0       	brcs	.+2      	; 0x1136 <__umoddi3+0xbc>
    1134:	00 c1       	rjmp	.+512    	; 0x1336 <__umoddi3+0x2bc>
    1136:	00 e0       	ldi	r16, 0x00	; 0
    1138:	20 16       	cp	r2, r16
    113a:	00 e0       	ldi	r16, 0x00	; 0
    113c:	30 06       	cpc	r3, r16
    113e:	01 e0       	ldi	r16, 0x01	; 1
    1140:	40 06       	cpc	r4, r16
    1142:	00 e0       	ldi	r16, 0x00	; 0
    1144:	50 06       	cpc	r5, r16
    1146:	88 f4       	brcc	.+34     	; 0x116a <__umoddi3+0xf0>
    1148:	1f ef       	ldi	r17, 0xFF	; 255
    114a:	21 16       	cp	r2, r17
    114c:	31 04       	cpc	r3, r1
    114e:	41 04       	cpc	r4, r1
    1150:	51 04       	cpc	r5, r1
    1152:	39 f0       	breq	.+14     	; 0x1162 <__umoddi3+0xe8>
    1154:	30 f0       	brcs	.+12     	; 0x1162 <__umoddi3+0xe8>
    1156:	88 e0       	ldi	r24, 0x08	; 8
    1158:	e8 2e       	mov	r14, r24
    115a:	f1 2c       	mov	r15, r1
    115c:	01 2d       	mov	r16, r1
    115e:	11 2d       	mov	r17, r1
    1160:	18 c0       	rjmp	.+48     	; 0x1192 <__umoddi3+0x118>
    1162:	ee 24       	eor	r14, r14
    1164:	ff 24       	eor	r15, r15
    1166:	87 01       	movw	r16, r14
    1168:	14 c0       	rjmp	.+40     	; 0x1192 <__umoddi3+0x118>
    116a:	40 e0       	ldi	r20, 0x00	; 0
    116c:	24 16       	cp	r2, r20
    116e:	40 e0       	ldi	r20, 0x00	; 0
    1170:	34 06       	cpc	r3, r20
    1172:	40 e0       	ldi	r20, 0x00	; 0
    1174:	44 06       	cpc	r4, r20
    1176:	41 e0       	ldi	r20, 0x01	; 1
    1178:	54 06       	cpc	r5, r20
    117a:	30 f0       	brcs	.+12     	; 0x1188 <__umoddi3+0x10e>
    117c:	b8 e1       	ldi	r27, 0x18	; 24
    117e:	eb 2e       	mov	r14, r27
    1180:	f1 2c       	mov	r15, r1
    1182:	01 2d       	mov	r16, r1
    1184:	11 2d       	mov	r17, r1
    1186:	05 c0       	rjmp	.+10     	; 0x1192 <__umoddi3+0x118>
    1188:	a0 e1       	ldi	r26, 0x10	; 16
    118a:	ea 2e       	mov	r14, r26
    118c:	f1 2c       	mov	r15, r1
    118e:	01 2d       	mov	r16, r1
    1190:	11 2d       	mov	r17, r1
    1192:	d2 01       	movw	r26, r4
    1194:	c1 01       	movw	r24, r2
    1196:	0e 2c       	mov	r0, r14
    1198:	04 c0       	rjmp	.+8      	; 0x11a2 <__umoddi3+0x128>
    119a:	b6 95       	lsr	r27
    119c:	a7 95       	ror	r26
    119e:	97 95       	ror	r25
    11a0:	87 95       	ror	r24
    11a2:	0a 94       	dec	r0
    11a4:	d2 f7       	brpl	.-12     	; 0x119a <__umoddi3+0x120>
    11a6:	83 57       	subi	r24, 0x73	; 115
    11a8:	9e 4f       	sbci	r25, 0xFE	; 254
    11aa:	dc 01       	movw	r26, r24
    11ac:	2c 91       	ld	r18, X
    11ae:	80 e2       	ldi	r24, 0x20	; 32
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	a0 e0       	ldi	r26, 0x00	; 0
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	8e 19       	sub	r24, r14
    11b8:	9f 09       	sbc	r25, r15
    11ba:	a0 0b       	sbc	r26, r16
    11bc:	b1 0b       	sbc	r27, r17
    11be:	5c 01       	movw	r10, r24
    11c0:	6d 01       	movw	r12, r26
    11c2:	a2 1a       	sub	r10, r18
    11c4:	b1 08       	sbc	r11, r1
    11c6:	c1 08       	sbc	r12, r1
    11c8:	d1 08       	sbc	r13, r1
    11ca:	a9 ae       	std	Y+57, r10	; 0x39
    11cc:	ba ae       	std	Y+58, r11	; 0x3a
    11ce:	cb ae       	std	Y+59, r12	; 0x3b
    11d0:	dc ae       	std	Y+60, r13	; 0x3c
    11d2:	a1 14       	cp	r10, r1
    11d4:	b1 04       	cpc	r11, r1
    11d6:	c1 04       	cpc	r12, r1
    11d8:	d1 04       	cpc	r13, r1
    11da:	09 f4       	brne	.+2      	; 0x11de <__umoddi3+0x164>
    11dc:	3f c0       	rjmp	.+126    	; 0x125c <__umoddi3+0x1e2>
    11de:	69 ad       	ldd	r22, Y+57	; 0x39
    11e0:	06 2e       	mov	r0, r22
    11e2:	04 c0       	rjmp	.+8      	; 0x11ec <__umoddi3+0x172>
    11e4:	22 0c       	add	r2, r2
    11e6:	33 1c       	adc	r3, r3
    11e8:	44 1c       	adc	r4, r4
    11ea:	55 1c       	adc	r5, r5
    11ec:	0a 94       	dec	r0
    11ee:	d2 f7       	brpl	.-12     	; 0x11e4 <__umoddi3+0x16a>
    11f0:	a4 01       	movw	r20, r8
    11f2:	93 01       	movw	r18, r6
    11f4:	06 2e       	mov	r0, r22
    11f6:	04 c0       	rjmp	.+8      	; 0x1200 <__umoddi3+0x186>
    11f8:	22 0f       	add	r18, r18
    11fa:	33 1f       	adc	r19, r19
    11fc:	44 1f       	adc	r20, r20
    11fe:	55 1f       	adc	r21, r21
    1200:	0a 94       	dec	r0
    1202:	d2 f7       	brpl	.-12     	; 0x11f8 <__umoddi3+0x17e>
    1204:	80 e2       	ldi	r24, 0x20	; 32
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	8a 19       	sub	r24, r10
    120a:	9b 09       	sbc	r25, r11
    120c:	6c 96       	adiw	r28, 0x1c	; 28
    120e:	cc ac       	ldd	r12, Y+60	; 0x3c
    1210:	dd ac       	ldd	r13, Y+61	; 0x3d
    1212:	ee ac       	ldd	r14, Y+62	; 0x3e
    1214:	ff ac       	ldd	r15, Y+63	; 0x3f
    1216:	6c 97       	sbiw	r28, 0x1c	; 28
    1218:	04 c0       	rjmp	.+8      	; 0x1222 <__umoddi3+0x1a8>
    121a:	f6 94       	lsr	r15
    121c:	e7 94       	ror	r14
    121e:	d7 94       	ror	r13
    1220:	c7 94       	ror	r12
    1222:	8a 95       	dec	r24
    1224:	d2 f7       	brpl	.-12     	; 0x121a <__umoddi3+0x1a0>
    1226:	87 01       	movw	r16, r14
    1228:	76 01       	movw	r14, r12
    122a:	e2 2a       	or	r14, r18
    122c:	f3 2a       	or	r15, r19
    122e:	04 2b       	or	r16, r20
    1230:	15 2b       	or	r17, r21
    1232:	ed aa       	std	Y+53, r14	; 0x35
    1234:	fe aa       	std	Y+54, r15	; 0x36
    1236:	0f ab       	std	Y+55, r16	; 0x37
    1238:	18 af       	std	Y+56, r17	; 0x38
    123a:	6c 96       	adiw	r28, 0x1c	; 28
    123c:	8c ad       	ldd	r24, Y+60	; 0x3c
    123e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1240:	ae ad       	ldd	r26, Y+62	; 0x3e
    1242:	bf ad       	ldd	r27, Y+63	; 0x3f
    1244:	6c 97       	sbiw	r28, 0x1c	; 28
    1246:	04 c0       	rjmp	.+8      	; 0x1250 <__umoddi3+0x1d6>
    1248:	88 0f       	add	r24, r24
    124a:	99 1f       	adc	r25, r25
    124c:	aa 1f       	adc	r26, r26
    124e:	bb 1f       	adc	r27, r27
    1250:	6a 95       	dec	r22
    1252:	d2 f7       	brpl	.-12     	; 0x1248 <__umoddi3+0x1ce>
    1254:	89 ab       	std	Y+49, r24	; 0x31
    1256:	9a ab       	std	Y+50, r25	; 0x32
    1258:	ab ab       	std	Y+51, r26	; 0x33
    125a:	bc ab       	std	Y+52, r27	; 0x34
    125c:	32 01       	movw	r6, r4
    125e:	88 24       	eor	r8, r8
    1260:	99 24       	eor	r9, r9
    1262:	b2 01       	movw	r22, r4
    1264:	a1 01       	movw	r20, r2
    1266:	60 70       	andi	r22, 0x00	; 0
    1268:	70 70       	andi	r23, 0x00	; 0
    126a:	21 96       	adiw	r28, 0x01	; 1
    126c:	4c af       	std	Y+60, r20	; 0x3c
    126e:	5d af       	std	Y+61, r21	; 0x3d
    1270:	6e af       	std	Y+62, r22	; 0x3e
    1272:	7f af       	std	Y+63, r23	; 0x3f
    1274:	21 97       	sbiw	r28, 0x01	; 1
    1276:	6d a9       	ldd	r22, Y+53	; 0x35
    1278:	7e a9       	ldd	r23, Y+54	; 0x36
    127a:	8f a9       	ldd	r24, Y+55	; 0x37
    127c:	98 ad       	ldd	r25, Y+56	; 0x38
    127e:	a4 01       	movw	r20, r8
    1280:	93 01       	movw	r18, r6
    1282:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1286:	7b 01       	movw	r14, r22
    1288:	8c 01       	movw	r16, r24
    128a:	6d a9       	ldd	r22, Y+53	; 0x35
    128c:	7e a9       	ldd	r23, Y+54	; 0x36
    128e:	8f a9       	ldd	r24, Y+55	; 0x37
    1290:	98 ad       	ldd	r25, Y+56	; 0x38
    1292:	a4 01       	movw	r20, r8
    1294:	93 01       	movw	r18, r6
    1296:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    129a:	ca 01       	movw	r24, r20
    129c:	b9 01       	movw	r22, r18
    129e:	21 96       	adiw	r28, 0x01	; 1
    12a0:	2c ad       	ldd	r18, Y+60	; 0x3c
    12a2:	3d ad       	ldd	r19, Y+61	; 0x3d
    12a4:	4e ad       	ldd	r20, Y+62	; 0x3e
    12a6:	5f ad       	ldd	r21, Y+63	; 0x3f
    12a8:	21 97       	sbiw	r28, 0x01	; 1
    12aa:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    12ae:	9b 01       	movw	r18, r22
    12b0:	ac 01       	movw	r20, r24
    12b2:	87 01       	movw	r16, r14
    12b4:	ff 24       	eor	r15, r15
    12b6:	ee 24       	eor	r14, r14
    12b8:	a9 a8       	ldd	r10, Y+49	; 0x31
    12ba:	ba a8       	ldd	r11, Y+50	; 0x32
    12bc:	cb a8       	ldd	r12, Y+51	; 0x33
    12be:	dc a8       	ldd	r13, Y+52	; 0x34
    12c0:	c6 01       	movw	r24, r12
    12c2:	aa 27       	eor	r26, r26
    12c4:	bb 27       	eor	r27, r27
    12c6:	57 01       	movw	r10, r14
    12c8:	68 01       	movw	r12, r16
    12ca:	a8 2a       	or	r10, r24
    12cc:	b9 2a       	or	r11, r25
    12ce:	ca 2a       	or	r12, r26
    12d0:	db 2a       	or	r13, r27
    12d2:	a2 16       	cp	r10, r18
    12d4:	b3 06       	cpc	r11, r19
    12d6:	c4 06       	cpc	r12, r20
    12d8:	d5 06       	cpc	r13, r21
    12da:	90 f4       	brcc	.+36     	; 0x1300 <__umoddi3+0x286>
    12dc:	a2 0c       	add	r10, r2
    12de:	b3 1c       	adc	r11, r3
    12e0:	c4 1c       	adc	r12, r4
    12e2:	d5 1c       	adc	r13, r5
    12e4:	a2 14       	cp	r10, r2
    12e6:	b3 04       	cpc	r11, r3
    12e8:	c4 04       	cpc	r12, r4
    12ea:	d5 04       	cpc	r13, r5
    12ec:	48 f0       	brcs	.+18     	; 0x1300 <__umoddi3+0x286>
    12ee:	a2 16       	cp	r10, r18
    12f0:	b3 06       	cpc	r11, r19
    12f2:	c4 06       	cpc	r12, r20
    12f4:	d5 06       	cpc	r13, r21
    12f6:	20 f4       	brcc	.+8      	; 0x1300 <__umoddi3+0x286>
    12f8:	a2 0c       	add	r10, r2
    12fa:	b3 1c       	adc	r11, r3
    12fc:	c4 1c       	adc	r12, r4
    12fe:	d5 1c       	adc	r13, r5
    1300:	a2 1a       	sub	r10, r18
    1302:	b3 0a       	sbc	r11, r19
    1304:	c4 0a       	sbc	r12, r20
    1306:	d5 0a       	sbc	r13, r21
    1308:	c6 01       	movw	r24, r12
    130a:	b5 01       	movw	r22, r10
    130c:	a4 01       	movw	r20, r8
    130e:	93 01       	movw	r18, r6
    1310:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1314:	7b 01       	movw	r14, r22
    1316:	8c 01       	movw	r16, r24
    1318:	c6 01       	movw	r24, r12
    131a:	b5 01       	movw	r22, r10
    131c:	a4 01       	movw	r20, r8
    131e:	93 01       	movw	r18, r6
    1320:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1324:	ca 01       	movw	r24, r20
    1326:	b9 01       	movw	r22, r18
    1328:	21 96       	adiw	r28, 0x01	; 1
    132a:	2c ad       	ldd	r18, Y+60	; 0x3c
    132c:	3d ad       	ldd	r19, Y+61	; 0x3d
    132e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1330:	5f ad       	ldd	r21, Y+63	; 0x3f
    1332:	21 97       	sbiw	r28, 0x01	; 1
    1334:	ba c1       	rjmp	.+884    	; 0x16aa <__umoddi3+0x630>
    1336:	21 14       	cp	r2, r1
    1338:	31 04       	cpc	r3, r1
    133a:	41 04       	cpc	r4, r1
    133c:	51 04       	cpc	r5, r1
    133e:	71 f4       	brne	.+28     	; 0x135c <__umoddi3+0x2e2>
    1340:	61 e0       	ldi	r22, 0x01	; 1
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	40 e0       	ldi	r20, 0x00	; 0
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1354:	c9 01       	movw	r24, r18
    1356:	da 01       	movw	r26, r20
    1358:	1c 01       	movw	r2, r24
    135a:	2d 01       	movw	r4, r26
    135c:	00 e0       	ldi	r16, 0x00	; 0
    135e:	20 16       	cp	r2, r16
    1360:	00 e0       	ldi	r16, 0x00	; 0
    1362:	30 06       	cpc	r3, r16
    1364:	01 e0       	ldi	r16, 0x01	; 1
    1366:	40 06       	cpc	r4, r16
    1368:	00 e0       	ldi	r16, 0x00	; 0
    136a:	50 06       	cpc	r5, r16
    136c:	88 f4       	brcc	.+34     	; 0x1390 <__umoddi3+0x316>
    136e:	1f ef       	ldi	r17, 0xFF	; 255
    1370:	21 16       	cp	r2, r17
    1372:	31 04       	cpc	r3, r1
    1374:	41 04       	cpc	r4, r1
    1376:	51 04       	cpc	r5, r1
    1378:	39 f0       	breq	.+14     	; 0x1388 <__umoddi3+0x30e>
    137a:	30 f0       	brcs	.+12     	; 0x1388 <__umoddi3+0x30e>
    137c:	68 e0       	ldi	r22, 0x08	; 8
    137e:	e6 2e       	mov	r14, r22
    1380:	f1 2c       	mov	r15, r1
    1382:	01 2d       	mov	r16, r1
    1384:	11 2d       	mov	r17, r1
    1386:	18 c0       	rjmp	.+48     	; 0x13b8 <__umoddi3+0x33e>
    1388:	ee 24       	eor	r14, r14
    138a:	ff 24       	eor	r15, r15
    138c:	87 01       	movw	r16, r14
    138e:	14 c0       	rjmp	.+40     	; 0x13b8 <__umoddi3+0x33e>
    1390:	40 e0       	ldi	r20, 0x00	; 0
    1392:	24 16       	cp	r2, r20
    1394:	40 e0       	ldi	r20, 0x00	; 0
    1396:	34 06       	cpc	r3, r20
    1398:	40 e0       	ldi	r20, 0x00	; 0
    139a:	44 06       	cpc	r4, r20
    139c:	41 e0       	ldi	r20, 0x01	; 1
    139e:	54 06       	cpc	r5, r20
    13a0:	30 f0       	brcs	.+12     	; 0x13ae <__umoddi3+0x334>
    13a2:	58 e1       	ldi	r21, 0x18	; 24
    13a4:	e5 2e       	mov	r14, r21
    13a6:	f1 2c       	mov	r15, r1
    13a8:	01 2d       	mov	r16, r1
    13aa:	11 2d       	mov	r17, r1
    13ac:	05 c0       	rjmp	.+10     	; 0x13b8 <__umoddi3+0x33e>
    13ae:	40 e1       	ldi	r20, 0x10	; 16
    13b0:	e4 2e       	mov	r14, r20
    13b2:	f1 2c       	mov	r15, r1
    13b4:	01 2d       	mov	r16, r1
    13b6:	11 2d       	mov	r17, r1
    13b8:	d2 01       	movw	r26, r4
    13ba:	c1 01       	movw	r24, r2
    13bc:	0e 2c       	mov	r0, r14
    13be:	04 c0       	rjmp	.+8      	; 0x13c8 <__umoddi3+0x34e>
    13c0:	b6 95       	lsr	r27
    13c2:	a7 95       	ror	r26
    13c4:	97 95       	ror	r25
    13c6:	87 95       	ror	r24
    13c8:	0a 94       	dec	r0
    13ca:	d2 f7       	brpl	.-12     	; 0x13c0 <__umoddi3+0x346>
    13cc:	83 57       	subi	r24, 0x73	; 115
    13ce:	9e 4f       	sbci	r25, 0xFE	; 254
    13d0:	dc 01       	movw	r26, r24
    13d2:	2c 91       	ld	r18, X
    13d4:	30 e2       	ldi	r19, 0x20	; 32
    13d6:	a3 2e       	mov	r10, r19
    13d8:	b1 2c       	mov	r11, r1
    13da:	c1 2c       	mov	r12, r1
    13dc:	d1 2c       	mov	r13, r1
    13de:	d6 01       	movw	r26, r12
    13e0:	c5 01       	movw	r24, r10
    13e2:	8e 19       	sub	r24, r14
    13e4:	9f 09       	sbc	r25, r15
    13e6:	a0 0b       	sbc	r26, r16
    13e8:	b1 0b       	sbc	r27, r17
    13ea:	7c 01       	movw	r14, r24
    13ec:	8d 01       	movw	r16, r26
    13ee:	e2 1a       	sub	r14, r18
    13f0:	f1 08       	sbc	r15, r1
    13f2:	01 09       	sbc	r16, r1
    13f4:	11 09       	sbc	r17, r1
    13f6:	e9 ae       	std	Y+57, r14	; 0x39
    13f8:	fa ae       	std	Y+58, r15	; 0x3a
    13fa:	0b af       	std	Y+59, r16	; 0x3b
    13fc:	1c af       	std	Y+60, r17	; 0x3c
    13fe:	e1 14       	cp	r14, r1
    1400:	f1 04       	cpc	r15, r1
    1402:	01 05       	cpc	r16, r1
    1404:	11 05       	cpc	r17, r1
    1406:	39 f4       	brne	.+14     	; 0x1416 <__umoddi3+0x39c>
    1408:	64 01       	movw	r12, r8
    140a:	53 01       	movw	r10, r6
    140c:	a2 18       	sub	r10, r2
    140e:	b3 08       	sbc	r11, r3
    1410:	c4 08       	sbc	r12, r4
    1412:	d5 08       	sbc	r13, r5
    1414:	e2 c0       	rjmp	.+452    	; 0x15da <__umoddi3+0x560>
    1416:	f9 ac       	ldd	r15, Y+57	; 0x39
    1418:	68 96       	adiw	r28, 0x18	; 24
    141a:	ff ae       	std	Y+63, r15	; 0x3f
    141c:	68 97       	sbiw	r28, 0x18	; 24
    141e:	0f 2c       	mov	r0, r15
    1420:	04 c0       	rjmp	.+8      	; 0x142a <__umoddi3+0x3b0>
    1422:	22 0c       	add	r2, r2
    1424:	33 1c       	adc	r3, r3
    1426:	44 1c       	adc	r4, r4
    1428:	55 1c       	adc	r5, r5
    142a:	0a 94       	dec	r0
    142c:	d2 f7       	brpl	.-12     	; 0x1422 <__umoddi3+0x3a8>
    142e:	8a 2d       	mov	r24, r10
    1430:	8f 19       	sub	r24, r15
    1432:	64 01       	movw	r12, r8
    1434:	53 01       	movw	r10, r6
    1436:	08 2e       	mov	r0, r24
    1438:	04 c0       	rjmp	.+8      	; 0x1442 <__umoddi3+0x3c8>
    143a:	d6 94       	lsr	r13
    143c:	c7 94       	ror	r12
    143e:	b7 94       	ror	r11
    1440:	a7 94       	ror	r10
    1442:	0a 94       	dec	r0
    1444:	d2 f7       	brpl	.-12     	; 0x143a <__umoddi3+0x3c0>
    1446:	a4 01       	movw	r20, r8
    1448:	93 01       	movw	r18, r6
    144a:	04 c0       	rjmp	.+8      	; 0x1454 <__umoddi3+0x3da>
    144c:	22 0f       	add	r18, r18
    144e:	33 1f       	adc	r19, r19
    1450:	44 1f       	adc	r20, r20
    1452:	55 1f       	adc	r21, r21
    1454:	fa 94       	dec	r15
    1456:	d2 f7       	brpl	.-12     	; 0x144c <__umoddi3+0x3d2>
    1458:	6c 96       	adiw	r28, 0x1c	; 28
    145a:	6c ac       	ldd	r6, Y+60	; 0x3c
    145c:	7d ac       	ldd	r7, Y+61	; 0x3d
    145e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1460:	9f ac       	ldd	r9, Y+63	; 0x3f
    1462:	6c 97       	sbiw	r28, 0x1c	; 28
    1464:	04 c0       	rjmp	.+8      	; 0x146e <__umoddi3+0x3f4>
    1466:	96 94       	lsr	r9
    1468:	87 94       	ror	r8
    146a:	77 94       	ror	r7
    146c:	67 94       	ror	r6
    146e:	8a 95       	dec	r24
    1470:	d2 f7       	brpl	.-12     	; 0x1466 <__umoddi3+0x3ec>
    1472:	84 01       	movw	r16, r8
    1474:	73 01       	movw	r14, r6
    1476:	e2 2a       	or	r14, r18
    1478:	f3 2a       	or	r15, r19
    147a:	04 2b       	or	r16, r20
    147c:	15 2b       	or	r17, r21
    147e:	ed a6       	std	Y+45, r14	; 0x2d
    1480:	fe a6       	std	Y+46, r15	; 0x2e
    1482:	0f a7       	std	Y+47, r16	; 0x2f
    1484:	18 ab       	std	Y+48, r17	; 0x30
    1486:	32 01       	movw	r6, r4
    1488:	88 24       	eor	r8, r8
    148a:	99 24       	eor	r9, r9
    148c:	b2 01       	movw	r22, r4
    148e:	a1 01       	movw	r20, r2
    1490:	60 70       	andi	r22, 0x00	; 0
    1492:	70 70       	andi	r23, 0x00	; 0
    1494:	25 96       	adiw	r28, 0x05	; 5
    1496:	4c af       	std	Y+60, r20	; 0x3c
    1498:	5d af       	std	Y+61, r21	; 0x3d
    149a:	6e af       	std	Y+62, r22	; 0x3e
    149c:	7f af       	std	Y+63, r23	; 0x3f
    149e:	25 97       	sbiw	r28, 0x05	; 5
    14a0:	c6 01       	movw	r24, r12
    14a2:	b5 01       	movw	r22, r10
    14a4:	a4 01       	movw	r20, r8
    14a6:	93 01       	movw	r18, r6
    14a8:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    14ac:	7b 01       	movw	r14, r22
    14ae:	8c 01       	movw	r16, r24
    14b0:	c6 01       	movw	r24, r12
    14b2:	b5 01       	movw	r22, r10
    14b4:	a4 01       	movw	r20, r8
    14b6:	93 01       	movw	r18, r6
    14b8:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    14bc:	ca 01       	movw	r24, r20
    14be:	b9 01       	movw	r22, r18
    14c0:	25 96       	adiw	r28, 0x05	; 5
    14c2:	2c ad       	ldd	r18, Y+60	; 0x3c
    14c4:	3d ad       	ldd	r19, Y+61	; 0x3d
    14c6:	4e ad       	ldd	r20, Y+62	; 0x3e
    14c8:	5f ad       	ldd	r21, Y+63	; 0x3f
    14ca:	25 97       	sbiw	r28, 0x05	; 5
    14cc:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    14d0:	9b 01       	movw	r18, r22
    14d2:	ac 01       	movw	r20, r24
    14d4:	87 01       	movw	r16, r14
    14d6:	ff 24       	eor	r15, r15
    14d8:	ee 24       	eor	r14, r14
    14da:	ad a4       	ldd	r10, Y+45	; 0x2d
    14dc:	be a4       	ldd	r11, Y+46	; 0x2e
    14de:	cf a4       	ldd	r12, Y+47	; 0x2f
    14e0:	d8 a8       	ldd	r13, Y+48	; 0x30
    14e2:	c6 01       	movw	r24, r12
    14e4:	aa 27       	eor	r26, r26
    14e6:	bb 27       	eor	r27, r27
    14e8:	5c 01       	movw	r10, r24
    14ea:	6d 01       	movw	r12, r26
    14ec:	ae 28       	or	r10, r14
    14ee:	bf 28       	or	r11, r15
    14f0:	c0 2a       	or	r12, r16
    14f2:	d1 2a       	or	r13, r17
    14f4:	a2 16       	cp	r10, r18
    14f6:	b3 06       	cpc	r11, r19
    14f8:	c4 06       	cpc	r12, r20
    14fa:	d5 06       	cpc	r13, r21
    14fc:	90 f4       	brcc	.+36     	; 0x1522 <__umoddi3+0x4a8>
    14fe:	a2 0c       	add	r10, r2
    1500:	b3 1c       	adc	r11, r3
    1502:	c4 1c       	adc	r12, r4
    1504:	d5 1c       	adc	r13, r5
    1506:	a2 14       	cp	r10, r2
    1508:	b3 04       	cpc	r11, r3
    150a:	c4 04       	cpc	r12, r4
    150c:	d5 04       	cpc	r13, r5
    150e:	48 f0       	brcs	.+18     	; 0x1522 <__umoddi3+0x4a8>
    1510:	a2 16       	cp	r10, r18
    1512:	b3 06       	cpc	r11, r19
    1514:	c4 06       	cpc	r12, r20
    1516:	d5 06       	cpc	r13, r21
    1518:	20 f4       	brcc	.+8      	; 0x1522 <__umoddi3+0x4a8>
    151a:	a2 0c       	add	r10, r2
    151c:	b3 1c       	adc	r11, r3
    151e:	c4 1c       	adc	r12, r4
    1520:	d5 1c       	adc	r13, r5
    1522:	a2 1a       	sub	r10, r18
    1524:	b3 0a       	sbc	r11, r19
    1526:	c4 0a       	sbc	r12, r20
    1528:	d5 0a       	sbc	r13, r21
    152a:	c6 01       	movw	r24, r12
    152c:	b5 01       	movw	r22, r10
    152e:	a4 01       	movw	r20, r8
    1530:	93 01       	movw	r18, r6
    1532:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1536:	7b 01       	movw	r14, r22
    1538:	8c 01       	movw	r16, r24
    153a:	c6 01       	movw	r24, r12
    153c:	b5 01       	movw	r22, r10
    153e:	a4 01       	movw	r20, r8
    1540:	93 01       	movw	r18, r6
    1542:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1546:	ca 01       	movw	r24, r20
    1548:	b9 01       	movw	r22, r18
    154a:	25 96       	adiw	r28, 0x05	; 5
    154c:	2c ad       	ldd	r18, Y+60	; 0x3c
    154e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1550:	4e ad       	ldd	r20, Y+62	; 0x3e
    1552:	5f ad       	ldd	r21, Y+63	; 0x3f
    1554:	25 97       	sbiw	r28, 0x05	; 5
    1556:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    155a:	9b 01       	movw	r18, r22
    155c:	ac 01       	movw	r20, r24
    155e:	87 01       	movw	r16, r14
    1560:	ff 24       	eor	r15, r15
    1562:	ee 24       	eor	r14, r14
    1564:	8d a5       	ldd	r24, Y+45	; 0x2d
    1566:	9e a5       	ldd	r25, Y+46	; 0x2e
    1568:	af a5       	ldd	r26, Y+47	; 0x2f
    156a:	b8 a9       	ldd	r27, Y+48	; 0x30
    156c:	a0 70       	andi	r26, 0x00	; 0
    156e:	b0 70       	andi	r27, 0x00	; 0
    1570:	57 01       	movw	r10, r14
    1572:	68 01       	movw	r12, r16
    1574:	a8 2a       	or	r10, r24
    1576:	b9 2a       	or	r11, r25
    1578:	ca 2a       	or	r12, r26
    157a:	db 2a       	or	r13, r27
    157c:	a2 16       	cp	r10, r18
    157e:	b3 06       	cpc	r11, r19
    1580:	c4 06       	cpc	r12, r20
    1582:	d5 06       	cpc	r13, r21
    1584:	90 f4       	brcc	.+36     	; 0x15aa <__umoddi3+0x530>
    1586:	a2 0c       	add	r10, r2
    1588:	b3 1c       	adc	r11, r3
    158a:	c4 1c       	adc	r12, r4
    158c:	d5 1c       	adc	r13, r5
    158e:	a2 14       	cp	r10, r2
    1590:	b3 04       	cpc	r11, r3
    1592:	c4 04       	cpc	r12, r4
    1594:	d5 04       	cpc	r13, r5
    1596:	48 f0       	brcs	.+18     	; 0x15aa <__umoddi3+0x530>
    1598:	a2 16       	cp	r10, r18
    159a:	b3 06       	cpc	r11, r19
    159c:	c4 06       	cpc	r12, r20
    159e:	d5 06       	cpc	r13, r21
    15a0:	20 f4       	brcc	.+8      	; 0x15aa <__umoddi3+0x530>
    15a2:	a2 0c       	add	r10, r2
    15a4:	b3 1c       	adc	r11, r3
    15a6:	c4 1c       	adc	r12, r4
    15a8:	d5 1c       	adc	r13, r5
    15aa:	6c 96       	adiw	r28, 0x1c	; 28
    15ac:	ec ac       	ldd	r14, Y+60	; 0x3c
    15ae:	fd ac       	ldd	r15, Y+61	; 0x3d
    15b0:	0e ad       	ldd	r16, Y+62	; 0x3e
    15b2:	1f ad       	ldd	r17, Y+63	; 0x3f
    15b4:	6c 97       	sbiw	r28, 0x1c	; 28
    15b6:	68 96       	adiw	r28, 0x18	; 24
    15b8:	0f ac       	ldd	r0, Y+63	; 0x3f
    15ba:	68 97       	sbiw	r28, 0x18	; 24
    15bc:	04 c0       	rjmp	.+8      	; 0x15c6 <__umoddi3+0x54c>
    15be:	ee 0c       	add	r14, r14
    15c0:	ff 1c       	adc	r15, r15
    15c2:	00 1f       	adc	r16, r16
    15c4:	11 1f       	adc	r17, r17
    15c6:	0a 94       	dec	r0
    15c8:	d2 f7       	brpl	.-12     	; 0x15be <__umoddi3+0x544>
    15ca:	e9 aa       	std	Y+49, r14	; 0x31
    15cc:	fa aa       	std	Y+50, r15	; 0x32
    15ce:	0b ab       	std	Y+51, r16	; 0x33
    15d0:	1c ab       	std	Y+52, r17	; 0x34
    15d2:	a2 1a       	sub	r10, r18
    15d4:	b3 0a       	sbc	r11, r19
    15d6:	c4 0a       	sbc	r12, r20
    15d8:	d5 0a       	sbc	r13, r21
    15da:	32 01       	movw	r6, r4
    15dc:	88 24       	eor	r8, r8
    15de:	99 24       	eor	r9, r9
    15e0:	b2 01       	movw	r22, r4
    15e2:	a1 01       	movw	r20, r2
    15e4:	60 70       	andi	r22, 0x00	; 0
    15e6:	70 70       	andi	r23, 0x00	; 0
    15e8:	29 96       	adiw	r28, 0x09	; 9
    15ea:	4c af       	std	Y+60, r20	; 0x3c
    15ec:	5d af       	std	Y+61, r21	; 0x3d
    15ee:	6e af       	std	Y+62, r22	; 0x3e
    15f0:	7f af       	std	Y+63, r23	; 0x3f
    15f2:	29 97       	sbiw	r28, 0x09	; 9
    15f4:	c6 01       	movw	r24, r12
    15f6:	b5 01       	movw	r22, r10
    15f8:	a4 01       	movw	r20, r8
    15fa:	93 01       	movw	r18, r6
    15fc:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1600:	7b 01       	movw	r14, r22
    1602:	8c 01       	movw	r16, r24
    1604:	c6 01       	movw	r24, r12
    1606:	b5 01       	movw	r22, r10
    1608:	a4 01       	movw	r20, r8
    160a:	93 01       	movw	r18, r6
    160c:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1610:	ca 01       	movw	r24, r20
    1612:	b9 01       	movw	r22, r18
    1614:	29 96       	adiw	r28, 0x09	; 9
    1616:	2c ad       	ldd	r18, Y+60	; 0x3c
    1618:	3d ad       	ldd	r19, Y+61	; 0x3d
    161a:	4e ad       	ldd	r20, Y+62	; 0x3e
    161c:	5f ad       	ldd	r21, Y+63	; 0x3f
    161e:	29 97       	sbiw	r28, 0x09	; 9
    1620:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    1624:	9b 01       	movw	r18, r22
    1626:	ac 01       	movw	r20, r24
    1628:	87 01       	movw	r16, r14
    162a:	ff 24       	eor	r15, r15
    162c:	ee 24       	eor	r14, r14
    162e:	a9 a8       	ldd	r10, Y+49	; 0x31
    1630:	ba a8       	ldd	r11, Y+50	; 0x32
    1632:	cb a8       	ldd	r12, Y+51	; 0x33
    1634:	dc a8       	ldd	r13, Y+52	; 0x34
    1636:	c6 01       	movw	r24, r12
    1638:	aa 27       	eor	r26, r26
    163a:	bb 27       	eor	r27, r27
    163c:	57 01       	movw	r10, r14
    163e:	68 01       	movw	r12, r16
    1640:	a8 2a       	or	r10, r24
    1642:	b9 2a       	or	r11, r25
    1644:	ca 2a       	or	r12, r26
    1646:	db 2a       	or	r13, r27
    1648:	a2 16       	cp	r10, r18
    164a:	b3 06       	cpc	r11, r19
    164c:	c4 06       	cpc	r12, r20
    164e:	d5 06       	cpc	r13, r21
    1650:	90 f4       	brcc	.+36     	; 0x1676 <__umoddi3+0x5fc>
    1652:	a2 0c       	add	r10, r2
    1654:	b3 1c       	adc	r11, r3
    1656:	c4 1c       	adc	r12, r4
    1658:	d5 1c       	adc	r13, r5
    165a:	a2 14       	cp	r10, r2
    165c:	b3 04       	cpc	r11, r3
    165e:	c4 04       	cpc	r12, r4
    1660:	d5 04       	cpc	r13, r5
    1662:	48 f0       	brcs	.+18     	; 0x1676 <__umoddi3+0x5fc>
    1664:	a2 16       	cp	r10, r18
    1666:	b3 06       	cpc	r11, r19
    1668:	c4 06       	cpc	r12, r20
    166a:	d5 06       	cpc	r13, r21
    166c:	20 f4       	brcc	.+8      	; 0x1676 <__umoddi3+0x5fc>
    166e:	a2 0c       	add	r10, r2
    1670:	b3 1c       	adc	r11, r3
    1672:	c4 1c       	adc	r12, r4
    1674:	d5 1c       	adc	r13, r5
    1676:	a2 1a       	sub	r10, r18
    1678:	b3 0a       	sbc	r11, r19
    167a:	c4 0a       	sbc	r12, r20
    167c:	d5 0a       	sbc	r13, r21
    167e:	c6 01       	movw	r24, r12
    1680:	b5 01       	movw	r22, r10
    1682:	a4 01       	movw	r20, r8
    1684:	93 01       	movw	r18, r6
    1686:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    168a:	7b 01       	movw	r14, r22
    168c:	8c 01       	movw	r16, r24
    168e:	c6 01       	movw	r24, r12
    1690:	b5 01       	movw	r22, r10
    1692:	a4 01       	movw	r20, r8
    1694:	93 01       	movw	r18, r6
    1696:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    169a:	ca 01       	movw	r24, r20
    169c:	b9 01       	movw	r22, r18
    169e:	29 96       	adiw	r28, 0x09	; 9
    16a0:	2c ad       	ldd	r18, Y+60	; 0x3c
    16a2:	3d ad       	ldd	r19, Y+61	; 0x3d
    16a4:	4e ad       	ldd	r20, Y+62	; 0x3e
    16a6:	5f ad       	ldd	r21, Y+63	; 0x3f
    16a8:	29 97       	sbiw	r28, 0x09	; 9
    16aa:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    16ae:	9b 01       	movw	r18, r22
    16b0:	ac 01       	movw	r20, r24
    16b2:	87 01       	movw	r16, r14
    16b4:	ff 24       	eor	r15, r15
    16b6:	ee 24       	eor	r14, r14
    16b8:	89 a9       	ldd	r24, Y+49	; 0x31
    16ba:	9a a9       	ldd	r25, Y+50	; 0x32
    16bc:	ab a9       	ldd	r26, Y+51	; 0x33
    16be:	bc a9       	ldd	r27, Y+52	; 0x34
    16c0:	a0 70       	andi	r26, 0x00	; 0
    16c2:	b0 70       	andi	r27, 0x00	; 0
    16c4:	e8 2a       	or	r14, r24
    16c6:	f9 2a       	or	r15, r25
    16c8:	0a 2b       	or	r16, r26
    16ca:	1b 2b       	or	r17, r27
    16cc:	e2 16       	cp	r14, r18
    16ce:	f3 06       	cpc	r15, r19
    16d0:	04 07       	cpc	r16, r20
    16d2:	15 07       	cpc	r17, r21
    16d4:	90 f4       	brcc	.+36     	; 0x16fa <__umoddi3+0x680>
    16d6:	e2 0c       	add	r14, r2
    16d8:	f3 1c       	adc	r15, r3
    16da:	04 1d       	adc	r16, r4
    16dc:	15 1d       	adc	r17, r5
    16de:	e2 14       	cp	r14, r2
    16e0:	f3 04       	cpc	r15, r3
    16e2:	04 05       	cpc	r16, r4
    16e4:	15 05       	cpc	r17, r5
    16e6:	48 f0       	brcs	.+18     	; 0x16fa <__umoddi3+0x680>
    16e8:	e2 16       	cp	r14, r18
    16ea:	f3 06       	cpc	r15, r19
    16ec:	04 07       	cpc	r16, r20
    16ee:	15 07       	cpc	r17, r21
    16f0:	20 f4       	brcc	.+8      	; 0x16fa <__umoddi3+0x680>
    16f2:	e2 0c       	add	r14, r2
    16f4:	f3 1c       	adc	r15, r3
    16f6:	04 1d       	adc	r16, r4
    16f8:	15 1d       	adc	r17, r5
    16fa:	e2 1a       	sub	r14, r18
    16fc:	f3 0a       	sbc	r15, r19
    16fe:	04 0b       	sbc	r16, r20
    1700:	15 0b       	sbc	r17, r21
    1702:	d8 01       	movw	r26, r16
    1704:	c7 01       	movw	r24, r14
    1706:	09 ac       	ldd	r0, Y+57	; 0x39
    1708:	04 c0       	rjmp	.+8      	; 0x1712 <__umoddi3+0x698>
    170a:	b6 95       	lsr	r27
    170c:	a7 95       	ror	r26
    170e:	97 95       	ror	r25
    1710:	87 95       	ror	r24
    1712:	0a 94       	dec	r0
    1714:	d2 f7       	brpl	.-12     	; 0x170a <__umoddi3+0x690>
    1716:	89 8b       	std	Y+17, r24	; 0x11
    1718:	9a 8b       	std	Y+18, r25	; 0x12
    171a:	ab 8b       	std	Y+19, r26	; 0x13
    171c:	bc 8b       	std	Y+20, r27	; 0x14
    171e:	1d 8a       	std	Y+21, r1	; 0x15
    1720:	1e 8a       	std	Y+22, r1	; 0x16
    1722:	1f 8a       	std	Y+23, r1	; 0x17
    1724:	18 8e       	std	Y+24, r1	; 0x18
    1726:	28 2f       	mov	r18, r24
    1728:	3a 89       	ldd	r19, Y+18	; 0x12
    172a:	4b 89       	ldd	r20, Y+19	; 0x13
    172c:	5c 89       	ldd	r21, Y+20	; 0x14
    172e:	6d 89       	ldd	r22, Y+21	; 0x15
    1730:	0c c3       	rjmp	.+1560   	; 0x1d4a <__umoddi3+0xcd0>
    1732:	6a 14       	cp	r6, r10
    1734:	7b 04       	cpc	r7, r11
    1736:	8c 04       	cpc	r8, r12
    1738:	9d 04       	cpc	r9, r13
    173a:	08 f4       	brcc	.+2      	; 0x173e <__umoddi3+0x6c4>
    173c:	09 c3       	rjmp	.+1554   	; 0x1d50 <__umoddi3+0xcd6>
    173e:	00 e0       	ldi	r16, 0x00	; 0
    1740:	a0 16       	cp	r10, r16
    1742:	00 e0       	ldi	r16, 0x00	; 0
    1744:	b0 06       	cpc	r11, r16
    1746:	01 e0       	ldi	r16, 0x01	; 1
    1748:	c0 06       	cpc	r12, r16
    174a:	00 e0       	ldi	r16, 0x00	; 0
    174c:	d0 06       	cpc	r13, r16
    174e:	88 f4       	brcc	.+34     	; 0x1772 <__umoddi3+0x6f8>
    1750:	1f ef       	ldi	r17, 0xFF	; 255
    1752:	a1 16       	cp	r10, r17
    1754:	b1 04       	cpc	r11, r1
    1756:	c1 04       	cpc	r12, r1
    1758:	d1 04       	cpc	r13, r1
    175a:	39 f0       	breq	.+14     	; 0x176a <__umoddi3+0x6f0>
    175c:	30 f0       	brcs	.+12     	; 0x176a <__umoddi3+0x6f0>
    175e:	28 e0       	ldi	r18, 0x08	; 8
    1760:	e2 2e       	mov	r14, r18
    1762:	f1 2c       	mov	r15, r1
    1764:	01 2d       	mov	r16, r1
    1766:	11 2d       	mov	r17, r1
    1768:	18 c0       	rjmp	.+48     	; 0x179a <__umoddi3+0x720>
    176a:	ee 24       	eor	r14, r14
    176c:	ff 24       	eor	r15, r15
    176e:	87 01       	movw	r16, r14
    1770:	14 c0       	rjmp	.+40     	; 0x179a <__umoddi3+0x720>
    1772:	40 e0       	ldi	r20, 0x00	; 0
    1774:	a4 16       	cp	r10, r20
    1776:	40 e0       	ldi	r20, 0x00	; 0
    1778:	b4 06       	cpc	r11, r20
    177a:	40 e0       	ldi	r20, 0x00	; 0
    177c:	c4 06       	cpc	r12, r20
    177e:	41 e0       	ldi	r20, 0x01	; 1
    1780:	d4 06       	cpc	r13, r20
    1782:	30 f0       	brcs	.+12     	; 0x1790 <__umoddi3+0x716>
    1784:	98 e1       	ldi	r25, 0x18	; 24
    1786:	e9 2e       	mov	r14, r25
    1788:	f1 2c       	mov	r15, r1
    178a:	01 2d       	mov	r16, r1
    178c:	11 2d       	mov	r17, r1
    178e:	05 c0       	rjmp	.+10     	; 0x179a <__umoddi3+0x720>
    1790:	80 e1       	ldi	r24, 0x10	; 16
    1792:	e8 2e       	mov	r14, r24
    1794:	f1 2c       	mov	r15, r1
    1796:	01 2d       	mov	r16, r1
    1798:	11 2d       	mov	r17, r1
    179a:	d6 01       	movw	r26, r12
    179c:	c5 01       	movw	r24, r10
    179e:	0e 2c       	mov	r0, r14
    17a0:	04 c0       	rjmp	.+8      	; 0x17aa <__umoddi3+0x730>
    17a2:	b6 95       	lsr	r27
    17a4:	a7 95       	ror	r26
    17a6:	97 95       	ror	r25
    17a8:	87 95       	ror	r24
    17aa:	0a 94       	dec	r0
    17ac:	d2 f7       	brpl	.-12     	; 0x17a2 <__umoddi3+0x728>
    17ae:	83 57       	subi	r24, 0x73	; 115
    17b0:	9e 4f       	sbci	r25, 0xFE	; 254
    17b2:	dc 01       	movw	r26, r24
    17b4:	2c 91       	ld	r18, X
    17b6:	80 e2       	ldi	r24, 0x20	; 32
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	a0 e0       	ldi	r26, 0x00	; 0
    17bc:	b0 e0       	ldi	r27, 0x00	; 0
    17be:	8e 19       	sub	r24, r14
    17c0:	9f 09       	sbc	r25, r15
    17c2:	a0 0b       	sbc	r26, r16
    17c4:	b1 0b       	sbc	r27, r17
    17c6:	82 1b       	sub	r24, r18
    17c8:	91 09       	sbc	r25, r1
    17ca:	a1 09       	sbc	r26, r1
    17cc:	b1 09       	sbc	r27, r1
    17ce:	00 97       	sbiw	r24, 0x00	; 0
    17d0:	a1 05       	cpc	r26, r1
    17d2:	b1 05       	cpc	r27, r1
    17d4:	09 f0       	breq	.+2      	; 0x17d8 <__umoddi3+0x75e>
    17d6:	4f c0       	rjmp	.+158    	; 0x1876 <__umoddi3+0x7fc>
    17d8:	a6 14       	cp	r10, r6
    17da:	b7 04       	cpc	r11, r7
    17dc:	c8 04       	cpc	r12, r8
    17de:	d9 04       	cpc	r13, r9
    17e0:	58 f0       	brcs	.+22     	; 0x17f8 <__umoddi3+0x77e>
    17e2:	6c 96       	adiw	r28, 0x1c	; 28
    17e4:	ec ac       	ldd	r14, Y+60	; 0x3c
    17e6:	fd ac       	ldd	r15, Y+61	; 0x3d
    17e8:	0e ad       	ldd	r16, Y+62	; 0x3e
    17ea:	1f ad       	ldd	r17, Y+63	; 0x3f
    17ec:	6c 97       	sbiw	r28, 0x1c	; 28
    17ee:	e2 14       	cp	r14, r2
    17f0:	f3 04       	cpc	r15, r3
    17f2:	04 05       	cpc	r16, r4
    17f4:	15 05       	cpc	r17, r5
    17f6:	68 f1       	brcs	.+90     	; 0x1852 <__umoddi3+0x7d8>
    17f8:	6c 96       	adiw	r28, 0x1c	; 28
    17fa:	ec ac       	ldd	r14, Y+60	; 0x3c
    17fc:	fd ac       	ldd	r15, Y+61	; 0x3d
    17fe:	0e ad       	ldd	r16, Y+62	; 0x3e
    1800:	1f ad       	ldd	r17, Y+63	; 0x3f
    1802:	6c 97       	sbiw	r28, 0x1c	; 28
    1804:	e2 18       	sub	r14, r2
    1806:	f3 08       	sbc	r15, r3
    1808:	04 09       	sbc	r16, r4
    180a:	15 09       	sbc	r17, r5
    180c:	a4 01       	movw	r20, r8
    180e:	93 01       	movw	r18, r6
    1810:	2a 19       	sub	r18, r10
    1812:	3b 09       	sbc	r19, r11
    1814:	4c 09       	sbc	r20, r12
    1816:	5d 09       	sbc	r21, r13
    1818:	aa 24       	eor	r10, r10
    181a:	bb 24       	eor	r11, r11
    181c:	65 01       	movw	r12, r10
    181e:	6c 96       	adiw	r28, 0x1c	; 28
    1820:	6c ad       	ldd	r22, Y+60	; 0x3c
    1822:	7d ad       	ldd	r23, Y+61	; 0x3d
    1824:	8e ad       	ldd	r24, Y+62	; 0x3e
    1826:	9f ad       	ldd	r25, Y+63	; 0x3f
    1828:	6c 97       	sbiw	r28, 0x1c	; 28
    182a:	6e 15       	cp	r22, r14
    182c:	7f 05       	cpc	r23, r15
    182e:	80 07       	cpc	r24, r16
    1830:	91 07       	cpc	r25, r17
    1832:	28 f4       	brcc	.+10     	; 0x183e <__umoddi3+0x7c4>
    1834:	b1 e0       	ldi	r27, 0x01	; 1
    1836:	ab 2e       	mov	r10, r27
    1838:	b1 2c       	mov	r11, r1
    183a:	c1 2c       	mov	r12, r1
    183c:	d1 2c       	mov	r13, r1
    183e:	da 01       	movw	r26, r20
    1840:	c9 01       	movw	r24, r18
    1842:	8a 19       	sub	r24, r10
    1844:	9b 09       	sbc	r25, r11
    1846:	ac 09       	sbc	r26, r12
    1848:	bd 09       	sbc	r27, r13
    184a:	8d ab       	std	Y+53, r24	; 0x35
    184c:	9e ab       	std	Y+54, r25	; 0x36
    184e:	af ab       	std	Y+55, r26	; 0x37
    1850:	b8 af       	std	Y+56, r27	; 0x38
    1852:	e9 8a       	std	Y+17, r14	; 0x11
    1854:	fa 8a       	std	Y+18, r15	; 0x12
    1856:	0b 8b       	std	Y+19, r16	; 0x13
    1858:	1c 8b       	std	Y+20, r17	; 0x14
    185a:	6d a8       	ldd	r6, Y+53	; 0x35
    185c:	7e a8       	ldd	r7, Y+54	; 0x36
    185e:	8f a8       	ldd	r8, Y+55	; 0x37
    1860:	98 ac       	ldd	r9, Y+56	; 0x38
    1862:	6d 8a       	std	Y+21, r6	; 0x15
    1864:	7e 8a       	std	Y+22, r7	; 0x16
    1866:	8f 8a       	std	Y+23, r8	; 0x17
    1868:	98 8e       	std	Y+24, r9	; 0x18
    186a:	2e 2d       	mov	r18, r14
    186c:	3a 89       	ldd	r19, Y+18	; 0x12
    186e:	4b 89       	ldd	r20, Y+19	; 0x13
    1870:	5c 89       	ldd	r21, Y+20	; 0x14
    1872:	6d a9       	ldd	r22, Y+53	; 0x35
    1874:	6a c2       	rjmp	.+1236   	; 0x1d4a <__umoddi3+0xcd0>
    1876:	67 96       	adiw	r28, 0x17	; 23
    1878:	8f af       	std	Y+63, r24	; 0x3f
    187a:	67 97       	sbiw	r28, 0x17	; 23
    187c:	a6 01       	movw	r20, r12
    187e:	95 01       	movw	r18, r10
    1880:	08 2e       	mov	r0, r24
    1882:	04 c0       	rjmp	.+8      	; 0x188c <__umoddi3+0x812>
    1884:	22 0f       	add	r18, r18
    1886:	33 1f       	adc	r19, r19
    1888:	44 1f       	adc	r20, r20
    188a:	55 1f       	adc	r21, r21
    188c:	0a 94       	dec	r0
    188e:	d2 f7       	brpl	.-12     	; 0x1884 <__umoddi3+0x80a>
    1890:	a0 e2       	ldi	r26, 0x20	; 32
    1892:	aa 2e       	mov	r10, r26
    1894:	a8 1a       	sub	r10, r24
    1896:	66 96       	adiw	r28, 0x16	; 22
    1898:	af ae       	std	Y+63, r10	; 0x3f
    189a:	66 97       	sbiw	r28, 0x16	; 22
    189c:	d2 01       	movw	r26, r4
    189e:	c1 01       	movw	r24, r2
    18a0:	04 c0       	rjmp	.+8      	; 0x18aa <__umoddi3+0x830>
    18a2:	b6 95       	lsr	r27
    18a4:	a7 95       	ror	r26
    18a6:	97 95       	ror	r25
    18a8:	87 95       	ror	r24
    18aa:	aa 94       	dec	r10
    18ac:	d2 f7       	brpl	.-12     	; 0x18a2 <__umoddi3+0x828>
    18ae:	6c 01       	movw	r12, r24
    18b0:	7d 01       	movw	r14, r26
    18b2:	c2 2a       	or	r12, r18
    18b4:	d3 2a       	or	r13, r19
    18b6:	e4 2a       	or	r14, r20
    18b8:	f5 2a       	or	r15, r21
    18ba:	c9 a6       	std	Y+41, r12	; 0x29
    18bc:	da a6       	std	Y+42, r13	; 0x2a
    18be:	eb a6       	std	Y+43, r14	; 0x2b
    18c0:	fc a6       	std	Y+44, r15	; 0x2c
    18c2:	82 01       	movw	r16, r4
    18c4:	71 01       	movw	r14, r2
    18c6:	67 96       	adiw	r28, 0x17	; 23
    18c8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18ca:	67 97       	sbiw	r28, 0x17	; 23
    18cc:	04 c0       	rjmp	.+8      	; 0x18d6 <__umoddi3+0x85c>
    18ce:	ee 0c       	add	r14, r14
    18d0:	ff 1c       	adc	r15, r15
    18d2:	00 1f       	adc	r16, r16
    18d4:	11 1f       	adc	r17, r17
    18d6:	0a 94       	dec	r0
    18d8:	d2 f7       	brpl	.-12     	; 0x18ce <__umoddi3+0x854>
    18da:	ed a2       	std	Y+37, r14	; 0x25
    18dc:	fe a2       	std	Y+38, r15	; 0x26
    18de:	0f a3       	std	Y+39, r16	; 0x27
    18e0:	18 a7       	std	Y+40, r17	; 0x28
    18e2:	64 01       	movw	r12, r8
    18e4:	53 01       	movw	r10, r6
    18e6:	66 96       	adiw	r28, 0x16	; 22
    18e8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18ea:	66 97       	sbiw	r28, 0x16	; 22
    18ec:	04 c0       	rjmp	.+8      	; 0x18f6 <__umoddi3+0x87c>
    18ee:	d6 94       	lsr	r13
    18f0:	c7 94       	ror	r12
    18f2:	b7 94       	ror	r11
    18f4:	a7 94       	ror	r10
    18f6:	0a 94       	dec	r0
    18f8:	d2 f7       	brpl	.-12     	; 0x18ee <__umoddi3+0x874>
    18fa:	a4 01       	movw	r20, r8
    18fc:	93 01       	movw	r18, r6
    18fe:	67 96       	adiw	r28, 0x17	; 23
    1900:	0f ac       	ldd	r0, Y+63	; 0x3f
    1902:	67 97       	sbiw	r28, 0x17	; 23
    1904:	04 c0       	rjmp	.+8      	; 0x190e <__umoddi3+0x894>
    1906:	22 0f       	add	r18, r18
    1908:	33 1f       	adc	r19, r19
    190a:	44 1f       	adc	r20, r20
    190c:	55 1f       	adc	r21, r21
    190e:	0a 94       	dec	r0
    1910:	d2 f7       	brpl	.-12     	; 0x1906 <__umoddi3+0x88c>
    1912:	6c 96       	adiw	r28, 0x1c	; 28
    1914:	8c ad       	ldd	r24, Y+60	; 0x3c
    1916:	9d ad       	ldd	r25, Y+61	; 0x3d
    1918:	ae ad       	ldd	r26, Y+62	; 0x3e
    191a:	bf ad       	ldd	r27, Y+63	; 0x3f
    191c:	6c 97       	sbiw	r28, 0x1c	; 28
    191e:	66 96       	adiw	r28, 0x16	; 22
    1920:	0f ac       	ldd	r0, Y+63	; 0x3f
    1922:	66 97       	sbiw	r28, 0x16	; 22
    1924:	04 c0       	rjmp	.+8      	; 0x192e <__umoddi3+0x8b4>
    1926:	b6 95       	lsr	r27
    1928:	a7 95       	ror	r26
    192a:	97 95       	ror	r25
    192c:	87 95       	ror	r24
    192e:	0a 94       	dec	r0
    1930:	d2 f7       	brpl	.-12     	; 0x1926 <__umoddi3+0x8ac>
    1932:	3c 01       	movw	r6, r24
    1934:	4d 01       	movw	r8, r26
    1936:	62 2a       	or	r6, r18
    1938:	73 2a       	or	r7, r19
    193a:	84 2a       	or	r8, r20
    193c:	95 2a       	or	r9, r21
    193e:	69 a2       	std	Y+33, r6	; 0x21
    1940:	7a a2       	std	Y+34, r7	; 0x22
    1942:	8b a2       	std	Y+35, r8	; 0x23
    1944:	9c a2       	std	Y+36, r9	; 0x24
    1946:	6c 96       	adiw	r28, 0x1c	; 28
    1948:	ec ac       	ldd	r14, Y+60	; 0x3c
    194a:	fd ac       	ldd	r15, Y+61	; 0x3d
    194c:	0e ad       	ldd	r16, Y+62	; 0x3e
    194e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1950:	6c 97       	sbiw	r28, 0x1c	; 28
    1952:	67 96       	adiw	r28, 0x17	; 23
    1954:	0f ac       	ldd	r0, Y+63	; 0x3f
    1956:	67 97       	sbiw	r28, 0x17	; 23
    1958:	04 c0       	rjmp	.+8      	; 0x1962 <__umoddi3+0x8e8>
    195a:	ee 0c       	add	r14, r14
    195c:	ff 1c       	adc	r15, r15
    195e:	00 1f       	adc	r16, r16
    1960:	11 1f       	adc	r17, r17
    1962:	0a 94       	dec	r0
    1964:	d2 f7       	brpl	.-12     	; 0x195a <__umoddi3+0x8e0>
    1966:	ed 8e       	std	Y+29, r14	; 0x1d
    1968:	fe 8e       	std	Y+30, r15	; 0x1e
    196a:	0f 8f       	std	Y+31, r16	; 0x1f
    196c:	18 a3       	std	Y+32, r17	; 0x20
    196e:	49 a5       	ldd	r20, Y+41	; 0x29
    1970:	5a a5       	ldd	r21, Y+42	; 0x2a
    1972:	6b a5       	ldd	r22, Y+43	; 0x2b
    1974:	7c a5       	ldd	r23, Y+44	; 0x2c
    1976:	3b 01       	movw	r6, r22
    1978:	88 24       	eor	r8, r8
    197a:	99 24       	eor	r9, r9
    197c:	60 70       	andi	r22, 0x00	; 0
    197e:	70 70       	andi	r23, 0x00	; 0
    1980:	2d 96       	adiw	r28, 0x0d	; 13
    1982:	4c af       	std	Y+60, r20	; 0x3c
    1984:	5d af       	std	Y+61, r21	; 0x3d
    1986:	6e af       	std	Y+62, r22	; 0x3e
    1988:	7f af       	std	Y+63, r23	; 0x3f
    198a:	2d 97       	sbiw	r28, 0x0d	; 13
    198c:	c6 01       	movw	r24, r12
    198e:	b5 01       	movw	r22, r10
    1990:	a4 01       	movw	r20, r8
    1992:	93 01       	movw	r18, r6
    1994:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1998:	7b 01       	movw	r14, r22
    199a:	8c 01       	movw	r16, r24
    199c:	c6 01       	movw	r24, r12
    199e:	b5 01       	movw	r22, r10
    19a0:	a4 01       	movw	r20, r8
    19a2:	93 01       	movw	r18, r6
    19a4:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    19a8:	c9 01       	movw	r24, r18
    19aa:	da 01       	movw	r26, r20
    19ac:	1c 01       	movw	r2, r24
    19ae:	2d 01       	movw	r4, r26
    19b0:	c2 01       	movw	r24, r4
    19b2:	b1 01       	movw	r22, r2
    19b4:	2d 96       	adiw	r28, 0x0d	; 13
    19b6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19b8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ba:	4e ad       	ldd	r20, Y+62	; 0x3e
    19bc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19be:	2d 97       	sbiw	r28, 0x0d	; 13
    19c0:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    19c4:	9b 01       	movw	r18, r22
    19c6:	ac 01       	movw	r20, r24
    19c8:	87 01       	movw	r16, r14
    19ca:	ff 24       	eor	r15, r15
    19cc:	ee 24       	eor	r14, r14
    19ce:	a9 a0       	ldd	r10, Y+33	; 0x21
    19d0:	ba a0       	ldd	r11, Y+34	; 0x22
    19d2:	cb a0       	ldd	r12, Y+35	; 0x23
    19d4:	dc a0       	ldd	r13, Y+36	; 0x24
    19d6:	c6 01       	movw	r24, r12
    19d8:	aa 27       	eor	r26, r26
    19da:	bb 27       	eor	r27, r27
    19dc:	57 01       	movw	r10, r14
    19de:	68 01       	movw	r12, r16
    19e0:	a8 2a       	or	r10, r24
    19e2:	b9 2a       	or	r11, r25
    19e4:	ca 2a       	or	r12, r26
    19e6:	db 2a       	or	r13, r27
    19e8:	a2 16       	cp	r10, r18
    19ea:	b3 06       	cpc	r11, r19
    19ec:	c4 06       	cpc	r12, r20
    19ee:	d5 06       	cpc	r13, r21
    19f0:	00 f5       	brcc	.+64     	; 0x1a32 <__umoddi3+0x9b8>
    19f2:	08 94       	sec
    19f4:	21 08       	sbc	r2, r1
    19f6:	31 08       	sbc	r3, r1
    19f8:	41 08       	sbc	r4, r1
    19fa:	51 08       	sbc	r5, r1
    19fc:	e9 a4       	ldd	r14, Y+41	; 0x29
    19fe:	fa a4       	ldd	r15, Y+42	; 0x2a
    1a00:	0b a5       	ldd	r16, Y+43	; 0x2b
    1a02:	1c a5       	ldd	r17, Y+44	; 0x2c
    1a04:	ae 0c       	add	r10, r14
    1a06:	bf 1c       	adc	r11, r15
    1a08:	c0 1e       	adc	r12, r16
    1a0a:	d1 1e       	adc	r13, r17
    1a0c:	ae 14       	cp	r10, r14
    1a0e:	bf 04       	cpc	r11, r15
    1a10:	c0 06       	cpc	r12, r16
    1a12:	d1 06       	cpc	r13, r17
    1a14:	70 f0       	brcs	.+28     	; 0x1a32 <__umoddi3+0x9b8>
    1a16:	a2 16       	cp	r10, r18
    1a18:	b3 06       	cpc	r11, r19
    1a1a:	c4 06       	cpc	r12, r20
    1a1c:	d5 06       	cpc	r13, r21
    1a1e:	48 f4       	brcc	.+18     	; 0x1a32 <__umoddi3+0x9b8>
    1a20:	08 94       	sec
    1a22:	21 08       	sbc	r2, r1
    1a24:	31 08       	sbc	r3, r1
    1a26:	41 08       	sbc	r4, r1
    1a28:	51 08       	sbc	r5, r1
    1a2a:	ae 0c       	add	r10, r14
    1a2c:	bf 1c       	adc	r11, r15
    1a2e:	c0 1e       	adc	r12, r16
    1a30:	d1 1e       	adc	r13, r17
    1a32:	a2 1a       	sub	r10, r18
    1a34:	b3 0a       	sbc	r11, r19
    1a36:	c4 0a       	sbc	r12, r20
    1a38:	d5 0a       	sbc	r13, r21
    1a3a:	c6 01       	movw	r24, r12
    1a3c:	b5 01       	movw	r22, r10
    1a3e:	a4 01       	movw	r20, r8
    1a40:	93 01       	movw	r18, r6
    1a42:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1a46:	7b 01       	movw	r14, r22
    1a48:	8c 01       	movw	r16, r24
    1a4a:	c6 01       	movw	r24, r12
    1a4c:	b5 01       	movw	r22, r10
    1a4e:	a4 01       	movw	r20, r8
    1a50:	93 01       	movw	r18, r6
    1a52:	0e 94 ec 28 	call	0x51d8	; 0x51d8 <__udivmodsi4>
    1a56:	c9 01       	movw	r24, r18
    1a58:	da 01       	movw	r26, r20
    1a5a:	3c 01       	movw	r6, r24
    1a5c:	4d 01       	movw	r8, r26
    1a5e:	c4 01       	movw	r24, r8
    1a60:	b3 01       	movw	r22, r6
    1a62:	2d 96       	adiw	r28, 0x0d	; 13
    1a64:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a66:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a68:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a6a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a6c:	2d 97       	sbiw	r28, 0x0d	; 13
    1a6e:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    1a72:	9b 01       	movw	r18, r22
    1a74:	ac 01       	movw	r20, r24
    1a76:	87 01       	movw	r16, r14
    1a78:	ff 24       	eor	r15, r15
    1a7a:	ee 24       	eor	r14, r14
    1a7c:	89 a1       	ldd	r24, Y+33	; 0x21
    1a7e:	9a a1       	ldd	r25, Y+34	; 0x22
    1a80:	ab a1       	ldd	r26, Y+35	; 0x23
    1a82:	bc a1       	ldd	r27, Y+36	; 0x24
    1a84:	a0 70       	andi	r26, 0x00	; 0
    1a86:	b0 70       	andi	r27, 0x00	; 0
    1a88:	57 01       	movw	r10, r14
    1a8a:	68 01       	movw	r12, r16
    1a8c:	a8 2a       	or	r10, r24
    1a8e:	b9 2a       	or	r11, r25
    1a90:	ca 2a       	or	r12, r26
    1a92:	db 2a       	or	r13, r27
    1a94:	a2 16       	cp	r10, r18
    1a96:	b3 06       	cpc	r11, r19
    1a98:	c4 06       	cpc	r12, r20
    1a9a:	d5 06       	cpc	r13, r21
    1a9c:	00 f5       	brcc	.+64     	; 0x1ade <__umoddi3+0xa64>
    1a9e:	08 94       	sec
    1aa0:	61 08       	sbc	r6, r1
    1aa2:	71 08       	sbc	r7, r1
    1aa4:	81 08       	sbc	r8, r1
    1aa6:	91 08       	sbc	r9, r1
    1aa8:	69 a5       	ldd	r22, Y+41	; 0x29
    1aaa:	7a a5       	ldd	r23, Y+42	; 0x2a
    1aac:	8b a5       	ldd	r24, Y+43	; 0x2b
    1aae:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ab0:	a6 0e       	add	r10, r22
    1ab2:	b7 1e       	adc	r11, r23
    1ab4:	c8 1e       	adc	r12, r24
    1ab6:	d9 1e       	adc	r13, r25
    1ab8:	a6 16       	cp	r10, r22
    1aba:	b7 06       	cpc	r11, r23
    1abc:	c8 06       	cpc	r12, r24
    1abe:	d9 06       	cpc	r13, r25
    1ac0:	70 f0       	brcs	.+28     	; 0x1ade <__umoddi3+0xa64>
    1ac2:	a2 16       	cp	r10, r18
    1ac4:	b3 06       	cpc	r11, r19
    1ac6:	c4 06       	cpc	r12, r20
    1ac8:	d5 06       	cpc	r13, r21
    1aca:	48 f4       	brcc	.+18     	; 0x1ade <__umoddi3+0xa64>
    1acc:	08 94       	sec
    1ace:	61 08       	sbc	r6, r1
    1ad0:	71 08       	sbc	r7, r1
    1ad2:	81 08       	sbc	r8, r1
    1ad4:	91 08       	sbc	r9, r1
    1ad6:	a6 0e       	add	r10, r22
    1ad8:	b7 1e       	adc	r11, r23
    1ada:	c8 1e       	adc	r12, r24
    1adc:	d9 1e       	adc	r13, r25
    1ade:	d6 01       	movw	r26, r12
    1ae0:	c5 01       	movw	r24, r10
    1ae2:	82 1b       	sub	r24, r18
    1ae4:	93 0b       	sbc	r25, r19
    1ae6:	a4 0b       	sbc	r26, r20
    1ae8:	b5 0b       	sbc	r27, r21
    1aea:	89 8f       	std	Y+25, r24	; 0x19
    1aec:	9a 8f       	std	Y+26, r25	; 0x1a
    1aee:	ab 8f       	std	Y+27, r26	; 0x1b
    1af0:	bc 8f       	std	Y+28, r27	; 0x1c
    1af2:	d1 01       	movw	r26, r2
    1af4:	99 27       	eor	r25, r25
    1af6:	88 27       	eor	r24, r24
    1af8:	84 01       	movw	r16, r8
    1afa:	73 01       	movw	r14, r6
    1afc:	e8 2a       	or	r14, r24
    1afe:	f9 2a       	or	r15, r25
    1b00:	0a 2b       	or	r16, r26
    1b02:	1b 2b       	or	r17, r27
    1b04:	4f ef       	ldi	r20, 0xFF	; 255
    1b06:	a4 2e       	mov	r10, r20
    1b08:	4f ef       	ldi	r20, 0xFF	; 255
    1b0a:	b4 2e       	mov	r11, r20
    1b0c:	c1 2c       	mov	r12, r1
    1b0e:	d1 2c       	mov	r13, r1
    1b10:	ae 20       	and	r10, r14
    1b12:	bf 20       	and	r11, r15
    1b14:	c0 22       	and	r12, r16
    1b16:	d1 22       	and	r13, r17
    1b18:	78 01       	movw	r14, r16
    1b1a:	00 27       	eor	r16, r16
    1b1c:	11 27       	eor	r17, r17
    1b1e:	6d a0       	ldd	r6, Y+37	; 0x25
    1b20:	7e a0       	ldd	r7, Y+38	; 0x26
    1b22:	8f a0       	ldd	r8, Y+39	; 0x27
    1b24:	98 a4       	ldd	r9, Y+40	; 0x28
    1b26:	4f ef       	ldi	r20, 0xFF	; 255
    1b28:	5f ef       	ldi	r21, 0xFF	; 255
    1b2a:	60 e0       	ldi	r22, 0x00	; 0
    1b2c:	70 e0       	ldi	r23, 0x00	; 0
    1b2e:	64 22       	and	r6, r20
    1b30:	75 22       	and	r7, r21
    1b32:	86 22       	and	r8, r22
    1b34:	97 22       	and	r9, r23
    1b36:	8d a1       	ldd	r24, Y+37	; 0x25
    1b38:	9e a1       	ldd	r25, Y+38	; 0x26
    1b3a:	af a1       	ldd	r26, Y+39	; 0x27
    1b3c:	b8 a5       	ldd	r27, Y+40	; 0x28
    1b3e:	bd 01       	movw	r22, r26
    1b40:	88 27       	eor	r24, r24
    1b42:	99 27       	eor	r25, r25
    1b44:	65 96       	adiw	r28, 0x15	; 21
    1b46:	6c af       	std	Y+60, r22	; 0x3c
    1b48:	7d af       	std	Y+61, r23	; 0x3d
    1b4a:	8e af       	std	Y+62, r24	; 0x3e
    1b4c:	9f af       	std	Y+63, r25	; 0x3f
    1b4e:	65 97       	sbiw	r28, 0x15	; 21
    1b50:	c6 01       	movw	r24, r12
    1b52:	b5 01       	movw	r22, r10
    1b54:	a4 01       	movw	r20, r8
    1b56:	93 01       	movw	r18, r6
    1b58:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    1b5c:	61 96       	adiw	r28, 0x11	; 17
    1b5e:	6c af       	std	Y+60, r22	; 0x3c
    1b60:	7d af       	std	Y+61, r23	; 0x3d
    1b62:	8e af       	std	Y+62, r24	; 0x3e
    1b64:	9f af       	std	Y+63, r25	; 0x3f
    1b66:	61 97       	sbiw	r28, 0x11	; 17
    1b68:	c6 01       	movw	r24, r12
    1b6a:	b5 01       	movw	r22, r10
    1b6c:	65 96       	adiw	r28, 0x15	; 21
    1b6e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b70:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b72:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b74:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b76:	65 97       	sbiw	r28, 0x15	; 21
    1b78:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    1b7c:	1b 01       	movw	r2, r22
    1b7e:	2c 01       	movw	r4, r24
    1b80:	c8 01       	movw	r24, r16
    1b82:	b7 01       	movw	r22, r14
    1b84:	a4 01       	movw	r20, r8
    1b86:	93 01       	movw	r18, r6
    1b88:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    1b8c:	5b 01       	movw	r10, r22
    1b8e:	6c 01       	movw	r12, r24
    1b90:	c8 01       	movw	r24, r16
    1b92:	b7 01       	movw	r22, r14
    1b94:	65 96       	adiw	r28, 0x15	; 21
    1b96:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b98:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b9a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b9c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b9e:	65 97       	sbiw	r28, 0x15	; 21
    1ba0:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    1ba4:	7b 01       	movw	r14, r22
    1ba6:	8c 01       	movw	r16, r24
    1ba8:	a6 01       	movw	r20, r12
    1baa:	95 01       	movw	r18, r10
    1bac:	22 0d       	add	r18, r2
    1bae:	33 1d       	adc	r19, r3
    1bb0:	44 1d       	adc	r20, r4
    1bb2:	55 1d       	adc	r21, r5
    1bb4:	61 96       	adiw	r28, 0x11	; 17
    1bb6:	6c ac       	ldd	r6, Y+60	; 0x3c
    1bb8:	7d ac       	ldd	r7, Y+61	; 0x3d
    1bba:	8e ac       	ldd	r8, Y+62	; 0x3e
    1bbc:	9f ac       	ldd	r9, Y+63	; 0x3f
    1bbe:	61 97       	sbiw	r28, 0x11	; 17
    1bc0:	c4 01       	movw	r24, r8
    1bc2:	aa 27       	eor	r26, r26
    1bc4:	bb 27       	eor	r27, r27
    1bc6:	28 0f       	add	r18, r24
    1bc8:	39 1f       	adc	r19, r25
    1bca:	4a 1f       	adc	r20, r26
    1bcc:	5b 1f       	adc	r21, r27
    1bce:	2a 15       	cp	r18, r10
    1bd0:	3b 05       	cpc	r19, r11
    1bd2:	4c 05       	cpc	r20, r12
    1bd4:	5d 05       	cpc	r21, r13
    1bd6:	48 f4       	brcc	.+18     	; 0x1bea <__umoddi3+0xb70>
    1bd8:	81 2c       	mov	r8, r1
    1bda:	91 2c       	mov	r9, r1
    1bdc:	e1 e0       	ldi	r30, 0x01	; 1
    1bde:	ae 2e       	mov	r10, r30
    1be0:	b1 2c       	mov	r11, r1
    1be2:	e8 0c       	add	r14, r8
    1be4:	f9 1c       	adc	r15, r9
    1be6:	0a 1d       	adc	r16, r10
    1be8:	1b 1d       	adc	r17, r11
    1bea:	ca 01       	movw	r24, r20
    1bec:	aa 27       	eor	r26, r26
    1bee:	bb 27       	eor	r27, r27
    1bf0:	57 01       	movw	r10, r14
    1bf2:	68 01       	movw	r12, r16
    1bf4:	a8 0e       	add	r10, r24
    1bf6:	b9 1e       	adc	r11, r25
    1bf8:	ca 1e       	adc	r12, r26
    1bfa:	db 1e       	adc	r13, r27
    1bfc:	a9 01       	movw	r20, r18
    1bfe:	33 27       	eor	r19, r19
    1c00:	22 27       	eor	r18, r18
    1c02:	61 96       	adiw	r28, 0x11	; 17
    1c04:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c06:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c08:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c0a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c0c:	61 97       	sbiw	r28, 0x11	; 17
    1c0e:	a0 70       	andi	r26, 0x00	; 0
    1c10:	b0 70       	andi	r27, 0x00	; 0
    1c12:	28 0f       	add	r18, r24
    1c14:	39 1f       	adc	r19, r25
    1c16:	4a 1f       	adc	r20, r26
    1c18:	5b 1f       	adc	r21, r27
    1c1a:	e9 8c       	ldd	r14, Y+25	; 0x19
    1c1c:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1c1e:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1c20:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1c22:	ea 14       	cp	r14, r10
    1c24:	fb 04       	cpc	r15, r11
    1c26:	0c 05       	cpc	r16, r12
    1c28:	1d 05       	cpc	r17, r13
    1c2a:	70 f0       	brcs	.+28     	; 0x1c48 <__umoddi3+0xbce>
    1c2c:	ae 14       	cp	r10, r14
    1c2e:	bf 04       	cpc	r11, r15
    1c30:	c0 06       	cpc	r12, r16
    1c32:	d1 06       	cpc	r13, r17
    1c34:	69 f5       	brne	.+90     	; 0x1c90 <__umoddi3+0xc16>
    1c36:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c38:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c3a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c3c:	98 a1       	ldd	r25, Y+32	; 0x20
    1c3e:	62 17       	cp	r22, r18
    1c40:	73 07       	cpc	r23, r19
    1c42:	84 07       	cpc	r24, r20
    1c44:	95 07       	cpc	r25, r21
    1c46:	20 f5       	brcc	.+72     	; 0x1c90 <__umoddi3+0xc16>
    1c48:	da 01       	movw	r26, r20
    1c4a:	c9 01       	movw	r24, r18
    1c4c:	6d a0       	ldd	r6, Y+37	; 0x25
    1c4e:	7e a0       	ldd	r7, Y+38	; 0x26
    1c50:	8f a0       	ldd	r8, Y+39	; 0x27
    1c52:	98 a4       	ldd	r9, Y+40	; 0x28
    1c54:	86 19       	sub	r24, r6
    1c56:	97 09       	sbc	r25, r7
    1c58:	a8 09       	sbc	r26, r8
    1c5a:	b9 09       	sbc	r27, r9
    1c5c:	e9 a4       	ldd	r14, Y+41	; 0x29
    1c5e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1c60:	0b a5       	ldd	r16, Y+43	; 0x2b
    1c62:	1c a5       	ldd	r17, Y+44	; 0x2c
    1c64:	ae 18       	sub	r10, r14
    1c66:	bf 08       	sbc	r11, r15
    1c68:	c0 0a       	sbc	r12, r16
    1c6a:	d1 0a       	sbc	r13, r17
    1c6c:	ee 24       	eor	r14, r14
    1c6e:	ff 24       	eor	r15, r15
    1c70:	87 01       	movw	r16, r14
    1c72:	28 17       	cp	r18, r24
    1c74:	39 07       	cpc	r19, r25
    1c76:	4a 07       	cpc	r20, r26
    1c78:	5b 07       	cpc	r21, r27
    1c7a:	28 f4       	brcc	.+10     	; 0x1c86 <__umoddi3+0xc0c>
    1c7c:	21 e0       	ldi	r18, 0x01	; 1
    1c7e:	e2 2e       	mov	r14, r18
    1c80:	f1 2c       	mov	r15, r1
    1c82:	01 2d       	mov	r16, r1
    1c84:	11 2d       	mov	r17, r1
    1c86:	ae 18       	sub	r10, r14
    1c88:	bf 08       	sbc	r11, r15
    1c8a:	c0 0a       	sbc	r12, r16
    1c8c:	d1 0a       	sbc	r13, r17
    1c8e:	02 c0       	rjmp	.+4      	; 0x1c94 <__umoddi3+0xc1a>
    1c90:	da 01       	movw	r26, r20
    1c92:	c9 01       	movw	r24, r18
    1c94:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1c96:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1c98:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1c9a:	98 a0       	ldd	r9, Y+32	; 0x20
    1c9c:	68 1a       	sub	r6, r24
    1c9e:	79 0a       	sbc	r7, r25
    1ca0:	8a 0a       	sbc	r8, r26
    1ca2:	9b 0a       	sbc	r9, r27
    1ca4:	49 8d       	ldd	r20, Y+25	; 0x19
    1ca6:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1ca8:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1caa:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1cac:	4a 19       	sub	r20, r10
    1cae:	5b 09       	sbc	r21, r11
    1cb0:	6c 09       	sbc	r22, r12
    1cb2:	7d 09       	sbc	r23, r13
    1cb4:	5a 01       	movw	r10, r20
    1cb6:	6b 01       	movw	r12, r22
    1cb8:	22 24       	eor	r2, r2
    1cba:	33 24       	eor	r3, r3
    1cbc:	21 01       	movw	r4, r2
    1cbe:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1cc0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1cc2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1cc4:	98 a1       	ldd	r25, Y+32	; 0x20
    1cc6:	66 15       	cp	r22, r6
    1cc8:	77 05       	cpc	r23, r7
    1cca:	88 05       	cpc	r24, r8
    1ccc:	99 05       	cpc	r25, r9
    1cce:	28 f4       	brcc	.+10     	; 0x1cda <__umoddi3+0xc60>
    1cd0:	81 e0       	ldi	r24, 0x01	; 1
    1cd2:	28 2e       	mov	r2, r24
    1cd4:	31 2c       	mov	r3, r1
    1cd6:	41 2c       	mov	r4, r1
    1cd8:	51 2c       	mov	r5, r1
    1cda:	86 01       	movw	r16, r12
    1cdc:	75 01       	movw	r14, r10
    1cde:	e2 18       	sub	r14, r2
    1ce0:	f3 08       	sbc	r15, r3
    1ce2:	04 09       	sbc	r16, r4
    1ce4:	15 09       	sbc	r17, r5
    1ce6:	a8 01       	movw	r20, r16
    1ce8:	97 01       	movw	r18, r14
    1cea:	66 96       	adiw	r28, 0x16	; 22
    1cec:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cee:	66 97       	sbiw	r28, 0x16	; 22
    1cf0:	04 c0       	rjmp	.+8      	; 0x1cfa <__umoddi3+0xc80>
    1cf2:	22 0f       	add	r18, r18
    1cf4:	33 1f       	adc	r19, r19
    1cf6:	44 1f       	adc	r20, r20
    1cf8:	55 1f       	adc	r21, r21
    1cfa:	0a 94       	dec	r0
    1cfc:	d2 f7       	brpl	.-12     	; 0x1cf2 <__umoddi3+0xc78>
    1cfe:	d4 01       	movw	r26, r8
    1d00:	c3 01       	movw	r24, r6
    1d02:	67 96       	adiw	r28, 0x17	; 23
    1d04:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d06:	67 97       	sbiw	r28, 0x17	; 23
    1d08:	04 c0       	rjmp	.+8      	; 0x1d12 <__umoddi3+0xc98>
    1d0a:	b6 95       	lsr	r27
    1d0c:	a7 95       	ror	r26
    1d0e:	97 95       	ror	r25
    1d10:	87 95       	ror	r24
    1d12:	0a 94       	dec	r0
    1d14:	d2 f7       	brpl	.-12     	; 0x1d0a <__umoddi3+0xc90>
    1d16:	28 2b       	or	r18, r24
    1d18:	39 2b       	or	r19, r25
    1d1a:	4a 2b       	or	r20, r26
    1d1c:	5b 2b       	or	r21, r27
    1d1e:	29 8b       	std	Y+17, r18	; 0x11
    1d20:	3a 8b       	std	Y+18, r19	; 0x12
    1d22:	4b 8b       	std	Y+19, r20	; 0x13
    1d24:	5c 8b       	std	Y+20, r21	; 0x14
    1d26:	67 96       	adiw	r28, 0x17	; 23
    1d28:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d2a:	67 97       	sbiw	r28, 0x17	; 23
    1d2c:	04 c0       	rjmp	.+8      	; 0x1d36 <__umoddi3+0xcbc>
    1d2e:	16 95       	lsr	r17
    1d30:	07 95       	ror	r16
    1d32:	f7 94       	ror	r15
    1d34:	e7 94       	ror	r14
    1d36:	0a 94       	dec	r0
    1d38:	d2 f7       	brpl	.-12     	; 0x1d2e <__umoddi3+0xcb4>
    1d3a:	ed 8a       	std	Y+21, r14	; 0x15
    1d3c:	fe 8a       	std	Y+22, r15	; 0x16
    1d3e:	0f 8b       	std	Y+23, r16	; 0x17
    1d40:	18 8f       	std	Y+24, r17	; 0x18
    1d42:	3a 89       	ldd	r19, Y+18	; 0x12
    1d44:	4b 89       	ldd	r20, Y+19	; 0x13
    1d46:	5c 89       	ldd	r21, Y+20	; 0x14
    1d48:	6e 2d       	mov	r22, r14
    1d4a:	7e 89       	ldd	r23, Y+22	; 0x16
    1d4c:	8f 89       	ldd	r24, Y+23	; 0x17
    1d4e:	98 8d       	ldd	r25, Y+24	; 0x18
    1d50:	c5 5a       	subi	r28, 0xA5	; 165
    1d52:	df 4f       	sbci	r29, 0xFF	; 255
    1d54:	e2 e1       	ldi	r30, 0x12	; 18
    1d56:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <__epilogue_restores__>

00001d5a <_fpadd_parts>:
    1d5a:	a0 e0       	ldi	r26, 0x00	; 0
    1d5c:	b0 e0       	ldi	r27, 0x00	; 0
    1d5e:	e3 eb       	ldi	r30, 0xB3	; 179
    1d60:	fe e0       	ldi	r31, 0x0E	; 14
    1d62:	0c 94 0e 29 	jmp	0x521c	; 0x521c <__prologue_saves__>
    1d66:	dc 01       	movw	r26, r24
    1d68:	2b 01       	movw	r4, r22
    1d6a:	fa 01       	movw	r30, r20
    1d6c:	9c 91       	ld	r25, X
    1d6e:	92 30       	cpi	r25, 0x02	; 2
    1d70:	08 f4       	brcc	.+2      	; 0x1d74 <_fpadd_parts+0x1a>
    1d72:	39 c1       	rjmp	.+626    	; 0x1fe6 <_fpadd_parts+0x28c>
    1d74:	eb 01       	movw	r28, r22
    1d76:	88 81       	ld	r24, Y
    1d78:	82 30       	cpi	r24, 0x02	; 2
    1d7a:	08 f4       	brcc	.+2      	; 0x1d7e <_fpadd_parts+0x24>
    1d7c:	33 c1       	rjmp	.+614    	; 0x1fe4 <_fpadd_parts+0x28a>
    1d7e:	94 30       	cpi	r25, 0x04	; 4
    1d80:	69 f4       	brne	.+26     	; 0x1d9c <_fpadd_parts+0x42>
    1d82:	84 30       	cpi	r24, 0x04	; 4
    1d84:	09 f0       	breq	.+2      	; 0x1d88 <_fpadd_parts+0x2e>
    1d86:	2f c1       	rjmp	.+606    	; 0x1fe6 <_fpadd_parts+0x28c>
    1d88:	11 96       	adiw	r26, 0x01	; 1
    1d8a:	9c 91       	ld	r25, X
    1d8c:	11 97       	sbiw	r26, 0x01	; 1
    1d8e:	89 81       	ldd	r24, Y+1	; 0x01
    1d90:	98 17       	cp	r25, r24
    1d92:	09 f4       	brne	.+2      	; 0x1d96 <_fpadd_parts+0x3c>
    1d94:	28 c1       	rjmp	.+592    	; 0x1fe6 <_fpadd_parts+0x28c>
    1d96:	a5 e8       	ldi	r26, 0x85	; 133
    1d98:	b1 e0       	ldi	r27, 0x01	; 1
    1d9a:	25 c1       	rjmp	.+586    	; 0x1fe6 <_fpadd_parts+0x28c>
    1d9c:	84 30       	cpi	r24, 0x04	; 4
    1d9e:	09 f4       	brne	.+2      	; 0x1da2 <_fpadd_parts+0x48>
    1da0:	21 c1       	rjmp	.+578    	; 0x1fe4 <_fpadd_parts+0x28a>
    1da2:	82 30       	cpi	r24, 0x02	; 2
    1da4:	a9 f4       	brne	.+42     	; 0x1dd0 <_fpadd_parts+0x76>
    1da6:	92 30       	cpi	r25, 0x02	; 2
    1da8:	09 f0       	breq	.+2      	; 0x1dac <_fpadd_parts+0x52>
    1daa:	1d c1       	rjmp	.+570    	; 0x1fe6 <_fpadd_parts+0x28c>
    1dac:	9a 01       	movw	r18, r20
    1dae:	ad 01       	movw	r20, r26
    1db0:	88 e0       	ldi	r24, 0x08	; 8
    1db2:	ea 01       	movw	r28, r20
    1db4:	09 90       	ld	r0, Y+
    1db6:	ae 01       	movw	r20, r28
    1db8:	e9 01       	movw	r28, r18
    1dba:	09 92       	st	Y+, r0
    1dbc:	9e 01       	movw	r18, r28
    1dbe:	81 50       	subi	r24, 0x01	; 1
    1dc0:	c1 f7       	brne	.-16     	; 0x1db2 <_fpadd_parts+0x58>
    1dc2:	e2 01       	movw	r28, r4
    1dc4:	89 81       	ldd	r24, Y+1	; 0x01
    1dc6:	11 96       	adiw	r26, 0x01	; 1
    1dc8:	9c 91       	ld	r25, X
    1dca:	89 23       	and	r24, r25
    1dcc:	81 83       	std	Z+1, r24	; 0x01
    1dce:	08 c1       	rjmp	.+528    	; 0x1fe0 <_fpadd_parts+0x286>
    1dd0:	92 30       	cpi	r25, 0x02	; 2
    1dd2:	09 f4       	brne	.+2      	; 0x1dd6 <_fpadd_parts+0x7c>
    1dd4:	07 c1       	rjmp	.+526    	; 0x1fe4 <_fpadd_parts+0x28a>
    1dd6:	12 96       	adiw	r26, 0x02	; 2
    1dd8:	2d 90       	ld	r2, X+
    1dda:	3c 90       	ld	r3, X
    1ddc:	13 97       	sbiw	r26, 0x03	; 3
    1dde:	eb 01       	movw	r28, r22
    1de0:	8a 81       	ldd	r24, Y+2	; 0x02
    1de2:	9b 81       	ldd	r25, Y+3	; 0x03
    1de4:	14 96       	adiw	r26, 0x04	; 4
    1de6:	ad 90       	ld	r10, X+
    1de8:	bd 90       	ld	r11, X+
    1dea:	cd 90       	ld	r12, X+
    1dec:	dc 90       	ld	r13, X
    1dee:	17 97       	sbiw	r26, 0x07	; 7
    1df0:	ec 80       	ldd	r14, Y+4	; 0x04
    1df2:	fd 80       	ldd	r15, Y+5	; 0x05
    1df4:	0e 81       	ldd	r16, Y+6	; 0x06
    1df6:	1f 81       	ldd	r17, Y+7	; 0x07
    1df8:	91 01       	movw	r18, r2
    1dfa:	28 1b       	sub	r18, r24
    1dfc:	39 0b       	sbc	r19, r25
    1dfe:	b9 01       	movw	r22, r18
    1e00:	37 ff       	sbrs	r19, 7
    1e02:	04 c0       	rjmp	.+8      	; 0x1e0c <_fpadd_parts+0xb2>
    1e04:	66 27       	eor	r22, r22
    1e06:	77 27       	eor	r23, r23
    1e08:	62 1b       	sub	r22, r18
    1e0a:	73 0b       	sbc	r23, r19
    1e0c:	60 32       	cpi	r22, 0x20	; 32
    1e0e:	71 05       	cpc	r23, r1
    1e10:	0c f0       	brlt	.+2      	; 0x1e14 <_fpadd_parts+0xba>
    1e12:	61 c0       	rjmp	.+194    	; 0x1ed6 <_fpadd_parts+0x17c>
    1e14:	12 16       	cp	r1, r18
    1e16:	13 06       	cpc	r1, r19
    1e18:	6c f5       	brge	.+90     	; 0x1e74 <_fpadd_parts+0x11a>
    1e1a:	37 01       	movw	r6, r14
    1e1c:	48 01       	movw	r8, r16
    1e1e:	06 2e       	mov	r0, r22
    1e20:	04 c0       	rjmp	.+8      	; 0x1e2a <_fpadd_parts+0xd0>
    1e22:	96 94       	lsr	r9
    1e24:	87 94       	ror	r8
    1e26:	77 94       	ror	r7
    1e28:	67 94       	ror	r6
    1e2a:	0a 94       	dec	r0
    1e2c:	d2 f7       	brpl	.-12     	; 0x1e22 <_fpadd_parts+0xc8>
    1e2e:	21 e0       	ldi	r18, 0x01	; 1
    1e30:	30 e0       	ldi	r19, 0x00	; 0
    1e32:	40 e0       	ldi	r20, 0x00	; 0
    1e34:	50 e0       	ldi	r21, 0x00	; 0
    1e36:	04 c0       	rjmp	.+8      	; 0x1e40 <_fpadd_parts+0xe6>
    1e38:	22 0f       	add	r18, r18
    1e3a:	33 1f       	adc	r19, r19
    1e3c:	44 1f       	adc	r20, r20
    1e3e:	55 1f       	adc	r21, r21
    1e40:	6a 95       	dec	r22
    1e42:	d2 f7       	brpl	.-12     	; 0x1e38 <_fpadd_parts+0xde>
    1e44:	21 50       	subi	r18, 0x01	; 1
    1e46:	30 40       	sbci	r19, 0x00	; 0
    1e48:	40 40       	sbci	r20, 0x00	; 0
    1e4a:	50 40       	sbci	r21, 0x00	; 0
    1e4c:	2e 21       	and	r18, r14
    1e4e:	3f 21       	and	r19, r15
    1e50:	40 23       	and	r20, r16
    1e52:	51 23       	and	r21, r17
    1e54:	21 15       	cp	r18, r1
    1e56:	31 05       	cpc	r19, r1
    1e58:	41 05       	cpc	r20, r1
    1e5a:	51 05       	cpc	r21, r1
    1e5c:	21 f0       	breq	.+8      	; 0x1e66 <_fpadd_parts+0x10c>
    1e5e:	21 e0       	ldi	r18, 0x01	; 1
    1e60:	30 e0       	ldi	r19, 0x00	; 0
    1e62:	40 e0       	ldi	r20, 0x00	; 0
    1e64:	50 e0       	ldi	r21, 0x00	; 0
    1e66:	79 01       	movw	r14, r18
    1e68:	8a 01       	movw	r16, r20
    1e6a:	e6 28       	or	r14, r6
    1e6c:	f7 28       	or	r15, r7
    1e6e:	08 29       	or	r16, r8
    1e70:	19 29       	or	r17, r9
    1e72:	3c c0       	rjmp	.+120    	; 0x1eec <_fpadd_parts+0x192>
    1e74:	23 2b       	or	r18, r19
    1e76:	d1 f1       	breq	.+116    	; 0x1eec <_fpadd_parts+0x192>
    1e78:	26 0e       	add	r2, r22
    1e7a:	37 1e       	adc	r3, r23
    1e7c:	35 01       	movw	r6, r10
    1e7e:	46 01       	movw	r8, r12
    1e80:	06 2e       	mov	r0, r22
    1e82:	04 c0       	rjmp	.+8      	; 0x1e8c <_fpadd_parts+0x132>
    1e84:	96 94       	lsr	r9
    1e86:	87 94       	ror	r8
    1e88:	77 94       	ror	r7
    1e8a:	67 94       	ror	r6
    1e8c:	0a 94       	dec	r0
    1e8e:	d2 f7       	brpl	.-12     	; 0x1e84 <_fpadd_parts+0x12a>
    1e90:	21 e0       	ldi	r18, 0x01	; 1
    1e92:	30 e0       	ldi	r19, 0x00	; 0
    1e94:	40 e0       	ldi	r20, 0x00	; 0
    1e96:	50 e0       	ldi	r21, 0x00	; 0
    1e98:	04 c0       	rjmp	.+8      	; 0x1ea2 <_fpadd_parts+0x148>
    1e9a:	22 0f       	add	r18, r18
    1e9c:	33 1f       	adc	r19, r19
    1e9e:	44 1f       	adc	r20, r20
    1ea0:	55 1f       	adc	r21, r21
    1ea2:	6a 95       	dec	r22
    1ea4:	d2 f7       	brpl	.-12     	; 0x1e9a <_fpadd_parts+0x140>
    1ea6:	21 50       	subi	r18, 0x01	; 1
    1ea8:	30 40       	sbci	r19, 0x00	; 0
    1eaa:	40 40       	sbci	r20, 0x00	; 0
    1eac:	50 40       	sbci	r21, 0x00	; 0
    1eae:	2a 21       	and	r18, r10
    1eb0:	3b 21       	and	r19, r11
    1eb2:	4c 21       	and	r20, r12
    1eb4:	5d 21       	and	r21, r13
    1eb6:	21 15       	cp	r18, r1
    1eb8:	31 05       	cpc	r19, r1
    1eba:	41 05       	cpc	r20, r1
    1ebc:	51 05       	cpc	r21, r1
    1ebe:	21 f0       	breq	.+8      	; 0x1ec8 <_fpadd_parts+0x16e>
    1ec0:	21 e0       	ldi	r18, 0x01	; 1
    1ec2:	30 e0       	ldi	r19, 0x00	; 0
    1ec4:	40 e0       	ldi	r20, 0x00	; 0
    1ec6:	50 e0       	ldi	r21, 0x00	; 0
    1ec8:	59 01       	movw	r10, r18
    1eca:	6a 01       	movw	r12, r20
    1ecc:	a6 28       	or	r10, r6
    1ece:	b7 28       	or	r11, r7
    1ed0:	c8 28       	or	r12, r8
    1ed2:	d9 28       	or	r13, r9
    1ed4:	0b c0       	rjmp	.+22     	; 0x1eec <_fpadd_parts+0x192>
    1ed6:	82 15       	cp	r24, r2
    1ed8:	93 05       	cpc	r25, r3
    1eda:	2c f0       	brlt	.+10     	; 0x1ee6 <_fpadd_parts+0x18c>
    1edc:	1c 01       	movw	r2, r24
    1ede:	aa 24       	eor	r10, r10
    1ee0:	bb 24       	eor	r11, r11
    1ee2:	65 01       	movw	r12, r10
    1ee4:	03 c0       	rjmp	.+6      	; 0x1eec <_fpadd_parts+0x192>
    1ee6:	ee 24       	eor	r14, r14
    1ee8:	ff 24       	eor	r15, r15
    1eea:	87 01       	movw	r16, r14
    1eec:	11 96       	adiw	r26, 0x01	; 1
    1eee:	9c 91       	ld	r25, X
    1ef0:	d2 01       	movw	r26, r4
    1ef2:	11 96       	adiw	r26, 0x01	; 1
    1ef4:	8c 91       	ld	r24, X
    1ef6:	98 17       	cp	r25, r24
    1ef8:	09 f4       	brne	.+2      	; 0x1efc <_fpadd_parts+0x1a2>
    1efa:	45 c0       	rjmp	.+138    	; 0x1f86 <_fpadd_parts+0x22c>
    1efc:	99 23       	and	r25, r25
    1efe:	39 f0       	breq	.+14     	; 0x1f0e <_fpadd_parts+0x1b4>
    1f00:	a8 01       	movw	r20, r16
    1f02:	97 01       	movw	r18, r14
    1f04:	2a 19       	sub	r18, r10
    1f06:	3b 09       	sbc	r19, r11
    1f08:	4c 09       	sbc	r20, r12
    1f0a:	5d 09       	sbc	r21, r13
    1f0c:	06 c0       	rjmp	.+12     	; 0x1f1a <_fpadd_parts+0x1c0>
    1f0e:	a6 01       	movw	r20, r12
    1f10:	95 01       	movw	r18, r10
    1f12:	2e 19       	sub	r18, r14
    1f14:	3f 09       	sbc	r19, r15
    1f16:	40 0b       	sbc	r20, r16
    1f18:	51 0b       	sbc	r21, r17
    1f1a:	57 fd       	sbrc	r21, 7
    1f1c:	08 c0       	rjmp	.+16     	; 0x1f2e <_fpadd_parts+0x1d4>
    1f1e:	11 82       	std	Z+1, r1	; 0x01
    1f20:	33 82       	std	Z+3, r3	; 0x03
    1f22:	22 82       	std	Z+2, r2	; 0x02
    1f24:	24 83       	std	Z+4, r18	; 0x04
    1f26:	35 83       	std	Z+5, r19	; 0x05
    1f28:	46 83       	std	Z+6, r20	; 0x06
    1f2a:	57 83       	std	Z+7, r21	; 0x07
    1f2c:	1d c0       	rjmp	.+58     	; 0x1f68 <_fpadd_parts+0x20e>
    1f2e:	81 e0       	ldi	r24, 0x01	; 1
    1f30:	81 83       	std	Z+1, r24	; 0x01
    1f32:	33 82       	std	Z+3, r3	; 0x03
    1f34:	22 82       	std	Z+2, r2	; 0x02
    1f36:	88 27       	eor	r24, r24
    1f38:	99 27       	eor	r25, r25
    1f3a:	dc 01       	movw	r26, r24
    1f3c:	82 1b       	sub	r24, r18
    1f3e:	93 0b       	sbc	r25, r19
    1f40:	a4 0b       	sbc	r26, r20
    1f42:	b5 0b       	sbc	r27, r21
    1f44:	84 83       	std	Z+4, r24	; 0x04
    1f46:	95 83       	std	Z+5, r25	; 0x05
    1f48:	a6 83       	std	Z+6, r26	; 0x06
    1f4a:	b7 83       	std	Z+7, r27	; 0x07
    1f4c:	0d c0       	rjmp	.+26     	; 0x1f68 <_fpadd_parts+0x20e>
    1f4e:	22 0f       	add	r18, r18
    1f50:	33 1f       	adc	r19, r19
    1f52:	44 1f       	adc	r20, r20
    1f54:	55 1f       	adc	r21, r21
    1f56:	24 83       	std	Z+4, r18	; 0x04
    1f58:	35 83       	std	Z+5, r19	; 0x05
    1f5a:	46 83       	std	Z+6, r20	; 0x06
    1f5c:	57 83       	std	Z+7, r21	; 0x07
    1f5e:	82 81       	ldd	r24, Z+2	; 0x02
    1f60:	93 81       	ldd	r25, Z+3	; 0x03
    1f62:	01 97       	sbiw	r24, 0x01	; 1
    1f64:	93 83       	std	Z+3, r25	; 0x03
    1f66:	82 83       	std	Z+2, r24	; 0x02
    1f68:	24 81       	ldd	r18, Z+4	; 0x04
    1f6a:	35 81       	ldd	r19, Z+5	; 0x05
    1f6c:	46 81       	ldd	r20, Z+6	; 0x06
    1f6e:	57 81       	ldd	r21, Z+7	; 0x07
    1f70:	da 01       	movw	r26, r20
    1f72:	c9 01       	movw	r24, r18
    1f74:	01 97       	sbiw	r24, 0x01	; 1
    1f76:	a1 09       	sbc	r26, r1
    1f78:	b1 09       	sbc	r27, r1
    1f7a:	8f 5f       	subi	r24, 0xFF	; 255
    1f7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f7e:	af 4f       	sbci	r26, 0xFF	; 255
    1f80:	bf 43       	sbci	r27, 0x3F	; 63
    1f82:	28 f3       	brcs	.-54     	; 0x1f4e <_fpadd_parts+0x1f4>
    1f84:	0b c0       	rjmp	.+22     	; 0x1f9c <_fpadd_parts+0x242>
    1f86:	91 83       	std	Z+1, r25	; 0x01
    1f88:	33 82       	std	Z+3, r3	; 0x03
    1f8a:	22 82       	std	Z+2, r2	; 0x02
    1f8c:	ea 0c       	add	r14, r10
    1f8e:	fb 1c       	adc	r15, r11
    1f90:	0c 1d       	adc	r16, r12
    1f92:	1d 1d       	adc	r17, r13
    1f94:	e4 82       	std	Z+4, r14	; 0x04
    1f96:	f5 82       	std	Z+5, r15	; 0x05
    1f98:	06 83       	std	Z+6, r16	; 0x06
    1f9a:	17 83       	std	Z+7, r17	; 0x07
    1f9c:	83 e0       	ldi	r24, 0x03	; 3
    1f9e:	80 83       	st	Z, r24
    1fa0:	24 81       	ldd	r18, Z+4	; 0x04
    1fa2:	35 81       	ldd	r19, Z+5	; 0x05
    1fa4:	46 81       	ldd	r20, Z+6	; 0x06
    1fa6:	57 81       	ldd	r21, Z+7	; 0x07
    1fa8:	57 ff       	sbrs	r21, 7
    1faa:	1a c0       	rjmp	.+52     	; 0x1fe0 <_fpadd_parts+0x286>
    1fac:	c9 01       	movw	r24, r18
    1fae:	aa 27       	eor	r26, r26
    1fb0:	97 fd       	sbrc	r25, 7
    1fb2:	a0 95       	com	r26
    1fb4:	ba 2f       	mov	r27, r26
    1fb6:	81 70       	andi	r24, 0x01	; 1
    1fb8:	90 70       	andi	r25, 0x00	; 0
    1fba:	a0 70       	andi	r26, 0x00	; 0
    1fbc:	b0 70       	andi	r27, 0x00	; 0
    1fbe:	56 95       	lsr	r21
    1fc0:	47 95       	ror	r20
    1fc2:	37 95       	ror	r19
    1fc4:	27 95       	ror	r18
    1fc6:	82 2b       	or	r24, r18
    1fc8:	93 2b       	or	r25, r19
    1fca:	a4 2b       	or	r26, r20
    1fcc:	b5 2b       	or	r27, r21
    1fce:	84 83       	std	Z+4, r24	; 0x04
    1fd0:	95 83       	std	Z+5, r25	; 0x05
    1fd2:	a6 83       	std	Z+6, r26	; 0x06
    1fd4:	b7 83       	std	Z+7, r27	; 0x07
    1fd6:	82 81       	ldd	r24, Z+2	; 0x02
    1fd8:	93 81       	ldd	r25, Z+3	; 0x03
    1fda:	01 96       	adiw	r24, 0x01	; 1
    1fdc:	93 83       	std	Z+3, r25	; 0x03
    1fde:	82 83       	std	Z+2, r24	; 0x02
    1fe0:	df 01       	movw	r26, r30
    1fe2:	01 c0       	rjmp	.+2      	; 0x1fe6 <_fpadd_parts+0x28c>
    1fe4:	d2 01       	movw	r26, r4
    1fe6:	cd 01       	movw	r24, r26
    1fe8:	cd b7       	in	r28, 0x3d	; 61
    1fea:	de b7       	in	r29, 0x3e	; 62
    1fec:	e2 e1       	ldi	r30, 0x12	; 18
    1fee:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <__epilogue_restores__>

00001ff2 <__subsf3>:
    1ff2:	a0 e2       	ldi	r26, 0x20	; 32
    1ff4:	b0 e0       	ldi	r27, 0x00	; 0
    1ff6:	ef ef       	ldi	r30, 0xFF	; 255
    1ff8:	ff e0       	ldi	r31, 0x0F	; 15
    1ffa:	0c 94 1a 29 	jmp	0x5234	; 0x5234 <__prologue_saves__+0x18>
    1ffe:	69 83       	std	Y+1, r22	; 0x01
    2000:	7a 83       	std	Y+2, r23	; 0x02
    2002:	8b 83       	std	Y+3, r24	; 0x03
    2004:	9c 83       	std	Y+4, r25	; 0x04
    2006:	2d 83       	std	Y+5, r18	; 0x05
    2008:	3e 83       	std	Y+6, r19	; 0x06
    200a:	4f 83       	std	Y+7, r20	; 0x07
    200c:	58 87       	std	Y+8, r21	; 0x08
    200e:	e9 e0       	ldi	r30, 0x09	; 9
    2010:	ee 2e       	mov	r14, r30
    2012:	f1 2c       	mov	r15, r1
    2014:	ec 0e       	add	r14, r28
    2016:	fd 1e       	adc	r15, r29
    2018:	ce 01       	movw	r24, r28
    201a:	01 96       	adiw	r24, 0x01	; 1
    201c:	b7 01       	movw	r22, r14
    201e:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    2022:	8e 01       	movw	r16, r28
    2024:	0f 5e       	subi	r16, 0xEF	; 239
    2026:	1f 4f       	sbci	r17, 0xFF	; 255
    2028:	ce 01       	movw	r24, r28
    202a:	05 96       	adiw	r24, 0x05	; 5
    202c:	b8 01       	movw	r22, r16
    202e:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    2032:	8a 89       	ldd	r24, Y+18	; 0x12
    2034:	91 e0       	ldi	r25, 0x01	; 1
    2036:	89 27       	eor	r24, r25
    2038:	8a 8b       	std	Y+18, r24	; 0x12
    203a:	c7 01       	movw	r24, r14
    203c:	b8 01       	movw	r22, r16
    203e:	ae 01       	movw	r20, r28
    2040:	47 5e       	subi	r20, 0xE7	; 231
    2042:	5f 4f       	sbci	r21, 0xFF	; 255
    2044:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <_fpadd_parts>
    2048:	0e 94 da 13 	call	0x27b4	; 0x27b4 <__pack_f>
    204c:	a0 96       	adiw	r28, 0x20	; 32
    204e:	e6 e0       	ldi	r30, 0x06	; 6
    2050:	0c 94 36 29 	jmp	0x526c	; 0x526c <__epilogue_restores__+0x18>

00002054 <__addsf3>:
    2054:	a0 e2       	ldi	r26, 0x20	; 32
    2056:	b0 e0       	ldi	r27, 0x00	; 0
    2058:	e0 e3       	ldi	r30, 0x30	; 48
    205a:	f0 e1       	ldi	r31, 0x10	; 16
    205c:	0c 94 1a 29 	jmp	0x5234	; 0x5234 <__prologue_saves__+0x18>
    2060:	69 83       	std	Y+1, r22	; 0x01
    2062:	7a 83       	std	Y+2, r23	; 0x02
    2064:	8b 83       	std	Y+3, r24	; 0x03
    2066:	9c 83       	std	Y+4, r25	; 0x04
    2068:	2d 83       	std	Y+5, r18	; 0x05
    206a:	3e 83       	std	Y+6, r19	; 0x06
    206c:	4f 83       	std	Y+7, r20	; 0x07
    206e:	58 87       	std	Y+8, r21	; 0x08
    2070:	f9 e0       	ldi	r31, 0x09	; 9
    2072:	ef 2e       	mov	r14, r31
    2074:	f1 2c       	mov	r15, r1
    2076:	ec 0e       	add	r14, r28
    2078:	fd 1e       	adc	r15, r29
    207a:	ce 01       	movw	r24, r28
    207c:	01 96       	adiw	r24, 0x01	; 1
    207e:	b7 01       	movw	r22, r14
    2080:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    2084:	8e 01       	movw	r16, r28
    2086:	0f 5e       	subi	r16, 0xEF	; 239
    2088:	1f 4f       	sbci	r17, 0xFF	; 255
    208a:	ce 01       	movw	r24, r28
    208c:	05 96       	adiw	r24, 0x05	; 5
    208e:	b8 01       	movw	r22, r16
    2090:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    2094:	c7 01       	movw	r24, r14
    2096:	b8 01       	movw	r22, r16
    2098:	ae 01       	movw	r20, r28
    209a:	47 5e       	subi	r20, 0xE7	; 231
    209c:	5f 4f       	sbci	r21, 0xFF	; 255
    209e:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <_fpadd_parts>
    20a2:	0e 94 da 13 	call	0x27b4	; 0x27b4 <__pack_f>
    20a6:	a0 96       	adiw	r28, 0x20	; 32
    20a8:	e6 e0       	ldi	r30, 0x06	; 6
    20aa:	0c 94 36 29 	jmp	0x526c	; 0x526c <__epilogue_restores__+0x18>

000020ae <__mulsf3>:
    20ae:	a0 e2       	ldi	r26, 0x20	; 32
    20b0:	b0 e0       	ldi	r27, 0x00	; 0
    20b2:	ed e5       	ldi	r30, 0x5D	; 93
    20b4:	f0 e1       	ldi	r31, 0x10	; 16
    20b6:	0c 94 0e 29 	jmp	0x521c	; 0x521c <__prologue_saves__>
    20ba:	69 83       	std	Y+1, r22	; 0x01
    20bc:	7a 83       	std	Y+2, r23	; 0x02
    20be:	8b 83       	std	Y+3, r24	; 0x03
    20c0:	9c 83       	std	Y+4, r25	; 0x04
    20c2:	2d 83       	std	Y+5, r18	; 0x05
    20c4:	3e 83       	std	Y+6, r19	; 0x06
    20c6:	4f 83       	std	Y+7, r20	; 0x07
    20c8:	58 87       	std	Y+8, r21	; 0x08
    20ca:	ce 01       	movw	r24, r28
    20cc:	01 96       	adiw	r24, 0x01	; 1
    20ce:	be 01       	movw	r22, r28
    20d0:	67 5f       	subi	r22, 0xF7	; 247
    20d2:	7f 4f       	sbci	r23, 0xFF	; 255
    20d4:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    20d8:	ce 01       	movw	r24, r28
    20da:	05 96       	adiw	r24, 0x05	; 5
    20dc:	be 01       	movw	r22, r28
    20de:	6f 5e       	subi	r22, 0xEF	; 239
    20e0:	7f 4f       	sbci	r23, 0xFF	; 255
    20e2:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    20e6:	99 85       	ldd	r25, Y+9	; 0x09
    20e8:	92 30       	cpi	r25, 0x02	; 2
    20ea:	88 f0       	brcs	.+34     	; 0x210e <__mulsf3+0x60>
    20ec:	89 89       	ldd	r24, Y+17	; 0x11
    20ee:	82 30       	cpi	r24, 0x02	; 2
    20f0:	c8 f0       	brcs	.+50     	; 0x2124 <__mulsf3+0x76>
    20f2:	94 30       	cpi	r25, 0x04	; 4
    20f4:	19 f4       	brne	.+6      	; 0x20fc <__mulsf3+0x4e>
    20f6:	82 30       	cpi	r24, 0x02	; 2
    20f8:	51 f4       	brne	.+20     	; 0x210e <__mulsf3+0x60>
    20fa:	04 c0       	rjmp	.+8      	; 0x2104 <__mulsf3+0x56>
    20fc:	84 30       	cpi	r24, 0x04	; 4
    20fe:	29 f4       	brne	.+10     	; 0x210a <__mulsf3+0x5c>
    2100:	92 30       	cpi	r25, 0x02	; 2
    2102:	81 f4       	brne	.+32     	; 0x2124 <__mulsf3+0x76>
    2104:	85 e8       	ldi	r24, 0x85	; 133
    2106:	91 e0       	ldi	r25, 0x01	; 1
    2108:	c6 c0       	rjmp	.+396    	; 0x2296 <__mulsf3+0x1e8>
    210a:	92 30       	cpi	r25, 0x02	; 2
    210c:	49 f4       	brne	.+18     	; 0x2120 <__mulsf3+0x72>
    210e:	20 e0       	ldi	r18, 0x00	; 0
    2110:	9a 85       	ldd	r25, Y+10	; 0x0a
    2112:	8a 89       	ldd	r24, Y+18	; 0x12
    2114:	98 13       	cpse	r25, r24
    2116:	21 e0       	ldi	r18, 0x01	; 1
    2118:	2a 87       	std	Y+10, r18	; 0x0a
    211a:	ce 01       	movw	r24, r28
    211c:	09 96       	adiw	r24, 0x09	; 9
    211e:	bb c0       	rjmp	.+374    	; 0x2296 <__mulsf3+0x1e8>
    2120:	82 30       	cpi	r24, 0x02	; 2
    2122:	49 f4       	brne	.+18     	; 0x2136 <__mulsf3+0x88>
    2124:	20 e0       	ldi	r18, 0x00	; 0
    2126:	9a 85       	ldd	r25, Y+10	; 0x0a
    2128:	8a 89       	ldd	r24, Y+18	; 0x12
    212a:	98 13       	cpse	r25, r24
    212c:	21 e0       	ldi	r18, 0x01	; 1
    212e:	2a 8b       	std	Y+18, r18	; 0x12
    2130:	ce 01       	movw	r24, r28
    2132:	41 96       	adiw	r24, 0x11	; 17
    2134:	b0 c0       	rjmp	.+352    	; 0x2296 <__mulsf3+0x1e8>
    2136:	2d 84       	ldd	r2, Y+13	; 0x0d
    2138:	3e 84       	ldd	r3, Y+14	; 0x0e
    213a:	4f 84       	ldd	r4, Y+15	; 0x0f
    213c:	58 88       	ldd	r5, Y+16	; 0x10
    213e:	6d 88       	ldd	r6, Y+21	; 0x15
    2140:	7e 88       	ldd	r7, Y+22	; 0x16
    2142:	8f 88       	ldd	r8, Y+23	; 0x17
    2144:	98 8c       	ldd	r9, Y+24	; 0x18
    2146:	ee 24       	eor	r14, r14
    2148:	ff 24       	eor	r15, r15
    214a:	87 01       	movw	r16, r14
    214c:	aa 24       	eor	r10, r10
    214e:	bb 24       	eor	r11, r11
    2150:	65 01       	movw	r12, r10
    2152:	40 e0       	ldi	r20, 0x00	; 0
    2154:	50 e0       	ldi	r21, 0x00	; 0
    2156:	60 e0       	ldi	r22, 0x00	; 0
    2158:	70 e0       	ldi	r23, 0x00	; 0
    215a:	e0 e0       	ldi	r30, 0x00	; 0
    215c:	f0 e0       	ldi	r31, 0x00	; 0
    215e:	c1 01       	movw	r24, r2
    2160:	81 70       	andi	r24, 0x01	; 1
    2162:	90 70       	andi	r25, 0x00	; 0
    2164:	89 2b       	or	r24, r25
    2166:	e9 f0       	breq	.+58     	; 0x21a2 <__mulsf3+0xf4>
    2168:	e6 0c       	add	r14, r6
    216a:	f7 1c       	adc	r15, r7
    216c:	08 1d       	adc	r16, r8
    216e:	19 1d       	adc	r17, r9
    2170:	9a 01       	movw	r18, r20
    2172:	ab 01       	movw	r20, r22
    2174:	2a 0d       	add	r18, r10
    2176:	3b 1d       	adc	r19, r11
    2178:	4c 1d       	adc	r20, r12
    217a:	5d 1d       	adc	r21, r13
    217c:	80 e0       	ldi	r24, 0x00	; 0
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	a0 e0       	ldi	r26, 0x00	; 0
    2182:	b0 e0       	ldi	r27, 0x00	; 0
    2184:	e6 14       	cp	r14, r6
    2186:	f7 04       	cpc	r15, r7
    2188:	08 05       	cpc	r16, r8
    218a:	19 05       	cpc	r17, r9
    218c:	20 f4       	brcc	.+8      	; 0x2196 <__mulsf3+0xe8>
    218e:	81 e0       	ldi	r24, 0x01	; 1
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	a0 e0       	ldi	r26, 0x00	; 0
    2194:	b0 e0       	ldi	r27, 0x00	; 0
    2196:	ba 01       	movw	r22, r20
    2198:	a9 01       	movw	r20, r18
    219a:	48 0f       	add	r20, r24
    219c:	59 1f       	adc	r21, r25
    219e:	6a 1f       	adc	r22, r26
    21a0:	7b 1f       	adc	r23, r27
    21a2:	aa 0c       	add	r10, r10
    21a4:	bb 1c       	adc	r11, r11
    21a6:	cc 1c       	adc	r12, r12
    21a8:	dd 1c       	adc	r13, r13
    21aa:	97 fe       	sbrs	r9, 7
    21ac:	08 c0       	rjmp	.+16     	; 0x21be <__mulsf3+0x110>
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	a0 e0       	ldi	r26, 0x00	; 0
    21b4:	b0 e0       	ldi	r27, 0x00	; 0
    21b6:	a8 2a       	or	r10, r24
    21b8:	b9 2a       	or	r11, r25
    21ba:	ca 2a       	or	r12, r26
    21bc:	db 2a       	or	r13, r27
    21be:	31 96       	adiw	r30, 0x01	; 1
    21c0:	e0 32       	cpi	r30, 0x20	; 32
    21c2:	f1 05       	cpc	r31, r1
    21c4:	49 f0       	breq	.+18     	; 0x21d8 <__mulsf3+0x12a>
    21c6:	66 0c       	add	r6, r6
    21c8:	77 1c       	adc	r7, r7
    21ca:	88 1c       	adc	r8, r8
    21cc:	99 1c       	adc	r9, r9
    21ce:	56 94       	lsr	r5
    21d0:	47 94       	ror	r4
    21d2:	37 94       	ror	r3
    21d4:	27 94       	ror	r2
    21d6:	c3 cf       	rjmp	.-122    	; 0x215e <__mulsf3+0xb0>
    21d8:	fa 85       	ldd	r31, Y+10	; 0x0a
    21da:	ea 89       	ldd	r30, Y+18	; 0x12
    21dc:	2b 89       	ldd	r18, Y+19	; 0x13
    21de:	3c 89       	ldd	r19, Y+20	; 0x14
    21e0:	8b 85       	ldd	r24, Y+11	; 0x0b
    21e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    21e4:	28 0f       	add	r18, r24
    21e6:	39 1f       	adc	r19, r25
    21e8:	2e 5f       	subi	r18, 0xFE	; 254
    21ea:	3f 4f       	sbci	r19, 0xFF	; 255
    21ec:	17 c0       	rjmp	.+46     	; 0x221c <__mulsf3+0x16e>
    21ee:	ca 01       	movw	r24, r20
    21f0:	81 70       	andi	r24, 0x01	; 1
    21f2:	90 70       	andi	r25, 0x00	; 0
    21f4:	89 2b       	or	r24, r25
    21f6:	61 f0       	breq	.+24     	; 0x2210 <__mulsf3+0x162>
    21f8:	16 95       	lsr	r17
    21fa:	07 95       	ror	r16
    21fc:	f7 94       	ror	r15
    21fe:	e7 94       	ror	r14
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	a0 e0       	ldi	r26, 0x00	; 0
    2206:	b0 e8       	ldi	r27, 0x80	; 128
    2208:	e8 2a       	or	r14, r24
    220a:	f9 2a       	or	r15, r25
    220c:	0a 2b       	or	r16, r26
    220e:	1b 2b       	or	r17, r27
    2210:	76 95       	lsr	r23
    2212:	67 95       	ror	r22
    2214:	57 95       	ror	r21
    2216:	47 95       	ror	r20
    2218:	2f 5f       	subi	r18, 0xFF	; 255
    221a:	3f 4f       	sbci	r19, 0xFF	; 255
    221c:	77 fd       	sbrc	r23, 7
    221e:	e7 cf       	rjmp	.-50     	; 0x21ee <__mulsf3+0x140>
    2220:	0c c0       	rjmp	.+24     	; 0x223a <__mulsf3+0x18c>
    2222:	44 0f       	add	r20, r20
    2224:	55 1f       	adc	r21, r21
    2226:	66 1f       	adc	r22, r22
    2228:	77 1f       	adc	r23, r23
    222a:	17 fd       	sbrc	r17, 7
    222c:	41 60       	ori	r20, 0x01	; 1
    222e:	ee 0c       	add	r14, r14
    2230:	ff 1c       	adc	r15, r15
    2232:	00 1f       	adc	r16, r16
    2234:	11 1f       	adc	r17, r17
    2236:	21 50       	subi	r18, 0x01	; 1
    2238:	30 40       	sbci	r19, 0x00	; 0
    223a:	40 30       	cpi	r20, 0x00	; 0
    223c:	90 e0       	ldi	r25, 0x00	; 0
    223e:	59 07       	cpc	r21, r25
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	69 07       	cpc	r22, r25
    2244:	90 e4       	ldi	r25, 0x40	; 64
    2246:	79 07       	cpc	r23, r25
    2248:	60 f3       	brcs	.-40     	; 0x2222 <__mulsf3+0x174>
    224a:	2b 8f       	std	Y+27, r18	; 0x1b
    224c:	3c 8f       	std	Y+28, r19	; 0x1c
    224e:	db 01       	movw	r26, r22
    2250:	ca 01       	movw	r24, r20
    2252:	8f 77       	andi	r24, 0x7F	; 127
    2254:	90 70       	andi	r25, 0x00	; 0
    2256:	a0 70       	andi	r26, 0x00	; 0
    2258:	b0 70       	andi	r27, 0x00	; 0
    225a:	80 34       	cpi	r24, 0x40	; 64
    225c:	91 05       	cpc	r25, r1
    225e:	a1 05       	cpc	r26, r1
    2260:	b1 05       	cpc	r27, r1
    2262:	61 f4       	brne	.+24     	; 0x227c <__mulsf3+0x1ce>
    2264:	47 fd       	sbrc	r20, 7
    2266:	0a c0       	rjmp	.+20     	; 0x227c <__mulsf3+0x1ce>
    2268:	e1 14       	cp	r14, r1
    226a:	f1 04       	cpc	r15, r1
    226c:	01 05       	cpc	r16, r1
    226e:	11 05       	cpc	r17, r1
    2270:	29 f0       	breq	.+10     	; 0x227c <__mulsf3+0x1ce>
    2272:	40 5c       	subi	r20, 0xC0	; 192
    2274:	5f 4f       	sbci	r21, 0xFF	; 255
    2276:	6f 4f       	sbci	r22, 0xFF	; 255
    2278:	7f 4f       	sbci	r23, 0xFF	; 255
    227a:	40 78       	andi	r20, 0x80	; 128
    227c:	1a 8e       	std	Y+26, r1	; 0x1a
    227e:	fe 17       	cp	r31, r30
    2280:	11 f0       	breq	.+4      	; 0x2286 <__mulsf3+0x1d8>
    2282:	81 e0       	ldi	r24, 0x01	; 1
    2284:	8a 8f       	std	Y+26, r24	; 0x1a
    2286:	4d 8f       	std	Y+29, r20	; 0x1d
    2288:	5e 8f       	std	Y+30, r21	; 0x1e
    228a:	6f 8f       	std	Y+31, r22	; 0x1f
    228c:	78 a3       	std	Y+32, r23	; 0x20
    228e:	83 e0       	ldi	r24, 0x03	; 3
    2290:	89 8f       	std	Y+25, r24	; 0x19
    2292:	ce 01       	movw	r24, r28
    2294:	49 96       	adiw	r24, 0x19	; 25
    2296:	0e 94 da 13 	call	0x27b4	; 0x27b4 <__pack_f>
    229a:	a0 96       	adiw	r28, 0x20	; 32
    229c:	e2 e1       	ldi	r30, 0x12	; 18
    229e:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <__epilogue_restores__>

000022a2 <__gtsf2>:
    22a2:	a8 e1       	ldi	r26, 0x18	; 24
    22a4:	b0 e0       	ldi	r27, 0x00	; 0
    22a6:	e7 e5       	ldi	r30, 0x57	; 87
    22a8:	f1 e1       	ldi	r31, 0x11	; 17
    22aa:	0c 94 1a 29 	jmp	0x5234	; 0x5234 <__prologue_saves__+0x18>
    22ae:	69 83       	std	Y+1, r22	; 0x01
    22b0:	7a 83       	std	Y+2, r23	; 0x02
    22b2:	8b 83       	std	Y+3, r24	; 0x03
    22b4:	9c 83       	std	Y+4, r25	; 0x04
    22b6:	2d 83       	std	Y+5, r18	; 0x05
    22b8:	3e 83       	std	Y+6, r19	; 0x06
    22ba:	4f 83       	std	Y+7, r20	; 0x07
    22bc:	58 87       	std	Y+8, r21	; 0x08
    22be:	89 e0       	ldi	r24, 0x09	; 9
    22c0:	e8 2e       	mov	r14, r24
    22c2:	f1 2c       	mov	r15, r1
    22c4:	ec 0e       	add	r14, r28
    22c6:	fd 1e       	adc	r15, r29
    22c8:	ce 01       	movw	r24, r28
    22ca:	01 96       	adiw	r24, 0x01	; 1
    22cc:	b7 01       	movw	r22, r14
    22ce:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    22d2:	8e 01       	movw	r16, r28
    22d4:	0f 5e       	subi	r16, 0xEF	; 239
    22d6:	1f 4f       	sbci	r17, 0xFF	; 255
    22d8:	ce 01       	movw	r24, r28
    22da:	05 96       	adiw	r24, 0x05	; 5
    22dc:	b8 01       	movw	r22, r16
    22de:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    22e2:	89 85       	ldd	r24, Y+9	; 0x09
    22e4:	82 30       	cpi	r24, 0x02	; 2
    22e6:	40 f0       	brcs	.+16     	; 0x22f8 <__gtsf2+0x56>
    22e8:	89 89       	ldd	r24, Y+17	; 0x11
    22ea:	82 30       	cpi	r24, 0x02	; 2
    22ec:	28 f0       	brcs	.+10     	; 0x22f8 <__gtsf2+0x56>
    22ee:	c7 01       	movw	r24, r14
    22f0:	b8 01       	movw	r22, r16
    22f2:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <__fpcmp_parts_f>
    22f6:	01 c0       	rjmp	.+2      	; 0x22fa <__gtsf2+0x58>
    22f8:	8f ef       	ldi	r24, 0xFF	; 255
    22fa:	68 96       	adiw	r28, 0x18	; 24
    22fc:	e6 e0       	ldi	r30, 0x06	; 6
    22fe:	0c 94 36 29 	jmp	0x526c	; 0x526c <__epilogue_restores__+0x18>

00002302 <__gesf2>:
    2302:	a8 e1       	ldi	r26, 0x18	; 24
    2304:	b0 e0       	ldi	r27, 0x00	; 0
    2306:	e7 e8       	ldi	r30, 0x87	; 135
    2308:	f1 e1       	ldi	r31, 0x11	; 17
    230a:	0c 94 1a 29 	jmp	0x5234	; 0x5234 <__prologue_saves__+0x18>
    230e:	69 83       	std	Y+1, r22	; 0x01
    2310:	7a 83       	std	Y+2, r23	; 0x02
    2312:	8b 83       	std	Y+3, r24	; 0x03
    2314:	9c 83       	std	Y+4, r25	; 0x04
    2316:	2d 83       	std	Y+5, r18	; 0x05
    2318:	3e 83       	std	Y+6, r19	; 0x06
    231a:	4f 83       	std	Y+7, r20	; 0x07
    231c:	58 87       	std	Y+8, r21	; 0x08
    231e:	89 e0       	ldi	r24, 0x09	; 9
    2320:	e8 2e       	mov	r14, r24
    2322:	f1 2c       	mov	r15, r1
    2324:	ec 0e       	add	r14, r28
    2326:	fd 1e       	adc	r15, r29
    2328:	ce 01       	movw	r24, r28
    232a:	01 96       	adiw	r24, 0x01	; 1
    232c:	b7 01       	movw	r22, r14
    232e:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    2332:	8e 01       	movw	r16, r28
    2334:	0f 5e       	subi	r16, 0xEF	; 239
    2336:	1f 4f       	sbci	r17, 0xFF	; 255
    2338:	ce 01       	movw	r24, r28
    233a:	05 96       	adiw	r24, 0x05	; 5
    233c:	b8 01       	movw	r22, r16
    233e:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    2342:	89 85       	ldd	r24, Y+9	; 0x09
    2344:	82 30       	cpi	r24, 0x02	; 2
    2346:	40 f0       	brcs	.+16     	; 0x2358 <__gesf2+0x56>
    2348:	89 89       	ldd	r24, Y+17	; 0x11
    234a:	82 30       	cpi	r24, 0x02	; 2
    234c:	28 f0       	brcs	.+10     	; 0x2358 <__gesf2+0x56>
    234e:	c7 01       	movw	r24, r14
    2350:	b8 01       	movw	r22, r16
    2352:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <__fpcmp_parts_f>
    2356:	01 c0       	rjmp	.+2      	; 0x235a <__gesf2+0x58>
    2358:	8f ef       	ldi	r24, 0xFF	; 255
    235a:	68 96       	adiw	r28, 0x18	; 24
    235c:	e6 e0       	ldi	r30, 0x06	; 6
    235e:	0c 94 36 29 	jmp	0x526c	; 0x526c <__epilogue_restores__+0x18>

00002362 <__ltsf2>:
    2362:	a8 e1       	ldi	r26, 0x18	; 24
    2364:	b0 e0       	ldi	r27, 0x00	; 0
    2366:	e7 eb       	ldi	r30, 0xB7	; 183
    2368:	f1 e1       	ldi	r31, 0x11	; 17
    236a:	0c 94 1a 29 	jmp	0x5234	; 0x5234 <__prologue_saves__+0x18>
    236e:	69 83       	std	Y+1, r22	; 0x01
    2370:	7a 83       	std	Y+2, r23	; 0x02
    2372:	8b 83       	std	Y+3, r24	; 0x03
    2374:	9c 83       	std	Y+4, r25	; 0x04
    2376:	2d 83       	std	Y+5, r18	; 0x05
    2378:	3e 83       	std	Y+6, r19	; 0x06
    237a:	4f 83       	std	Y+7, r20	; 0x07
    237c:	58 87       	std	Y+8, r21	; 0x08
    237e:	89 e0       	ldi	r24, 0x09	; 9
    2380:	e8 2e       	mov	r14, r24
    2382:	f1 2c       	mov	r15, r1
    2384:	ec 0e       	add	r14, r28
    2386:	fd 1e       	adc	r15, r29
    2388:	ce 01       	movw	r24, r28
    238a:	01 96       	adiw	r24, 0x01	; 1
    238c:	b7 01       	movw	r22, r14
    238e:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    2392:	8e 01       	movw	r16, r28
    2394:	0f 5e       	subi	r16, 0xEF	; 239
    2396:	1f 4f       	sbci	r17, 0xFF	; 255
    2398:	ce 01       	movw	r24, r28
    239a:	05 96       	adiw	r24, 0x05	; 5
    239c:	b8 01       	movw	r22, r16
    239e:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    23a2:	89 85       	ldd	r24, Y+9	; 0x09
    23a4:	82 30       	cpi	r24, 0x02	; 2
    23a6:	40 f0       	brcs	.+16     	; 0x23b8 <__ltsf2+0x56>
    23a8:	89 89       	ldd	r24, Y+17	; 0x11
    23aa:	82 30       	cpi	r24, 0x02	; 2
    23ac:	28 f0       	brcs	.+10     	; 0x23b8 <__ltsf2+0x56>
    23ae:	c7 01       	movw	r24, r14
    23b0:	b8 01       	movw	r22, r16
    23b2:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <__fpcmp_parts_f>
    23b6:	01 c0       	rjmp	.+2      	; 0x23ba <__ltsf2+0x58>
    23b8:	81 e0       	ldi	r24, 0x01	; 1
    23ba:	68 96       	adiw	r28, 0x18	; 24
    23bc:	e6 e0       	ldi	r30, 0x06	; 6
    23be:	0c 94 36 29 	jmp	0x526c	; 0x526c <__epilogue_restores__+0x18>

000023c2 <__floatsisf>:
    23c2:	a8 e0       	ldi	r26, 0x08	; 8
    23c4:	b0 e0       	ldi	r27, 0x00	; 0
    23c6:	e7 ee       	ldi	r30, 0xE7	; 231
    23c8:	f1 e1       	ldi	r31, 0x11	; 17
    23ca:	0c 94 17 29 	jmp	0x522e	; 0x522e <__prologue_saves__+0x12>
    23ce:	9b 01       	movw	r18, r22
    23d0:	ac 01       	movw	r20, r24
    23d2:	83 e0       	ldi	r24, 0x03	; 3
    23d4:	89 83       	std	Y+1, r24	; 0x01
    23d6:	da 01       	movw	r26, r20
    23d8:	c9 01       	movw	r24, r18
    23da:	88 27       	eor	r24, r24
    23dc:	b7 fd       	sbrc	r27, 7
    23de:	83 95       	inc	r24
    23e0:	99 27       	eor	r25, r25
    23e2:	aa 27       	eor	r26, r26
    23e4:	bb 27       	eor	r27, r27
    23e6:	b8 2e       	mov	r11, r24
    23e8:	21 15       	cp	r18, r1
    23ea:	31 05       	cpc	r19, r1
    23ec:	41 05       	cpc	r20, r1
    23ee:	51 05       	cpc	r21, r1
    23f0:	19 f4       	brne	.+6      	; 0x23f8 <__floatsisf+0x36>
    23f2:	82 e0       	ldi	r24, 0x02	; 2
    23f4:	89 83       	std	Y+1, r24	; 0x01
    23f6:	3a c0       	rjmp	.+116    	; 0x246c <__floatsisf+0xaa>
    23f8:	88 23       	and	r24, r24
    23fa:	a9 f0       	breq	.+42     	; 0x2426 <__floatsisf+0x64>
    23fc:	20 30       	cpi	r18, 0x00	; 0
    23fe:	80 e0       	ldi	r24, 0x00	; 0
    2400:	38 07       	cpc	r19, r24
    2402:	80 e0       	ldi	r24, 0x00	; 0
    2404:	48 07       	cpc	r20, r24
    2406:	80 e8       	ldi	r24, 0x80	; 128
    2408:	58 07       	cpc	r21, r24
    240a:	29 f4       	brne	.+10     	; 0x2416 <__floatsisf+0x54>
    240c:	60 e0       	ldi	r22, 0x00	; 0
    240e:	70 e0       	ldi	r23, 0x00	; 0
    2410:	80 e0       	ldi	r24, 0x00	; 0
    2412:	9f ec       	ldi	r25, 0xCF	; 207
    2414:	30 c0       	rjmp	.+96     	; 0x2476 <__floatsisf+0xb4>
    2416:	ee 24       	eor	r14, r14
    2418:	ff 24       	eor	r15, r15
    241a:	87 01       	movw	r16, r14
    241c:	e2 1a       	sub	r14, r18
    241e:	f3 0a       	sbc	r15, r19
    2420:	04 0b       	sbc	r16, r20
    2422:	15 0b       	sbc	r17, r21
    2424:	02 c0       	rjmp	.+4      	; 0x242a <__floatsisf+0x68>
    2426:	79 01       	movw	r14, r18
    2428:	8a 01       	movw	r16, r20
    242a:	8e e1       	ldi	r24, 0x1E	; 30
    242c:	c8 2e       	mov	r12, r24
    242e:	d1 2c       	mov	r13, r1
    2430:	dc 82       	std	Y+4, r13	; 0x04
    2432:	cb 82       	std	Y+3, r12	; 0x03
    2434:	ed 82       	std	Y+5, r14	; 0x05
    2436:	fe 82       	std	Y+6, r15	; 0x06
    2438:	0f 83       	std	Y+7, r16	; 0x07
    243a:	18 87       	std	Y+8, r17	; 0x08
    243c:	c8 01       	movw	r24, r16
    243e:	b7 01       	movw	r22, r14
    2440:	0e 94 8b 13 	call	0x2716	; 0x2716 <__clzsi2>
    2444:	01 97       	sbiw	r24, 0x01	; 1
    2446:	18 16       	cp	r1, r24
    2448:	19 06       	cpc	r1, r25
    244a:	84 f4       	brge	.+32     	; 0x246c <__floatsisf+0xaa>
    244c:	08 2e       	mov	r0, r24
    244e:	04 c0       	rjmp	.+8      	; 0x2458 <__floatsisf+0x96>
    2450:	ee 0c       	add	r14, r14
    2452:	ff 1c       	adc	r15, r15
    2454:	00 1f       	adc	r16, r16
    2456:	11 1f       	adc	r17, r17
    2458:	0a 94       	dec	r0
    245a:	d2 f7       	brpl	.-12     	; 0x2450 <__floatsisf+0x8e>
    245c:	ed 82       	std	Y+5, r14	; 0x05
    245e:	fe 82       	std	Y+6, r15	; 0x06
    2460:	0f 83       	std	Y+7, r16	; 0x07
    2462:	18 87       	std	Y+8, r17	; 0x08
    2464:	c8 1a       	sub	r12, r24
    2466:	d9 0a       	sbc	r13, r25
    2468:	dc 82       	std	Y+4, r13	; 0x04
    246a:	cb 82       	std	Y+3, r12	; 0x03
    246c:	ba 82       	std	Y+2, r11	; 0x02
    246e:	ce 01       	movw	r24, r28
    2470:	01 96       	adiw	r24, 0x01	; 1
    2472:	0e 94 da 13 	call	0x27b4	; 0x27b4 <__pack_f>
    2476:	28 96       	adiw	r28, 0x08	; 8
    2478:	e9 e0       	ldi	r30, 0x09	; 9
    247a:	0c 94 33 29 	jmp	0x5266	; 0x5266 <__epilogue_restores__+0x12>

0000247e <__fixsfsi>:
    247e:	ac e0       	ldi	r26, 0x0C	; 12
    2480:	b0 e0       	ldi	r27, 0x00	; 0
    2482:	e5 e4       	ldi	r30, 0x45	; 69
    2484:	f2 e1       	ldi	r31, 0x12	; 18
    2486:	0c 94 1e 29 	jmp	0x523c	; 0x523c <__prologue_saves__+0x20>
    248a:	69 83       	std	Y+1, r22	; 0x01
    248c:	7a 83       	std	Y+2, r23	; 0x02
    248e:	8b 83       	std	Y+3, r24	; 0x03
    2490:	9c 83       	std	Y+4, r25	; 0x04
    2492:	ce 01       	movw	r24, r28
    2494:	01 96       	adiw	r24, 0x01	; 1
    2496:	be 01       	movw	r22, r28
    2498:	6b 5f       	subi	r22, 0xFB	; 251
    249a:	7f 4f       	sbci	r23, 0xFF	; 255
    249c:	0e 94 af 14 	call	0x295e	; 0x295e <__unpack_f>
    24a0:	8d 81       	ldd	r24, Y+5	; 0x05
    24a2:	82 30       	cpi	r24, 0x02	; 2
    24a4:	61 f1       	breq	.+88     	; 0x24fe <__fixsfsi+0x80>
    24a6:	82 30       	cpi	r24, 0x02	; 2
    24a8:	50 f1       	brcs	.+84     	; 0x24fe <__fixsfsi+0x80>
    24aa:	84 30       	cpi	r24, 0x04	; 4
    24ac:	21 f4       	brne	.+8      	; 0x24b6 <__fixsfsi+0x38>
    24ae:	8e 81       	ldd	r24, Y+6	; 0x06
    24b0:	88 23       	and	r24, r24
    24b2:	51 f1       	breq	.+84     	; 0x2508 <__fixsfsi+0x8a>
    24b4:	2e c0       	rjmp	.+92     	; 0x2512 <__fixsfsi+0x94>
    24b6:	2f 81       	ldd	r18, Y+7	; 0x07
    24b8:	38 85       	ldd	r19, Y+8	; 0x08
    24ba:	37 fd       	sbrc	r19, 7
    24bc:	20 c0       	rjmp	.+64     	; 0x24fe <__fixsfsi+0x80>
    24be:	6e 81       	ldd	r22, Y+6	; 0x06
    24c0:	2f 31       	cpi	r18, 0x1F	; 31
    24c2:	31 05       	cpc	r19, r1
    24c4:	1c f0       	brlt	.+6      	; 0x24cc <__fixsfsi+0x4e>
    24c6:	66 23       	and	r22, r22
    24c8:	f9 f0       	breq	.+62     	; 0x2508 <__fixsfsi+0x8a>
    24ca:	23 c0       	rjmp	.+70     	; 0x2512 <__fixsfsi+0x94>
    24cc:	8e e1       	ldi	r24, 0x1E	; 30
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	82 1b       	sub	r24, r18
    24d2:	93 0b       	sbc	r25, r19
    24d4:	29 85       	ldd	r18, Y+9	; 0x09
    24d6:	3a 85       	ldd	r19, Y+10	; 0x0a
    24d8:	4b 85       	ldd	r20, Y+11	; 0x0b
    24da:	5c 85       	ldd	r21, Y+12	; 0x0c
    24dc:	04 c0       	rjmp	.+8      	; 0x24e6 <__fixsfsi+0x68>
    24de:	56 95       	lsr	r21
    24e0:	47 95       	ror	r20
    24e2:	37 95       	ror	r19
    24e4:	27 95       	ror	r18
    24e6:	8a 95       	dec	r24
    24e8:	d2 f7       	brpl	.-12     	; 0x24de <__fixsfsi+0x60>
    24ea:	66 23       	and	r22, r22
    24ec:	b1 f0       	breq	.+44     	; 0x251a <__fixsfsi+0x9c>
    24ee:	50 95       	com	r21
    24f0:	40 95       	com	r20
    24f2:	30 95       	com	r19
    24f4:	21 95       	neg	r18
    24f6:	3f 4f       	sbci	r19, 0xFF	; 255
    24f8:	4f 4f       	sbci	r20, 0xFF	; 255
    24fa:	5f 4f       	sbci	r21, 0xFF	; 255
    24fc:	0e c0       	rjmp	.+28     	; 0x251a <__fixsfsi+0x9c>
    24fe:	20 e0       	ldi	r18, 0x00	; 0
    2500:	30 e0       	ldi	r19, 0x00	; 0
    2502:	40 e0       	ldi	r20, 0x00	; 0
    2504:	50 e0       	ldi	r21, 0x00	; 0
    2506:	09 c0       	rjmp	.+18     	; 0x251a <__fixsfsi+0x9c>
    2508:	2f ef       	ldi	r18, 0xFF	; 255
    250a:	3f ef       	ldi	r19, 0xFF	; 255
    250c:	4f ef       	ldi	r20, 0xFF	; 255
    250e:	5f e7       	ldi	r21, 0x7F	; 127
    2510:	04 c0       	rjmp	.+8      	; 0x251a <__fixsfsi+0x9c>
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	30 e0       	ldi	r19, 0x00	; 0
    2516:	40 e0       	ldi	r20, 0x00	; 0
    2518:	50 e8       	ldi	r21, 0x80	; 128
    251a:	b9 01       	movw	r22, r18
    251c:	ca 01       	movw	r24, r20
    251e:	2c 96       	adiw	r28, 0x0c	; 12
    2520:	e2 e0       	ldi	r30, 0x02	; 2
    2522:	0c 94 3a 29 	jmp	0x5274	; 0x5274 <__epilogue_restores__+0x20>

00002526 <__floatunsisf>:
    2526:	a8 e0       	ldi	r26, 0x08	; 8
    2528:	b0 e0       	ldi	r27, 0x00	; 0
    252a:	e9 e9       	ldi	r30, 0x99	; 153
    252c:	f2 e1       	ldi	r31, 0x12	; 18
    252e:	0c 94 16 29 	jmp	0x522c	; 0x522c <__prologue_saves__+0x10>
    2532:	7b 01       	movw	r14, r22
    2534:	8c 01       	movw	r16, r24
    2536:	61 15       	cp	r22, r1
    2538:	71 05       	cpc	r23, r1
    253a:	81 05       	cpc	r24, r1
    253c:	91 05       	cpc	r25, r1
    253e:	19 f4       	brne	.+6      	; 0x2546 <__floatunsisf+0x20>
    2540:	82 e0       	ldi	r24, 0x02	; 2
    2542:	89 83       	std	Y+1, r24	; 0x01
    2544:	60 c0       	rjmp	.+192    	; 0x2606 <__floatunsisf+0xe0>
    2546:	83 e0       	ldi	r24, 0x03	; 3
    2548:	89 83       	std	Y+1, r24	; 0x01
    254a:	8e e1       	ldi	r24, 0x1E	; 30
    254c:	c8 2e       	mov	r12, r24
    254e:	d1 2c       	mov	r13, r1
    2550:	dc 82       	std	Y+4, r13	; 0x04
    2552:	cb 82       	std	Y+3, r12	; 0x03
    2554:	ed 82       	std	Y+5, r14	; 0x05
    2556:	fe 82       	std	Y+6, r15	; 0x06
    2558:	0f 83       	std	Y+7, r16	; 0x07
    255a:	18 87       	std	Y+8, r17	; 0x08
    255c:	c8 01       	movw	r24, r16
    255e:	b7 01       	movw	r22, r14
    2560:	0e 94 8b 13 	call	0x2716	; 0x2716 <__clzsi2>
    2564:	fc 01       	movw	r30, r24
    2566:	31 97       	sbiw	r30, 0x01	; 1
    2568:	f7 ff       	sbrs	r31, 7
    256a:	3b c0       	rjmp	.+118    	; 0x25e2 <__floatunsisf+0xbc>
    256c:	22 27       	eor	r18, r18
    256e:	33 27       	eor	r19, r19
    2570:	2e 1b       	sub	r18, r30
    2572:	3f 0b       	sbc	r19, r31
    2574:	57 01       	movw	r10, r14
    2576:	68 01       	movw	r12, r16
    2578:	02 2e       	mov	r0, r18
    257a:	04 c0       	rjmp	.+8      	; 0x2584 <__floatunsisf+0x5e>
    257c:	d6 94       	lsr	r13
    257e:	c7 94       	ror	r12
    2580:	b7 94       	ror	r11
    2582:	a7 94       	ror	r10
    2584:	0a 94       	dec	r0
    2586:	d2 f7       	brpl	.-12     	; 0x257c <__floatunsisf+0x56>
    2588:	40 e0       	ldi	r20, 0x00	; 0
    258a:	50 e0       	ldi	r21, 0x00	; 0
    258c:	60 e0       	ldi	r22, 0x00	; 0
    258e:	70 e0       	ldi	r23, 0x00	; 0
    2590:	81 e0       	ldi	r24, 0x01	; 1
    2592:	90 e0       	ldi	r25, 0x00	; 0
    2594:	a0 e0       	ldi	r26, 0x00	; 0
    2596:	b0 e0       	ldi	r27, 0x00	; 0
    2598:	04 c0       	rjmp	.+8      	; 0x25a2 <__floatunsisf+0x7c>
    259a:	88 0f       	add	r24, r24
    259c:	99 1f       	adc	r25, r25
    259e:	aa 1f       	adc	r26, r26
    25a0:	bb 1f       	adc	r27, r27
    25a2:	2a 95       	dec	r18
    25a4:	d2 f7       	brpl	.-12     	; 0x259a <__floatunsisf+0x74>
    25a6:	01 97       	sbiw	r24, 0x01	; 1
    25a8:	a1 09       	sbc	r26, r1
    25aa:	b1 09       	sbc	r27, r1
    25ac:	8e 21       	and	r24, r14
    25ae:	9f 21       	and	r25, r15
    25b0:	a0 23       	and	r26, r16
    25b2:	b1 23       	and	r27, r17
    25b4:	00 97       	sbiw	r24, 0x00	; 0
    25b6:	a1 05       	cpc	r26, r1
    25b8:	b1 05       	cpc	r27, r1
    25ba:	21 f0       	breq	.+8      	; 0x25c4 <__floatunsisf+0x9e>
    25bc:	41 e0       	ldi	r20, 0x01	; 1
    25be:	50 e0       	ldi	r21, 0x00	; 0
    25c0:	60 e0       	ldi	r22, 0x00	; 0
    25c2:	70 e0       	ldi	r23, 0x00	; 0
    25c4:	4a 29       	or	r20, r10
    25c6:	5b 29       	or	r21, r11
    25c8:	6c 29       	or	r22, r12
    25ca:	7d 29       	or	r23, r13
    25cc:	4d 83       	std	Y+5, r20	; 0x05
    25ce:	5e 83       	std	Y+6, r21	; 0x06
    25d0:	6f 83       	std	Y+7, r22	; 0x07
    25d2:	78 87       	std	Y+8, r23	; 0x08
    25d4:	8e e1       	ldi	r24, 0x1E	; 30
    25d6:	90 e0       	ldi	r25, 0x00	; 0
    25d8:	8e 1b       	sub	r24, r30
    25da:	9f 0b       	sbc	r25, r31
    25dc:	9c 83       	std	Y+4, r25	; 0x04
    25de:	8b 83       	std	Y+3, r24	; 0x03
    25e0:	12 c0       	rjmp	.+36     	; 0x2606 <__floatunsisf+0xe0>
    25e2:	30 97       	sbiw	r30, 0x00	; 0
    25e4:	81 f0       	breq	.+32     	; 0x2606 <__floatunsisf+0xe0>
    25e6:	0e 2e       	mov	r0, r30
    25e8:	04 c0       	rjmp	.+8      	; 0x25f2 <__floatunsisf+0xcc>
    25ea:	ee 0c       	add	r14, r14
    25ec:	ff 1c       	adc	r15, r15
    25ee:	00 1f       	adc	r16, r16
    25f0:	11 1f       	adc	r17, r17
    25f2:	0a 94       	dec	r0
    25f4:	d2 f7       	brpl	.-12     	; 0x25ea <__floatunsisf+0xc4>
    25f6:	ed 82       	std	Y+5, r14	; 0x05
    25f8:	fe 82       	std	Y+6, r15	; 0x06
    25fa:	0f 83       	std	Y+7, r16	; 0x07
    25fc:	18 87       	std	Y+8, r17	; 0x08
    25fe:	ce 1a       	sub	r12, r30
    2600:	df 0a       	sbc	r13, r31
    2602:	dc 82       	std	Y+4, r13	; 0x04
    2604:	cb 82       	std	Y+3, r12	; 0x03
    2606:	1a 82       	std	Y+2, r1	; 0x02
    2608:	ce 01       	movw	r24, r28
    260a:	01 96       	adiw	r24, 0x01	; 1
    260c:	0e 94 da 13 	call	0x27b4	; 0x27b4 <__pack_f>
    2610:	28 96       	adiw	r28, 0x08	; 8
    2612:	ea e0       	ldi	r30, 0x0A	; 10
    2614:	0c 94 32 29 	jmp	0x5264	; 0x5264 <__epilogue_restores__+0x10>

00002618 <__lshrdi3>:
    2618:	ef 92       	push	r14
    261a:	ff 92       	push	r15
    261c:	0f 93       	push	r16
    261e:	df 93       	push	r29
    2620:	cf 93       	push	r28
    2622:	cd b7       	in	r28, 0x3d	; 61
    2624:	de b7       	in	r29, 0x3e	; 62
    2626:	60 97       	sbiw	r28, 0x10	; 16
    2628:	0f b6       	in	r0, 0x3f	; 63
    262a:	f8 94       	cli
    262c:	de bf       	out	0x3e, r29	; 62
    262e:	0f be       	out	0x3f, r0	; 63
    2630:	cd bf       	out	0x3d, r28	; 61
    2632:	a8 2f       	mov	r26, r24
    2634:	00 23       	and	r16, r16
    2636:	09 f4       	brne	.+2      	; 0x263a <__lshrdi3+0x22>
    2638:	61 c0       	rjmp	.+194    	; 0x26fc <__lshrdi3+0xe4>
    263a:	7e 01       	movw	r14, r28
    263c:	08 94       	sec
    263e:	e1 1c       	adc	r14, r1
    2640:	f1 1c       	adc	r15, r1
    2642:	88 e0       	ldi	r24, 0x08	; 8
    2644:	f7 01       	movw	r30, r14
    2646:	11 92       	st	Z+, r1
    2648:	8a 95       	dec	r24
    264a:	e9 f7       	brne	.-6      	; 0x2646 <__lshrdi3+0x2e>
    264c:	29 83       	std	Y+1, r18	; 0x01
    264e:	3a 83       	std	Y+2, r19	; 0x02
    2650:	4b 83       	std	Y+3, r20	; 0x03
    2652:	5c 83       	std	Y+4, r21	; 0x04
    2654:	6d 83       	std	Y+5, r22	; 0x05
    2656:	7e 83       	std	Y+6, r23	; 0x06
    2658:	af 83       	std	Y+7, r26	; 0x07
    265a:	98 87       	std	Y+8, r25	; 0x08
    265c:	80 e2       	ldi	r24, 0x20	; 32
    265e:	80 1b       	sub	r24, r16
    2660:	e8 2f       	mov	r30, r24
    2662:	ff 27       	eor	r31, r31
    2664:	e7 fd       	sbrc	r30, 7
    2666:	f0 95       	com	r31
    2668:	4d 81       	ldd	r20, Y+5	; 0x05
    266a:	5e 81       	ldd	r21, Y+6	; 0x06
    266c:	6f 81       	ldd	r22, Y+7	; 0x07
    266e:	78 85       	ldd	r23, Y+8	; 0x08
    2670:	18 16       	cp	r1, r24
    2672:	84 f0       	brlt	.+32     	; 0x2694 <__lshrdi3+0x7c>
    2674:	1d 86       	std	Y+13, r1	; 0x0d
    2676:	1e 86       	std	Y+14, r1	; 0x0e
    2678:	1f 86       	std	Y+15, r1	; 0x0f
    267a:	18 8a       	std	Y+16, r1	; 0x10
    267c:	88 27       	eor	r24, r24
    267e:	99 27       	eor	r25, r25
    2680:	8e 1b       	sub	r24, r30
    2682:	9f 0b       	sbc	r25, r31
    2684:	04 c0       	rjmp	.+8      	; 0x268e <__lshrdi3+0x76>
    2686:	76 95       	lsr	r23
    2688:	67 95       	ror	r22
    268a:	57 95       	ror	r21
    268c:	47 95       	ror	r20
    268e:	8a 95       	dec	r24
    2690:	d2 f7       	brpl	.-12     	; 0x2686 <__lshrdi3+0x6e>
    2692:	28 c0       	rjmp	.+80     	; 0x26e4 <__lshrdi3+0xcc>
    2694:	20 2f       	mov	r18, r16
    2696:	33 27       	eor	r19, r19
    2698:	27 fd       	sbrc	r18, 7
    269a:	30 95       	com	r19
    269c:	db 01       	movw	r26, r22
    269e:	ca 01       	movw	r24, r20
    26a0:	02 2e       	mov	r0, r18
    26a2:	04 c0       	rjmp	.+8      	; 0x26ac <__lshrdi3+0x94>
    26a4:	b6 95       	lsr	r27
    26a6:	a7 95       	ror	r26
    26a8:	97 95       	ror	r25
    26aa:	87 95       	ror	r24
    26ac:	0a 94       	dec	r0
    26ae:	d2 f7       	brpl	.-12     	; 0x26a4 <__lshrdi3+0x8c>
    26b0:	8d 87       	std	Y+13, r24	; 0x0d
    26b2:	9e 87       	std	Y+14, r25	; 0x0e
    26b4:	af 87       	std	Y+15, r26	; 0x0f
    26b6:	b8 8b       	std	Y+16, r27	; 0x10
    26b8:	04 c0       	rjmp	.+8      	; 0x26c2 <__lshrdi3+0xaa>
    26ba:	44 0f       	add	r20, r20
    26bc:	55 1f       	adc	r21, r21
    26be:	66 1f       	adc	r22, r22
    26c0:	77 1f       	adc	r23, r23
    26c2:	ea 95       	dec	r30
    26c4:	d2 f7       	brpl	.-12     	; 0x26ba <__lshrdi3+0xa2>
    26c6:	89 81       	ldd	r24, Y+1	; 0x01
    26c8:	9a 81       	ldd	r25, Y+2	; 0x02
    26ca:	ab 81       	ldd	r26, Y+3	; 0x03
    26cc:	bc 81       	ldd	r27, Y+4	; 0x04
    26ce:	04 c0       	rjmp	.+8      	; 0x26d8 <__lshrdi3+0xc0>
    26d0:	b6 95       	lsr	r27
    26d2:	a7 95       	ror	r26
    26d4:	97 95       	ror	r25
    26d6:	87 95       	ror	r24
    26d8:	2a 95       	dec	r18
    26da:	d2 f7       	brpl	.-12     	; 0x26d0 <__lshrdi3+0xb8>
    26dc:	48 2b       	or	r20, r24
    26de:	59 2b       	or	r21, r25
    26e0:	6a 2b       	or	r22, r26
    26e2:	7b 2b       	or	r23, r27
    26e4:	49 87       	std	Y+9, r20	; 0x09
    26e6:	5a 87       	std	Y+10, r21	; 0x0a
    26e8:	6b 87       	std	Y+11, r22	; 0x0b
    26ea:	7c 87       	std	Y+12, r23	; 0x0c
    26ec:	29 85       	ldd	r18, Y+9	; 0x09
    26ee:	3a 85       	ldd	r19, Y+10	; 0x0a
    26f0:	4b 85       	ldd	r20, Y+11	; 0x0b
    26f2:	5c 85       	ldd	r21, Y+12	; 0x0c
    26f4:	6d 85       	ldd	r22, Y+13	; 0x0d
    26f6:	7e 85       	ldd	r23, Y+14	; 0x0e
    26f8:	af 85       	ldd	r26, Y+15	; 0x0f
    26fa:	98 89       	ldd	r25, Y+16	; 0x10
    26fc:	8a 2f       	mov	r24, r26
    26fe:	60 96       	adiw	r28, 0x10	; 16
    2700:	0f b6       	in	r0, 0x3f	; 63
    2702:	f8 94       	cli
    2704:	de bf       	out	0x3e, r29	; 62
    2706:	0f be       	out	0x3f, r0	; 63
    2708:	cd bf       	out	0x3d, r28	; 61
    270a:	cf 91       	pop	r28
    270c:	df 91       	pop	r29
    270e:	0f 91       	pop	r16
    2710:	ff 90       	pop	r15
    2712:	ef 90       	pop	r14
    2714:	08 95       	ret

00002716 <__clzsi2>:
    2716:	ef 92       	push	r14
    2718:	ff 92       	push	r15
    271a:	0f 93       	push	r16
    271c:	1f 93       	push	r17
    271e:	7b 01       	movw	r14, r22
    2720:	8c 01       	movw	r16, r24
    2722:	80 e0       	ldi	r24, 0x00	; 0
    2724:	e8 16       	cp	r14, r24
    2726:	80 e0       	ldi	r24, 0x00	; 0
    2728:	f8 06       	cpc	r15, r24
    272a:	81 e0       	ldi	r24, 0x01	; 1
    272c:	08 07       	cpc	r16, r24
    272e:	80 e0       	ldi	r24, 0x00	; 0
    2730:	18 07       	cpc	r17, r24
    2732:	88 f4       	brcc	.+34     	; 0x2756 <__clzsi2+0x40>
    2734:	8f ef       	ldi	r24, 0xFF	; 255
    2736:	e8 16       	cp	r14, r24
    2738:	f1 04       	cpc	r15, r1
    273a:	01 05       	cpc	r16, r1
    273c:	11 05       	cpc	r17, r1
    273e:	31 f0       	breq	.+12     	; 0x274c <__clzsi2+0x36>
    2740:	28 f0       	brcs	.+10     	; 0x274c <__clzsi2+0x36>
    2742:	88 e0       	ldi	r24, 0x08	; 8
    2744:	90 e0       	ldi	r25, 0x00	; 0
    2746:	a0 e0       	ldi	r26, 0x00	; 0
    2748:	b0 e0       	ldi	r27, 0x00	; 0
    274a:	17 c0       	rjmp	.+46     	; 0x277a <__clzsi2+0x64>
    274c:	80 e0       	ldi	r24, 0x00	; 0
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	a0 e0       	ldi	r26, 0x00	; 0
    2752:	b0 e0       	ldi	r27, 0x00	; 0
    2754:	12 c0       	rjmp	.+36     	; 0x277a <__clzsi2+0x64>
    2756:	80 e0       	ldi	r24, 0x00	; 0
    2758:	e8 16       	cp	r14, r24
    275a:	80 e0       	ldi	r24, 0x00	; 0
    275c:	f8 06       	cpc	r15, r24
    275e:	80 e0       	ldi	r24, 0x00	; 0
    2760:	08 07       	cpc	r16, r24
    2762:	81 e0       	ldi	r24, 0x01	; 1
    2764:	18 07       	cpc	r17, r24
    2766:	28 f0       	brcs	.+10     	; 0x2772 <__clzsi2+0x5c>
    2768:	88 e1       	ldi	r24, 0x18	; 24
    276a:	90 e0       	ldi	r25, 0x00	; 0
    276c:	a0 e0       	ldi	r26, 0x00	; 0
    276e:	b0 e0       	ldi	r27, 0x00	; 0
    2770:	04 c0       	rjmp	.+8      	; 0x277a <__clzsi2+0x64>
    2772:	80 e1       	ldi	r24, 0x10	; 16
    2774:	90 e0       	ldi	r25, 0x00	; 0
    2776:	a0 e0       	ldi	r26, 0x00	; 0
    2778:	b0 e0       	ldi	r27, 0x00	; 0
    277a:	20 e2       	ldi	r18, 0x20	; 32
    277c:	30 e0       	ldi	r19, 0x00	; 0
    277e:	40 e0       	ldi	r20, 0x00	; 0
    2780:	50 e0       	ldi	r21, 0x00	; 0
    2782:	28 1b       	sub	r18, r24
    2784:	39 0b       	sbc	r19, r25
    2786:	4a 0b       	sbc	r20, r26
    2788:	5b 0b       	sbc	r21, r27
    278a:	04 c0       	rjmp	.+8      	; 0x2794 <__clzsi2+0x7e>
    278c:	16 95       	lsr	r17
    278e:	07 95       	ror	r16
    2790:	f7 94       	ror	r15
    2792:	e7 94       	ror	r14
    2794:	8a 95       	dec	r24
    2796:	d2 f7       	brpl	.-12     	; 0x278c <__clzsi2+0x76>
    2798:	f7 01       	movw	r30, r14
    279a:	e3 57       	subi	r30, 0x73	; 115
    279c:	fe 4f       	sbci	r31, 0xFE	; 254
    279e:	80 81       	ld	r24, Z
    27a0:	28 1b       	sub	r18, r24
    27a2:	31 09       	sbc	r19, r1
    27a4:	41 09       	sbc	r20, r1
    27a6:	51 09       	sbc	r21, r1
    27a8:	c9 01       	movw	r24, r18
    27aa:	1f 91       	pop	r17
    27ac:	0f 91       	pop	r16
    27ae:	ff 90       	pop	r15
    27b0:	ef 90       	pop	r14
    27b2:	08 95       	ret

000027b4 <__pack_f>:
    27b4:	df 92       	push	r13
    27b6:	ef 92       	push	r14
    27b8:	ff 92       	push	r15
    27ba:	0f 93       	push	r16
    27bc:	1f 93       	push	r17
    27be:	fc 01       	movw	r30, r24
    27c0:	e4 80       	ldd	r14, Z+4	; 0x04
    27c2:	f5 80       	ldd	r15, Z+5	; 0x05
    27c4:	06 81       	ldd	r16, Z+6	; 0x06
    27c6:	17 81       	ldd	r17, Z+7	; 0x07
    27c8:	d1 80       	ldd	r13, Z+1	; 0x01
    27ca:	80 81       	ld	r24, Z
    27cc:	82 30       	cpi	r24, 0x02	; 2
    27ce:	48 f4       	brcc	.+18     	; 0x27e2 <__pack_f+0x2e>
    27d0:	80 e0       	ldi	r24, 0x00	; 0
    27d2:	90 e0       	ldi	r25, 0x00	; 0
    27d4:	a0 e1       	ldi	r26, 0x10	; 16
    27d6:	b0 e0       	ldi	r27, 0x00	; 0
    27d8:	e8 2a       	or	r14, r24
    27da:	f9 2a       	or	r15, r25
    27dc:	0a 2b       	or	r16, r26
    27de:	1b 2b       	or	r17, r27
    27e0:	a5 c0       	rjmp	.+330    	; 0x292c <__pack_f+0x178>
    27e2:	84 30       	cpi	r24, 0x04	; 4
    27e4:	09 f4       	brne	.+2      	; 0x27e8 <__pack_f+0x34>
    27e6:	9f c0       	rjmp	.+318    	; 0x2926 <__pack_f+0x172>
    27e8:	82 30       	cpi	r24, 0x02	; 2
    27ea:	21 f4       	brne	.+8      	; 0x27f4 <__pack_f+0x40>
    27ec:	ee 24       	eor	r14, r14
    27ee:	ff 24       	eor	r15, r15
    27f0:	87 01       	movw	r16, r14
    27f2:	05 c0       	rjmp	.+10     	; 0x27fe <__pack_f+0x4a>
    27f4:	e1 14       	cp	r14, r1
    27f6:	f1 04       	cpc	r15, r1
    27f8:	01 05       	cpc	r16, r1
    27fa:	11 05       	cpc	r17, r1
    27fc:	19 f4       	brne	.+6      	; 0x2804 <__pack_f+0x50>
    27fe:	e0 e0       	ldi	r30, 0x00	; 0
    2800:	f0 e0       	ldi	r31, 0x00	; 0
    2802:	96 c0       	rjmp	.+300    	; 0x2930 <__pack_f+0x17c>
    2804:	62 81       	ldd	r22, Z+2	; 0x02
    2806:	73 81       	ldd	r23, Z+3	; 0x03
    2808:	9f ef       	ldi	r25, 0xFF	; 255
    280a:	62 38       	cpi	r22, 0x82	; 130
    280c:	79 07       	cpc	r23, r25
    280e:	0c f0       	brlt	.+2      	; 0x2812 <__pack_f+0x5e>
    2810:	5b c0       	rjmp	.+182    	; 0x28c8 <__pack_f+0x114>
    2812:	22 e8       	ldi	r18, 0x82	; 130
    2814:	3f ef       	ldi	r19, 0xFF	; 255
    2816:	26 1b       	sub	r18, r22
    2818:	37 0b       	sbc	r19, r23
    281a:	2a 31       	cpi	r18, 0x1A	; 26
    281c:	31 05       	cpc	r19, r1
    281e:	2c f0       	brlt	.+10     	; 0x282a <__pack_f+0x76>
    2820:	20 e0       	ldi	r18, 0x00	; 0
    2822:	30 e0       	ldi	r19, 0x00	; 0
    2824:	40 e0       	ldi	r20, 0x00	; 0
    2826:	50 e0       	ldi	r21, 0x00	; 0
    2828:	2a c0       	rjmp	.+84     	; 0x287e <__pack_f+0xca>
    282a:	b8 01       	movw	r22, r16
    282c:	a7 01       	movw	r20, r14
    282e:	02 2e       	mov	r0, r18
    2830:	04 c0       	rjmp	.+8      	; 0x283a <__pack_f+0x86>
    2832:	76 95       	lsr	r23
    2834:	67 95       	ror	r22
    2836:	57 95       	ror	r21
    2838:	47 95       	ror	r20
    283a:	0a 94       	dec	r0
    283c:	d2 f7       	brpl	.-12     	; 0x2832 <__pack_f+0x7e>
    283e:	81 e0       	ldi	r24, 0x01	; 1
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	a0 e0       	ldi	r26, 0x00	; 0
    2844:	b0 e0       	ldi	r27, 0x00	; 0
    2846:	04 c0       	rjmp	.+8      	; 0x2850 <__pack_f+0x9c>
    2848:	88 0f       	add	r24, r24
    284a:	99 1f       	adc	r25, r25
    284c:	aa 1f       	adc	r26, r26
    284e:	bb 1f       	adc	r27, r27
    2850:	2a 95       	dec	r18
    2852:	d2 f7       	brpl	.-12     	; 0x2848 <__pack_f+0x94>
    2854:	01 97       	sbiw	r24, 0x01	; 1
    2856:	a1 09       	sbc	r26, r1
    2858:	b1 09       	sbc	r27, r1
    285a:	8e 21       	and	r24, r14
    285c:	9f 21       	and	r25, r15
    285e:	a0 23       	and	r26, r16
    2860:	b1 23       	and	r27, r17
    2862:	00 97       	sbiw	r24, 0x00	; 0
    2864:	a1 05       	cpc	r26, r1
    2866:	b1 05       	cpc	r27, r1
    2868:	21 f0       	breq	.+8      	; 0x2872 <__pack_f+0xbe>
    286a:	81 e0       	ldi	r24, 0x01	; 1
    286c:	90 e0       	ldi	r25, 0x00	; 0
    286e:	a0 e0       	ldi	r26, 0x00	; 0
    2870:	b0 e0       	ldi	r27, 0x00	; 0
    2872:	9a 01       	movw	r18, r20
    2874:	ab 01       	movw	r20, r22
    2876:	28 2b       	or	r18, r24
    2878:	39 2b       	or	r19, r25
    287a:	4a 2b       	or	r20, r26
    287c:	5b 2b       	or	r21, r27
    287e:	da 01       	movw	r26, r20
    2880:	c9 01       	movw	r24, r18
    2882:	8f 77       	andi	r24, 0x7F	; 127
    2884:	90 70       	andi	r25, 0x00	; 0
    2886:	a0 70       	andi	r26, 0x00	; 0
    2888:	b0 70       	andi	r27, 0x00	; 0
    288a:	80 34       	cpi	r24, 0x40	; 64
    288c:	91 05       	cpc	r25, r1
    288e:	a1 05       	cpc	r26, r1
    2890:	b1 05       	cpc	r27, r1
    2892:	39 f4       	brne	.+14     	; 0x28a2 <__pack_f+0xee>
    2894:	27 ff       	sbrs	r18, 7
    2896:	09 c0       	rjmp	.+18     	; 0x28aa <__pack_f+0xf6>
    2898:	20 5c       	subi	r18, 0xC0	; 192
    289a:	3f 4f       	sbci	r19, 0xFF	; 255
    289c:	4f 4f       	sbci	r20, 0xFF	; 255
    289e:	5f 4f       	sbci	r21, 0xFF	; 255
    28a0:	04 c0       	rjmp	.+8      	; 0x28aa <__pack_f+0xf6>
    28a2:	21 5c       	subi	r18, 0xC1	; 193
    28a4:	3f 4f       	sbci	r19, 0xFF	; 255
    28a6:	4f 4f       	sbci	r20, 0xFF	; 255
    28a8:	5f 4f       	sbci	r21, 0xFF	; 255
    28aa:	e0 e0       	ldi	r30, 0x00	; 0
    28ac:	f0 e0       	ldi	r31, 0x00	; 0
    28ae:	20 30       	cpi	r18, 0x00	; 0
    28b0:	a0 e0       	ldi	r26, 0x00	; 0
    28b2:	3a 07       	cpc	r19, r26
    28b4:	a0 e0       	ldi	r26, 0x00	; 0
    28b6:	4a 07       	cpc	r20, r26
    28b8:	a0 e4       	ldi	r26, 0x40	; 64
    28ba:	5a 07       	cpc	r21, r26
    28bc:	10 f0       	brcs	.+4      	; 0x28c2 <__pack_f+0x10e>
    28be:	e1 e0       	ldi	r30, 0x01	; 1
    28c0:	f0 e0       	ldi	r31, 0x00	; 0
    28c2:	79 01       	movw	r14, r18
    28c4:	8a 01       	movw	r16, r20
    28c6:	27 c0       	rjmp	.+78     	; 0x2916 <__pack_f+0x162>
    28c8:	60 38       	cpi	r22, 0x80	; 128
    28ca:	71 05       	cpc	r23, r1
    28cc:	64 f5       	brge	.+88     	; 0x2926 <__pack_f+0x172>
    28ce:	fb 01       	movw	r30, r22
    28d0:	e1 58       	subi	r30, 0x81	; 129
    28d2:	ff 4f       	sbci	r31, 0xFF	; 255
    28d4:	d8 01       	movw	r26, r16
    28d6:	c7 01       	movw	r24, r14
    28d8:	8f 77       	andi	r24, 0x7F	; 127
    28da:	90 70       	andi	r25, 0x00	; 0
    28dc:	a0 70       	andi	r26, 0x00	; 0
    28de:	b0 70       	andi	r27, 0x00	; 0
    28e0:	80 34       	cpi	r24, 0x40	; 64
    28e2:	91 05       	cpc	r25, r1
    28e4:	a1 05       	cpc	r26, r1
    28e6:	b1 05       	cpc	r27, r1
    28e8:	39 f4       	brne	.+14     	; 0x28f8 <__pack_f+0x144>
    28ea:	e7 fe       	sbrs	r14, 7
    28ec:	0d c0       	rjmp	.+26     	; 0x2908 <__pack_f+0x154>
    28ee:	80 e4       	ldi	r24, 0x40	; 64
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	a0 e0       	ldi	r26, 0x00	; 0
    28f4:	b0 e0       	ldi	r27, 0x00	; 0
    28f6:	04 c0       	rjmp	.+8      	; 0x2900 <__pack_f+0x14c>
    28f8:	8f e3       	ldi	r24, 0x3F	; 63
    28fa:	90 e0       	ldi	r25, 0x00	; 0
    28fc:	a0 e0       	ldi	r26, 0x00	; 0
    28fe:	b0 e0       	ldi	r27, 0x00	; 0
    2900:	e8 0e       	add	r14, r24
    2902:	f9 1e       	adc	r15, r25
    2904:	0a 1f       	adc	r16, r26
    2906:	1b 1f       	adc	r17, r27
    2908:	17 ff       	sbrs	r17, 7
    290a:	05 c0       	rjmp	.+10     	; 0x2916 <__pack_f+0x162>
    290c:	16 95       	lsr	r17
    290e:	07 95       	ror	r16
    2910:	f7 94       	ror	r15
    2912:	e7 94       	ror	r14
    2914:	31 96       	adiw	r30, 0x01	; 1
    2916:	87 e0       	ldi	r24, 0x07	; 7
    2918:	16 95       	lsr	r17
    291a:	07 95       	ror	r16
    291c:	f7 94       	ror	r15
    291e:	e7 94       	ror	r14
    2920:	8a 95       	dec	r24
    2922:	d1 f7       	brne	.-12     	; 0x2918 <__pack_f+0x164>
    2924:	05 c0       	rjmp	.+10     	; 0x2930 <__pack_f+0x17c>
    2926:	ee 24       	eor	r14, r14
    2928:	ff 24       	eor	r15, r15
    292a:	87 01       	movw	r16, r14
    292c:	ef ef       	ldi	r30, 0xFF	; 255
    292e:	f0 e0       	ldi	r31, 0x00	; 0
    2930:	6e 2f       	mov	r22, r30
    2932:	67 95       	ror	r22
    2934:	66 27       	eor	r22, r22
    2936:	67 95       	ror	r22
    2938:	90 2f       	mov	r25, r16
    293a:	9f 77       	andi	r25, 0x7F	; 127
    293c:	d7 94       	ror	r13
    293e:	dd 24       	eor	r13, r13
    2940:	d7 94       	ror	r13
    2942:	8e 2f       	mov	r24, r30
    2944:	86 95       	lsr	r24
    2946:	49 2f       	mov	r20, r25
    2948:	46 2b       	or	r20, r22
    294a:	58 2f       	mov	r21, r24
    294c:	5d 29       	or	r21, r13
    294e:	b7 01       	movw	r22, r14
    2950:	ca 01       	movw	r24, r20
    2952:	1f 91       	pop	r17
    2954:	0f 91       	pop	r16
    2956:	ff 90       	pop	r15
    2958:	ef 90       	pop	r14
    295a:	df 90       	pop	r13
    295c:	08 95       	ret

0000295e <__unpack_f>:
    295e:	fc 01       	movw	r30, r24
    2960:	db 01       	movw	r26, r22
    2962:	40 81       	ld	r20, Z
    2964:	51 81       	ldd	r21, Z+1	; 0x01
    2966:	22 81       	ldd	r18, Z+2	; 0x02
    2968:	62 2f       	mov	r22, r18
    296a:	6f 77       	andi	r22, 0x7F	; 127
    296c:	70 e0       	ldi	r23, 0x00	; 0
    296e:	22 1f       	adc	r18, r18
    2970:	22 27       	eor	r18, r18
    2972:	22 1f       	adc	r18, r18
    2974:	93 81       	ldd	r25, Z+3	; 0x03
    2976:	89 2f       	mov	r24, r25
    2978:	88 0f       	add	r24, r24
    297a:	82 2b       	or	r24, r18
    297c:	28 2f       	mov	r18, r24
    297e:	30 e0       	ldi	r19, 0x00	; 0
    2980:	99 1f       	adc	r25, r25
    2982:	99 27       	eor	r25, r25
    2984:	99 1f       	adc	r25, r25
    2986:	11 96       	adiw	r26, 0x01	; 1
    2988:	9c 93       	st	X, r25
    298a:	11 97       	sbiw	r26, 0x01	; 1
    298c:	21 15       	cp	r18, r1
    298e:	31 05       	cpc	r19, r1
    2990:	a9 f5       	brne	.+106    	; 0x29fc <__unpack_f+0x9e>
    2992:	41 15       	cp	r20, r1
    2994:	51 05       	cpc	r21, r1
    2996:	61 05       	cpc	r22, r1
    2998:	71 05       	cpc	r23, r1
    299a:	11 f4       	brne	.+4      	; 0x29a0 <__unpack_f+0x42>
    299c:	82 e0       	ldi	r24, 0x02	; 2
    299e:	37 c0       	rjmp	.+110    	; 0x2a0e <__unpack_f+0xb0>
    29a0:	82 e8       	ldi	r24, 0x82	; 130
    29a2:	9f ef       	ldi	r25, 0xFF	; 255
    29a4:	13 96       	adiw	r26, 0x03	; 3
    29a6:	9c 93       	st	X, r25
    29a8:	8e 93       	st	-X, r24
    29aa:	12 97       	sbiw	r26, 0x02	; 2
    29ac:	9a 01       	movw	r18, r20
    29ae:	ab 01       	movw	r20, r22
    29b0:	67 e0       	ldi	r22, 0x07	; 7
    29b2:	22 0f       	add	r18, r18
    29b4:	33 1f       	adc	r19, r19
    29b6:	44 1f       	adc	r20, r20
    29b8:	55 1f       	adc	r21, r21
    29ba:	6a 95       	dec	r22
    29bc:	d1 f7       	brne	.-12     	; 0x29b2 <__unpack_f+0x54>
    29be:	83 e0       	ldi	r24, 0x03	; 3
    29c0:	8c 93       	st	X, r24
    29c2:	0d c0       	rjmp	.+26     	; 0x29de <__unpack_f+0x80>
    29c4:	22 0f       	add	r18, r18
    29c6:	33 1f       	adc	r19, r19
    29c8:	44 1f       	adc	r20, r20
    29ca:	55 1f       	adc	r21, r21
    29cc:	12 96       	adiw	r26, 0x02	; 2
    29ce:	8d 91       	ld	r24, X+
    29d0:	9c 91       	ld	r25, X
    29d2:	13 97       	sbiw	r26, 0x03	; 3
    29d4:	01 97       	sbiw	r24, 0x01	; 1
    29d6:	13 96       	adiw	r26, 0x03	; 3
    29d8:	9c 93       	st	X, r25
    29da:	8e 93       	st	-X, r24
    29dc:	12 97       	sbiw	r26, 0x02	; 2
    29de:	20 30       	cpi	r18, 0x00	; 0
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	38 07       	cpc	r19, r24
    29e4:	80 e0       	ldi	r24, 0x00	; 0
    29e6:	48 07       	cpc	r20, r24
    29e8:	80 e4       	ldi	r24, 0x40	; 64
    29ea:	58 07       	cpc	r21, r24
    29ec:	58 f3       	brcs	.-42     	; 0x29c4 <__unpack_f+0x66>
    29ee:	14 96       	adiw	r26, 0x04	; 4
    29f0:	2d 93       	st	X+, r18
    29f2:	3d 93       	st	X+, r19
    29f4:	4d 93       	st	X+, r20
    29f6:	5c 93       	st	X, r21
    29f8:	17 97       	sbiw	r26, 0x07	; 7
    29fa:	08 95       	ret
    29fc:	2f 3f       	cpi	r18, 0xFF	; 255
    29fe:	31 05       	cpc	r19, r1
    2a00:	79 f4       	brne	.+30     	; 0x2a20 <__unpack_f+0xc2>
    2a02:	41 15       	cp	r20, r1
    2a04:	51 05       	cpc	r21, r1
    2a06:	61 05       	cpc	r22, r1
    2a08:	71 05       	cpc	r23, r1
    2a0a:	19 f4       	brne	.+6      	; 0x2a12 <__unpack_f+0xb4>
    2a0c:	84 e0       	ldi	r24, 0x04	; 4
    2a0e:	8c 93       	st	X, r24
    2a10:	08 95       	ret
    2a12:	64 ff       	sbrs	r22, 4
    2a14:	03 c0       	rjmp	.+6      	; 0x2a1c <__unpack_f+0xbe>
    2a16:	81 e0       	ldi	r24, 0x01	; 1
    2a18:	8c 93       	st	X, r24
    2a1a:	12 c0       	rjmp	.+36     	; 0x2a40 <__unpack_f+0xe2>
    2a1c:	1c 92       	st	X, r1
    2a1e:	10 c0       	rjmp	.+32     	; 0x2a40 <__unpack_f+0xe2>
    2a20:	2f 57       	subi	r18, 0x7F	; 127
    2a22:	30 40       	sbci	r19, 0x00	; 0
    2a24:	13 96       	adiw	r26, 0x03	; 3
    2a26:	3c 93       	st	X, r19
    2a28:	2e 93       	st	-X, r18
    2a2a:	12 97       	sbiw	r26, 0x02	; 2
    2a2c:	83 e0       	ldi	r24, 0x03	; 3
    2a2e:	8c 93       	st	X, r24
    2a30:	87 e0       	ldi	r24, 0x07	; 7
    2a32:	44 0f       	add	r20, r20
    2a34:	55 1f       	adc	r21, r21
    2a36:	66 1f       	adc	r22, r22
    2a38:	77 1f       	adc	r23, r23
    2a3a:	8a 95       	dec	r24
    2a3c:	d1 f7       	brne	.-12     	; 0x2a32 <__unpack_f+0xd4>
    2a3e:	70 64       	ori	r23, 0x40	; 64
    2a40:	14 96       	adiw	r26, 0x04	; 4
    2a42:	4d 93       	st	X+, r20
    2a44:	5d 93       	st	X+, r21
    2a46:	6d 93       	st	X+, r22
    2a48:	7c 93       	st	X, r23
    2a4a:	17 97       	sbiw	r26, 0x07	; 7
    2a4c:	08 95       	ret

00002a4e <__fpcmp_parts_f>:
    2a4e:	1f 93       	push	r17
    2a50:	dc 01       	movw	r26, r24
    2a52:	fb 01       	movw	r30, r22
    2a54:	9c 91       	ld	r25, X
    2a56:	92 30       	cpi	r25, 0x02	; 2
    2a58:	08 f4       	brcc	.+2      	; 0x2a5c <__fpcmp_parts_f+0xe>
    2a5a:	47 c0       	rjmp	.+142    	; 0x2aea <__fpcmp_parts_f+0x9c>
    2a5c:	80 81       	ld	r24, Z
    2a5e:	82 30       	cpi	r24, 0x02	; 2
    2a60:	08 f4       	brcc	.+2      	; 0x2a64 <__fpcmp_parts_f+0x16>
    2a62:	43 c0       	rjmp	.+134    	; 0x2aea <__fpcmp_parts_f+0x9c>
    2a64:	94 30       	cpi	r25, 0x04	; 4
    2a66:	51 f4       	brne	.+20     	; 0x2a7c <__fpcmp_parts_f+0x2e>
    2a68:	11 96       	adiw	r26, 0x01	; 1
    2a6a:	1c 91       	ld	r17, X
    2a6c:	84 30       	cpi	r24, 0x04	; 4
    2a6e:	99 f5       	brne	.+102    	; 0x2ad6 <__fpcmp_parts_f+0x88>
    2a70:	81 81       	ldd	r24, Z+1	; 0x01
    2a72:	68 2f       	mov	r22, r24
    2a74:	70 e0       	ldi	r23, 0x00	; 0
    2a76:	61 1b       	sub	r22, r17
    2a78:	71 09       	sbc	r23, r1
    2a7a:	3f c0       	rjmp	.+126    	; 0x2afa <__fpcmp_parts_f+0xac>
    2a7c:	84 30       	cpi	r24, 0x04	; 4
    2a7e:	21 f0       	breq	.+8      	; 0x2a88 <__fpcmp_parts_f+0x3a>
    2a80:	92 30       	cpi	r25, 0x02	; 2
    2a82:	31 f4       	brne	.+12     	; 0x2a90 <__fpcmp_parts_f+0x42>
    2a84:	82 30       	cpi	r24, 0x02	; 2
    2a86:	b9 f1       	breq	.+110    	; 0x2af6 <__fpcmp_parts_f+0xa8>
    2a88:	81 81       	ldd	r24, Z+1	; 0x01
    2a8a:	88 23       	and	r24, r24
    2a8c:	89 f1       	breq	.+98     	; 0x2af0 <__fpcmp_parts_f+0xa2>
    2a8e:	2d c0       	rjmp	.+90     	; 0x2aea <__fpcmp_parts_f+0x9c>
    2a90:	11 96       	adiw	r26, 0x01	; 1
    2a92:	1c 91       	ld	r17, X
    2a94:	11 97       	sbiw	r26, 0x01	; 1
    2a96:	82 30       	cpi	r24, 0x02	; 2
    2a98:	f1 f0       	breq	.+60     	; 0x2ad6 <__fpcmp_parts_f+0x88>
    2a9a:	81 81       	ldd	r24, Z+1	; 0x01
    2a9c:	18 17       	cp	r17, r24
    2a9e:	d9 f4       	brne	.+54     	; 0x2ad6 <__fpcmp_parts_f+0x88>
    2aa0:	12 96       	adiw	r26, 0x02	; 2
    2aa2:	2d 91       	ld	r18, X+
    2aa4:	3c 91       	ld	r19, X
    2aa6:	13 97       	sbiw	r26, 0x03	; 3
    2aa8:	82 81       	ldd	r24, Z+2	; 0x02
    2aaa:	93 81       	ldd	r25, Z+3	; 0x03
    2aac:	82 17       	cp	r24, r18
    2aae:	93 07       	cpc	r25, r19
    2ab0:	94 f0       	brlt	.+36     	; 0x2ad6 <__fpcmp_parts_f+0x88>
    2ab2:	28 17       	cp	r18, r24
    2ab4:	39 07       	cpc	r19, r25
    2ab6:	bc f0       	brlt	.+46     	; 0x2ae6 <__fpcmp_parts_f+0x98>
    2ab8:	14 96       	adiw	r26, 0x04	; 4
    2aba:	8d 91       	ld	r24, X+
    2abc:	9d 91       	ld	r25, X+
    2abe:	0d 90       	ld	r0, X+
    2ac0:	bc 91       	ld	r27, X
    2ac2:	a0 2d       	mov	r26, r0
    2ac4:	24 81       	ldd	r18, Z+4	; 0x04
    2ac6:	35 81       	ldd	r19, Z+5	; 0x05
    2ac8:	46 81       	ldd	r20, Z+6	; 0x06
    2aca:	57 81       	ldd	r21, Z+7	; 0x07
    2acc:	28 17       	cp	r18, r24
    2ace:	39 07       	cpc	r19, r25
    2ad0:	4a 07       	cpc	r20, r26
    2ad2:	5b 07       	cpc	r21, r27
    2ad4:	18 f4       	brcc	.+6      	; 0x2adc <__fpcmp_parts_f+0x8e>
    2ad6:	11 23       	and	r17, r17
    2ad8:	41 f0       	breq	.+16     	; 0x2aea <__fpcmp_parts_f+0x9c>
    2ada:	0a c0       	rjmp	.+20     	; 0x2af0 <__fpcmp_parts_f+0xa2>
    2adc:	82 17       	cp	r24, r18
    2ade:	93 07       	cpc	r25, r19
    2ae0:	a4 07       	cpc	r26, r20
    2ae2:	b5 07       	cpc	r27, r21
    2ae4:	40 f4       	brcc	.+16     	; 0x2af6 <__fpcmp_parts_f+0xa8>
    2ae6:	11 23       	and	r17, r17
    2ae8:	19 f0       	breq	.+6      	; 0x2af0 <__fpcmp_parts_f+0xa2>
    2aea:	61 e0       	ldi	r22, 0x01	; 1
    2aec:	70 e0       	ldi	r23, 0x00	; 0
    2aee:	05 c0       	rjmp	.+10     	; 0x2afa <__fpcmp_parts_f+0xac>
    2af0:	6f ef       	ldi	r22, 0xFF	; 255
    2af2:	7f ef       	ldi	r23, 0xFF	; 255
    2af4:	02 c0       	rjmp	.+4      	; 0x2afa <__fpcmp_parts_f+0xac>
    2af6:	60 e0       	ldi	r22, 0x00	; 0
    2af8:	70 e0       	ldi	r23, 0x00	; 0
    2afa:	cb 01       	movw	r24, r22
    2afc:	1f 91       	pop	r17
    2afe:	08 95       	ret

00002b00 <DIO_voidSetPinDirection>:


/*************************************************/

void DIO_voidSetPinDirection(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Mode )
{
    2b00:	df 93       	push	r29
    2b02:	cf 93       	push	r28
    2b04:	cd b7       	in	r28, 0x3d	; 61
    2b06:	de b7       	in	r29, 0x3e	; 62
    2b08:	27 97       	sbiw	r28, 0x07	; 7
    2b0a:	0f b6       	in	r0, 0x3f	; 63
    2b0c:	f8 94       	cli
    2b0e:	de bf       	out	0x3e, r29	; 62
    2b10:	0f be       	out	0x3f, r0	; 63
    2b12:	cd bf       	out	0x3d, r28	; 61
    2b14:	89 83       	std	Y+1, r24	; 0x01
    2b16:	6a 83       	std	Y+2, r22	; 0x02
    2b18:	4b 83       	std	Y+3, r20	; 0x03
		if (DIO_u8OUTPUT == Copy_u8Mode)
    2b1a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b1c:	81 30       	cpi	r24, 0x01	; 1
    2b1e:	09 f0       	breq	.+2      	; 0x2b22 <DIO_voidSetPinDirection+0x22>
    2b20:	70 c0       	rjmp	.+224    	; 0x2c02 <DIO_voidSetPinDirection+0x102>
		{
			switch(Copy_u8PortNum)
    2b22:	89 81       	ldd	r24, Y+1	; 0x01
    2b24:	28 2f       	mov	r18, r24
    2b26:	30 e0       	ldi	r19, 0x00	; 0
    2b28:	3f 83       	std	Y+7, r19	; 0x07
    2b2a:	2e 83       	std	Y+6, r18	; 0x06
    2b2c:	8e 81       	ldd	r24, Y+6	; 0x06
    2b2e:	9f 81       	ldd	r25, Y+7	; 0x07
    2b30:	82 30       	cpi	r24, 0x02	; 2
    2b32:	91 05       	cpc	r25, r1
    2b34:	51 f1       	breq	.+84     	; 0x2b8a <DIO_voidSetPinDirection+0x8a>
    2b36:	2e 81       	ldd	r18, Y+6	; 0x06
    2b38:	3f 81       	ldd	r19, Y+7	; 0x07
    2b3a:	23 30       	cpi	r18, 0x03	; 3
    2b3c:	31 05       	cpc	r19, r1
    2b3e:	34 f4       	brge	.+12     	; 0x2b4c <DIO_voidSetPinDirection+0x4c>
    2b40:	8e 81       	ldd	r24, Y+6	; 0x06
    2b42:	9f 81       	ldd	r25, Y+7	; 0x07
    2b44:	81 30       	cpi	r24, 0x01	; 1
    2b46:	91 05       	cpc	r25, r1
    2b48:	61 f0       	breq	.+24     	; 0x2b62 <DIO_voidSetPinDirection+0x62>
    2b4a:	d3 c0       	rjmp	.+422    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
    2b4c:	2e 81       	ldd	r18, Y+6	; 0x06
    2b4e:	3f 81       	ldd	r19, Y+7	; 0x07
    2b50:	23 30       	cpi	r18, 0x03	; 3
    2b52:	31 05       	cpc	r19, r1
    2b54:	71 f1       	breq	.+92     	; 0x2bb2 <DIO_voidSetPinDirection+0xb2>
    2b56:	8e 81       	ldd	r24, Y+6	; 0x06
    2b58:	9f 81       	ldd	r25, Y+7	; 0x07
    2b5a:	84 30       	cpi	r24, 0x04	; 4
    2b5c:	91 05       	cpc	r25, r1
    2b5e:	e9 f1       	breq	.+122    	; 0x2bda <DIO_voidSetPinDirection+0xda>
    2b60:	c8 c0       	rjmp	.+400    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(DDRA , Copy_u8PinNum);       break;
    2b62:	aa e3       	ldi	r26, 0x3A	; 58
    2b64:	b0 e0       	ldi	r27, 0x00	; 0
    2b66:	ea e3       	ldi	r30, 0x3A	; 58
    2b68:	f0 e0       	ldi	r31, 0x00	; 0
    2b6a:	80 81       	ld	r24, Z
    2b6c:	48 2f       	mov	r20, r24
    2b6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b70:	28 2f       	mov	r18, r24
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	81 e0       	ldi	r24, 0x01	; 1
    2b76:	90 e0       	ldi	r25, 0x00	; 0
    2b78:	02 2e       	mov	r0, r18
    2b7a:	02 c0       	rjmp	.+4      	; 0x2b80 <DIO_voidSetPinDirection+0x80>
    2b7c:	88 0f       	add	r24, r24
    2b7e:	99 1f       	adc	r25, r25
    2b80:	0a 94       	dec	r0
    2b82:	e2 f7       	brpl	.-8      	; 0x2b7c <DIO_voidSetPinDirection+0x7c>
    2b84:	84 2b       	or	r24, r20
    2b86:	8c 93       	st	X, r24
    2b88:	b4 c0       	rjmp	.+360    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :         SET_BIT(DDRB , Copy_u8PinNum);       break;
    2b8a:	a7 e3       	ldi	r26, 0x37	; 55
    2b8c:	b0 e0       	ldi	r27, 0x00	; 0
    2b8e:	e7 e3       	ldi	r30, 0x37	; 55
    2b90:	f0 e0       	ldi	r31, 0x00	; 0
    2b92:	80 81       	ld	r24, Z
    2b94:	48 2f       	mov	r20, r24
    2b96:	8a 81       	ldd	r24, Y+2	; 0x02
    2b98:	28 2f       	mov	r18, r24
    2b9a:	30 e0       	ldi	r19, 0x00	; 0
    2b9c:	81 e0       	ldi	r24, 0x01	; 1
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	02 2e       	mov	r0, r18
    2ba2:	02 c0       	rjmp	.+4      	; 0x2ba8 <DIO_voidSetPinDirection+0xa8>
    2ba4:	88 0f       	add	r24, r24
    2ba6:	99 1f       	adc	r25, r25
    2ba8:	0a 94       	dec	r0
    2baa:	e2 f7       	brpl	.-8      	; 0x2ba4 <DIO_voidSetPinDirection+0xa4>
    2bac:	84 2b       	or	r24, r20
    2bae:	8c 93       	st	X, r24
    2bb0:	a0 c0       	rjmp	.+320    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :         SET_BIT(DDRC , Copy_u8PinNum);       break;
    2bb2:	a4 e3       	ldi	r26, 0x34	; 52
    2bb4:	b0 e0       	ldi	r27, 0x00	; 0
    2bb6:	e4 e3       	ldi	r30, 0x34	; 52
    2bb8:	f0 e0       	ldi	r31, 0x00	; 0
    2bba:	80 81       	ld	r24, Z
    2bbc:	48 2f       	mov	r20, r24
    2bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    2bc0:	28 2f       	mov	r18, r24
    2bc2:	30 e0       	ldi	r19, 0x00	; 0
    2bc4:	81 e0       	ldi	r24, 0x01	; 1
    2bc6:	90 e0       	ldi	r25, 0x00	; 0
    2bc8:	02 2e       	mov	r0, r18
    2bca:	02 c0       	rjmp	.+4      	; 0x2bd0 <DIO_voidSetPinDirection+0xd0>
    2bcc:	88 0f       	add	r24, r24
    2bce:	99 1f       	adc	r25, r25
    2bd0:	0a 94       	dec	r0
    2bd2:	e2 f7       	brpl	.-8      	; 0x2bcc <DIO_voidSetPinDirection+0xcc>
    2bd4:	84 2b       	or	r24, r20
    2bd6:	8c 93       	st	X, r24
    2bd8:	8c c0       	rjmp	.+280    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :         SET_BIT(DDRD , Copy_u8PinNum);       break;
    2bda:	a1 e3       	ldi	r26, 0x31	; 49
    2bdc:	b0 e0       	ldi	r27, 0x00	; 0
    2bde:	e1 e3       	ldi	r30, 0x31	; 49
    2be0:	f0 e0       	ldi	r31, 0x00	; 0
    2be2:	80 81       	ld	r24, Z
    2be4:	48 2f       	mov	r20, r24
    2be6:	8a 81       	ldd	r24, Y+2	; 0x02
    2be8:	28 2f       	mov	r18, r24
    2bea:	30 e0       	ldi	r19, 0x00	; 0
    2bec:	81 e0       	ldi	r24, 0x01	; 1
    2bee:	90 e0       	ldi	r25, 0x00	; 0
    2bf0:	02 2e       	mov	r0, r18
    2bf2:	02 c0       	rjmp	.+4      	; 0x2bf8 <DIO_voidSetPinDirection+0xf8>
    2bf4:	88 0f       	add	r24, r24
    2bf6:	99 1f       	adc	r25, r25
    2bf8:	0a 94       	dec	r0
    2bfa:	e2 f7       	brpl	.-8      	; 0x2bf4 <DIO_voidSetPinDirection+0xf4>
    2bfc:	84 2b       	or	r24, r20
    2bfe:	8c 93       	st	X, r24
    2c00:	78 c0       	rjmp	.+240    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
			}
		}
		else if (DIO_u8INPUT == Copy_u8Mode)
    2c02:	8b 81       	ldd	r24, Y+3	; 0x03
    2c04:	88 23       	and	r24, r24
    2c06:	09 f0       	breq	.+2      	; 0x2c0a <DIO_voidSetPinDirection+0x10a>
    2c08:	74 c0       	rjmp	.+232    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
		{
			switch(Copy_u8PortNum)
    2c0a:	89 81       	ldd	r24, Y+1	; 0x01
    2c0c:	28 2f       	mov	r18, r24
    2c0e:	30 e0       	ldi	r19, 0x00	; 0
    2c10:	3d 83       	std	Y+5, r19	; 0x05
    2c12:	2c 83       	std	Y+4, r18	; 0x04
    2c14:	8c 81       	ldd	r24, Y+4	; 0x04
    2c16:	9d 81       	ldd	r25, Y+5	; 0x05
    2c18:	82 30       	cpi	r24, 0x02	; 2
    2c1a:	91 05       	cpc	r25, r1
    2c1c:	61 f1       	breq	.+88     	; 0x2c76 <DIO_voidSetPinDirection+0x176>
    2c1e:	2c 81       	ldd	r18, Y+4	; 0x04
    2c20:	3d 81       	ldd	r19, Y+5	; 0x05
    2c22:	23 30       	cpi	r18, 0x03	; 3
    2c24:	31 05       	cpc	r19, r1
    2c26:	34 f4       	brge	.+12     	; 0x2c34 <DIO_voidSetPinDirection+0x134>
    2c28:	8c 81       	ldd	r24, Y+4	; 0x04
    2c2a:	9d 81       	ldd	r25, Y+5	; 0x05
    2c2c:	81 30       	cpi	r24, 0x01	; 1
    2c2e:	91 05       	cpc	r25, r1
    2c30:	69 f0       	breq	.+26     	; 0x2c4c <DIO_voidSetPinDirection+0x14c>
    2c32:	5f c0       	rjmp	.+190    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
    2c34:	2c 81       	ldd	r18, Y+4	; 0x04
    2c36:	3d 81       	ldd	r19, Y+5	; 0x05
    2c38:	23 30       	cpi	r18, 0x03	; 3
    2c3a:	31 05       	cpc	r19, r1
    2c3c:	89 f1       	breq	.+98     	; 0x2ca0 <DIO_voidSetPinDirection+0x1a0>
    2c3e:	8c 81       	ldd	r24, Y+4	; 0x04
    2c40:	9d 81       	ldd	r25, Y+5	; 0x05
    2c42:	84 30       	cpi	r24, 0x04	; 4
    2c44:	91 05       	cpc	r25, r1
    2c46:	09 f4       	brne	.+2      	; 0x2c4a <DIO_voidSetPinDirection+0x14a>
    2c48:	40 c0       	rjmp	.+128    	; 0x2cca <DIO_voidSetPinDirection+0x1ca>
    2c4a:	53 c0       	rjmp	.+166    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
			{
				case DIO_u8PORTA :      CLR_BIT( DDRA, Copy_u8PinNum);    break;
    2c4c:	aa e3       	ldi	r26, 0x3A	; 58
    2c4e:	b0 e0       	ldi	r27, 0x00	; 0
    2c50:	ea e3       	ldi	r30, 0x3A	; 58
    2c52:	f0 e0       	ldi	r31, 0x00	; 0
    2c54:	80 81       	ld	r24, Z
    2c56:	48 2f       	mov	r20, r24
    2c58:	8a 81       	ldd	r24, Y+2	; 0x02
    2c5a:	28 2f       	mov	r18, r24
    2c5c:	30 e0       	ldi	r19, 0x00	; 0
    2c5e:	81 e0       	ldi	r24, 0x01	; 1
    2c60:	90 e0       	ldi	r25, 0x00	; 0
    2c62:	02 2e       	mov	r0, r18
    2c64:	02 c0       	rjmp	.+4      	; 0x2c6a <DIO_voidSetPinDirection+0x16a>
    2c66:	88 0f       	add	r24, r24
    2c68:	99 1f       	adc	r25, r25
    2c6a:	0a 94       	dec	r0
    2c6c:	e2 f7       	brpl	.-8      	; 0x2c66 <DIO_voidSetPinDirection+0x166>
    2c6e:	80 95       	com	r24
    2c70:	84 23       	and	r24, r20
    2c72:	8c 93       	st	X, r24
    2c74:	3e c0       	rjmp	.+124    	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTB :      CLR_BIT( DDRB, Copy_u8PinNum);    break;
    2c76:	a7 e3       	ldi	r26, 0x37	; 55
    2c78:	b0 e0       	ldi	r27, 0x00	; 0
    2c7a:	e7 e3       	ldi	r30, 0x37	; 55
    2c7c:	f0 e0       	ldi	r31, 0x00	; 0
    2c7e:	80 81       	ld	r24, Z
    2c80:	48 2f       	mov	r20, r24
    2c82:	8a 81       	ldd	r24, Y+2	; 0x02
    2c84:	28 2f       	mov	r18, r24
    2c86:	30 e0       	ldi	r19, 0x00	; 0
    2c88:	81 e0       	ldi	r24, 0x01	; 1
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	02 2e       	mov	r0, r18
    2c8e:	02 c0       	rjmp	.+4      	; 0x2c94 <DIO_voidSetPinDirection+0x194>
    2c90:	88 0f       	add	r24, r24
    2c92:	99 1f       	adc	r25, r25
    2c94:	0a 94       	dec	r0
    2c96:	e2 f7       	brpl	.-8      	; 0x2c90 <DIO_voidSetPinDirection+0x190>
    2c98:	80 95       	com	r24
    2c9a:	84 23       	and	r24, r20
    2c9c:	8c 93       	st	X, r24
    2c9e:	29 c0       	rjmp	.+82     	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTC :      CLR_BIT( DDRC, Copy_u8PinNum);    break;
    2ca0:	a4 e3       	ldi	r26, 0x34	; 52
    2ca2:	b0 e0       	ldi	r27, 0x00	; 0
    2ca4:	e4 e3       	ldi	r30, 0x34	; 52
    2ca6:	f0 e0       	ldi	r31, 0x00	; 0
    2ca8:	80 81       	ld	r24, Z
    2caa:	48 2f       	mov	r20, r24
    2cac:	8a 81       	ldd	r24, Y+2	; 0x02
    2cae:	28 2f       	mov	r18, r24
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	81 e0       	ldi	r24, 0x01	; 1
    2cb4:	90 e0       	ldi	r25, 0x00	; 0
    2cb6:	02 2e       	mov	r0, r18
    2cb8:	02 c0       	rjmp	.+4      	; 0x2cbe <DIO_voidSetPinDirection+0x1be>
    2cba:	88 0f       	add	r24, r24
    2cbc:	99 1f       	adc	r25, r25
    2cbe:	0a 94       	dec	r0
    2cc0:	e2 f7       	brpl	.-8      	; 0x2cba <DIO_voidSetPinDirection+0x1ba>
    2cc2:	80 95       	com	r24
    2cc4:	84 23       	and	r24, r20
    2cc6:	8c 93       	st	X, r24
    2cc8:	14 c0       	rjmp	.+40     	; 0x2cf2 <DIO_voidSetPinDirection+0x1f2>
				case DIO_u8PORTD :      CLR_BIT( DDRD, Copy_u8PinNum);    break;
    2cca:	a1 e3       	ldi	r26, 0x31	; 49
    2ccc:	b0 e0       	ldi	r27, 0x00	; 0
    2cce:	e1 e3       	ldi	r30, 0x31	; 49
    2cd0:	f0 e0       	ldi	r31, 0x00	; 0
    2cd2:	80 81       	ld	r24, Z
    2cd4:	48 2f       	mov	r20, r24
    2cd6:	8a 81       	ldd	r24, Y+2	; 0x02
    2cd8:	28 2f       	mov	r18, r24
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	81 e0       	ldi	r24, 0x01	; 1
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	02 2e       	mov	r0, r18
    2ce2:	02 c0       	rjmp	.+4      	; 0x2ce8 <DIO_voidSetPinDirection+0x1e8>
    2ce4:	88 0f       	add	r24, r24
    2ce6:	99 1f       	adc	r25, r25
    2ce8:	0a 94       	dec	r0
    2cea:	e2 f7       	brpl	.-8      	; 0x2ce4 <DIO_voidSetPinDirection+0x1e4>
    2cec:	80 95       	com	r24
    2cee:	84 23       	and	r24, r20
    2cf0:	8c 93       	st	X, r24
				default :             /* return error */                  break;
			}
		}
}
    2cf2:	27 96       	adiw	r28, 0x07	; 7
    2cf4:	0f b6       	in	r0, 0x3f	; 63
    2cf6:	f8 94       	cli
    2cf8:	de bf       	out	0x3e, r29	; 62
    2cfa:	0f be       	out	0x3f, r0	; 63
    2cfc:	cd bf       	out	0x3d, r28	; 61
    2cfe:	cf 91       	pop	r28
    2d00:	df 91       	pop	r29
    2d02:	08 95       	ret

00002d04 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Value )
{
    2d04:	df 93       	push	r29
    2d06:	cf 93       	push	r28
    2d08:	cd b7       	in	r28, 0x3d	; 61
    2d0a:	de b7       	in	r29, 0x3e	; 62
    2d0c:	27 97       	sbiw	r28, 0x07	; 7
    2d0e:	0f b6       	in	r0, 0x3f	; 63
    2d10:	f8 94       	cli
    2d12:	de bf       	out	0x3e, r29	; 62
    2d14:	0f be       	out	0x3f, r0	; 63
    2d16:	cd bf       	out	0x3d, r28	; 61
    2d18:	89 83       	std	Y+1, r24	; 0x01
    2d1a:	6a 83       	std	Y+2, r22	; 0x02
    2d1c:	4b 83       	std	Y+3, r20	; 0x03
	if (DIO_u8HIGH == Copy_u8Value)
    2d1e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d20:	81 30       	cpi	r24, 0x01	; 1
    2d22:	09 f0       	breq	.+2      	; 0x2d26 <DIO_voidSetPinValue+0x22>
    2d24:	70 c0       	rjmp	.+224    	; 0x2e06 <DIO_voidSetPinValue+0x102>
		{
			switch(Copy_u8PortNum)
    2d26:	89 81       	ldd	r24, Y+1	; 0x01
    2d28:	28 2f       	mov	r18, r24
    2d2a:	30 e0       	ldi	r19, 0x00	; 0
    2d2c:	3f 83       	std	Y+7, r19	; 0x07
    2d2e:	2e 83       	std	Y+6, r18	; 0x06
    2d30:	8e 81       	ldd	r24, Y+6	; 0x06
    2d32:	9f 81       	ldd	r25, Y+7	; 0x07
    2d34:	82 30       	cpi	r24, 0x02	; 2
    2d36:	91 05       	cpc	r25, r1
    2d38:	51 f1       	breq	.+84     	; 0x2d8e <DIO_voidSetPinValue+0x8a>
    2d3a:	2e 81       	ldd	r18, Y+6	; 0x06
    2d3c:	3f 81       	ldd	r19, Y+7	; 0x07
    2d3e:	23 30       	cpi	r18, 0x03	; 3
    2d40:	31 05       	cpc	r19, r1
    2d42:	34 f4       	brge	.+12     	; 0x2d50 <DIO_voidSetPinValue+0x4c>
    2d44:	8e 81       	ldd	r24, Y+6	; 0x06
    2d46:	9f 81       	ldd	r25, Y+7	; 0x07
    2d48:	81 30       	cpi	r24, 0x01	; 1
    2d4a:	91 05       	cpc	r25, r1
    2d4c:	61 f0       	breq	.+24     	; 0x2d66 <DIO_voidSetPinValue+0x62>
    2d4e:	d3 c0       	rjmp	.+422    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
    2d50:	2e 81       	ldd	r18, Y+6	; 0x06
    2d52:	3f 81       	ldd	r19, Y+7	; 0x07
    2d54:	23 30       	cpi	r18, 0x03	; 3
    2d56:	31 05       	cpc	r19, r1
    2d58:	71 f1       	breq	.+92     	; 0x2db6 <DIO_voidSetPinValue+0xb2>
    2d5a:	8e 81       	ldd	r24, Y+6	; 0x06
    2d5c:	9f 81       	ldd	r25, Y+7	; 0x07
    2d5e:	84 30       	cpi	r24, 0x04	; 4
    2d60:	91 05       	cpc	r25, r1
    2d62:	e9 f1       	breq	.+122    	; 0x2dde <DIO_voidSetPinValue+0xda>
    2d64:	c8 c0       	rjmp	.+400    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
			{
				case DIO_u8PORTA :         SET_BIT(PORTA , Copy_u8PinNum);       break;
    2d66:	ab e3       	ldi	r26, 0x3B	; 59
    2d68:	b0 e0       	ldi	r27, 0x00	; 0
    2d6a:	eb e3       	ldi	r30, 0x3B	; 59
    2d6c:	f0 e0       	ldi	r31, 0x00	; 0
    2d6e:	80 81       	ld	r24, Z
    2d70:	48 2f       	mov	r20, r24
    2d72:	8a 81       	ldd	r24, Y+2	; 0x02
    2d74:	28 2f       	mov	r18, r24
    2d76:	30 e0       	ldi	r19, 0x00	; 0
    2d78:	81 e0       	ldi	r24, 0x01	; 1
    2d7a:	90 e0       	ldi	r25, 0x00	; 0
    2d7c:	02 2e       	mov	r0, r18
    2d7e:	02 c0       	rjmp	.+4      	; 0x2d84 <DIO_voidSetPinValue+0x80>
    2d80:	88 0f       	add	r24, r24
    2d82:	99 1f       	adc	r25, r25
    2d84:	0a 94       	dec	r0
    2d86:	e2 f7       	brpl	.-8      	; 0x2d80 <DIO_voidSetPinValue+0x7c>
    2d88:	84 2b       	or	r24, r20
    2d8a:	8c 93       	st	X, r24
    2d8c:	b4 c0       	rjmp	.+360    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         SET_BIT(PORTB , Copy_u8PinNum);       break;
    2d8e:	a8 e3       	ldi	r26, 0x38	; 56
    2d90:	b0 e0       	ldi	r27, 0x00	; 0
    2d92:	e8 e3       	ldi	r30, 0x38	; 56
    2d94:	f0 e0       	ldi	r31, 0x00	; 0
    2d96:	80 81       	ld	r24, Z
    2d98:	48 2f       	mov	r20, r24
    2d9a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d9c:	28 2f       	mov	r18, r24
    2d9e:	30 e0       	ldi	r19, 0x00	; 0
    2da0:	81 e0       	ldi	r24, 0x01	; 1
    2da2:	90 e0       	ldi	r25, 0x00	; 0
    2da4:	02 2e       	mov	r0, r18
    2da6:	02 c0       	rjmp	.+4      	; 0x2dac <DIO_voidSetPinValue+0xa8>
    2da8:	88 0f       	add	r24, r24
    2daa:	99 1f       	adc	r25, r25
    2dac:	0a 94       	dec	r0
    2dae:	e2 f7       	brpl	.-8      	; 0x2da8 <DIO_voidSetPinValue+0xa4>
    2db0:	84 2b       	or	r24, r20
    2db2:	8c 93       	st	X, r24
    2db4:	a0 c0       	rjmp	.+320    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         SET_BIT(PORTC , Copy_u8PinNum);       break;
    2db6:	a5 e3       	ldi	r26, 0x35	; 53
    2db8:	b0 e0       	ldi	r27, 0x00	; 0
    2dba:	e5 e3       	ldi	r30, 0x35	; 53
    2dbc:	f0 e0       	ldi	r31, 0x00	; 0
    2dbe:	80 81       	ld	r24, Z
    2dc0:	48 2f       	mov	r20, r24
    2dc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2dc4:	28 2f       	mov	r18, r24
    2dc6:	30 e0       	ldi	r19, 0x00	; 0
    2dc8:	81 e0       	ldi	r24, 0x01	; 1
    2dca:	90 e0       	ldi	r25, 0x00	; 0
    2dcc:	02 2e       	mov	r0, r18
    2dce:	02 c0       	rjmp	.+4      	; 0x2dd4 <DIO_voidSetPinValue+0xd0>
    2dd0:	88 0f       	add	r24, r24
    2dd2:	99 1f       	adc	r25, r25
    2dd4:	0a 94       	dec	r0
    2dd6:	e2 f7       	brpl	.-8      	; 0x2dd0 <DIO_voidSetPinValue+0xcc>
    2dd8:	84 2b       	or	r24, r20
    2dda:	8c 93       	st	X, r24
    2ddc:	8c c0       	rjmp	.+280    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         SET_BIT(PORTD , Copy_u8PinNum);       break;
    2dde:	a2 e3       	ldi	r26, 0x32	; 50
    2de0:	b0 e0       	ldi	r27, 0x00	; 0
    2de2:	e2 e3       	ldi	r30, 0x32	; 50
    2de4:	f0 e0       	ldi	r31, 0x00	; 0
    2de6:	80 81       	ld	r24, Z
    2de8:	48 2f       	mov	r20, r24
    2dea:	8a 81       	ldd	r24, Y+2	; 0x02
    2dec:	28 2f       	mov	r18, r24
    2dee:	30 e0       	ldi	r19, 0x00	; 0
    2df0:	81 e0       	ldi	r24, 0x01	; 1
    2df2:	90 e0       	ldi	r25, 0x00	; 0
    2df4:	02 2e       	mov	r0, r18
    2df6:	02 c0       	rjmp	.+4      	; 0x2dfc <DIO_voidSetPinValue+0xf8>
    2df8:	88 0f       	add	r24, r24
    2dfa:	99 1f       	adc	r25, r25
    2dfc:	0a 94       	dec	r0
    2dfe:	e2 f7       	brpl	.-8      	; 0x2df8 <DIO_voidSetPinValue+0xf4>
    2e00:	84 2b       	or	r24, r20
    2e02:	8c 93       	st	X, r24
    2e04:	78 c0       	rjmp	.+240    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
				default :                  /* return error */                    break;
			}
		}
		else if (DIO_u8LOW == Copy_u8Value)
    2e06:	8b 81       	ldd	r24, Y+3	; 0x03
    2e08:	88 23       	and	r24, r24
    2e0a:	09 f0       	breq	.+2      	; 0x2e0e <DIO_voidSetPinValue+0x10a>
    2e0c:	74 c0       	rjmp	.+232    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
		{
			switch(Copy_u8PortNum){
    2e0e:	89 81       	ldd	r24, Y+1	; 0x01
    2e10:	28 2f       	mov	r18, r24
    2e12:	30 e0       	ldi	r19, 0x00	; 0
    2e14:	3d 83       	std	Y+5, r19	; 0x05
    2e16:	2c 83       	std	Y+4, r18	; 0x04
    2e18:	8c 81       	ldd	r24, Y+4	; 0x04
    2e1a:	9d 81       	ldd	r25, Y+5	; 0x05
    2e1c:	82 30       	cpi	r24, 0x02	; 2
    2e1e:	91 05       	cpc	r25, r1
    2e20:	61 f1       	breq	.+88     	; 0x2e7a <DIO_voidSetPinValue+0x176>
    2e22:	2c 81       	ldd	r18, Y+4	; 0x04
    2e24:	3d 81       	ldd	r19, Y+5	; 0x05
    2e26:	23 30       	cpi	r18, 0x03	; 3
    2e28:	31 05       	cpc	r19, r1
    2e2a:	34 f4       	brge	.+12     	; 0x2e38 <DIO_voidSetPinValue+0x134>
    2e2c:	8c 81       	ldd	r24, Y+4	; 0x04
    2e2e:	9d 81       	ldd	r25, Y+5	; 0x05
    2e30:	81 30       	cpi	r24, 0x01	; 1
    2e32:	91 05       	cpc	r25, r1
    2e34:	69 f0       	breq	.+26     	; 0x2e50 <DIO_voidSetPinValue+0x14c>
    2e36:	5f c0       	rjmp	.+190    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
    2e38:	2c 81       	ldd	r18, Y+4	; 0x04
    2e3a:	3d 81       	ldd	r19, Y+5	; 0x05
    2e3c:	23 30       	cpi	r18, 0x03	; 3
    2e3e:	31 05       	cpc	r19, r1
    2e40:	89 f1       	breq	.+98     	; 0x2ea4 <DIO_voidSetPinValue+0x1a0>
    2e42:	8c 81       	ldd	r24, Y+4	; 0x04
    2e44:	9d 81       	ldd	r25, Y+5	; 0x05
    2e46:	84 30       	cpi	r24, 0x04	; 4
    2e48:	91 05       	cpc	r25, r1
    2e4a:	09 f4       	brne	.+2      	; 0x2e4e <DIO_voidSetPinValue+0x14a>
    2e4c:	40 c0       	rjmp	.+128    	; 0x2ece <DIO_voidSetPinValue+0x1ca>
    2e4e:	53 c0       	rjmp	.+166    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>

				case DIO_u8PORTA :         CLR_BIT( PORTA , Copy_u8PinNum);        break;
    2e50:	ab e3       	ldi	r26, 0x3B	; 59
    2e52:	b0 e0       	ldi	r27, 0x00	; 0
    2e54:	eb e3       	ldi	r30, 0x3B	; 59
    2e56:	f0 e0       	ldi	r31, 0x00	; 0
    2e58:	80 81       	ld	r24, Z
    2e5a:	48 2f       	mov	r20, r24
    2e5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2e5e:	28 2f       	mov	r18, r24
    2e60:	30 e0       	ldi	r19, 0x00	; 0
    2e62:	81 e0       	ldi	r24, 0x01	; 1
    2e64:	90 e0       	ldi	r25, 0x00	; 0
    2e66:	02 2e       	mov	r0, r18
    2e68:	02 c0       	rjmp	.+4      	; 0x2e6e <DIO_voidSetPinValue+0x16a>
    2e6a:	88 0f       	add	r24, r24
    2e6c:	99 1f       	adc	r25, r25
    2e6e:	0a 94       	dec	r0
    2e70:	e2 f7       	brpl	.-8      	; 0x2e6a <DIO_voidSetPinValue+0x166>
    2e72:	80 95       	com	r24
    2e74:	84 23       	and	r24, r20
    2e76:	8c 93       	st	X, r24
    2e78:	3e c0       	rjmp	.+124    	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTB :         CLR_BIT( PORTB , Copy_u8PinNum);        break;
    2e7a:	a8 e3       	ldi	r26, 0x38	; 56
    2e7c:	b0 e0       	ldi	r27, 0x00	; 0
    2e7e:	e8 e3       	ldi	r30, 0x38	; 56
    2e80:	f0 e0       	ldi	r31, 0x00	; 0
    2e82:	80 81       	ld	r24, Z
    2e84:	48 2f       	mov	r20, r24
    2e86:	8a 81       	ldd	r24, Y+2	; 0x02
    2e88:	28 2f       	mov	r18, r24
    2e8a:	30 e0       	ldi	r19, 0x00	; 0
    2e8c:	81 e0       	ldi	r24, 0x01	; 1
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	02 2e       	mov	r0, r18
    2e92:	02 c0       	rjmp	.+4      	; 0x2e98 <DIO_voidSetPinValue+0x194>
    2e94:	88 0f       	add	r24, r24
    2e96:	99 1f       	adc	r25, r25
    2e98:	0a 94       	dec	r0
    2e9a:	e2 f7       	brpl	.-8      	; 0x2e94 <DIO_voidSetPinValue+0x190>
    2e9c:	80 95       	com	r24
    2e9e:	84 23       	and	r24, r20
    2ea0:	8c 93       	st	X, r24
    2ea2:	29 c0       	rjmp	.+82     	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTC :         CLR_BIT( PORTC , Copy_u8PinNum);        break;
    2ea4:	a5 e3       	ldi	r26, 0x35	; 53
    2ea6:	b0 e0       	ldi	r27, 0x00	; 0
    2ea8:	e5 e3       	ldi	r30, 0x35	; 53
    2eaa:	f0 e0       	ldi	r31, 0x00	; 0
    2eac:	80 81       	ld	r24, Z
    2eae:	48 2f       	mov	r20, r24
    2eb0:	8a 81       	ldd	r24, Y+2	; 0x02
    2eb2:	28 2f       	mov	r18, r24
    2eb4:	30 e0       	ldi	r19, 0x00	; 0
    2eb6:	81 e0       	ldi	r24, 0x01	; 1
    2eb8:	90 e0       	ldi	r25, 0x00	; 0
    2eba:	02 2e       	mov	r0, r18
    2ebc:	02 c0       	rjmp	.+4      	; 0x2ec2 <DIO_voidSetPinValue+0x1be>
    2ebe:	88 0f       	add	r24, r24
    2ec0:	99 1f       	adc	r25, r25
    2ec2:	0a 94       	dec	r0
    2ec4:	e2 f7       	brpl	.-8      	; 0x2ebe <DIO_voidSetPinValue+0x1ba>
    2ec6:	80 95       	com	r24
    2ec8:	84 23       	and	r24, r20
    2eca:	8c 93       	st	X, r24
    2ecc:	14 c0       	rjmp	.+40     	; 0x2ef6 <DIO_voidSetPinValue+0x1f2>
				case DIO_u8PORTD :         CLR_BIT( PORTD , Copy_u8PinNum);        break;
    2ece:	a2 e3       	ldi	r26, 0x32	; 50
    2ed0:	b0 e0       	ldi	r27, 0x00	; 0
    2ed2:	e2 e3       	ldi	r30, 0x32	; 50
    2ed4:	f0 e0       	ldi	r31, 0x00	; 0
    2ed6:	80 81       	ld	r24, Z
    2ed8:	48 2f       	mov	r20, r24
    2eda:	8a 81       	ldd	r24, Y+2	; 0x02
    2edc:	28 2f       	mov	r18, r24
    2ede:	30 e0       	ldi	r19, 0x00	; 0
    2ee0:	81 e0       	ldi	r24, 0x01	; 1
    2ee2:	90 e0       	ldi	r25, 0x00	; 0
    2ee4:	02 2e       	mov	r0, r18
    2ee6:	02 c0       	rjmp	.+4      	; 0x2eec <DIO_voidSetPinValue+0x1e8>
    2ee8:	88 0f       	add	r24, r24
    2eea:	99 1f       	adc	r25, r25
    2eec:	0a 94       	dec	r0
    2eee:	e2 f7       	brpl	.-8      	; 0x2ee8 <DIO_voidSetPinValue+0x1e4>
    2ef0:	80 95       	com	r24
    2ef2:	84 23       	and	r24, r20
    2ef4:	8c 93       	st	X, r24
				default :                     /* return error */                   break;
				}
		}
		else {/*   return error  */}
}
    2ef6:	27 96       	adiw	r28, 0x07	; 7
    2ef8:	0f b6       	in	r0, 0x3f	; 63
    2efa:	f8 94       	cli
    2efc:	de bf       	out	0x3e, r29	; 62
    2efe:	0f be       	out	0x3f, r0	; 63
    2f00:	cd bf       	out	0x3d, r28	; 61
    2f02:	cf 91       	pop	r28
    2f04:	df 91       	pop	r29
    2f06:	08 95       	ret

00002f08 <DIO_u8GetPinValue>:

uint8 DIO_u8GetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum )
{
    2f08:	df 93       	push	r29
    2f0a:	cf 93       	push	r28
    2f0c:	00 d0       	rcall	.+0      	; 0x2f0e <DIO_u8GetPinValue+0x6>
    2f0e:	00 d0       	rcall	.+0      	; 0x2f10 <DIO_u8GetPinValue+0x8>
    2f10:	0f 92       	push	r0
    2f12:	cd b7       	in	r28, 0x3d	; 61
    2f14:	de b7       	in	r29, 0x3e	; 62
    2f16:	8a 83       	std	Y+2, r24	; 0x02
    2f18:	6b 83       	std	Y+3, r22	; 0x03
	uint8 BIT;
	switch(Copy_u8PortNum)
    2f1a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f1c:	28 2f       	mov	r18, r24
    2f1e:	30 e0       	ldi	r19, 0x00	; 0
    2f20:	3d 83       	std	Y+5, r19	; 0x05
    2f22:	2c 83       	std	Y+4, r18	; 0x04
    2f24:	4c 81       	ldd	r20, Y+4	; 0x04
    2f26:	5d 81       	ldd	r21, Y+5	; 0x05
    2f28:	42 30       	cpi	r20, 0x02	; 2
    2f2a:	51 05       	cpc	r21, r1
    2f2c:	41 f1       	breq	.+80     	; 0x2f7e <DIO_u8GetPinValue+0x76>
    2f2e:	8c 81       	ldd	r24, Y+4	; 0x04
    2f30:	9d 81       	ldd	r25, Y+5	; 0x05
    2f32:	83 30       	cpi	r24, 0x03	; 3
    2f34:	91 05       	cpc	r25, r1
    2f36:	34 f4       	brge	.+12     	; 0x2f44 <DIO_u8GetPinValue+0x3c>
    2f38:	2c 81       	ldd	r18, Y+4	; 0x04
    2f3a:	3d 81       	ldd	r19, Y+5	; 0x05
    2f3c:	21 30       	cpi	r18, 0x01	; 1
    2f3e:	31 05       	cpc	r19, r1
    2f40:	61 f0       	breq	.+24     	; 0x2f5a <DIO_u8GetPinValue+0x52>
    2f42:	52 c0       	rjmp	.+164    	; 0x2fe8 <DIO_u8GetPinValue+0xe0>
    2f44:	4c 81       	ldd	r20, Y+4	; 0x04
    2f46:	5d 81       	ldd	r21, Y+5	; 0x05
    2f48:	43 30       	cpi	r20, 0x03	; 3
    2f4a:	51 05       	cpc	r21, r1
    2f4c:	51 f1       	breq	.+84     	; 0x2fa2 <DIO_u8GetPinValue+0x9a>
    2f4e:	8c 81       	ldd	r24, Y+4	; 0x04
    2f50:	9d 81       	ldd	r25, Y+5	; 0x05
    2f52:	84 30       	cpi	r24, 0x04	; 4
    2f54:	91 05       	cpc	r25, r1
    2f56:	b9 f1       	breq	.+110    	; 0x2fc6 <DIO_u8GetPinValue+0xbe>
    2f58:	47 c0       	rjmp	.+142    	; 0x2fe8 <DIO_u8GetPinValue+0xe0>
		{
				case DIO_u8PORTA :         BIT = GET_BIT(PINA , Copy_u8PinNum);       break;
    2f5a:	e9 e3       	ldi	r30, 0x39	; 57
    2f5c:	f0 e0       	ldi	r31, 0x00	; 0
    2f5e:	80 81       	ld	r24, Z
    2f60:	28 2f       	mov	r18, r24
    2f62:	30 e0       	ldi	r19, 0x00	; 0
    2f64:	8b 81       	ldd	r24, Y+3	; 0x03
    2f66:	88 2f       	mov	r24, r24
    2f68:	90 e0       	ldi	r25, 0x00	; 0
    2f6a:	a9 01       	movw	r20, r18
    2f6c:	02 c0       	rjmp	.+4      	; 0x2f72 <DIO_u8GetPinValue+0x6a>
    2f6e:	55 95       	asr	r21
    2f70:	47 95       	ror	r20
    2f72:	8a 95       	dec	r24
    2f74:	e2 f7       	brpl	.-8      	; 0x2f6e <DIO_u8GetPinValue+0x66>
    2f76:	ca 01       	movw	r24, r20
    2f78:	81 70       	andi	r24, 0x01	; 1
    2f7a:	89 83       	std	Y+1, r24	; 0x01
    2f7c:	35 c0       	rjmp	.+106    	; 0x2fe8 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTB :         BIT = GET_BIT(PINB , Copy_u8PinNum);       break;
    2f7e:	e6 e3       	ldi	r30, 0x36	; 54
    2f80:	f0 e0       	ldi	r31, 0x00	; 0
    2f82:	80 81       	ld	r24, Z
    2f84:	28 2f       	mov	r18, r24
    2f86:	30 e0       	ldi	r19, 0x00	; 0
    2f88:	8b 81       	ldd	r24, Y+3	; 0x03
    2f8a:	88 2f       	mov	r24, r24
    2f8c:	90 e0       	ldi	r25, 0x00	; 0
    2f8e:	a9 01       	movw	r20, r18
    2f90:	02 c0       	rjmp	.+4      	; 0x2f96 <DIO_u8GetPinValue+0x8e>
    2f92:	55 95       	asr	r21
    2f94:	47 95       	ror	r20
    2f96:	8a 95       	dec	r24
    2f98:	e2 f7       	brpl	.-8      	; 0x2f92 <DIO_u8GetPinValue+0x8a>
    2f9a:	ca 01       	movw	r24, r20
    2f9c:	81 70       	andi	r24, 0x01	; 1
    2f9e:	89 83       	std	Y+1, r24	; 0x01
    2fa0:	23 c0       	rjmp	.+70     	; 0x2fe8 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTC :         BIT = GET_BIT(PINC , Copy_u8PinNum);       break;
    2fa2:	e3 e3       	ldi	r30, 0x33	; 51
    2fa4:	f0 e0       	ldi	r31, 0x00	; 0
    2fa6:	80 81       	ld	r24, Z
    2fa8:	28 2f       	mov	r18, r24
    2faa:	30 e0       	ldi	r19, 0x00	; 0
    2fac:	8b 81       	ldd	r24, Y+3	; 0x03
    2fae:	88 2f       	mov	r24, r24
    2fb0:	90 e0       	ldi	r25, 0x00	; 0
    2fb2:	a9 01       	movw	r20, r18
    2fb4:	02 c0       	rjmp	.+4      	; 0x2fba <DIO_u8GetPinValue+0xb2>
    2fb6:	55 95       	asr	r21
    2fb8:	47 95       	ror	r20
    2fba:	8a 95       	dec	r24
    2fbc:	e2 f7       	brpl	.-8      	; 0x2fb6 <DIO_u8GetPinValue+0xae>
    2fbe:	ca 01       	movw	r24, r20
    2fc0:	81 70       	andi	r24, 0x01	; 1
    2fc2:	89 83       	std	Y+1, r24	; 0x01
    2fc4:	11 c0       	rjmp	.+34     	; 0x2fe8 <DIO_u8GetPinValue+0xe0>
				case DIO_u8PORTD :         BIT = GET_BIT(PIND , Copy_u8PinNum);       break;
    2fc6:	e0 e3       	ldi	r30, 0x30	; 48
    2fc8:	f0 e0       	ldi	r31, 0x00	; 0
    2fca:	80 81       	ld	r24, Z
    2fcc:	28 2f       	mov	r18, r24
    2fce:	30 e0       	ldi	r19, 0x00	; 0
    2fd0:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd2:	88 2f       	mov	r24, r24
    2fd4:	90 e0       	ldi	r25, 0x00	; 0
    2fd6:	a9 01       	movw	r20, r18
    2fd8:	02 c0       	rjmp	.+4      	; 0x2fde <DIO_u8GetPinValue+0xd6>
    2fda:	55 95       	asr	r21
    2fdc:	47 95       	ror	r20
    2fde:	8a 95       	dec	r24
    2fe0:	e2 f7       	brpl	.-8      	; 0x2fda <DIO_u8GetPinValue+0xd2>
    2fe2:	ca 01       	movw	r24, r20
    2fe4:	81 70       	andi	r24, 0x01	; 1
    2fe6:	89 83       	std	Y+1, r24	; 0x01
		}
	return BIT;
    2fe8:	89 81       	ldd	r24, Y+1	; 0x01
}
    2fea:	0f 90       	pop	r0
    2fec:	0f 90       	pop	r0
    2fee:	0f 90       	pop	r0
    2ff0:	0f 90       	pop	r0
    2ff2:	0f 90       	pop	r0
    2ff4:	cf 91       	pop	r28
    2ff6:	df 91       	pop	r29
    2ff8:	08 95       	ret

00002ffa <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(uint8 Copy_u8PortNum, uint8 Copy_u8Mode )
{
    2ffa:	df 93       	push	r29
    2ffc:	cf 93       	push	r28
    2ffe:	00 d0       	rcall	.+0      	; 0x3000 <DIO_voidSetPortDirection+0x6>
    3000:	00 d0       	rcall	.+0      	; 0x3002 <DIO_voidSetPortDirection+0x8>
    3002:	cd b7       	in	r28, 0x3d	; 61
    3004:	de b7       	in	r29, 0x3e	; 62
    3006:	89 83       	std	Y+1, r24	; 0x01
    3008:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    300a:	89 81       	ldd	r24, Y+1	; 0x01
    300c:	28 2f       	mov	r18, r24
    300e:	30 e0       	ldi	r19, 0x00	; 0
    3010:	3c 83       	std	Y+4, r19	; 0x04
    3012:	2b 83       	std	Y+3, r18	; 0x03
    3014:	8b 81       	ldd	r24, Y+3	; 0x03
    3016:	9c 81       	ldd	r25, Y+4	; 0x04
    3018:	82 30       	cpi	r24, 0x02	; 2
    301a:	91 05       	cpc	r25, r1
    301c:	d9 f0       	breq	.+54     	; 0x3054 <DIO_voidSetPortDirection+0x5a>
    301e:	2b 81       	ldd	r18, Y+3	; 0x03
    3020:	3c 81       	ldd	r19, Y+4	; 0x04
    3022:	23 30       	cpi	r18, 0x03	; 3
    3024:	31 05       	cpc	r19, r1
    3026:	34 f4       	brge	.+12     	; 0x3034 <DIO_voidSetPortDirection+0x3a>
    3028:	8b 81       	ldd	r24, Y+3	; 0x03
    302a:	9c 81       	ldd	r25, Y+4	; 0x04
    302c:	81 30       	cpi	r24, 0x01	; 1
    302e:	91 05       	cpc	r25, r1
    3030:	61 f0       	breq	.+24     	; 0x304a <DIO_voidSetPortDirection+0x50>
    3032:	1e c0       	rjmp	.+60     	; 0x3070 <DIO_voidSetPortDirection+0x76>
    3034:	2b 81       	ldd	r18, Y+3	; 0x03
    3036:	3c 81       	ldd	r19, Y+4	; 0x04
    3038:	23 30       	cpi	r18, 0x03	; 3
    303a:	31 05       	cpc	r19, r1
    303c:	81 f0       	breq	.+32     	; 0x305e <DIO_voidSetPortDirection+0x64>
    303e:	8b 81       	ldd	r24, Y+3	; 0x03
    3040:	9c 81       	ldd	r25, Y+4	; 0x04
    3042:	84 30       	cpi	r24, 0x04	; 4
    3044:	91 05       	cpc	r25, r1
    3046:	81 f0       	breq	.+32     	; 0x3068 <DIO_voidSetPortDirection+0x6e>
    3048:	13 c0       	rjmp	.+38     	; 0x3070 <DIO_voidSetPortDirection+0x76>
		{
			case DIO_u8PORTA :         DDRA  = Copy_u8Mode;       break;
    304a:	ea e3       	ldi	r30, 0x3A	; 58
    304c:	f0 e0       	ldi	r31, 0x00	; 0
    304e:	8a 81       	ldd	r24, Y+2	; 0x02
    3050:	80 83       	st	Z, r24
    3052:	0e c0       	rjmp	.+28     	; 0x3070 <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTB :         DDRB  = Copy_u8Mode;       break;
    3054:	e7 e3       	ldi	r30, 0x37	; 55
    3056:	f0 e0       	ldi	r31, 0x00	; 0
    3058:	8a 81       	ldd	r24, Y+2	; 0x02
    305a:	80 83       	st	Z, r24
    305c:	09 c0       	rjmp	.+18     	; 0x3070 <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTC :         DDRC  = Copy_u8Mode;       break;
    305e:	e4 e3       	ldi	r30, 0x34	; 52
    3060:	f0 e0       	ldi	r31, 0x00	; 0
    3062:	8a 81       	ldd	r24, Y+2	; 0x02
    3064:	80 83       	st	Z, r24
    3066:	04 c0       	rjmp	.+8      	; 0x3070 <DIO_voidSetPortDirection+0x76>
			case DIO_u8PORTD :         DDRD  = Copy_u8Mode;       break;
    3068:	e1 e3       	ldi	r30, 0x31	; 49
    306a:	f0 e0       	ldi	r31, 0x00	; 0
    306c:	8a 81       	ldd	r24, Y+2	; 0x02
    306e:	80 83       	st	Z, r24
		}
}
    3070:	0f 90       	pop	r0
    3072:	0f 90       	pop	r0
    3074:	0f 90       	pop	r0
    3076:	0f 90       	pop	r0
    3078:	cf 91       	pop	r28
    307a:	df 91       	pop	r29
    307c:	08 95       	ret

0000307e <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(uint8 Copy_u8PortNum, uint8 Copy_u8Value )
{
    307e:	df 93       	push	r29
    3080:	cf 93       	push	r28
    3082:	00 d0       	rcall	.+0      	; 0x3084 <DIO_voidSetPortValue+0x6>
    3084:	00 d0       	rcall	.+0      	; 0x3086 <DIO_voidSetPortValue+0x8>
    3086:	cd b7       	in	r28, 0x3d	; 61
    3088:	de b7       	in	r29, 0x3e	; 62
    308a:	89 83       	std	Y+1, r24	; 0x01
    308c:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    308e:	89 81       	ldd	r24, Y+1	; 0x01
    3090:	28 2f       	mov	r18, r24
    3092:	30 e0       	ldi	r19, 0x00	; 0
    3094:	3c 83       	std	Y+4, r19	; 0x04
    3096:	2b 83       	std	Y+3, r18	; 0x03
    3098:	8b 81       	ldd	r24, Y+3	; 0x03
    309a:	9c 81       	ldd	r25, Y+4	; 0x04
    309c:	82 30       	cpi	r24, 0x02	; 2
    309e:	91 05       	cpc	r25, r1
    30a0:	d9 f0       	breq	.+54     	; 0x30d8 <DIO_voidSetPortValue+0x5a>
    30a2:	2b 81       	ldd	r18, Y+3	; 0x03
    30a4:	3c 81       	ldd	r19, Y+4	; 0x04
    30a6:	23 30       	cpi	r18, 0x03	; 3
    30a8:	31 05       	cpc	r19, r1
    30aa:	34 f4       	brge	.+12     	; 0x30b8 <DIO_voidSetPortValue+0x3a>
    30ac:	8b 81       	ldd	r24, Y+3	; 0x03
    30ae:	9c 81       	ldd	r25, Y+4	; 0x04
    30b0:	81 30       	cpi	r24, 0x01	; 1
    30b2:	91 05       	cpc	r25, r1
    30b4:	61 f0       	breq	.+24     	; 0x30ce <DIO_voidSetPortValue+0x50>
    30b6:	1e c0       	rjmp	.+60     	; 0x30f4 <DIO_voidSetPortValue+0x76>
    30b8:	2b 81       	ldd	r18, Y+3	; 0x03
    30ba:	3c 81       	ldd	r19, Y+4	; 0x04
    30bc:	23 30       	cpi	r18, 0x03	; 3
    30be:	31 05       	cpc	r19, r1
    30c0:	81 f0       	breq	.+32     	; 0x30e2 <DIO_voidSetPortValue+0x64>
    30c2:	8b 81       	ldd	r24, Y+3	; 0x03
    30c4:	9c 81       	ldd	r25, Y+4	; 0x04
    30c6:	84 30       	cpi	r24, 0x04	; 4
    30c8:	91 05       	cpc	r25, r1
    30ca:	81 f0       	breq	.+32     	; 0x30ec <DIO_voidSetPortValue+0x6e>
    30cc:	13 c0       	rjmp	.+38     	; 0x30f4 <DIO_voidSetPortValue+0x76>
		{
			case DIO_u8PORTA :         PORTA  = Copy_u8Value;       break;
    30ce:	eb e3       	ldi	r30, 0x3B	; 59
    30d0:	f0 e0       	ldi	r31, 0x00	; 0
    30d2:	8a 81       	ldd	r24, Y+2	; 0x02
    30d4:	80 83       	st	Z, r24
    30d6:	0e c0       	rjmp	.+28     	; 0x30f4 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTB :         PORTB  = Copy_u8Value;       break;
    30d8:	e8 e3       	ldi	r30, 0x38	; 56
    30da:	f0 e0       	ldi	r31, 0x00	; 0
    30dc:	8a 81       	ldd	r24, Y+2	; 0x02
    30de:	80 83       	st	Z, r24
    30e0:	09 c0       	rjmp	.+18     	; 0x30f4 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTC :         PORTC  = Copy_u8Value;       break;
    30e2:	e5 e3       	ldi	r30, 0x35	; 53
    30e4:	f0 e0       	ldi	r31, 0x00	; 0
    30e6:	8a 81       	ldd	r24, Y+2	; 0x02
    30e8:	80 83       	st	Z, r24
    30ea:	04 c0       	rjmp	.+8      	; 0x30f4 <DIO_voidSetPortValue+0x76>
			case DIO_u8PORTD :         PORTD  = Copy_u8Value;       break;
    30ec:	e2 e3       	ldi	r30, 0x32	; 50
    30ee:	f0 e0       	ldi	r31, 0x00	; 0
    30f0:	8a 81       	ldd	r24, Y+2	; 0x02
    30f2:	80 83       	st	Z, r24
		}
}
    30f4:	0f 90       	pop	r0
    30f6:	0f 90       	pop	r0
    30f8:	0f 90       	pop	r0
    30fa:	0f 90       	pop	r0
    30fc:	cf 91       	pop	r28
    30fe:	df 91       	pop	r29
    3100:	08 95       	ret

00003102 <DIO_voidSetTogglePin>:

void DIO_voidSetTogglePin(uint8 Copy_u8PortNum , uint8 Copy_u8PinNum)
{
    3102:	df 93       	push	r29
    3104:	cf 93       	push	r28
    3106:	00 d0       	rcall	.+0      	; 0x3108 <DIO_voidSetTogglePin+0x6>
    3108:	00 d0       	rcall	.+0      	; 0x310a <DIO_voidSetTogglePin+0x8>
    310a:	cd b7       	in	r28, 0x3d	; 61
    310c:	de b7       	in	r29, 0x3e	; 62
    310e:	89 83       	std	Y+1, r24	; 0x01
    3110:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    3112:	89 81       	ldd	r24, Y+1	; 0x01
    3114:	28 2f       	mov	r18, r24
    3116:	30 e0       	ldi	r19, 0x00	; 0
    3118:	3c 83       	std	Y+4, r19	; 0x04
    311a:	2b 83       	std	Y+3, r18	; 0x03
    311c:	8b 81       	ldd	r24, Y+3	; 0x03
    311e:	9c 81       	ldd	r25, Y+4	; 0x04
    3120:	82 30       	cpi	r24, 0x02	; 2
    3122:	91 05       	cpc	r25, r1
    3124:	51 f1       	breq	.+84     	; 0x317a <DIO_voidSetTogglePin+0x78>
    3126:	2b 81       	ldd	r18, Y+3	; 0x03
    3128:	3c 81       	ldd	r19, Y+4	; 0x04
    312a:	23 30       	cpi	r18, 0x03	; 3
    312c:	31 05       	cpc	r19, r1
    312e:	34 f4       	brge	.+12     	; 0x313c <DIO_voidSetTogglePin+0x3a>
    3130:	8b 81       	ldd	r24, Y+3	; 0x03
    3132:	9c 81       	ldd	r25, Y+4	; 0x04
    3134:	81 30       	cpi	r24, 0x01	; 1
    3136:	91 05       	cpc	r25, r1
    3138:	61 f0       	breq	.+24     	; 0x3152 <DIO_voidSetTogglePin+0x50>
    313a:	5a c0       	rjmp	.+180    	; 0x31f0 <DIO_voidSetTogglePin+0xee>
    313c:	2b 81       	ldd	r18, Y+3	; 0x03
    313e:	3c 81       	ldd	r19, Y+4	; 0x04
    3140:	23 30       	cpi	r18, 0x03	; 3
    3142:	31 05       	cpc	r19, r1
    3144:	71 f1       	breq	.+92     	; 0x31a2 <DIO_voidSetTogglePin+0xa0>
    3146:	8b 81       	ldd	r24, Y+3	; 0x03
    3148:	9c 81       	ldd	r25, Y+4	; 0x04
    314a:	84 30       	cpi	r24, 0x04	; 4
    314c:	91 05       	cpc	r25, r1
    314e:	e9 f1       	breq	.+122    	; 0x31ca <DIO_voidSetTogglePin+0xc8>
    3150:	4f c0       	rjmp	.+158    	; 0x31f0 <DIO_voidSetTogglePin+0xee>
		{
			case DIO_u8PORTA :        TOG_BIT(PORTA , Copy_u8PinNum);       break;
    3152:	ab e3       	ldi	r26, 0x3B	; 59
    3154:	b0 e0       	ldi	r27, 0x00	; 0
    3156:	eb e3       	ldi	r30, 0x3B	; 59
    3158:	f0 e0       	ldi	r31, 0x00	; 0
    315a:	80 81       	ld	r24, Z
    315c:	48 2f       	mov	r20, r24
    315e:	8a 81       	ldd	r24, Y+2	; 0x02
    3160:	28 2f       	mov	r18, r24
    3162:	30 e0       	ldi	r19, 0x00	; 0
    3164:	81 e0       	ldi	r24, 0x01	; 1
    3166:	90 e0       	ldi	r25, 0x00	; 0
    3168:	02 2e       	mov	r0, r18
    316a:	02 c0       	rjmp	.+4      	; 0x3170 <DIO_voidSetTogglePin+0x6e>
    316c:	88 0f       	add	r24, r24
    316e:	99 1f       	adc	r25, r25
    3170:	0a 94       	dec	r0
    3172:	e2 f7       	brpl	.-8      	; 0x316c <DIO_voidSetTogglePin+0x6a>
    3174:	84 27       	eor	r24, r20
    3176:	8c 93       	st	X, r24
    3178:	3b c0       	rjmp	.+118    	; 0x31f0 <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTB :        TOG_BIT(PORTB , Copy_u8PinNum);       break;
    317a:	a8 e3       	ldi	r26, 0x38	; 56
    317c:	b0 e0       	ldi	r27, 0x00	; 0
    317e:	e8 e3       	ldi	r30, 0x38	; 56
    3180:	f0 e0       	ldi	r31, 0x00	; 0
    3182:	80 81       	ld	r24, Z
    3184:	48 2f       	mov	r20, r24
    3186:	8a 81       	ldd	r24, Y+2	; 0x02
    3188:	28 2f       	mov	r18, r24
    318a:	30 e0       	ldi	r19, 0x00	; 0
    318c:	81 e0       	ldi	r24, 0x01	; 1
    318e:	90 e0       	ldi	r25, 0x00	; 0
    3190:	02 2e       	mov	r0, r18
    3192:	02 c0       	rjmp	.+4      	; 0x3198 <DIO_voidSetTogglePin+0x96>
    3194:	88 0f       	add	r24, r24
    3196:	99 1f       	adc	r25, r25
    3198:	0a 94       	dec	r0
    319a:	e2 f7       	brpl	.-8      	; 0x3194 <DIO_voidSetTogglePin+0x92>
    319c:	84 27       	eor	r24, r20
    319e:	8c 93       	st	X, r24
    31a0:	27 c0       	rjmp	.+78     	; 0x31f0 <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTC :        TOG_BIT(PORTC , Copy_u8PinNum);       break;
    31a2:	a5 e3       	ldi	r26, 0x35	; 53
    31a4:	b0 e0       	ldi	r27, 0x00	; 0
    31a6:	e5 e3       	ldi	r30, 0x35	; 53
    31a8:	f0 e0       	ldi	r31, 0x00	; 0
    31aa:	80 81       	ld	r24, Z
    31ac:	48 2f       	mov	r20, r24
    31ae:	8a 81       	ldd	r24, Y+2	; 0x02
    31b0:	28 2f       	mov	r18, r24
    31b2:	30 e0       	ldi	r19, 0x00	; 0
    31b4:	81 e0       	ldi	r24, 0x01	; 1
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	02 2e       	mov	r0, r18
    31ba:	02 c0       	rjmp	.+4      	; 0x31c0 <DIO_voidSetTogglePin+0xbe>
    31bc:	88 0f       	add	r24, r24
    31be:	99 1f       	adc	r25, r25
    31c0:	0a 94       	dec	r0
    31c2:	e2 f7       	brpl	.-8      	; 0x31bc <DIO_voidSetTogglePin+0xba>
    31c4:	84 27       	eor	r24, r20
    31c6:	8c 93       	st	X, r24
    31c8:	13 c0       	rjmp	.+38     	; 0x31f0 <DIO_voidSetTogglePin+0xee>
			case DIO_u8PORTD :        TOG_BIT(PORTD, Copy_u8PinNum);       break;
    31ca:	a2 e3       	ldi	r26, 0x32	; 50
    31cc:	b0 e0       	ldi	r27, 0x00	; 0
    31ce:	e2 e3       	ldi	r30, 0x32	; 50
    31d0:	f0 e0       	ldi	r31, 0x00	; 0
    31d2:	80 81       	ld	r24, Z
    31d4:	48 2f       	mov	r20, r24
    31d6:	8a 81       	ldd	r24, Y+2	; 0x02
    31d8:	28 2f       	mov	r18, r24
    31da:	30 e0       	ldi	r19, 0x00	; 0
    31dc:	81 e0       	ldi	r24, 0x01	; 1
    31de:	90 e0       	ldi	r25, 0x00	; 0
    31e0:	02 2e       	mov	r0, r18
    31e2:	02 c0       	rjmp	.+4      	; 0x31e8 <DIO_voidSetTogglePin+0xe6>
    31e4:	88 0f       	add	r24, r24
    31e6:	99 1f       	adc	r25, r25
    31e8:	0a 94       	dec	r0
    31ea:	e2 f7       	brpl	.-8      	; 0x31e4 <DIO_voidSetTogglePin+0xe2>
    31ec:	84 27       	eor	r24, r20
    31ee:	8c 93       	st	X, r24
		}
}
    31f0:	0f 90       	pop	r0
    31f2:	0f 90       	pop	r0
    31f4:	0f 90       	pop	r0
    31f6:	0f 90       	pop	r0
    31f8:	cf 91       	pop	r28
    31fa:	df 91       	pop	r29
    31fc:	08 95       	ret

000031fe <DIO_u8GetPinValue_Store>:

uint8 DIO_u8GetPinValue_Store(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8* BIT)
{
    31fe:	df 93       	push	r29
    3200:	cf 93       	push	r28
    3202:	00 d0       	rcall	.+0      	; 0x3204 <DIO_u8GetPinValue_Store+0x6>
    3204:	00 d0       	rcall	.+0      	; 0x3206 <DIO_u8GetPinValue_Store+0x8>
    3206:	00 d0       	rcall	.+0      	; 0x3208 <DIO_u8GetPinValue_Store+0xa>
    3208:	cd b7       	in	r28, 0x3d	; 61
    320a:	de b7       	in	r29, 0x3e	; 62
    320c:	89 83       	std	Y+1, r24	; 0x01
    320e:	6a 83       	std	Y+2, r22	; 0x02
    3210:	5c 83       	std	Y+4, r21	; 0x04
    3212:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8PortNum)
    3214:	89 81       	ldd	r24, Y+1	; 0x01
    3216:	28 2f       	mov	r18, r24
    3218:	30 e0       	ldi	r19, 0x00	; 0
    321a:	3e 83       	std	Y+6, r19	; 0x06
    321c:	2d 83       	std	Y+5, r18	; 0x05
    321e:	4d 81       	ldd	r20, Y+5	; 0x05
    3220:	5e 81       	ldd	r21, Y+6	; 0x06
    3222:	42 30       	cpi	r20, 0x02	; 2
    3224:	51 05       	cpc	r21, r1
    3226:	59 f1       	breq	.+86     	; 0x327e <DIO_u8GetPinValue_Store+0x80>
    3228:	8d 81       	ldd	r24, Y+5	; 0x05
    322a:	9e 81       	ldd	r25, Y+6	; 0x06
    322c:	83 30       	cpi	r24, 0x03	; 3
    322e:	91 05       	cpc	r25, r1
    3230:	34 f4       	brge	.+12     	; 0x323e <DIO_u8GetPinValue_Store+0x40>
    3232:	2d 81       	ldd	r18, Y+5	; 0x05
    3234:	3e 81       	ldd	r19, Y+6	; 0x06
    3236:	21 30       	cpi	r18, 0x01	; 1
    3238:	31 05       	cpc	r19, r1
    323a:	69 f0       	breq	.+26     	; 0x3256 <DIO_u8GetPinValue_Store+0x58>
    323c:	5b c0       	rjmp	.+182    	; 0x32f4 <DIO_u8GetPinValue_Store+0xf6>
    323e:	4d 81       	ldd	r20, Y+5	; 0x05
    3240:	5e 81       	ldd	r21, Y+6	; 0x06
    3242:	43 30       	cpi	r20, 0x03	; 3
    3244:	51 05       	cpc	r21, r1
    3246:	79 f1       	breq	.+94     	; 0x32a6 <DIO_u8GetPinValue_Store+0xa8>
    3248:	8d 81       	ldd	r24, Y+5	; 0x05
    324a:	9e 81       	ldd	r25, Y+6	; 0x06
    324c:	84 30       	cpi	r24, 0x04	; 4
    324e:	91 05       	cpc	r25, r1
    3250:	09 f4       	brne	.+2      	; 0x3254 <DIO_u8GetPinValue_Store+0x56>
    3252:	3d c0       	rjmp	.+122    	; 0x32ce <DIO_u8GetPinValue_Store+0xd0>
    3254:	4f c0       	rjmp	.+158    	; 0x32f4 <DIO_u8GetPinValue_Store+0xf6>
		{
				case DIO_u8PORTA :         *BIT = GET_BIT(PINA , Copy_u8PinNum);       break;
    3256:	e9 e3       	ldi	r30, 0x39	; 57
    3258:	f0 e0       	ldi	r31, 0x00	; 0
    325a:	80 81       	ld	r24, Z
    325c:	28 2f       	mov	r18, r24
    325e:	30 e0       	ldi	r19, 0x00	; 0
    3260:	8a 81       	ldd	r24, Y+2	; 0x02
    3262:	88 2f       	mov	r24, r24
    3264:	90 e0       	ldi	r25, 0x00	; 0
    3266:	a9 01       	movw	r20, r18
    3268:	02 c0       	rjmp	.+4      	; 0x326e <DIO_u8GetPinValue_Store+0x70>
    326a:	55 95       	asr	r21
    326c:	47 95       	ror	r20
    326e:	8a 95       	dec	r24
    3270:	e2 f7       	brpl	.-8      	; 0x326a <DIO_u8GetPinValue_Store+0x6c>
    3272:	ca 01       	movw	r24, r20
    3274:	81 70       	andi	r24, 0x01	; 1
    3276:	eb 81       	ldd	r30, Y+3	; 0x03
    3278:	fc 81       	ldd	r31, Y+4	; 0x04
    327a:	80 83       	st	Z, r24
    327c:	3b c0       	rjmp	.+118    	; 0x32f4 <DIO_u8GetPinValue_Store+0xf6>
				case DIO_u8PORTB :         *BIT = GET_BIT(PINB , Copy_u8PinNum);       break;
    327e:	e6 e3       	ldi	r30, 0x36	; 54
    3280:	f0 e0       	ldi	r31, 0x00	; 0
    3282:	80 81       	ld	r24, Z
    3284:	28 2f       	mov	r18, r24
    3286:	30 e0       	ldi	r19, 0x00	; 0
    3288:	8a 81       	ldd	r24, Y+2	; 0x02
    328a:	88 2f       	mov	r24, r24
    328c:	90 e0       	ldi	r25, 0x00	; 0
    328e:	a9 01       	movw	r20, r18
    3290:	02 c0       	rjmp	.+4      	; 0x3296 <DIO_u8GetPinValue_Store+0x98>
    3292:	55 95       	asr	r21
    3294:	47 95       	ror	r20
    3296:	8a 95       	dec	r24
    3298:	e2 f7       	brpl	.-8      	; 0x3292 <DIO_u8GetPinValue_Store+0x94>
    329a:	ca 01       	movw	r24, r20
    329c:	81 70       	andi	r24, 0x01	; 1
    329e:	eb 81       	ldd	r30, Y+3	; 0x03
    32a0:	fc 81       	ldd	r31, Y+4	; 0x04
    32a2:	80 83       	st	Z, r24
    32a4:	27 c0       	rjmp	.+78     	; 0x32f4 <DIO_u8GetPinValue_Store+0xf6>
				case DIO_u8PORTC :         *BIT = GET_BIT(PINC , Copy_u8PinNum);       break;
    32a6:	e3 e3       	ldi	r30, 0x33	; 51
    32a8:	f0 e0       	ldi	r31, 0x00	; 0
    32aa:	80 81       	ld	r24, Z
    32ac:	28 2f       	mov	r18, r24
    32ae:	30 e0       	ldi	r19, 0x00	; 0
    32b0:	8a 81       	ldd	r24, Y+2	; 0x02
    32b2:	88 2f       	mov	r24, r24
    32b4:	90 e0       	ldi	r25, 0x00	; 0
    32b6:	a9 01       	movw	r20, r18
    32b8:	02 c0       	rjmp	.+4      	; 0x32be <DIO_u8GetPinValue_Store+0xc0>
    32ba:	55 95       	asr	r21
    32bc:	47 95       	ror	r20
    32be:	8a 95       	dec	r24
    32c0:	e2 f7       	brpl	.-8      	; 0x32ba <DIO_u8GetPinValue_Store+0xbc>
    32c2:	ca 01       	movw	r24, r20
    32c4:	81 70       	andi	r24, 0x01	; 1
    32c6:	eb 81       	ldd	r30, Y+3	; 0x03
    32c8:	fc 81       	ldd	r31, Y+4	; 0x04
    32ca:	80 83       	st	Z, r24
    32cc:	13 c0       	rjmp	.+38     	; 0x32f4 <DIO_u8GetPinValue_Store+0xf6>
				case DIO_u8PORTD :         *BIT = GET_BIT(PIND , Copy_u8PinNum);       break;
    32ce:	e0 e3       	ldi	r30, 0x30	; 48
    32d0:	f0 e0       	ldi	r31, 0x00	; 0
    32d2:	80 81       	ld	r24, Z
    32d4:	28 2f       	mov	r18, r24
    32d6:	30 e0       	ldi	r19, 0x00	; 0
    32d8:	8a 81       	ldd	r24, Y+2	; 0x02
    32da:	88 2f       	mov	r24, r24
    32dc:	90 e0       	ldi	r25, 0x00	; 0
    32de:	a9 01       	movw	r20, r18
    32e0:	02 c0       	rjmp	.+4      	; 0x32e6 <DIO_u8GetPinValue_Store+0xe8>
    32e2:	55 95       	asr	r21
    32e4:	47 95       	ror	r20
    32e6:	8a 95       	dec	r24
    32e8:	e2 f7       	brpl	.-8      	; 0x32e2 <DIO_u8GetPinValue_Store+0xe4>
    32ea:	ca 01       	movw	r24, r20
    32ec:	81 70       	andi	r24, 0x01	; 1
    32ee:	eb 81       	ldd	r30, Y+3	; 0x03
    32f0:	fc 81       	ldd	r31, Y+4	; 0x04
    32f2:	80 83       	st	Z, r24
		}
	return BIT;
    32f4:	8b 81       	ldd	r24, Y+3	; 0x03
    32f6:	9c 81       	ldd	r25, Y+4	; 0x04
}
    32f8:	26 96       	adiw	r28, 0x06	; 6
    32fa:	0f b6       	in	r0, 0x3f	; 63
    32fc:	f8 94       	cli
    32fe:	de bf       	out	0x3e, r29	; 62
    3300:	0f be       	out	0x3f, r0	; 63
    3302:	cd bf       	out	0x3d, r28	; 61
    3304:	cf 91       	pop	r28
    3306:	df 91       	pop	r29
    3308:	08 95       	ret

0000330a <DC_Init>:

#include "util/delay.h"
#include "DC_Motor_Interface.h"


void DC_Init(DC_Motor config){
    330a:	df 93       	push	r29
    330c:	cf 93       	push	r28
    330e:	00 d0       	rcall	.+0      	; 0x3310 <DC_Init+0x6>
    3310:	0f 92       	push	r0
    3312:	cd b7       	in	r28, 0x3d	; 61
    3314:	de b7       	in	r29, 0x3e	; 62
    3316:	69 83       	std	Y+1, r22	; 0x01
    3318:	7a 83       	std	Y+2, r23	; 0x02
    331a:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinDirection(config.port,config.pin_1,DIO_u8OUTPUT);
    331c:	8b 81       	ldd	r24, Y+3	; 0x03
    331e:	99 81       	ldd	r25, Y+1	; 0x01
    3320:	69 2f       	mov	r22, r25
    3322:	41 e0       	ldi	r20, 0x01	; 1
    3324:	0e 94 80 15 	call	0x2b00	; 0x2b00 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(config.port,config.pin_2,DIO_u8OUTPUT);
    3328:	8b 81       	ldd	r24, Y+3	; 0x03
    332a:	9a 81       	ldd	r25, Y+2	; 0x02
    332c:	69 2f       	mov	r22, r25
    332e:	41 e0       	ldi	r20, 0x01	; 1
    3330:	0e 94 80 15 	call	0x2b00	; 0x2b00 <DIO_voidSetPinDirection>

}
    3334:	0f 90       	pop	r0
    3336:	0f 90       	pop	r0
    3338:	0f 90       	pop	r0
    333a:	cf 91       	pop	r28
    333c:	df 91       	pop	r29
    333e:	08 95       	ret

00003340 <DC_Cw>:

void DC_Cw(DC_Motor config){
    3340:	df 93       	push	r29
    3342:	cf 93       	push	r28
    3344:	00 d0       	rcall	.+0      	; 0x3346 <DC_Cw+0x6>
    3346:	0f 92       	push	r0
    3348:	cd b7       	in	r28, 0x3d	; 61
    334a:	de b7       	in	r29, 0x3e	; 62
    334c:	69 83       	std	Y+1, r22	; 0x01
    334e:	7a 83       	std	Y+2, r23	; 0x02
    3350:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8HIGH);
    3352:	8b 81       	ldd	r24, Y+3	; 0x03
    3354:	9a 81       	ldd	r25, Y+2	; 0x02
    3356:	69 2f       	mov	r22, r25
    3358:	41 e0       	ldi	r20, 0x01	; 1
    335a:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    335e:	8b 81       	ldd	r24, Y+3	; 0x03
    3360:	99 81       	ldd	r25, Y+1	; 0x01
    3362:	69 2f       	mov	r22, r25
    3364:	40 e0       	ldi	r20, 0x00	; 0
    3366:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
}
    336a:	0f 90       	pop	r0
    336c:	0f 90       	pop	r0
    336e:	0f 90       	pop	r0
    3370:	cf 91       	pop	r28
    3372:	df 91       	pop	r29
    3374:	08 95       	ret

00003376 <DC_Ccw>:

void DC_Ccw(DC_Motor config){
    3376:	df 93       	push	r29
    3378:	cf 93       	push	r28
    337a:	00 d0       	rcall	.+0      	; 0x337c <DC_Ccw+0x6>
    337c:	0f 92       	push	r0
    337e:	cd b7       	in	r28, 0x3d	; 61
    3380:	de b7       	in	r29, 0x3e	; 62
    3382:	69 83       	std	Y+1, r22	; 0x01
    3384:	7a 83       	std	Y+2, r23	; 0x02
    3386:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8HIGH);
    3388:	8b 81       	ldd	r24, Y+3	; 0x03
    338a:	99 81       	ldd	r25, Y+1	; 0x01
    338c:	69 2f       	mov	r22, r25
    338e:	41 e0       	ldi	r20, 0x01	; 1
    3390:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    3394:	8b 81       	ldd	r24, Y+3	; 0x03
    3396:	9a 81       	ldd	r25, Y+2	; 0x02
    3398:	69 2f       	mov	r22, r25
    339a:	40 e0       	ldi	r20, 0x00	; 0
    339c:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
}
    33a0:	0f 90       	pop	r0
    33a2:	0f 90       	pop	r0
    33a4:	0f 90       	pop	r0
    33a6:	cf 91       	pop	r28
    33a8:	df 91       	pop	r29
    33aa:	08 95       	ret

000033ac <DC_Off>:

void DC_Off(DC_Motor config){
    33ac:	df 93       	push	r29
    33ae:	cf 93       	push	r28
    33b0:	00 d0       	rcall	.+0      	; 0x33b2 <DC_Off+0x6>
    33b2:	0f 92       	push	r0
    33b4:	cd b7       	in	r28, 0x3d	; 61
    33b6:	de b7       	in	r29, 0x3e	; 62
    33b8:	69 83       	std	Y+1, r22	; 0x01
    33ba:	7a 83       	std	Y+2, r23	; 0x02
    33bc:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    33be:	8b 81       	ldd	r24, Y+3	; 0x03
    33c0:	99 81       	ldd	r25, Y+1	; 0x01
    33c2:	69 2f       	mov	r22, r25
    33c4:	40 e0       	ldi	r20, 0x00	; 0
    33c6:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    33ca:	8b 81       	ldd	r24, Y+3	; 0x03
    33cc:	9a 81       	ldd	r25, Y+2	; 0x02
    33ce:	69 2f       	mov	r22, r25
    33d0:	40 e0       	ldi	r20, 0x00	; 0
    33d2:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
}
    33d6:	0f 90       	pop	r0
    33d8:	0f 90       	pop	r0
    33da:	0f 90       	pop	r0
    33dc:	cf 91       	pop	r28
    33de:	df 91       	pop	r29
    33e0:	08 95       	ret

000033e2 <DC_Tog>:
void DC_Tog(DC_Motor config , uint64 delay)
{
    33e2:	ef 92       	push	r14
    33e4:	ff 92       	push	r15
    33e6:	0f 93       	push	r16
    33e8:	1f 93       	push	r17
    33ea:	df 93       	push	r29
    33ec:	cf 93       	push	r28
    33ee:	cd b7       	in	r28, 0x3d	; 61
    33f0:	de b7       	in	r29, 0x3e	; 62
    33f2:	a7 97       	sbiw	r28, 0x27	; 39
    33f4:	0f b6       	in	r0, 0x3f	; 63
    33f6:	f8 94       	cli
    33f8:	de bf       	out	0x3e, r29	; 62
    33fa:	0f be       	out	0x3f, r0	; 63
    33fc:	cd bf       	out	0x3d, r28	; 61
    33fe:	6d 8f       	std	Y+29, r22	; 0x1d
    3400:	7e 8f       	std	Y+30, r23	; 0x1e
    3402:	8f 8f       	std	Y+31, r24	; 0x1f
    3404:	e8 a2       	std	Y+32, r14	; 0x20
    3406:	f9 a2       	std	Y+33, r15	; 0x21
    3408:	0a a3       	std	Y+34, r16	; 0x22
    340a:	1b a3       	std	Y+35, r17	; 0x23
    340c:	2c a3       	std	Y+36, r18	; 0x24
    340e:	3d a3       	std	Y+37, r19	; 0x25
    3410:	4e a3       	std	Y+38, r20	; 0x26
    3412:	5f a3       	std	Y+39, r21	; 0x27
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8HIGH);
    3414:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3416:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3418:	69 2f       	mov	r22, r25
    341a:	41 e0       	ldi	r20, 0x01	; 1
    341c:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8LOW);
    3420:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3422:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3424:	69 2f       	mov	r22, r25
    3426:	40 e0       	ldi	r20, 0x00	; 0
    3428:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	_delay_ms(delay);
    342c:	28 a1       	ldd	r18, Y+32	; 0x20
    342e:	39 a1       	ldd	r19, Y+33	; 0x21
    3430:	4a a1       	ldd	r20, Y+34	; 0x22
    3432:	5b a1       	ldd	r21, Y+35	; 0x23
    3434:	6c a1       	ldd	r22, Y+36	; 0x24
    3436:	7d a1       	ldd	r23, Y+37	; 0x25
    3438:	8e a1       	ldd	r24, Y+38	; 0x26
    343a:	9f a1       	ldd	r25, Y+39	; 0x27
    343c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__floatundisf>
    3440:	dc 01       	movw	r26, r24
    3442:	cb 01       	movw	r24, r22
    3444:	89 8f       	std	Y+25, r24	; 0x19
    3446:	9a 8f       	std	Y+26, r25	; 0x1a
    3448:	ab 8f       	std	Y+27, r26	; 0x1b
    344a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    344c:	69 8d       	ldd	r22, Y+25	; 0x19
    344e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3450:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3452:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3454:	20 e0       	ldi	r18, 0x00	; 0
    3456:	30 e0       	ldi	r19, 0x00	; 0
    3458:	4a ef       	ldi	r20, 0xFA	; 250
    345a:	54 e4       	ldi	r21, 0x44	; 68
    345c:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3460:	dc 01       	movw	r26, r24
    3462:	cb 01       	movw	r24, r22
    3464:	8d 8b       	std	Y+21, r24	; 0x15
    3466:	9e 8b       	std	Y+22, r25	; 0x16
    3468:	af 8b       	std	Y+23, r26	; 0x17
    346a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    346c:	6d 89       	ldd	r22, Y+21	; 0x15
    346e:	7e 89       	ldd	r23, Y+22	; 0x16
    3470:	8f 89       	ldd	r24, Y+23	; 0x17
    3472:	98 8d       	ldd	r25, Y+24	; 0x18
    3474:	20 e0       	ldi	r18, 0x00	; 0
    3476:	30 e0       	ldi	r19, 0x00	; 0
    3478:	40 e8       	ldi	r20, 0x80	; 128
    347a:	5f e3       	ldi	r21, 0x3F	; 63
    347c:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    3480:	88 23       	and	r24, r24
    3482:	2c f4       	brge	.+10     	; 0x348e <DC_Tog+0xac>
		__ticks = 1;
    3484:	81 e0       	ldi	r24, 0x01	; 1
    3486:	90 e0       	ldi	r25, 0x00	; 0
    3488:	9c 8b       	std	Y+20, r25	; 0x14
    348a:	8b 8b       	std	Y+19, r24	; 0x13
    348c:	3f c0       	rjmp	.+126    	; 0x350c <DC_Tog+0x12a>
	else if (__tmp > 65535)
    348e:	6d 89       	ldd	r22, Y+21	; 0x15
    3490:	7e 89       	ldd	r23, Y+22	; 0x16
    3492:	8f 89       	ldd	r24, Y+23	; 0x17
    3494:	98 8d       	ldd	r25, Y+24	; 0x18
    3496:	20 e0       	ldi	r18, 0x00	; 0
    3498:	3f ef       	ldi	r19, 0xFF	; 255
    349a:	4f e7       	ldi	r20, 0x7F	; 127
    349c:	57 e4       	ldi	r21, 0x47	; 71
    349e:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    34a2:	18 16       	cp	r1, r24
    34a4:	4c f5       	brge	.+82     	; 0x34f8 <DC_Tog+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34a6:	69 8d       	ldd	r22, Y+25	; 0x19
    34a8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    34aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34ae:	20 e0       	ldi	r18, 0x00	; 0
    34b0:	30 e0       	ldi	r19, 0x00	; 0
    34b2:	40 e2       	ldi	r20, 0x20	; 32
    34b4:	51 e4       	ldi	r21, 0x41	; 65
    34b6:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    34ba:	dc 01       	movw	r26, r24
    34bc:	cb 01       	movw	r24, r22
    34be:	bc 01       	movw	r22, r24
    34c0:	cd 01       	movw	r24, r26
    34c2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    34c6:	dc 01       	movw	r26, r24
    34c8:	cb 01       	movw	r24, r22
    34ca:	9c 8b       	std	Y+20, r25	; 0x14
    34cc:	8b 8b       	std	Y+19, r24	; 0x13
    34ce:	0f c0       	rjmp	.+30     	; 0x34ee <DC_Tog+0x10c>
    34d0:	88 ec       	ldi	r24, 0xC8	; 200
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	9a 8b       	std	Y+18, r25	; 0x12
    34d6:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    34d8:	89 89       	ldd	r24, Y+17	; 0x11
    34da:	9a 89       	ldd	r25, Y+18	; 0x12
    34dc:	01 97       	sbiw	r24, 0x01	; 1
    34de:	f1 f7       	brne	.-4      	; 0x34dc <DC_Tog+0xfa>
    34e0:	9a 8b       	std	Y+18, r25	; 0x12
    34e2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34e4:	8b 89       	ldd	r24, Y+19	; 0x13
    34e6:	9c 89       	ldd	r25, Y+20	; 0x14
    34e8:	01 97       	sbiw	r24, 0x01	; 1
    34ea:	9c 8b       	std	Y+20, r25	; 0x14
    34ec:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34ee:	8b 89       	ldd	r24, Y+19	; 0x13
    34f0:	9c 89       	ldd	r25, Y+20	; 0x14
    34f2:	00 97       	sbiw	r24, 0x00	; 0
    34f4:	69 f7       	brne	.-38     	; 0x34d0 <DC_Tog+0xee>
    34f6:	14 c0       	rjmp	.+40     	; 0x3520 <DC_Tog+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34f8:	6d 89       	ldd	r22, Y+21	; 0x15
    34fa:	7e 89       	ldd	r23, Y+22	; 0x16
    34fc:	8f 89       	ldd	r24, Y+23	; 0x17
    34fe:	98 8d       	ldd	r25, Y+24	; 0x18
    3500:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3504:	dc 01       	movw	r26, r24
    3506:	cb 01       	movw	r24, r22
    3508:	9c 8b       	std	Y+20, r25	; 0x14
    350a:	8b 8b       	std	Y+19, r24	; 0x13
    350c:	8b 89       	ldd	r24, Y+19	; 0x13
    350e:	9c 89       	ldd	r25, Y+20	; 0x14
    3510:	98 8b       	std	Y+16, r25	; 0x10
    3512:	8f 87       	std	Y+15, r24	; 0x0f
    3514:	8f 85       	ldd	r24, Y+15	; 0x0f
    3516:	98 89       	ldd	r25, Y+16	; 0x10
    3518:	01 97       	sbiw	r24, 0x01	; 1
    351a:	f1 f7       	brne	.-4      	; 0x3518 <DC_Tog+0x136>
    351c:	98 8b       	std	Y+16, r25	; 0x10
    351e:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPinValue(config.port,config.pin_1,DIO_u8HIGH);
    3520:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3522:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3524:	69 2f       	mov	r22, r25
    3526:	41 e0       	ldi	r20, 0x01	; 1
    3528:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(config.port,config.pin_2,DIO_u8LOW);
    352c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    352e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3530:	69 2f       	mov	r22, r25
    3532:	40 e0       	ldi	r20, 0x00	; 0
    3534:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	_delay_ms(delay);
    3538:	28 a1       	ldd	r18, Y+32	; 0x20
    353a:	39 a1       	ldd	r19, Y+33	; 0x21
    353c:	4a a1       	ldd	r20, Y+34	; 0x22
    353e:	5b a1       	ldd	r21, Y+35	; 0x23
    3540:	6c a1       	ldd	r22, Y+36	; 0x24
    3542:	7d a1       	ldd	r23, Y+37	; 0x25
    3544:	8e a1       	ldd	r24, Y+38	; 0x26
    3546:	9f a1       	ldd	r25, Y+39	; 0x27
    3548:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__floatundisf>
    354c:	dc 01       	movw	r26, r24
    354e:	cb 01       	movw	r24, r22
    3550:	8b 87       	std	Y+11, r24	; 0x0b
    3552:	9c 87       	std	Y+12, r25	; 0x0c
    3554:	ad 87       	std	Y+13, r26	; 0x0d
    3556:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3558:	6b 85       	ldd	r22, Y+11	; 0x0b
    355a:	7c 85       	ldd	r23, Y+12	; 0x0c
    355c:	8d 85       	ldd	r24, Y+13	; 0x0d
    355e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3560:	20 e0       	ldi	r18, 0x00	; 0
    3562:	30 e0       	ldi	r19, 0x00	; 0
    3564:	4a ef       	ldi	r20, 0xFA	; 250
    3566:	54 e4       	ldi	r21, 0x44	; 68
    3568:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    356c:	dc 01       	movw	r26, r24
    356e:	cb 01       	movw	r24, r22
    3570:	8f 83       	std	Y+7, r24	; 0x07
    3572:	98 87       	std	Y+8, r25	; 0x08
    3574:	a9 87       	std	Y+9, r26	; 0x09
    3576:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3578:	6f 81       	ldd	r22, Y+7	; 0x07
    357a:	78 85       	ldd	r23, Y+8	; 0x08
    357c:	89 85       	ldd	r24, Y+9	; 0x09
    357e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3580:	20 e0       	ldi	r18, 0x00	; 0
    3582:	30 e0       	ldi	r19, 0x00	; 0
    3584:	40 e8       	ldi	r20, 0x80	; 128
    3586:	5f e3       	ldi	r21, 0x3F	; 63
    3588:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    358c:	88 23       	and	r24, r24
    358e:	2c f4       	brge	.+10     	; 0x359a <DC_Tog+0x1b8>
		__ticks = 1;
    3590:	81 e0       	ldi	r24, 0x01	; 1
    3592:	90 e0       	ldi	r25, 0x00	; 0
    3594:	9e 83       	std	Y+6, r25	; 0x06
    3596:	8d 83       	std	Y+5, r24	; 0x05
    3598:	3f c0       	rjmp	.+126    	; 0x3618 <DC_Tog+0x236>
	else if (__tmp > 65535)
    359a:	6f 81       	ldd	r22, Y+7	; 0x07
    359c:	78 85       	ldd	r23, Y+8	; 0x08
    359e:	89 85       	ldd	r24, Y+9	; 0x09
    35a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    35a2:	20 e0       	ldi	r18, 0x00	; 0
    35a4:	3f ef       	ldi	r19, 0xFF	; 255
    35a6:	4f e7       	ldi	r20, 0x7F	; 127
    35a8:	57 e4       	ldi	r21, 0x47	; 71
    35aa:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    35ae:	18 16       	cp	r1, r24
    35b0:	4c f5       	brge	.+82     	; 0x3604 <DC_Tog+0x222>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    35b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    35b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    35b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    35ba:	20 e0       	ldi	r18, 0x00	; 0
    35bc:	30 e0       	ldi	r19, 0x00	; 0
    35be:	40 e2       	ldi	r20, 0x20	; 32
    35c0:	51 e4       	ldi	r21, 0x41	; 65
    35c2:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    35c6:	dc 01       	movw	r26, r24
    35c8:	cb 01       	movw	r24, r22
    35ca:	bc 01       	movw	r22, r24
    35cc:	cd 01       	movw	r24, r26
    35ce:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    35d2:	dc 01       	movw	r26, r24
    35d4:	cb 01       	movw	r24, r22
    35d6:	9e 83       	std	Y+6, r25	; 0x06
    35d8:	8d 83       	std	Y+5, r24	; 0x05
    35da:	0f c0       	rjmp	.+30     	; 0x35fa <DC_Tog+0x218>
    35dc:	88 ec       	ldi	r24, 0xC8	; 200
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	9c 83       	std	Y+4, r25	; 0x04
    35e2:	8b 83       	std	Y+3, r24	; 0x03
    35e4:	8b 81       	ldd	r24, Y+3	; 0x03
    35e6:	9c 81       	ldd	r25, Y+4	; 0x04
    35e8:	01 97       	sbiw	r24, 0x01	; 1
    35ea:	f1 f7       	brne	.-4      	; 0x35e8 <DC_Tog+0x206>
    35ec:	9c 83       	std	Y+4, r25	; 0x04
    35ee:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35f0:	8d 81       	ldd	r24, Y+5	; 0x05
    35f2:	9e 81       	ldd	r25, Y+6	; 0x06
    35f4:	01 97       	sbiw	r24, 0x01	; 1
    35f6:	9e 83       	std	Y+6, r25	; 0x06
    35f8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35fa:	8d 81       	ldd	r24, Y+5	; 0x05
    35fc:	9e 81       	ldd	r25, Y+6	; 0x06
    35fe:	00 97       	sbiw	r24, 0x00	; 0
    3600:	69 f7       	brne	.-38     	; 0x35dc <DC_Tog+0x1fa>
    3602:	14 c0       	rjmp	.+40     	; 0x362c <DC_Tog+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3604:	6f 81       	ldd	r22, Y+7	; 0x07
    3606:	78 85       	ldd	r23, Y+8	; 0x08
    3608:	89 85       	ldd	r24, Y+9	; 0x09
    360a:	9a 85       	ldd	r25, Y+10	; 0x0a
    360c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3610:	dc 01       	movw	r26, r24
    3612:	cb 01       	movw	r24, r22
    3614:	9e 83       	std	Y+6, r25	; 0x06
    3616:	8d 83       	std	Y+5, r24	; 0x05
    3618:	8d 81       	ldd	r24, Y+5	; 0x05
    361a:	9e 81       	ldd	r25, Y+6	; 0x06
    361c:	9a 83       	std	Y+2, r25	; 0x02
    361e:	89 83       	std	Y+1, r24	; 0x01
    3620:	89 81       	ldd	r24, Y+1	; 0x01
    3622:	9a 81       	ldd	r25, Y+2	; 0x02
    3624:	01 97       	sbiw	r24, 0x01	; 1
    3626:	f1 f7       	brne	.-4      	; 0x3624 <DC_Tog+0x242>
    3628:	9a 83       	std	Y+2, r25	; 0x02
    362a:	89 83       	std	Y+1, r24	; 0x01
}
    362c:	a7 96       	adiw	r28, 0x27	; 39
    362e:	0f b6       	in	r0, 0x3f	; 63
    3630:	f8 94       	cli
    3632:	de bf       	out	0x3e, r29	; 62
    3634:	0f be       	out	0x3f, r0	; 63
    3636:	cd bf       	out	0x3d, r28	; 61
    3638:	cf 91       	pop	r28
    363a:	df 91       	pop	r29
    363c:	1f 91       	pop	r17
    363e:	0f 91       	pop	r16
    3640:	ff 90       	pop	r15
    3642:	ef 90       	pop	r14
    3644:	08 95       	ret

00003646 <LED_voidInit>:
#include "LED_interface.h"



void  LED_voidInit(uint8 Copy_u8PortNum ,uint8 Copy_u8PinNum )
{
    3646:	df 93       	push	r29
    3648:	cf 93       	push	r28
    364a:	00 d0       	rcall	.+0      	; 0x364c <LED_voidInit+0x6>
    364c:	cd b7       	in	r28, 0x3d	; 61
    364e:	de b7       	in	r29, 0x3e	; 62
    3650:	89 83       	std	Y+1, r24	; 0x01
    3652:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidSetPinDirection(Copy_u8PortNum , Copy_u8PinNum , DIO_u8OUTPUT);
    3654:	89 81       	ldd	r24, Y+1	; 0x01
    3656:	6a 81       	ldd	r22, Y+2	; 0x02
    3658:	41 e0       	ldi	r20, 0x01	; 1
    365a:	0e 94 80 15 	call	0x2b00	; 0x2b00 <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(Copy_u8PortNum , Copy_u8PinNum , DIO_u8LOW);
    365e:	89 81       	ldd	r24, Y+1	; 0x01
    3660:	6a 81       	ldd	r22, Y+2	; 0x02
    3662:	40 e0       	ldi	r20, 0x00	; 0
    3664:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
}
    3668:	0f 90       	pop	r0
    366a:	0f 90       	pop	r0
    366c:	cf 91       	pop	r28
    366e:	df 91       	pop	r29
    3670:	08 95       	ret

00003672 <LED_voidLedMode>:

void  LED_voidLedMode(uint8 Copy_u8PortNum ,uint8 Copy_u8PinNum ,uint8 Copy_u8Mode )
{
    3672:	df 93       	push	r29
    3674:	cf 93       	push	r28
    3676:	00 d0       	rcall	.+0      	; 0x3678 <LED_voidLedMode+0x6>
    3678:	00 d0       	rcall	.+0      	; 0x367a <LED_voidLedMode+0x8>
    367a:	0f 92       	push	r0
    367c:	cd b7       	in	r28, 0x3d	; 61
    367e:	de b7       	in	r29, 0x3e	; 62
    3680:	89 83       	std	Y+1, r24	; 0x01
    3682:	6a 83       	std	Y+2, r22	; 0x02
    3684:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8Mode)
    3686:	8b 81       	ldd	r24, Y+3	; 0x03
    3688:	28 2f       	mov	r18, r24
    368a:	30 e0       	ldi	r19, 0x00	; 0
    368c:	3d 83       	std	Y+5, r19	; 0x05
    368e:	2c 83       	std	Y+4, r18	; 0x04
    3690:	8c 81       	ldd	r24, Y+4	; 0x04
    3692:	9d 81       	ldd	r25, Y+5	; 0x05
    3694:	81 30       	cpi	r24, 0x01	; 1
    3696:	91 05       	cpc	r25, r1
    3698:	79 f0       	breq	.+30     	; 0x36b8 <LED_voidLedMode+0x46>
    369a:	2c 81       	ldd	r18, Y+4	; 0x04
    369c:	3d 81       	ldd	r19, Y+5	; 0x05
    369e:	22 30       	cpi	r18, 0x02	; 2
    36a0:	31 05       	cpc	r19, r1
    36a2:	81 f0       	breq	.+32     	; 0x36c4 <LED_voidLedMode+0x52>
    36a4:	8c 81       	ldd	r24, Y+4	; 0x04
    36a6:	9d 81       	ldd	r25, Y+5	; 0x05
    36a8:	00 97       	sbiw	r24, 0x00	; 0
    36aa:	81 f4       	brne	.+32     	; 0x36cc <LED_voidLedMode+0x5a>
	{
		case LED_OFF  :

			DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8LOW);
    36ac:	89 81       	ldd	r24, Y+1	; 0x01
    36ae:	6a 81       	ldd	r22, Y+2	; 0x02
    36b0:	40 e0       	ldi	r20, 0x00	; 0
    36b2:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
    36b6:	0a c0       	rjmp	.+20     	; 0x36cc <LED_voidLedMode+0x5a>

			break;

		case LED_ON   :

			DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8HIGH);
    36b8:	89 81       	ldd	r24, Y+1	; 0x01
    36ba:	6a 81       	ldd	r22, Y+2	; 0x02
    36bc:	41 e0       	ldi	r20, 0x01	; 1
    36be:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
    36c2:	04 c0       	rjmp	.+8      	; 0x36cc <LED_voidLedMode+0x5a>

			break;

		case LED_TOG  :

			DIO_voidSetTogglePin(Copy_u8PortNum ,Copy_u8PinNum);
    36c4:	89 81       	ldd	r24, Y+1	; 0x01
    36c6:	6a 81       	ldd	r22, Y+2	; 0x02
    36c8:	0e 94 81 18 	call	0x3102	; 0x3102 <DIO_voidSetTogglePin>

	}
}
    36cc:	0f 90       	pop	r0
    36ce:	0f 90       	pop	r0
    36d0:	0f 90       	pop	r0
    36d2:	0f 90       	pop	r0
    36d4:	0f 90       	pop	r0
    36d6:	cf 91       	pop	r28
    36d8:	df 91       	pop	r29
    36da:	08 95       	ret

000036dc <Keypad_init>:
		{'4','5','6','*'},
		{'1','2','3','-'},
		{'c','0','=','+'},
};

void Keypad_init(void){
    36dc:	df 93       	push	r29
    36de:	cf 93       	push	r28
    36e0:	cd b7       	in	r28, 0x3d	; 61
    36e2:	de b7       	in	r29, 0x3e	; 62
    36e4:	28 97       	sbiw	r28, 0x08	; 8
    36e6:	0f b6       	in	r0, 0x3f	; 63
    36e8:	f8 94       	cli
    36ea:	de bf       	out	0x3e, r29	; 62
    36ec:	0f be       	out	0x3f, r0	; 63
    36ee:	cd bf       	out	0x3d, r28	; 61


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    36f0:	18 86       	std	Y+8, r1	; 0x08
    36f2:	1f 82       	std	Y+7, r1	; 0x07
    36f4:	0b c0       	rjmp	.+22     	; 0x370c <Keypad_init+0x30>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
    36f6:	9f 81       	ldd	r25, Y+7	; 0x07
    36f8:	83 e0       	ldi	r24, 0x03	; 3
    36fa:	69 2f       	mov	r22, r25
    36fc:	41 e0       	ldi	r20, 0x01	; 1
    36fe:	0e 94 80 15 	call	0x2b00	; 0x2b00 <DIO_voidSetPinDirection>

void Keypad_init(void){


	/*SET DIRECTION OF ROW -------> OUTPUT */
		for (int i=0; i<4; i++){
    3702:	8f 81       	ldd	r24, Y+7	; 0x07
    3704:	98 85       	ldd	r25, Y+8	; 0x08
    3706:	01 96       	adiw	r24, 0x01	; 1
    3708:	98 87       	std	Y+8, r25	; 0x08
    370a:	8f 83       	std	Y+7, r24	; 0x07
    370c:	8f 81       	ldd	r24, Y+7	; 0x07
    370e:	98 85       	ldd	r25, Y+8	; 0x08
    3710:	84 30       	cpi	r24, 0x04	; 4
    3712:	91 05       	cpc	r25, r1
    3714:	84 f3       	brlt	.-32     	; 0x36f6 <Keypad_init+0x1a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    3716:	1e 82       	std	Y+6, r1	; 0x06
    3718:	1d 82       	std	Y+5, r1	; 0x05
    371a:	0b c0       	rjmp	.+22     	; 0x3732 <Keypad_init+0x56>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    371c:	9d 81       	ldd	r25, Y+5	; 0x05
    371e:	83 e0       	ldi	r24, 0x03	; 3
    3720:	69 2f       	mov	r22, r25
    3722:	41 e0       	ldi	r20, 0x01	; 1
    3724:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
		for (int i=0; i<4; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8OUTPUT);
	}

			/*SET VALUES OF ROW -----------> 1 */
	for (int i=0; i<4; i++){
    3728:	8d 81       	ldd	r24, Y+5	; 0x05
    372a:	9e 81       	ldd	r25, Y+6	; 0x06
    372c:	01 96       	adiw	r24, 0x01	; 1
    372e:	9e 83       	std	Y+6, r25	; 0x06
    3730:	8d 83       	std	Y+5, r24	; 0x05
    3732:	8d 81       	ldd	r24, Y+5	; 0x05
    3734:	9e 81       	ldd	r25, Y+6	; 0x06
    3736:	84 30       	cpi	r24, 0x04	; 4
    3738:	91 05       	cpc	r25, r1
    373a:	84 f3       	brlt	.-32     	; 0x371c <Keypad_init+0x40>
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    373c:	84 e0       	ldi	r24, 0x04	; 4
    373e:	90 e0       	ldi	r25, 0x00	; 0
    3740:	9c 83       	std	Y+4, r25	; 0x04
    3742:	8b 83       	std	Y+3, r24	; 0x03
    3744:	0b c0       	rjmp	.+22     	; 0x375c <Keypad_init+0x80>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
    3746:	9b 81       	ldd	r25, Y+3	; 0x03
    3748:	83 e0       	ldi	r24, 0x03	; 3
    374a:	69 2f       	mov	r22, r25
    374c:	40 e0       	ldi	r20, 0x00	; 0
    374e:	0e 94 80 15 	call	0x2b00	; 0x2b00 <DIO_voidSetPinDirection>
	for (int i=0; i<4; i++){
		DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
	}

		/*SET DIRECTION OF COL -------> INPUT */
	for (int i=4; i<8; i++){
    3752:	8b 81       	ldd	r24, Y+3	; 0x03
    3754:	9c 81       	ldd	r25, Y+4	; 0x04
    3756:	01 96       	adiw	r24, 0x01	; 1
    3758:	9c 83       	std	Y+4, r25	; 0x04
    375a:	8b 83       	std	Y+3, r24	; 0x03
    375c:	8b 81       	ldd	r24, Y+3	; 0x03
    375e:	9c 81       	ldd	r25, Y+4	; 0x04
    3760:	88 30       	cpi	r24, 0x08	; 8
    3762:	91 05       	cpc	r25, r1
    3764:	84 f3       	brlt	.-32     	; 0x3746 <Keypad_init+0x6a>
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    3766:	84 e0       	ldi	r24, 0x04	; 4
    3768:	90 e0       	ldi	r25, 0x00	; 0
    376a:	9a 83       	std	Y+2, r25	; 0x02
    376c:	89 83       	std	Y+1, r24	; 0x01
    376e:	0b c0       	rjmp	.+22     	; 0x3786 <Keypad_init+0xaa>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
    3770:	99 81       	ldd	r25, Y+1	; 0x01
    3772:	83 e0       	ldi	r24, 0x03	; 3
    3774:	69 2f       	mov	r22, r25
    3776:	41 e0       	ldi	r20, 0x01	; 1
    3778:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	for (int i=4; i<8; i++){
		DIO_voidSetPinDirection(PortNum, i, DIO_u8INPUT);
	}

		/*SET VALUES OF COL -------> PULL UP */
	for (int i=4; i<8; i++){
    377c:	89 81       	ldd	r24, Y+1	; 0x01
    377e:	9a 81       	ldd	r25, Y+2	; 0x02
    3780:	01 96       	adiw	r24, 0x01	; 1
    3782:	9a 83       	std	Y+2, r25	; 0x02
    3784:	89 83       	std	Y+1, r24	; 0x01
    3786:	89 81       	ldd	r24, Y+1	; 0x01
    3788:	9a 81       	ldd	r25, Y+2	; 0x02
    378a:	88 30       	cpi	r24, 0x08	; 8
    378c:	91 05       	cpc	r25, r1
    378e:	84 f3       	brlt	.-32     	; 0x3770 <Keypad_init+0x94>
			DIO_voidSetPinValue(PortNum, i, DIO_u8HIGH);
		}

}
    3790:	28 96       	adiw	r28, 0x08	; 8
    3792:	0f b6       	in	r0, 0x3f	; 63
    3794:	f8 94       	cli
    3796:	de bf       	out	0x3e, r29	; 62
    3798:	0f be       	out	0x3f, r0	; 63
    379a:	cd bf       	out	0x3d, r28	; 61
    379c:	cf 91       	pop	r28
    379e:	df 91       	pop	r29
    37a0:	08 95       	ret

000037a2 <KeyBad_uint8GetKey>:



uint8 KeyBad_uint8GetKey(void){
    37a2:	df 93       	push	r29
    37a4:	cf 93       	push	r28
    37a6:	00 d0       	rcall	.+0      	; 0x37a8 <KeyBad_uint8GetKey+0x6>
    37a8:	00 d0       	rcall	.+0      	; 0x37aa <KeyBad_uint8GetKey+0x8>
    37aa:	00 d0       	rcall	.+0      	; 0x37ac <KeyBad_uint8GetKey+0xa>
    37ac:	cd b7       	in	r28, 0x3d	; 61
    37ae:	de b7       	in	r29, 0x3e	; 62
	uint8 Key = 'z';
    37b0:	8a e7       	ldi	r24, 0x7A	; 122
    37b2:	8e 83       	std	Y+6, r24	; 0x06
	uint8 x = 1 ;
    37b4:	81 e0       	ldi	r24, 0x01	; 1
    37b6:	8d 83       	std	Y+5, r24	; 0x05
	for (int r=0; r<4; r++){
    37b8:	1c 82       	std	Y+4, r1	; 0x04
    37ba:	1b 82       	std	Y+3, r1	; 0x03
    37bc:	43 c0       	rjmp	.+134    	; 0x3844 <KeyBad_uint8GetKey+0xa2>
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
    37be:	9b 81       	ldd	r25, Y+3	; 0x03
    37c0:	83 e0       	ldi	r24, 0x03	; 3
    37c2:	69 2f       	mov	r22, r25
    37c4:	40 e0       	ldi	r20, 0x00	; 0
    37c6:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
		for(int c=4; c<8; c++){
    37ca:	84 e0       	ldi	r24, 0x04	; 4
    37cc:	90 e0       	ldi	r25, 0x00	; 0
    37ce:	9a 83       	std	Y+2, r25	; 0x02
    37d0:	89 83       	std	Y+1, r24	; 0x01
    37d2:	28 c0       	rjmp	.+80     	; 0x3824 <KeyBad_uint8GetKey+0x82>
		 x=	DIO_u8GetPinValue(PortNum,c);
    37d4:	99 81       	ldd	r25, Y+1	; 0x01
    37d6:	83 e0       	ldi	r24, 0x03	; 3
    37d8:	69 2f       	mov	r22, r25
    37da:	0e 94 84 17 	call	0x2f08	; 0x2f08 <DIO_u8GetPinValue>
    37de:	8d 83       	std	Y+5, r24	; 0x05
			if (x ==0){
    37e0:	8d 81       	ldd	r24, Y+5	; 0x05
    37e2:	88 23       	and	r24, r24
    37e4:	99 f4       	brne	.+38     	; 0x380c <KeyBad_uint8GetKey+0x6a>
				Key = Keypad_arr[r][c-4];
    37e6:	4b 81       	ldd	r20, Y+3	; 0x03
    37e8:	5c 81       	ldd	r21, Y+4	; 0x04
    37ea:	89 81       	ldd	r24, Y+1	; 0x01
    37ec:	9a 81       	ldd	r25, Y+2	; 0x02
    37ee:	9c 01       	movw	r18, r24
    37f0:	24 50       	subi	r18, 0x04	; 4
    37f2:	30 40       	sbci	r19, 0x00	; 0
    37f4:	ca 01       	movw	r24, r20
    37f6:	88 0f       	add	r24, r24
    37f8:	99 1f       	adc	r25, r25
    37fa:	88 0f       	add	r24, r24
    37fc:	99 1f       	adc	r25, r25
    37fe:	82 0f       	add	r24, r18
    3800:	93 1f       	adc	r25, r19
    3802:	fc 01       	movw	r30, r24
    3804:	e3 57       	subi	r30, 0x73	; 115
    3806:	fd 4f       	sbci	r31, 0xFD	; 253
    3808:	80 81       	ld	r24, Z
    380a:	8e 83       	std	Y+6, r24	; 0x06
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
    380c:	99 81       	ldd	r25, Y+1	; 0x01
    380e:	83 e0       	ldi	r24, 0x03	; 3
    3810:	69 2f       	mov	r22, r25
    3812:	0e 94 84 17 	call	0x2f08	; 0x2f08 <DIO_u8GetPinValue>
    3816:	88 23       	and	r24, r24
    3818:	c9 f3       	breq	.-14     	; 0x380c <KeyBad_uint8GetKey+0x6a>
uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
		DIO_voidSetPinValue(PortNum,r,DIO_u8LOW);
		for(int c=4; c<8; c++){
    381a:	89 81       	ldd	r24, Y+1	; 0x01
    381c:	9a 81       	ldd	r25, Y+2	; 0x02
    381e:	01 96       	adiw	r24, 0x01	; 1
    3820:	9a 83       	std	Y+2, r25	; 0x02
    3822:	89 83       	std	Y+1, r24	; 0x01
    3824:	89 81       	ldd	r24, Y+1	; 0x01
    3826:	9a 81       	ldd	r25, Y+2	; 0x02
    3828:	88 30       	cpi	r24, 0x08	; 8
    382a:	91 05       	cpc	r25, r1
    382c:	9c f2       	brlt	.-90     	; 0x37d4 <KeyBad_uint8GetKey+0x32>
			if (x ==0){
				Key = Keypad_arr[r][c-4];
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
    382e:	9b 81       	ldd	r25, Y+3	; 0x03
    3830:	83 e0       	ldi	r24, 0x03	; 3
    3832:	69 2f       	mov	r22, r25
    3834:	41 e0       	ldi	r20, 0x01	; 1
    3836:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>


uint8 KeyBad_uint8GetKey(void){
	uint8 Key = 'z';
	uint8 x = 1 ;
	for (int r=0; r<4; r++){
    383a:	8b 81       	ldd	r24, Y+3	; 0x03
    383c:	9c 81       	ldd	r25, Y+4	; 0x04
    383e:	01 96       	adiw	r24, 0x01	; 1
    3840:	9c 83       	std	Y+4, r25	; 0x04
    3842:	8b 83       	std	Y+3, r24	; 0x03
    3844:	8b 81       	ldd	r24, Y+3	; 0x03
    3846:	9c 81       	ldd	r25, Y+4	; 0x04
    3848:	84 30       	cpi	r24, 0x04	; 4
    384a:	91 05       	cpc	r25, r1
    384c:	0c f4       	brge	.+2      	; 0x3850 <KeyBad_uint8GetKey+0xae>
    384e:	b7 cf       	rjmp	.-146    	; 0x37be <KeyBad_uint8GetKey+0x1c>
				}
			while (DIO_u8GetPinValue(PortNum,c) == 0);
		}
		DIO_voidSetPinValue(PortNum,r,DIO_u8HIGH);
	}
	return Key;
    3850:	8e 81       	ldd	r24, Y+6	; 0x06
}
    3852:	26 96       	adiw	r28, 0x06	; 6
    3854:	0f b6       	in	r0, 0x3f	; 63
    3856:	f8 94       	cli
    3858:	de bf       	out	0x3e, r29	; 62
    385a:	0f be       	out	0x3f, r0	; 63
    385c:	cd bf       	out	0x3d, r28	; 61
    385e:	cf 91       	pop	r28
    3860:	df 91       	pop	r29
    3862:	08 95       	ret

00003864 <LCD_Init>:
/* Version             :  1.0.0                    */
/***************************************************/ 

#include "CLCD_interface.h"

void LCD_Init(void){
    3864:	df 93       	push	r29
    3866:	cf 93       	push	r28
    3868:	cd b7       	in	r28, 0x3d	; 61
    386a:	de b7       	in	r29, 0x3e	; 62
    386c:	6c 97       	sbiw	r28, 0x1c	; 28
    386e:	0f b6       	in	r0, 0x3f	; 63
    3870:	f8 94       	cli
    3872:	de bf       	out	0x3e, r29	; 62
    3874:	0f be       	out	0x3f, r0	; 63
    3876:	cd bf       	out	0x3d, r28	; 61
	DIO_voidSetPortDirection(DIO_u8PORTA ,DIO_u8PortOn);
    3878:	81 e0       	ldi	r24, 0x01	; 1
    387a:	6f ef       	ldi	r22, 0xFF	; 255
    387c:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <DIO_voidSetPortDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_RS ,DIO_u8OUTPUT);
    3880:	82 e0       	ldi	r24, 0x02	; 2
    3882:	65 e0       	ldi	r22, 0x05	; 5
    3884:	41 e0       	ldi	r20, 0x01	; 1
    3886:	0e 94 80 15 	call	0x2b00	; 0x2b00 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_u8PORTB ,LCD_EN ,DIO_u8OUTPUT);
    388a:	82 e0       	ldi	r24, 0x02	; 2
    388c:	67 e0       	ldi	r22, 0x07	; 7
    388e:	41 e0       	ldi	r20, 0x01	; 1
    3890:	0e 94 80 15 	call	0x2b00	; 0x2b00 <DIO_voidSetPinDirection>
    3894:	80 e0       	ldi	r24, 0x00	; 0
    3896:	90 e0       	ldi	r25, 0x00	; 0
    3898:	a8 e4       	ldi	r26, 0x48	; 72
    389a:	b2 e4       	ldi	r27, 0x42	; 66
    389c:	89 8f       	std	Y+25, r24	; 0x19
    389e:	9a 8f       	std	Y+26, r25	; 0x1a
    38a0:	ab 8f       	std	Y+27, r26	; 0x1b
    38a2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38a4:	69 8d       	ldd	r22, Y+25	; 0x19
    38a6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    38a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    38aa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    38ac:	20 e0       	ldi	r18, 0x00	; 0
    38ae:	30 e0       	ldi	r19, 0x00	; 0
    38b0:	4a ef       	ldi	r20, 0xFA	; 250
    38b2:	54 e4       	ldi	r21, 0x44	; 68
    38b4:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    38b8:	dc 01       	movw	r26, r24
    38ba:	cb 01       	movw	r24, r22
    38bc:	8d 8b       	std	Y+21, r24	; 0x15
    38be:	9e 8b       	std	Y+22, r25	; 0x16
    38c0:	af 8b       	std	Y+23, r26	; 0x17
    38c2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    38c4:	6d 89       	ldd	r22, Y+21	; 0x15
    38c6:	7e 89       	ldd	r23, Y+22	; 0x16
    38c8:	8f 89       	ldd	r24, Y+23	; 0x17
    38ca:	98 8d       	ldd	r25, Y+24	; 0x18
    38cc:	20 e0       	ldi	r18, 0x00	; 0
    38ce:	30 e0       	ldi	r19, 0x00	; 0
    38d0:	40 e8       	ldi	r20, 0x80	; 128
    38d2:	5f e3       	ldi	r21, 0x3F	; 63
    38d4:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    38d8:	88 23       	and	r24, r24
    38da:	2c f4       	brge	.+10     	; 0x38e6 <LCD_Init+0x82>
		__ticks = 1;
    38dc:	81 e0       	ldi	r24, 0x01	; 1
    38de:	90 e0       	ldi	r25, 0x00	; 0
    38e0:	9c 8b       	std	Y+20, r25	; 0x14
    38e2:	8b 8b       	std	Y+19, r24	; 0x13
    38e4:	3f c0       	rjmp	.+126    	; 0x3964 <LCD_Init+0x100>
	else if (__tmp > 65535)
    38e6:	6d 89       	ldd	r22, Y+21	; 0x15
    38e8:	7e 89       	ldd	r23, Y+22	; 0x16
    38ea:	8f 89       	ldd	r24, Y+23	; 0x17
    38ec:	98 8d       	ldd	r25, Y+24	; 0x18
    38ee:	20 e0       	ldi	r18, 0x00	; 0
    38f0:	3f ef       	ldi	r19, 0xFF	; 255
    38f2:	4f e7       	ldi	r20, 0x7F	; 127
    38f4:	57 e4       	ldi	r21, 0x47	; 71
    38f6:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    38fa:	18 16       	cp	r1, r24
    38fc:	4c f5       	brge	.+82     	; 0x3950 <LCD_Init+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38fe:	69 8d       	ldd	r22, Y+25	; 0x19
    3900:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3902:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3904:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3906:	20 e0       	ldi	r18, 0x00	; 0
    3908:	30 e0       	ldi	r19, 0x00	; 0
    390a:	40 e2       	ldi	r20, 0x20	; 32
    390c:	51 e4       	ldi	r21, 0x41	; 65
    390e:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3912:	dc 01       	movw	r26, r24
    3914:	cb 01       	movw	r24, r22
    3916:	bc 01       	movw	r22, r24
    3918:	cd 01       	movw	r24, r26
    391a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    391e:	dc 01       	movw	r26, r24
    3920:	cb 01       	movw	r24, r22
    3922:	9c 8b       	std	Y+20, r25	; 0x14
    3924:	8b 8b       	std	Y+19, r24	; 0x13
    3926:	0f c0       	rjmp	.+30     	; 0x3946 <LCD_Init+0xe2>
    3928:	88 ec       	ldi	r24, 0xC8	; 200
    392a:	90 e0       	ldi	r25, 0x00	; 0
    392c:	9a 8b       	std	Y+18, r25	; 0x12
    392e:	89 8b       	std	Y+17, r24	; 0x11
    3930:	89 89       	ldd	r24, Y+17	; 0x11
    3932:	9a 89       	ldd	r25, Y+18	; 0x12
    3934:	01 97       	sbiw	r24, 0x01	; 1
    3936:	f1 f7       	brne	.-4      	; 0x3934 <LCD_Init+0xd0>
    3938:	9a 8b       	std	Y+18, r25	; 0x12
    393a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    393c:	8b 89       	ldd	r24, Y+19	; 0x13
    393e:	9c 89       	ldd	r25, Y+20	; 0x14
    3940:	01 97       	sbiw	r24, 0x01	; 1
    3942:	9c 8b       	std	Y+20, r25	; 0x14
    3944:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3946:	8b 89       	ldd	r24, Y+19	; 0x13
    3948:	9c 89       	ldd	r25, Y+20	; 0x14
    394a:	00 97       	sbiw	r24, 0x00	; 0
    394c:	69 f7       	brne	.-38     	; 0x3928 <LCD_Init+0xc4>
    394e:	14 c0       	rjmp	.+40     	; 0x3978 <LCD_Init+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3950:	6d 89       	ldd	r22, Y+21	; 0x15
    3952:	7e 89       	ldd	r23, Y+22	; 0x16
    3954:	8f 89       	ldd	r24, Y+23	; 0x17
    3956:	98 8d       	ldd	r25, Y+24	; 0x18
    3958:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    395c:	dc 01       	movw	r26, r24
    395e:	cb 01       	movw	r24, r22
    3960:	9c 8b       	std	Y+20, r25	; 0x14
    3962:	8b 8b       	std	Y+19, r24	; 0x13
    3964:	8b 89       	ldd	r24, Y+19	; 0x13
    3966:	9c 89       	ldd	r25, Y+20	; 0x14
    3968:	98 8b       	std	Y+16, r25	; 0x10
    396a:	8f 87       	std	Y+15, r24	; 0x0f
    396c:	8f 85       	ldd	r24, Y+15	; 0x0f
    396e:	98 89       	ldd	r25, Y+16	; 0x10
    3970:	01 97       	sbiw	r24, 0x01	; 1
    3972:	f1 f7       	brne	.-4      	; 0x3970 <LCD_Init+0x10c>
    3974:	98 8b       	std	Y+16, r25	; 0x10
    3976:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	LCD_WriteInst(0x38);
    3978:	88 e3       	ldi	r24, 0x38	; 56
    397a:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
	LCD_WriteInst(0x0C);
    397e:	8c e0       	ldi	r24, 0x0C	; 12
    3980:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
	LCD_WriteInst(0x01);
    3984:	81 e0       	ldi	r24, 0x01	; 1
    3986:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
    398a:	80 e0       	ldi	r24, 0x00	; 0
    398c:	90 e0       	ldi	r25, 0x00	; 0
    398e:	a0 e8       	ldi	r26, 0x80	; 128
    3990:	bf e3       	ldi	r27, 0x3F	; 63
    3992:	8b 87       	std	Y+11, r24	; 0x0b
    3994:	9c 87       	std	Y+12, r25	; 0x0c
    3996:	ad 87       	std	Y+13, r26	; 0x0d
    3998:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    399a:	6b 85       	ldd	r22, Y+11	; 0x0b
    399c:	7c 85       	ldd	r23, Y+12	; 0x0c
    399e:	8d 85       	ldd	r24, Y+13	; 0x0d
    39a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    39a2:	20 e0       	ldi	r18, 0x00	; 0
    39a4:	30 e0       	ldi	r19, 0x00	; 0
    39a6:	4a ef       	ldi	r20, 0xFA	; 250
    39a8:	54 e4       	ldi	r21, 0x44	; 68
    39aa:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    39ae:	dc 01       	movw	r26, r24
    39b0:	cb 01       	movw	r24, r22
    39b2:	8f 83       	std	Y+7, r24	; 0x07
    39b4:	98 87       	std	Y+8, r25	; 0x08
    39b6:	a9 87       	std	Y+9, r26	; 0x09
    39b8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    39ba:	6f 81       	ldd	r22, Y+7	; 0x07
    39bc:	78 85       	ldd	r23, Y+8	; 0x08
    39be:	89 85       	ldd	r24, Y+9	; 0x09
    39c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    39c2:	20 e0       	ldi	r18, 0x00	; 0
    39c4:	30 e0       	ldi	r19, 0x00	; 0
    39c6:	40 e8       	ldi	r20, 0x80	; 128
    39c8:	5f e3       	ldi	r21, 0x3F	; 63
    39ca:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    39ce:	88 23       	and	r24, r24
    39d0:	2c f4       	brge	.+10     	; 0x39dc <LCD_Init+0x178>
		__ticks = 1;
    39d2:	81 e0       	ldi	r24, 0x01	; 1
    39d4:	90 e0       	ldi	r25, 0x00	; 0
    39d6:	9e 83       	std	Y+6, r25	; 0x06
    39d8:	8d 83       	std	Y+5, r24	; 0x05
    39da:	3f c0       	rjmp	.+126    	; 0x3a5a <LCD_Init+0x1f6>
	else if (__tmp > 65535)
    39dc:	6f 81       	ldd	r22, Y+7	; 0x07
    39de:	78 85       	ldd	r23, Y+8	; 0x08
    39e0:	89 85       	ldd	r24, Y+9	; 0x09
    39e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    39e4:	20 e0       	ldi	r18, 0x00	; 0
    39e6:	3f ef       	ldi	r19, 0xFF	; 255
    39e8:	4f e7       	ldi	r20, 0x7F	; 127
    39ea:	57 e4       	ldi	r21, 0x47	; 71
    39ec:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    39f0:	18 16       	cp	r1, r24
    39f2:	4c f5       	brge	.+82     	; 0x3a46 <LCD_Init+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    39f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    39f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    39fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    39fc:	20 e0       	ldi	r18, 0x00	; 0
    39fe:	30 e0       	ldi	r19, 0x00	; 0
    3a00:	40 e2       	ldi	r20, 0x20	; 32
    3a02:	51 e4       	ldi	r21, 0x41	; 65
    3a04:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3a08:	dc 01       	movw	r26, r24
    3a0a:	cb 01       	movw	r24, r22
    3a0c:	bc 01       	movw	r22, r24
    3a0e:	cd 01       	movw	r24, r26
    3a10:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3a14:	dc 01       	movw	r26, r24
    3a16:	cb 01       	movw	r24, r22
    3a18:	9e 83       	std	Y+6, r25	; 0x06
    3a1a:	8d 83       	std	Y+5, r24	; 0x05
    3a1c:	0f c0       	rjmp	.+30     	; 0x3a3c <LCD_Init+0x1d8>
    3a1e:	88 ec       	ldi	r24, 0xC8	; 200
    3a20:	90 e0       	ldi	r25, 0x00	; 0
    3a22:	9c 83       	std	Y+4, r25	; 0x04
    3a24:	8b 83       	std	Y+3, r24	; 0x03
    3a26:	8b 81       	ldd	r24, Y+3	; 0x03
    3a28:	9c 81       	ldd	r25, Y+4	; 0x04
    3a2a:	01 97       	sbiw	r24, 0x01	; 1
    3a2c:	f1 f7       	brne	.-4      	; 0x3a2a <LCD_Init+0x1c6>
    3a2e:	9c 83       	std	Y+4, r25	; 0x04
    3a30:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a32:	8d 81       	ldd	r24, Y+5	; 0x05
    3a34:	9e 81       	ldd	r25, Y+6	; 0x06
    3a36:	01 97       	sbiw	r24, 0x01	; 1
    3a38:	9e 83       	std	Y+6, r25	; 0x06
    3a3a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a3c:	8d 81       	ldd	r24, Y+5	; 0x05
    3a3e:	9e 81       	ldd	r25, Y+6	; 0x06
    3a40:	00 97       	sbiw	r24, 0x00	; 0
    3a42:	69 f7       	brne	.-38     	; 0x3a1e <LCD_Init+0x1ba>
    3a44:	14 c0       	rjmp	.+40     	; 0x3a6e <LCD_Init+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a46:	6f 81       	ldd	r22, Y+7	; 0x07
    3a48:	78 85       	ldd	r23, Y+8	; 0x08
    3a4a:	89 85       	ldd	r24, Y+9	; 0x09
    3a4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a4e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3a52:	dc 01       	movw	r26, r24
    3a54:	cb 01       	movw	r24, r22
    3a56:	9e 83       	std	Y+6, r25	; 0x06
    3a58:	8d 83       	std	Y+5, r24	; 0x05
    3a5a:	8d 81       	ldd	r24, Y+5	; 0x05
    3a5c:	9e 81       	ldd	r25, Y+6	; 0x06
    3a5e:	9a 83       	std	Y+2, r25	; 0x02
    3a60:	89 83       	std	Y+1, r24	; 0x01
    3a62:	89 81       	ldd	r24, Y+1	; 0x01
    3a64:	9a 81       	ldd	r25, Y+2	; 0x02
    3a66:	01 97       	sbiw	r24, 0x01	; 1
    3a68:	f1 f7       	brne	.-4      	; 0x3a66 <LCD_Init+0x202>
    3a6a:	9a 83       	std	Y+2, r25	; 0x02
    3a6c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	LCD_WriteInst(0x06);
    3a6e:	86 e0       	ldi	r24, 0x06	; 6
    3a70:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>

}
    3a74:	6c 96       	adiw	r28, 0x1c	; 28
    3a76:	0f b6       	in	r0, 0x3f	; 63
    3a78:	f8 94       	cli
    3a7a:	de bf       	out	0x3e, r29	; 62
    3a7c:	0f be       	out	0x3f, r0	; 63
    3a7e:	cd bf       	out	0x3d, r28	; 61
    3a80:	cf 91       	pop	r28
    3a82:	df 91       	pop	r29
    3a84:	08 95       	ret

00003a86 <LCD_WriteInst>:

void LCD_WriteInst(uint8 Ins)
{
    3a86:	df 93       	push	r29
    3a88:	cf 93       	push	r28
    3a8a:	cd b7       	in	r28, 0x3d	; 61
    3a8c:	de b7       	in	r29, 0x3e	; 62
    3a8e:	6d 97       	sbiw	r28, 0x1d	; 29
    3a90:	0f b6       	in	r0, 0x3f	; 63
    3a92:	f8 94       	cli
    3a94:	de bf       	out	0x3e, r29	; 62
    3a96:	0f be       	out	0x3f, r0	; 63
    3a98:	cd bf       	out	0x3d, r28	; 61
    3a9a:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendCmd);
    3a9c:	82 e0       	ldi	r24, 0x02	; 2
    3a9e:	65 e0       	ldi	r22, 0x05	; 5
    3aa0:	40 e0       	ldi	r20, 0x00	; 0
    3aa2:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,Ins);
    3aa6:	81 e0       	ldi	r24, 0x01	; 1
    3aa8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3aaa:	0e 94 3f 18 	call	0x307e	; 0x307e <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    3aae:	82 e0       	ldi	r24, 0x02	; 2
    3ab0:	67 e0       	ldi	r22, 0x07	; 7
    3ab2:	41 e0       	ldi	r20, 0x01	; 1
    3ab4:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
    3ab8:	80 e0       	ldi	r24, 0x00	; 0
    3aba:	90 e0       	ldi	r25, 0x00	; 0
    3abc:	a0 e8       	ldi	r26, 0x80	; 128
    3abe:	bf e3       	ldi	r27, 0x3F	; 63
    3ac0:	89 8f       	std	Y+25, r24	; 0x19
    3ac2:	9a 8f       	std	Y+26, r25	; 0x1a
    3ac4:	ab 8f       	std	Y+27, r26	; 0x1b
    3ac6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ac8:	69 8d       	ldd	r22, Y+25	; 0x19
    3aca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3acc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ace:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3ad0:	20 e0       	ldi	r18, 0x00	; 0
    3ad2:	30 e0       	ldi	r19, 0x00	; 0
    3ad4:	4a ef       	ldi	r20, 0xFA	; 250
    3ad6:	54 e4       	ldi	r21, 0x44	; 68
    3ad8:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3adc:	dc 01       	movw	r26, r24
    3ade:	cb 01       	movw	r24, r22
    3ae0:	8d 8b       	std	Y+21, r24	; 0x15
    3ae2:	9e 8b       	std	Y+22, r25	; 0x16
    3ae4:	af 8b       	std	Y+23, r26	; 0x17
    3ae6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3ae8:	6d 89       	ldd	r22, Y+21	; 0x15
    3aea:	7e 89       	ldd	r23, Y+22	; 0x16
    3aec:	8f 89       	ldd	r24, Y+23	; 0x17
    3aee:	98 8d       	ldd	r25, Y+24	; 0x18
    3af0:	20 e0       	ldi	r18, 0x00	; 0
    3af2:	30 e0       	ldi	r19, 0x00	; 0
    3af4:	40 e8       	ldi	r20, 0x80	; 128
    3af6:	5f e3       	ldi	r21, 0x3F	; 63
    3af8:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    3afc:	88 23       	and	r24, r24
    3afe:	2c f4       	brge	.+10     	; 0x3b0a <LCD_WriteInst+0x84>
		__ticks = 1;
    3b00:	81 e0       	ldi	r24, 0x01	; 1
    3b02:	90 e0       	ldi	r25, 0x00	; 0
    3b04:	9c 8b       	std	Y+20, r25	; 0x14
    3b06:	8b 8b       	std	Y+19, r24	; 0x13
    3b08:	3f c0       	rjmp	.+126    	; 0x3b88 <LCD_WriteInst+0x102>
	else if (__tmp > 65535)
    3b0a:	6d 89       	ldd	r22, Y+21	; 0x15
    3b0c:	7e 89       	ldd	r23, Y+22	; 0x16
    3b0e:	8f 89       	ldd	r24, Y+23	; 0x17
    3b10:	98 8d       	ldd	r25, Y+24	; 0x18
    3b12:	20 e0       	ldi	r18, 0x00	; 0
    3b14:	3f ef       	ldi	r19, 0xFF	; 255
    3b16:	4f e7       	ldi	r20, 0x7F	; 127
    3b18:	57 e4       	ldi	r21, 0x47	; 71
    3b1a:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    3b1e:	18 16       	cp	r1, r24
    3b20:	4c f5       	brge	.+82     	; 0x3b74 <LCD_WriteInst+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b22:	69 8d       	ldd	r22, Y+25	; 0x19
    3b24:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b26:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b28:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b2a:	20 e0       	ldi	r18, 0x00	; 0
    3b2c:	30 e0       	ldi	r19, 0x00	; 0
    3b2e:	40 e2       	ldi	r20, 0x20	; 32
    3b30:	51 e4       	ldi	r21, 0x41	; 65
    3b32:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3b36:	dc 01       	movw	r26, r24
    3b38:	cb 01       	movw	r24, r22
    3b3a:	bc 01       	movw	r22, r24
    3b3c:	cd 01       	movw	r24, r26
    3b3e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3b42:	dc 01       	movw	r26, r24
    3b44:	cb 01       	movw	r24, r22
    3b46:	9c 8b       	std	Y+20, r25	; 0x14
    3b48:	8b 8b       	std	Y+19, r24	; 0x13
    3b4a:	0f c0       	rjmp	.+30     	; 0x3b6a <LCD_WriteInst+0xe4>
    3b4c:	88 ec       	ldi	r24, 0xC8	; 200
    3b4e:	90 e0       	ldi	r25, 0x00	; 0
    3b50:	9a 8b       	std	Y+18, r25	; 0x12
    3b52:	89 8b       	std	Y+17, r24	; 0x11
    3b54:	89 89       	ldd	r24, Y+17	; 0x11
    3b56:	9a 89       	ldd	r25, Y+18	; 0x12
    3b58:	01 97       	sbiw	r24, 0x01	; 1
    3b5a:	f1 f7       	brne	.-4      	; 0x3b58 <LCD_WriteInst+0xd2>
    3b5c:	9a 8b       	std	Y+18, r25	; 0x12
    3b5e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b60:	8b 89       	ldd	r24, Y+19	; 0x13
    3b62:	9c 89       	ldd	r25, Y+20	; 0x14
    3b64:	01 97       	sbiw	r24, 0x01	; 1
    3b66:	9c 8b       	std	Y+20, r25	; 0x14
    3b68:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b6a:	8b 89       	ldd	r24, Y+19	; 0x13
    3b6c:	9c 89       	ldd	r25, Y+20	; 0x14
    3b6e:	00 97       	sbiw	r24, 0x00	; 0
    3b70:	69 f7       	brne	.-38     	; 0x3b4c <LCD_WriteInst+0xc6>
    3b72:	14 c0       	rjmp	.+40     	; 0x3b9c <LCD_WriteInst+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b74:	6d 89       	ldd	r22, Y+21	; 0x15
    3b76:	7e 89       	ldd	r23, Y+22	; 0x16
    3b78:	8f 89       	ldd	r24, Y+23	; 0x17
    3b7a:	98 8d       	ldd	r25, Y+24	; 0x18
    3b7c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3b80:	dc 01       	movw	r26, r24
    3b82:	cb 01       	movw	r24, r22
    3b84:	9c 8b       	std	Y+20, r25	; 0x14
    3b86:	8b 8b       	std	Y+19, r24	; 0x13
    3b88:	8b 89       	ldd	r24, Y+19	; 0x13
    3b8a:	9c 89       	ldd	r25, Y+20	; 0x14
    3b8c:	98 8b       	std	Y+16, r25	; 0x10
    3b8e:	8f 87       	std	Y+15, r24	; 0x0f
    3b90:	8f 85       	ldd	r24, Y+15	; 0x0f
    3b92:	98 89       	ldd	r25, Y+16	; 0x10
    3b94:	01 97       	sbiw	r24, 0x01	; 1
    3b96:	f1 f7       	brne	.-4      	; 0x3b94 <LCD_WriteInst+0x10e>
    3b98:	98 8b       	std	Y+16, r25	; 0x10
    3b9a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    3b9c:	82 e0       	ldi	r24, 0x02	; 2
    3b9e:	67 e0       	ldi	r22, 0x07	; 7
    3ba0:	40 e0       	ldi	r20, 0x00	; 0
    3ba2:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
    3ba6:	80 e0       	ldi	r24, 0x00	; 0
    3ba8:	90 e0       	ldi	r25, 0x00	; 0
    3baa:	a0 e8       	ldi	r26, 0x80	; 128
    3bac:	bf e3       	ldi	r27, 0x3F	; 63
    3bae:	8b 87       	std	Y+11, r24	; 0x0b
    3bb0:	9c 87       	std	Y+12, r25	; 0x0c
    3bb2:	ad 87       	std	Y+13, r26	; 0x0d
    3bb4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bb6:	6b 85       	ldd	r22, Y+11	; 0x0b
    3bb8:	7c 85       	ldd	r23, Y+12	; 0x0c
    3bba:	8d 85       	ldd	r24, Y+13	; 0x0d
    3bbc:	9e 85       	ldd	r25, Y+14	; 0x0e
    3bbe:	20 e0       	ldi	r18, 0x00	; 0
    3bc0:	30 e0       	ldi	r19, 0x00	; 0
    3bc2:	4a ef       	ldi	r20, 0xFA	; 250
    3bc4:	54 e4       	ldi	r21, 0x44	; 68
    3bc6:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3bca:	dc 01       	movw	r26, r24
    3bcc:	cb 01       	movw	r24, r22
    3bce:	8f 83       	std	Y+7, r24	; 0x07
    3bd0:	98 87       	std	Y+8, r25	; 0x08
    3bd2:	a9 87       	std	Y+9, r26	; 0x09
    3bd4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3bd6:	6f 81       	ldd	r22, Y+7	; 0x07
    3bd8:	78 85       	ldd	r23, Y+8	; 0x08
    3bda:	89 85       	ldd	r24, Y+9	; 0x09
    3bdc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bde:	20 e0       	ldi	r18, 0x00	; 0
    3be0:	30 e0       	ldi	r19, 0x00	; 0
    3be2:	40 e8       	ldi	r20, 0x80	; 128
    3be4:	5f e3       	ldi	r21, 0x3F	; 63
    3be6:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    3bea:	88 23       	and	r24, r24
    3bec:	2c f4       	brge	.+10     	; 0x3bf8 <LCD_WriteInst+0x172>
		__ticks = 1;
    3bee:	81 e0       	ldi	r24, 0x01	; 1
    3bf0:	90 e0       	ldi	r25, 0x00	; 0
    3bf2:	9e 83       	std	Y+6, r25	; 0x06
    3bf4:	8d 83       	std	Y+5, r24	; 0x05
    3bf6:	3f c0       	rjmp	.+126    	; 0x3c76 <LCD_WriteInst+0x1f0>
	else if (__tmp > 65535)
    3bf8:	6f 81       	ldd	r22, Y+7	; 0x07
    3bfa:	78 85       	ldd	r23, Y+8	; 0x08
    3bfc:	89 85       	ldd	r24, Y+9	; 0x09
    3bfe:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c00:	20 e0       	ldi	r18, 0x00	; 0
    3c02:	3f ef       	ldi	r19, 0xFF	; 255
    3c04:	4f e7       	ldi	r20, 0x7F	; 127
    3c06:	57 e4       	ldi	r21, 0x47	; 71
    3c08:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    3c0c:	18 16       	cp	r1, r24
    3c0e:	4c f5       	brge	.+82     	; 0x3c62 <LCD_WriteInst+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c10:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c12:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c14:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c16:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c18:	20 e0       	ldi	r18, 0x00	; 0
    3c1a:	30 e0       	ldi	r19, 0x00	; 0
    3c1c:	40 e2       	ldi	r20, 0x20	; 32
    3c1e:	51 e4       	ldi	r21, 0x41	; 65
    3c20:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3c24:	dc 01       	movw	r26, r24
    3c26:	cb 01       	movw	r24, r22
    3c28:	bc 01       	movw	r22, r24
    3c2a:	cd 01       	movw	r24, r26
    3c2c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3c30:	dc 01       	movw	r26, r24
    3c32:	cb 01       	movw	r24, r22
    3c34:	9e 83       	std	Y+6, r25	; 0x06
    3c36:	8d 83       	std	Y+5, r24	; 0x05
    3c38:	0f c0       	rjmp	.+30     	; 0x3c58 <LCD_WriteInst+0x1d2>
    3c3a:	88 ec       	ldi	r24, 0xC8	; 200
    3c3c:	90 e0       	ldi	r25, 0x00	; 0
    3c3e:	9c 83       	std	Y+4, r25	; 0x04
    3c40:	8b 83       	std	Y+3, r24	; 0x03
    3c42:	8b 81       	ldd	r24, Y+3	; 0x03
    3c44:	9c 81       	ldd	r25, Y+4	; 0x04
    3c46:	01 97       	sbiw	r24, 0x01	; 1
    3c48:	f1 f7       	brne	.-4      	; 0x3c46 <LCD_WriteInst+0x1c0>
    3c4a:	9c 83       	std	Y+4, r25	; 0x04
    3c4c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c4e:	8d 81       	ldd	r24, Y+5	; 0x05
    3c50:	9e 81       	ldd	r25, Y+6	; 0x06
    3c52:	01 97       	sbiw	r24, 0x01	; 1
    3c54:	9e 83       	std	Y+6, r25	; 0x06
    3c56:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c58:	8d 81       	ldd	r24, Y+5	; 0x05
    3c5a:	9e 81       	ldd	r25, Y+6	; 0x06
    3c5c:	00 97       	sbiw	r24, 0x00	; 0
    3c5e:	69 f7       	brne	.-38     	; 0x3c3a <LCD_WriteInst+0x1b4>
    3c60:	14 c0       	rjmp	.+40     	; 0x3c8a <LCD_WriteInst+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c62:	6f 81       	ldd	r22, Y+7	; 0x07
    3c64:	78 85       	ldd	r23, Y+8	; 0x08
    3c66:	89 85       	ldd	r24, Y+9	; 0x09
    3c68:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c6a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3c6e:	dc 01       	movw	r26, r24
    3c70:	cb 01       	movw	r24, r22
    3c72:	9e 83       	std	Y+6, r25	; 0x06
    3c74:	8d 83       	std	Y+5, r24	; 0x05
    3c76:	8d 81       	ldd	r24, Y+5	; 0x05
    3c78:	9e 81       	ldd	r25, Y+6	; 0x06
    3c7a:	9a 83       	std	Y+2, r25	; 0x02
    3c7c:	89 83       	std	Y+1, r24	; 0x01
    3c7e:	89 81       	ldd	r24, Y+1	; 0x01
    3c80:	9a 81       	ldd	r25, Y+2	; 0x02
    3c82:	01 97       	sbiw	r24, 0x01	; 1
    3c84:	f1 f7       	brne	.-4      	; 0x3c82 <LCD_WriteInst+0x1fc>
    3c86:	9a 83       	std	Y+2, r25	; 0x02
    3c88:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3c8a:	6d 96       	adiw	r28, 0x1d	; 29
    3c8c:	0f b6       	in	r0, 0x3f	; 63
    3c8e:	f8 94       	cli
    3c90:	de bf       	out	0x3e, r29	; 62
    3c92:	0f be       	out	0x3f, r0	; 63
    3c94:	cd bf       	out	0x3d, r28	; 61
    3c96:	cf 91       	pop	r28
    3c98:	df 91       	pop	r29
    3c9a:	08 95       	ret

00003c9c <LCD_WriteData>:

void LCD_WriteData(uint8 data)
{
    3c9c:	df 93       	push	r29
    3c9e:	cf 93       	push	r28
    3ca0:	cd b7       	in	r28, 0x3d	; 61
    3ca2:	de b7       	in	r29, 0x3e	; 62
    3ca4:	6d 97       	sbiw	r28, 0x1d	; 29
    3ca6:	0f b6       	in	r0, 0x3f	; 63
    3ca8:	f8 94       	cli
    3caa:	de bf       	out	0x3e, r29	; 62
    3cac:	0f be       	out	0x3f, r0	; 63
    3cae:	cd bf       	out	0x3d, r28	; 61
    3cb0:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_RS ,LCD_SendData);
    3cb2:	82 e0       	ldi	r24, 0x02	; 2
    3cb4:	65 e0       	ldi	r22, 0x05	; 5
    3cb6:	41 e0       	ldi	r20, 0x01	; 1
    3cb8:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
	DIO_voidSetPortValue(DIO_u8PORTA ,data);
    3cbc:	81 e0       	ldi	r24, 0x01	; 1
    3cbe:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3cc0:	0e 94 3f 18 	call	0x307e	; 0x307e <DIO_voidSetPortValue>
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_HIGH);
    3cc4:	82 e0       	ldi	r24, 0x02	; 2
    3cc6:	67 e0       	ldi	r22, 0x07	; 7
    3cc8:	41 e0       	ldi	r20, 0x01	; 1
    3cca:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
    3cce:	80 e0       	ldi	r24, 0x00	; 0
    3cd0:	90 e0       	ldi	r25, 0x00	; 0
    3cd2:	a0 e8       	ldi	r26, 0x80	; 128
    3cd4:	bf e3       	ldi	r27, 0x3F	; 63
    3cd6:	89 8f       	std	Y+25, r24	; 0x19
    3cd8:	9a 8f       	std	Y+26, r25	; 0x1a
    3cda:	ab 8f       	std	Y+27, r26	; 0x1b
    3cdc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3cde:	69 8d       	ldd	r22, Y+25	; 0x19
    3ce0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ce2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ce4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3ce6:	20 e0       	ldi	r18, 0x00	; 0
    3ce8:	30 e0       	ldi	r19, 0x00	; 0
    3cea:	4a ef       	ldi	r20, 0xFA	; 250
    3cec:	54 e4       	ldi	r21, 0x44	; 68
    3cee:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3cf2:	dc 01       	movw	r26, r24
    3cf4:	cb 01       	movw	r24, r22
    3cf6:	8d 8b       	std	Y+21, r24	; 0x15
    3cf8:	9e 8b       	std	Y+22, r25	; 0x16
    3cfa:	af 8b       	std	Y+23, r26	; 0x17
    3cfc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3cfe:	6d 89       	ldd	r22, Y+21	; 0x15
    3d00:	7e 89       	ldd	r23, Y+22	; 0x16
    3d02:	8f 89       	ldd	r24, Y+23	; 0x17
    3d04:	98 8d       	ldd	r25, Y+24	; 0x18
    3d06:	20 e0       	ldi	r18, 0x00	; 0
    3d08:	30 e0       	ldi	r19, 0x00	; 0
    3d0a:	40 e8       	ldi	r20, 0x80	; 128
    3d0c:	5f e3       	ldi	r21, 0x3F	; 63
    3d0e:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    3d12:	88 23       	and	r24, r24
    3d14:	2c f4       	brge	.+10     	; 0x3d20 <LCD_WriteData+0x84>
		__ticks = 1;
    3d16:	81 e0       	ldi	r24, 0x01	; 1
    3d18:	90 e0       	ldi	r25, 0x00	; 0
    3d1a:	9c 8b       	std	Y+20, r25	; 0x14
    3d1c:	8b 8b       	std	Y+19, r24	; 0x13
    3d1e:	3f c0       	rjmp	.+126    	; 0x3d9e <LCD_WriteData+0x102>
	else if (__tmp > 65535)
    3d20:	6d 89       	ldd	r22, Y+21	; 0x15
    3d22:	7e 89       	ldd	r23, Y+22	; 0x16
    3d24:	8f 89       	ldd	r24, Y+23	; 0x17
    3d26:	98 8d       	ldd	r25, Y+24	; 0x18
    3d28:	20 e0       	ldi	r18, 0x00	; 0
    3d2a:	3f ef       	ldi	r19, 0xFF	; 255
    3d2c:	4f e7       	ldi	r20, 0x7F	; 127
    3d2e:	57 e4       	ldi	r21, 0x47	; 71
    3d30:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    3d34:	18 16       	cp	r1, r24
    3d36:	4c f5       	brge	.+82     	; 0x3d8a <LCD_WriteData+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d38:	69 8d       	ldd	r22, Y+25	; 0x19
    3d3a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3d3c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3d3e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3d40:	20 e0       	ldi	r18, 0x00	; 0
    3d42:	30 e0       	ldi	r19, 0x00	; 0
    3d44:	40 e2       	ldi	r20, 0x20	; 32
    3d46:	51 e4       	ldi	r21, 0x41	; 65
    3d48:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3d4c:	dc 01       	movw	r26, r24
    3d4e:	cb 01       	movw	r24, r22
    3d50:	bc 01       	movw	r22, r24
    3d52:	cd 01       	movw	r24, r26
    3d54:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3d58:	dc 01       	movw	r26, r24
    3d5a:	cb 01       	movw	r24, r22
    3d5c:	9c 8b       	std	Y+20, r25	; 0x14
    3d5e:	8b 8b       	std	Y+19, r24	; 0x13
    3d60:	0f c0       	rjmp	.+30     	; 0x3d80 <LCD_WriteData+0xe4>
    3d62:	88 ec       	ldi	r24, 0xC8	; 200
    3d64:	90 e0       	ldi	r25, 0x00	; 0
    3d66:	9a 8b       	std	Y+18, r25	; 0x12
    3d68:	89 8b       	std	Y+17, r24	; 0x11
    3d6a:	89 89       	ldd	r24, Y+17	; 0x11
    3d6c:	9a 89       	ldd	r25, Y+18	; 0x12
    3d6e:	01 97       	sbiw	r24, 0x01	; 1
    3d70:	f1 f7       	brne	.-4      	; 0x3d6e <LCD_WriteData+0xd2>
    3d72:	9a 8b       	std	Y+18, r25	; 0x12
    3d74:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d76:	8b 89       	ldd	r24, Y+19	; 0x13
    3d78:	9c 89       	ldd	r25, Y+20	; 0x14
    3d7a:	01 97       	sbiw	r24, 0x01	; 1
    3d7c:	9c 8b       	std	Y+20, r25	; 0x14
    3d7e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d80:	8b 89       	ldd	r24, Y+19	; 0x13
    3d82:	9c 89       	ldd	r25, Y+20	; 0x14
    3d84:	00 97       	sbiw	r24, 0x00	; 0
    3d86:	69 f7       	brne	.-38     	; 0x3d62 <LCD_WriteData+0xc6>
    3d88:	14 c0       	rjmp	.+40     	; 0x3db2 <LCD_WriteData+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d8a:	6d 89       	ldd	r22, Y+21	; 0x15
    3d8c:	7e 89       	ldd	r23, Y+22	; 0x16
    3d8e:	8f 89       	ldd	r24, Y+23	; 0x17
    3d90:	98 8d       	ldd	r25, Y+24	; 0x18
    3d92:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3d96:	dc 01       	movw	r26, r24
    3d98:	cb 01       	movw	r24, r22
    3d9a:	9c 8b       	std	Y+20, r25	; 0x14
    3d9c:	8b 8b       	std	Y+19, r24	; 0x13
    3d9e:	8b 89       	ldd	r24, Y+19	; 0x13
    3da0:	9c 89       	ldd	r25, Y+20	; 0x14
    3da2:	98 8b       	std	Y+16, r25	; 0x10
    3da4:	8f 87       	std	Y+15, r24	; 0x0f
    3da6:	8f 85       	ldd	r24, Y+15	; 0x0f
    3da8:	98 89       	ldd	r25, Y+16	; 0x10
    3daa:	01 97       	sbiw	r24, 0x01	; 1
    3dac:	f1 f7       	brne	.-4      	; 0x3daa <LCD_WriteData+0x10e>
    3dae:	98 8b       	std	Y+16, r25	; 0x10
    3db0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(DIO_u8PORTB  ,LCD_EN ,LCD_LOW);
    3db2:	82 e0       	ldi	r24, 0x02	; 2
    3db4:	67 e0       	ldi	r22, 0x07	; 7
    3db6:	40 e0       	ldi	r20, 0x00	; 0
    3db8:	0e 94 82 16 	call	0x2d04	; 0x2d04 <DIO_voidSetPinValue>
    3dbc:	80 e0       	ldi	r24, 0x00	; 0
    3dbe:	90 e0       	ldi	r25, 0x00	; 0
    3dc0:	a0 e8       	ldi	r26, 0x80	; 128
    3dc2:	bf e3       	ldi	r27, 0x3F	; 63
    3dc4:	8b 87       	std	Y+11, r24	; 0x0b
    3dc6:	9c 87       	std	Y+12, r25	; 0x0c
    3dc8:	ad 87       	std	Y+13, r26	; 0x0d
    3dca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dcc:	6b 85       	ldd	r22, Y+11	; 0x0b
    3dce:	7c 85       	ldd	r23, Y+12	; 0x0c
    3dd0:	8d 85       	ldd	r24, Y+13	; 0x0d
    3dd2:	9e 85       	ldd	r25, Y+14	; 0x0e
    3dd4:	20 e0       	ldi	r18, 0x00	; 0
    3dd6:	30 e0       	ldi	r19, 0x00	; 0
    3dd8:	4a ef       	ldi	r20, 0xFA	; 250
    3dda:	54 e4       	ldi	r21, 0x44	; 68
    3ddc:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3de0:	dc 01       	movw	r26, r24
    3de2:	cb 01       	movw	r24, r22
    3de4:	8f 83       	std	Y+7, r24	; 0x07
    3de6:	98 87       	std	Y+8, r25	; 0x08
    3de8:	a9 87       	std	Y+9, r26	; 0x09
    3dea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3dec:	6f 81       	ldd	r22, Y+7	; 0x07
    3dee:	78 85       	ldd	r23, Y+8	; 0x08
    3df0:	89 85       	ldd	r24, Y+9	; 0x09
    3df2:	9a 85       	ldd	r25, Y+10	; 0x0a
    3df4:	20 e0       	ldi	r18, 0x00	; 0
    3df6:	30 e0       	ldi	r19, 0x00	; 0
    3df8:	40 e8       	ldi	r20, 0x80	; 128
    3dfa:	5f e3       	ldi	r21, 0x3F	; 63
    3dfc:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    3e00:	88 23       	and	r24, r24
    3e02:	2c f4       	brge	.+10     	; 0x3e0e <LCD_WriteData+0x172>
		__ticks = 1;
    3e04:	81 e0       	ldi	r24, 0x01	; 1
    3e06:	90 e0       	ldi	r25, 0x00	; 0
    3e08:	9e 83       	std	Y+6, r25	; 0x06
    3e0a:	8d 83       	std	Y+5, r24	; 0x05
    3e0c:	3f c0       	rjmp	.+126    	; 0x3e8c <LCD_WriteData+0x1f0>
	else if (__tmp > 65535)
    3e0e:	6f 81       	ldd	r22, Y+7	; 0x07
    3e10:	78 85       	ldd	r23, Y+8	; 0x08
    3e12:	89 85       	ldd	r24, Y+9	; 0x09
    3e14:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e16:	20 e0       	ldi	r18, 0x00	; 0
    3e18:	3f ef       	ldi	r19, 0xFF	; 255
    3e1a:	4f e7       	ldi	r20, 0x7F	; 127
    3e1c:	57 e4       	ldi	r21, 0x47	; 71
    3e1e:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    3e22:	18 16       	cp	r1, r24
    3e24:	4c f5       	brge	.+82     	; 0x3e78 <LCD_WriteData+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e26:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e28:	7c 85       	ldd	r23, Y+12	; 0x0c
    3e2a:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e2c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e2e:	20 e0       	ldi	r18, 0x00	; 0
    3e30:	30 e0       	ldi	r19, 0x00	; 0
    3e32:	40 e2       	ldi	r20, 0x20	; 32
    3e34:	51 e4       	ldi	r21, 0x41	; 65
    3e36:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    3e3a:	dc 01       	movw	r26, r24
    3e3c:	cb 01       	movw	r24, r22
    3e3e:	bc 01       	movw	r22, r24
    3e40:	cd 01       	movw	r24, r26
    3e42:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3e46:	dc 01       	movw	r26, r24
    3e48:	cb 01       	movw	r24, r22
    3e4a:	9e 83       	std	Y+6, r25	; 0x06
    3e4c:	8d 83       	std	Y+5, r24	; 0x05
    3e4e:	0f c0       	rjmp	.+30     	; 0x3e6e <LCD_WriteData+0x1d2>
    3e50:	88 ec       	ldi	r24, 0xC8	; 200
    3e52:	90 e0       	ldi	r25, 0x00	; 0
    3e54:	9c 83       	std	Y+4, r25	; 0x04
    3e56:	8b 83       	std	Y+3, r24	; 0x03
    3e58:	8b 81       	ldd	r24, Y+3	; 0x03
    3e5a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e5c:	01 97       	sbiw	r24, 0x01	; 1
    3e5e:	f1 f7       	brne	.-4      	; 0x3e5c <LCD_WriteData+0x1c0>
    3e60:	9c 83       	std	Y+4, r25	; 0x04
    3e62:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e64:	8d 81       	ldd	r24, Y+5	; 0x05
    3e66:	9e 81       	ldd	r25, Y+6	; 0x06
    3e68:	01 97       	sbiw	r24, 0x01	; 1
    3e6a:	9e 83       	std	Y+6, r25	; 0x06
    3e6c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e6e:	8d 81       	ldd	r24, Y+5	; 0x05
    3e70:	9e 81       	ldd	r25, Y+6	; 0x06
    3e72:	00 97       	sbiw	r24, 0x00	; 0
    3e74:	69 f7       	brne	.-38     	; 0x3e50 <LCD_WriteData+0x1b4>
    3e76:	14 c0       	rjmp	.+40     	; 0x3ea0 <LCD_WriteData+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e78:	6f 81       	ldd	r22, Y+7	; 0x07
    3e7a:	78 85       	ldd	r23, Y+8	; 0x08
    3e7c:	89 85       	ldd	r24, Y+9	; 0x09
    3e7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e80:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3e84:	dc 01       	movw	r26, r24
    3e86:	cb 01       	movw	r24, r22
    3e88:	9e 83       	std	Y+6, r25	; 0x06
    3e8a:	8d 83       	std	Y+5, r24	; 0x05
    3e8c:	8d 81       	ldd	r24, Y+5	; 0x05
    3e8e:	9e 81       	ldd	r25, Y+6	; 0x06
    3e90:	9a 83       	std	Y+2, r25	; 0x02
    3e92:	89 83       	std	Y+1, r24	; 0x01
    3e94:	89 81       	ldd	r24, Y+1	; 0x01
    3e96:	9a 81       	ldd	r25, Y+2	; 0x02
    3e98:	01 97       	sbiw	r24, 0x01	; 1
    3e9a:	f1 f7       	brne	.-4      	; 0x3e98 <LCD_WriteData+0x1fc>
    3e9c:	9a 83       	std	Y+2, r25	; 0x02
    3e9e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3ea0:	6d 96       	adiw	r28, 0x1d	; 29
    3ea2:	0f b6       	in	r0, 0x3f	; 63
    3ea4:	f8 94       	cli
    3ea6:	de bf       	out	0x3e, r29	; 62
    3ea8:	0f be       	out	0x3f, r0	; 63
    3eaa:	cd bf       	out	0x3d, r28	; 61
    3eac:	cf 91       	pop	r28
    3eae:	df 91       	pop	r29
    3eb0:	08 95       	ret

00003eb2 <LCD_WriteString>:

void LCD_WriteString(char* Name)
{
    3eb2:	0f 93       	push	r16
    3eb4:	1f 93       	push	r17
    3eb6:	df 93       	push	r29
    3eb8:	cf 93       	push	r28
    3eba:	00 d0       	rcall	.+0      	; 0x3ebc <LCD_WriteString+0xa>
    3ebc:	00 d0       	rcall	.+0      	; 0x3ebe <LCD_WriteString+0xc>
    3ebe:	cd b7       	in	r28, 0x3d	; 61
    3ec0:	de b7       	in	r29, 0x3e	; 62
    3ec2:	9c 83       	std	Y+4, r25	; 0x04
    3ec4:	8b 83       	std	Y+3, r24	; 0x03
	for(int i= 0 ; i < strlen(Name);i++)
    3ec6:	1a 82       	std	Y+2, r1	; 0x02
    3ec8:	19 82       	std	Y+1, r1	; 0x01
    3eca:	0f c0       	rjmp	.+30     	; 0x3eea <LCD_WriteString+0x38>
	{
		LCD_WriteData(Name[i]);
    3ecc:	29 81       	ldd	r18, Y+1	; 0x01
    3ece:	3a 81       	ldd	r19, Y+2	; 0x02
    3ed0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ed2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ed4:	fc 01       	movw	r30, r24
    3ed6:	e2 0f       	add	r30, r18
    3ed8:	f3 1f       	adc	r31, r19
    3eda:	80 81       	ld	r24, Z
    3edc:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>
	_delay_ms(1);
}

void LCD_WriteString(char* Name)
{
	for(int i= 0 ; i < strlen(Name);i++)
    3ee0:	89 81       	ldd	r24, Y+1	; 0x01
    3ee2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ee4:	01 96       	adiw	r24, 0x01	; 1
    3ee6:	9a 83       	std	Y+2, r25	; 0x02
    3ee8:	89 83       	std	Y+1, r24	; 0x01
    3eea:	09 81       	ldd	r16, Y+1	; 0x01
    3eec:	1a 81       	ldd	r17, Y+2	; 0x02
    3eee:	8b 81       	ldd	r24, Y+3	; 0x03
    3ef0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ef2:	0e 94 45 29 	call	0x528a	; 0x528a <strlen>
    3ef6:	08 17       	cp	r16, r24
    3ef8:	19 07       	cpc	r17, r25
    3efa:	40 f3       	brcs	.-48     	; 0x3ecc <LCD_WriteString+0x1a>
	{
		LCD_WriteData(Name[i]);
	}
}
    3efc:	0f 90       	pop	r0
    3efe:	0f 90       	pop	r0
    3f00:	0f 90       	pop	r0
    3f02:	0f 90       	pop	r0
    3f04:	cf 91       	pop	r28
    3f06:	df 91       	pop	r29
    3f08:	1f 91       	pop	r17
    3f0a:	0f 91       	pop	r16
    3f0c:	08 95       	ret

00003f0e <LCD_Goto>:

void LCD_Goto(uint8 row,uint8 col)
{
    3f0e:	df 93       	push	r29
    3f10:	cf 93       	push	r28
    3f12:	00 d0       	rcall	.+0      	; 0x3f14 <LCD_Goto+0x6>
    3f14:	00 d0       	rcall	.+0      	; 0x3f16 <LCD_Goto+0x8>
    3f16:	cd b7       	in	r28, 0x3d	; 61
    3f18:	de b7       	in	r29, 0x3e	; 62
    3f1a:	89 83       	std	Y+1, r24	; 0x01
    3f1c:	6a 83       	std	Y+2, r22	; 0x02
	 row--;
    3f1e:	89 81       	ldd	r24, Y+1	; 0x01
    3f20:	81 50       	subi	r24, 0x01	; 1
    3f22:	89 83       	std	Y+1, r24	; 0x01
	 col--;
    3f24:	8a 81       	ldd	r24, Y+2	; 0x02
    3f26:	81 50       	subi	r24, 0x01	; 1
    3f28:	8a 83       	std	Y+2, r24	; 0x02
	 switch(row)
    3f2a:	89 81       	ldd	r24, Y+1	; 0x01
    3f2c:	28 2f       	mov	r18, r24
    3f2e:	30 e0       	ldi	r19, 0x00	; 0
    3f30:	3c 83       	std	Y+4, r19	; 0x04
    3f32:	2b 83       	std	Y+3, r18	; 0x03
    3f34:	8b 81       	ldd	r24, Y+3	; 0x03
    3f36:	9c 81       	ldd	r25, Y+4	; 0x04
    3f38:	00 97       	sbiw	r24, 0x00	; 0
    3f3a:	31 f0       	breq	.+12     	; 0x3f48 <LCD_Goto+0x3a>
    3f3c:	2b 81       	ldd	r18, Y+3	; 0x03
    3f3e:	3c 81       	ldd	r19, Y+4	; 0x04
    3f40:	21 30       	cpi	r18, 0x01	; 1
    3f42:	31 05       	cpc	r19, r1
    3f44:	31 f0       	breq	.+12     	; 0x3f52 <LCD_Goto+0x44>
    3f46:	09 c0       	rjmp	.+18     	; 0x3f5a <LCD_Goto+0x4c>
	 {
	 case 0: LCD_WriteInst(0x80+col);break;
    3f48:	8a 81       	ldd	r24, Y+2	; 0x02
    3f4a:	80 58       	subi	r24, 0x80	; 128
    3f4c:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
    3f50:	04 c0       	rjmp	.+8      	; 0x3f5a <LCD_Goto+0x4c>
	 case 1: LCD_WriteInst(0xc0+col);break;
    3f52:	8a 81       	ldd	r24, Y+2	; 0x02
    3f54:	80 54       	subi	r24, 0x40	; 64
    3f56:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
	 }
	}
    3f5a:	0f 90       	pop	r0
    3f5c:	0f 90       	pop	r0
    3f5e:	0f 90       	pop	r0
    3f60:	0f 90       	pop	r0
    3f62:	cf 91       	pop	r28
    3f64:	df 91       	pop	r29
    3f66:	08 95       	ret

00003f68 <LCD_PrintNumber>:
void LCD_PrintNumber(uint64 num)
{
    3f68:	af 92       	push	r10
    3f6a:	bf 92       	push	r11
    3f6c:	cf 92       	push	r12
    3f6e:	df 92       	push	r13
    3f70:	ef 92       	push	r14
    3f72:	ff 92       	push	r15
    3f74:	0f 93       	push	r16
    3f76:	1f 93       	push	r17
    3f78:	df 93       	push	r29
    3f7a:	cf 93       	push	r28
    3f7c:	cd b7       	in	r28, 0x3d	; 61
    3f7e:	de b7       	in	r29, 0x3e	; 62
    3f80:	c6 56       	subi	r28, 0x66	; 102
    3f82:	d0 40       	sbci	r29, 0x00	; 0
    3f84:	0f b6       	in	r0, 0x3f	; 63
    3f86:	f8 94       	cli
    3f88:	de bf       	out	0x3e, r29	; 62
    3f8a:	0f be       	out	0x3f, r0	; 63
    3f8c:	cd bf       	out	0x3d, r28	; 61
    3f8e:	29 87       	std	Y+9, r18	; 0x09
    3f90:	3a 87       	std	Y+10, r19	; 0x0a
    3f92:	4b 87       	std	Y+11, r20	; 0x0b
    3f94:	5c 87       	std	Y+12, r21	; 0x0c
    3f96:	6d 87       	std	Y+13, r22	; 0x0d
    3f98:	7e 87       	std	Y+14, r23	; 0x0e
    3f9a:	8f 87       	std	Y+15, r24	; 0x0f
    3f9c:	98 8b       	std	Y+16, r25	; 0x10
	uint64 reverse= 1;
    3f9e:	81 e0       	ldi	r24, 0x01	; 1
    3fa0:	89 83       	std	Y+1, r24	; 0x01
    3fa2:	1a 82       	std	Y+2, r1	; 0x02
    3fa4:	1b 82       	std	Y+3, r1	; 0x03
    3fa6:	1c 82       	std	Y+4, r1	; 0x04
    3fa8:	1d 82       	std	Y+5, r1	; 0x05
    3faa:	1e 82       	std	Y+6, r1	; 0x06
    3fac:	1f 82       	std	Y+7, r1	; 0x07
    3fae:	18 86       	std	Y+8, r1	; 0x08
    3fb0:	5e c3       	rjmp	.+1724   	; 0x466e <LCD_PrintNumber+0x706>
	    while (num > 0) //123
	    {
	        reverse= (reverse * 10) + num % 10;
    3fb2:	29 81       	ldd	r18, Y+1	; 0x01
    3fb4:	3a 81       	ldd	r19, Y+2	; 0x02
    3fb6:	4b 81       	ldd	r20, Y+3	; 0x03
    3fb8:	5c 81       	ldd	r21, Y+4	; 0x04
    3fba:	6d 81       	ldd	r22, Y+5	; 0x05
    3fbc:	7e 81       	ldd	r23, Y+6	; 0x06
    3fbe:	8f 81       	ldd	r24, Y+7	; 0x07
    3fc0:	98 85       	ldd	r25, Y+8	; 0x08
    3fc2:	a2 2e       	mov	r10, r18
    3fc4:	b3 2e       	mov	r11, r19
    3fc6:	c4 2e       	mov	r12, r20
    3fc8:	d5 2e       	mov	r13, r21
    3fca:	e6 2e       	mov	r14, r22
    3fcc:	f7 2e       	mov	r15, r23
    3fce:	08 2f       	mov	r16, r24
    3fd0:	19 2f       	mov	r17, r25
    3fd2:	2a 2d       	mov	r18, r10
    3fd4:	3b 2d       	mov	r19, r11
    3fd6:	4c 2d       	mov	r20, r12
    3fd8:	5d 2d       	mov	r21, r13
    3fda:	6e 2d       	mov	r22, r14
    3fdc:	7f 2d       	mov	r23, r15
    3fde:	80 2f       	mov	r24, r16
    3fe0:	91 2f       	mov	r25, r17
    3fe2:	01 e0       	ldi	r16, 0x01	; 1
    3fe4:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    3fe8:	29 a3       	std	Y+33, r18	; 0x21
    3fea:	3a a3       	std	Y+34, r19	; 0x22
    3fec:	4b a3       	std	Y+35, r20	; 0x23
    3fee:	5c a3       	std	Y+36, r21	; 0x24
    3ff0:	6d a3       	std	Y+37, r22	; 0x25
    3ff2:	7e a3       	std	Y+38, r23	; 0x26
    3ff4:	8f a3       	std	Y+39, r24	; 0x27
    3ff6:	98 a7       	std	Y+40, r25	; 0x28
    3ff8:	29 a1       	ldd	r18, Y+33	; 0x21
    3ffa:	3a a1       	ldd	r19, Y+34	; 0x22
    3ffc:	4b a1       	ldd	r20, Y+35	; 0x23
    3ffe:	5c a1       	ldd	r21, Y+36	; 0x24
    4000:	6d a1       	ldd	r22, Y+37	; 0x25
    4002:	7e a1       	ldd	r23, Y+38	; 0x26
    4004:	8f a1       	ldd	r24, Y+39	; 0x27
    4006:	98 a5       	ldd	r25, Y+40	; 0x28
    4008:	02 e0       	ldi	r16, 0x02	; 2
    400a:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    400e:	29 a7       	std	Y+41, r18	; 0x29
    4010:	3a a7       	std	Y+42, r19	; 0x2a
    4012:	4b a7       	std	Y+43, r20	; 0x2b
    4014:	5c a7       	std	Y+44, r21	; 0x2c
    4016:	6d a7       	std	Y+45, r22	; 0x2d
    4018:	7e a7       	std	Y+46, r23	; 0x2e
    401a:	8f a7       	std	Y+47, r24	; 0x2f
    401c:	98 ab       	std	Y+48, r25	; 0x30
    401e:	89 a1       	ldd	r24, Y+33	; 0x21
    4020:	99 a5       	ldd	r25, Y+41	; 0x29
    4022:	89 0f       	add	r24, r25
    4024:	89 ab       	std	Y+49, r24	; 0x31
    4026:	81 e0       	ldi	r24, 0x01	; 1
    4028:	89 af       	std	Y+57, r24	; 0x39
    402a:	99 a9       	ldd	r25, Y+49	; 0x31
    402c:	89 a1       	ldd	r24, Y+33	; 0x21
    402e:	98 17       	cp	r25, r24
    4030:	08 f0       	brcs	.+2      	; 0x4034 <LCD_PrintNumber+0xcc>
    4032:	19 ae       	std	Y+57, r1	; 0x39
    4034:	9a a1       	ldd	r25, Y+34	; 0x22
    4036:	8a a5       	ldd	r24, Y+42	; 0x2a
    4038:	98 0f       	add	r25, r24
    403a:	9a ab       	std	Y+50, r25	; 0x32
    403c:	91 e0       	ldi	r25, 0x01	; 1
    403e:	9a af       	std	Y+58, r25	; 0x3a
    4040:	8a a9       	ldd	r24, Y+50	; 0x32
    4042:	9a a1       	ldd	r25, Y+34	; 0x22
    4044:	89 17       	cp	r24, r25
    4046:	08 f0       	brcs	.+2      	; 0x404a <LCD_PrintNumber+0xe2>
    4048:	1a ae       	std	Y+58, r1	; 0x3a
    404a:	89 ad       	ldd	r24, Y+57	; 0x39
    404c:	9a a9       	ldd	r25, Y+50	; 0x32
    404e:	89 0f       	add	r24, r25
    4050:	8b af       	std	Y+59, r24	; 0x3b
    4052:	81 e0       	ldi	r24, 0x01	; 1
    4054:	8c af       	std	Y+60, r24	; 0x3c
    4056:	9b ad       	ldd	r25, Y+59	; 0x3b
    4058:	8a a9       	ldd	r24, Y+50	; 0x32
    405a:	98 17       	cp	r25, r24
    405c:	08 f0       	brcs	.+2      	; 0x4060 <LCD_PrintNumber+0xf8>
    405e:	1c ae       	std	Y+60, r1	; 0x3c
    4060:	9a ad       	ldd	r25, Y+58	; 0x3a
    4062:	8c ad       	ldd	r24, Y+60	; 0x3c
    4064:	98 2b       	or	r25, r24
    4066:	9a af       	std	Y+58, r25	; 0x3a
    4068:	9b ad       	ldd	r25, Y+59	; 0x3b
    406a:	9a ab       	std	Y+50, r25	; 0x32
    406c:	8b a1       	ldd	r24, Y+35	; 0x23
    406e:	9b a5       	ldd	r25, Y+43	; 0x2b
    4070:	89 0f       	add	r24, r25
    4072:	8b ab       	std	Y+51, r24	; 0x33
    4074:	81 e0       	ldi	r24, 0x01	; 1
    4076:	8d af       	std	Y+61, r24	; 0x3d
    4078:	9b a9       	ldd	r25, Y+51	; 0x33
    407a:	8b a1       	ldd	r24, Y+35	; 0x23
    407c:	98 17       	cp	r25, r24
    407e:	08 f0       	brcs	.+2      	; 0x4082 <LCD_PrintNumber+0x11a>
    4080:	1d ae       	std	Y+61, r1	; 0x3d
    4082:	9a ad       	ldd	r25, Y+58	; 0x3a
    4084:	8b a9       	ldd	r24, Y+51	; 0x33
    4086:	98 0f       	add	r25, r24
    4088:	9e af       	std	Y+62, r25	; 0x3e
    408a:	91 e0       	ldi	r25, 0x01	; 1
    408c:	9f af       	std	Y+63, r25	; 0x3f
    408e:	8e ad       	ldd	r24, Y+62	; 0x3e
    4090:	9b a9       	ldd	r25, Y+51	; 0x33
    4092:	89 17       	cp	r24, r25
    4094:	08 f0       	brcs	.+2      	; 0x4098 <LCD_PrintNumber+0x130>
    4096:	1f ae       	std	Y+63, r1	; 0x3f
    4098:	8d ad       	ldd	r24, Y+61	; 0x3d
    409a:	9f ad       	ldd	r25, Y+63	; 0x3f
    409c:	89 2b       	or	r24, r25
    409e:	8d af       	std	Y+61, r24	; 0x3d
    40a0:	8e ad       	ldd	r24, Y+62	; 0x3e
    40a2:	8b ab       	std	Y+51, r24	; 0x33
    40a4:	9c a1       	ldd	r25, Y+36	; 0x24
    40a6:	8c a5       	ldd	r24, Y+44	; 0x2c
    40a8:	98 0f       	add	r25, r24
    40aa:	9c ab       	std	Y+52, r25	; 0x34
    40ac:	91 e0       	ldi	r25, 0x01	; 1
    40ae:	21 96       	adiw	r28, 0x01	; 1
    40b0:	9f af       	std	Y+63, r25	; 0x3f
    40b2:	21 97       	sbiw	r28, 0x01	; 1
    40b4:	8c a9       	ldd	r24, Y+52	; 0x34
    40b6:	9c a1       	ldd	r25, Y+36	; 0x24
    40b8:	89 17       	cp	r24, r25
    40ba:	18 f0       	brcs	.+6      	; 0x40c2 <LCD_PrintNumber+0x15a>
    40bc:	21 96       	adiw	r28, 0x01	; 1
    40be:	1f ae       	std	Y+63, r1	; 0x3f
    40c0:	21 97       	sbiw	r28, 0x01	; 1
    40c2:	8d ad       	ldd	r24, Y+61	; 0x3d
    40c4:	9c a9       	ldd	r25, Y+52	; 0x34
    40c6:	89 0f       	add	r24, r25
    40c8:	22 96       	adiw	r28, 0x02	; 2
    40ca:	8f af       	std	Y+63, r24	; 0x3f
    40cc:	22 97       	sbiw	r28, 0x02	; 2
    40ce:	81 e0       	ldi	r24, 0x01	; 1
    40d0:	23 96       	adiw	r28, 0x03	; 3
    40d2:	8f af       	std	Y+63, r24	; 0x3f
    40d4:	23 97       	sbiw	r28, 0x03	; 3
    40d6:	22 96       	adiw	r28, 0x02	; 2
    40d8:	9f ad       	ldd	r25, Y+63	; 0x3f
    40da:	22 97       	sbiw	r28, 0x02	; 2
    40dc:	8c a9       	ldd	r24, Y+52	; 0x34
    40de:	98 17       	cp	r25, r24
    40e0:	18 f0       	brcs	.+6      	; 0x40e8 <LCD_PrintNumber+0x180>
    40e2:	23 96       	adiw	r28, 0x03	; 3
    40e4:	1f ae       	std	Y+63, r1	; 0x3f
    40e6:	23 97       	sbiw	r28, 0x03	; 3
    40e8:	21 96       	adiw	r28, 0x01	; 1
    40ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    40ec:	21 97       	sbiw	r28, 0x01	; 1
    40ee:	23 96       	adiw	r28, 0x03	; 3
    40f0:	8f ad       	ldd	r24, Y+63	; 0x3f
    40f2:	23 97       	sbiw	r28, 0x03	; 3
    40f4:	98 2b       	or	r25, r24
    40f6:	21 96       	adiw	r28, 0x01	; 1
    40f8:	9f af       	std	Y+63, r25	; 0x3f
    40fa:	21 97       	sbiw	r28, 0x01	; 1
    40fc:	22 96       	adiw	r28, 0x02	; 2
    40fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    4100:	22 97       	sbiw	r28, 0x02	; 2
    4102:	9c ab       	std	Y+52, r25	; 0x34
    4104:	8d a1       	ldd	r24, Y+37	; 0x25
    4106:	9d a5       	ldd	r25, Y+45	; 0x2d
    4108:	89 0f       	add	r24, r25
    410a:	8d ab       	std	Y+53, r24	; 0x35
    410c:	81 e0       	ldi	r24, 0x01	; 1
    410e:	24 96       	adiw	r28, 0x04	; 4
    4110:	8f af       	std	Y+63, r24	; 0x3f
    4112:	24 97       	sbiw	r28, 0x04	; 4
    4114:	9d a9       	ldd	r25, Y+53	; 0x35
    4116:	8d a1       	ldd	r24, Y+37	; 0x25
    4118:	98 17       	cp	r25, r24
    411a:	18 f0       	brcs	.+6      	; 0x4122 <LCD_PrintNumber+0x1ba>
    411c:	24 96       	adiw	r28, 0x04	; 4
    411e:	1f ae       	std	Y+63, r1	; 0x3f
    4120:	24 97       	sbiw	r28, 0x04	; 4
    4122:	21 96       	adiw	r28, 0x01	; 1
    4124:	9f ad       	ldd	r25, Y+63	; 0x3f
    4126:	21 97       	sbiw	r28, 0x01	; 1
    4128:	8d a9       	ldd	r24, Y+53	; 0x35
    412a:	98 0f       	add	r25, r24
    412c:	25 96       	adiw	r28, 0x05	; 5
    412e:	9f af       	std	Y+63, r25	; 0x3f
    4130:	25 97       	sbiw	r28, 0x05	; 5
    4132:	91 e0       	ldi	r25, 0x01	; 1
    4134:	26 96       	adiw	r28, 0x06	; 6
    4136:	9f af       	std	Y+63, r25	; 0x3f
    4138:	26 97       	sbiw	r28, 0x06	; 6
    413a:	25 96       	adiw	r28, 0x05	; 5
    413c:	8f ad       	ldd	r24, Y+63	; 0x3f
    413e:	25 97       	sbiw	r28, 0x05	; 5
    4140:	9d a9       	ldd	r25, Y+53	; 0x35
    4142:	89 17       	cp	r24, r25
    4144:	18 f0       	brcs	.+6      	; 0x414c <LCD_PrintNumber+0x1e4>
    4146:	26 96       	adiw	r28, 0x06	; 6
    4148:	1f ae       	std	Y+63, r1	; 0x3f
    414a:	26 97       	sbiw	r28, 0x06	; 6
    414c:	24 96       	adiw	r28, 0x04	; 4
    414e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4150:	24 97       	sbiw	r28, 0x04	; 4
    4152:	26 96       	adiw	r28, 0x06	; 6
    4154:	9f ad       	ldd	r25, Y+63	; 0x3f
    4156:	26 97       	sbiw	r28, 0x06	; 6
    4158:	89 2b       	or	r24, r25
    415a:	24 96       	adiw	r28, 0x04	; 4
    415c:	8f af       	std	Y+63, r24	; 0x3f
    415e:	24 97       	sbiw	r28, 0x04	; 4
    4160:	25 96       	adiw	r28, 0x05	; 5
    4162:	8f ad       	ldd	r24, Y+63	; 0x3f
    4164:	25 97       	sbiw	r28, 0x05	; 5
    4166:	8d ab       	std	Y+53, r24	; 0x35
    4168:	9e a1       	ldd	r25, Y+38	; 0x26
    416a:	8e a5       	ldd	r24, Y+46	; 0x2e
    416c:	98 0f       	add	r25, r24
    416e:	9e ab       	std	Y+54, r25	; 0x36
    4170:	91 e0       	ldi	r25, 0x01	; 1
    4172:	27 96       	adiw	r28, 0x07	; 7
    4174:	9f af       	std	Y+63, r25	; 0x3f
    4176:	27 97       	sbiw	r28, 0x07	; 7
    4178:	8e a9       	ldd	r24, Y+54	; 0x36
    417a:	9e a1       	ldd	r25, Y+38	; 0x26
    417c:	89 17       	cp	r24, r25
    417e:	18 f0       	brcs	.+6      	; 0x4186 <LCD_PrintNumber+0x21e>
    4180:	27 96       	adiw	r28, 0x07	; 7
    4182:	1f ae       	std	Y+63, r1	; 0x3f
    4184:	27 97       	sbiw	r28, 0x07	; 7
    4186:	24 96       	adiw	r28, 0x04	; 4
    4188:	8f ad       	ldd	r24, Y+63	; 0x3f
    418a:	24 97       	sbiw	r28, 0x04	; 4
    418c:	9e a9       	ldd	r25, Y+54	; 0x36
    418e:	89 0f       	add	r24, r25
    4190:	28 96       	adiw	r28, 0x08	; 8
    4192:	8f af       	std	Y+63, r24	; 0x3f
    4194:	28 97       	sbiw	r28, 0x08	; 8
    4196:	81 e0       	ldi	r24, 0x01	; 1
    4198:	29 96       	adiw	r28, 0x09	; 9
    419a:	8f af       	std	Y+63, r24	; 0x3f
    419c:	29 97       	sbiw	r28, 0x09	; 9
    419e:	28 96       	adiw	r28, 0x08	; 8
    41a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    41a2:	28 97       	sbiw	r28, 0x08	; 8
    41a4:	8e a9       	ldd	r24, Y+54	; 0x36
    41a6:	98 17       	cp	r25, r24
    41a8:	18 f0       	brcs	.+6      	; 0x41b0 <LCD_PrintNumber+0x248>
    41aa:	29 96       	adiw	r28, 0x09	; 9
    41ac:	1f ae       	std	Y+63, r1	; 0x3f
    41ae:	29 97       	sbiw	r28, 0x09	; 9
    41b0:	27 96       	adiw	r28, 0x07	; 7
    41b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    41b4:	27 97       	sbiw	r28, 0x07	; 7
    41b6:	29 96       	adiw	r28, 0x09	; 9
    41b8:	8f ad       	ldd	r24, Y+63	; 0x3f
    41ba:	29 97       	sbiw	r28, 0x09	; 9
    41bc:	98 2b       	or	r25, r24
    41be:	27 96       	adiw	r28, 0x07	; 7
    41c0:	9f af       	std	Y+63, r25	; 0x3f
    41c2:	27 97       	sbiw	r28, 0x07	; 7
    41c4:	28 96       	adiw	r28, 0x08	; 8
    41c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    41c8:	28 97       	sbiw	r28, 0x08	; 8
    41ca:	9e ab       	std	Y+54, r25	; 0x36
    41cc:	8f a1       	ldd	r24, Y+39	; 0x27
    41ce:	9f a5       	ldd	r25, Y+47	; 0x2f
    41d0:	89 0f       	add	r24, r25
    41d2:	8f ab       	std	Y+55, r24	; 0x37
    41d4:	81 e0       	ldi	r24, 0x01	; 1
    41d6:	2a 96       	adiw	r28, 0x0a	; 10
    41d8:	8f af       	std	Y+63, r24	; 0x3f
    41da:	2a 97       	sbiw	r28, 0x0a	; 10
    41dc:	9f a9       	ldd	r25, Y+55	; 0x37
    41de:	8f a1       	ldd	r24, Y+39	; 0x27
    41e0:	98 17       	cp	r25, r24
    41e2:	18 f0       	brcs	.+6      	; 0x41ea <LCD_PrintNumber+0x282>
    41e4:	2a 96       	adiw	r28, 0x0a	; 10
    41e6:	1f ae       	std	Y+63, r1	; 0x3f
    41e8:	2a 97       	sbiw	r28, 0x0a	; 10
    41ea:	27 96       	adiw	r28, 0x07	; 7
    41ec:	9f ad       	ldd	r25, Y+63	; 0x3f
    41ee:	27 97       	sbiw	r28, 0x07	; 7
    41f0:	8f a9       	ldd	r24, Y+55	; 0x37
    41f2:	98 0f       	add	r25, r24
    41f4:	2b 96       	adiw	r28, 0x0b	; 11
    41f6:	9f af       	std	Y+63, r25	; 0x3f
    41f8:	2b 97       	sbiw	r28, 0x0b	; 11
    41fa:	91 e0       	ldi	r25, 0x01	; 1
    41fc:	2c 96       	adiw	r28, 0x0c	; 12
    41fe:	9f af       	std	Y+63, r25	; 0x3f
    4200:	2c 97       	sbiw	r28, 0x0c	; 12
    4202:	2b 96       	adiw	r28, 0x0b	; 11
    4204:	8f ad       	ldd	r24, Y+63	; 0x3f
    4206:	2b 97       	sbiw	r28, 0x0b	; 11
    4208:	9f a9       	ldd	r25, Y+55	; 0x37
    420a:	89 17       	cp	r24, r25
    420c:	18 f0       	brcs	.+6      	; 0x4214 <LCD_PrintNumber+0x2ac>
    420e:	2c 96       	adiw	r28, 0x0c	; 12
    4210:	1f ae       	std	Y+63, r1	; 0x3f
    4212:	2c 97       	sbiw	r28, 0x0c	; 12
    4214:	2a 96       	adiw	r28, 0x0a	; 10
    4216:	8f ad       	ldd	r24, Y+63	; 0x3f
    4218:	2a 97       	sbiw	r28, 0x0a	; 10
    421a:	2c 96       	adiw	r28, 0x0c	; 12
    421c:	9f ad       	ldd	r25, Y+63	; 0x3f
    421e:	2c 97       	sbiw	r28, 0x0c	; 12
    4220:	89 2b       	or	r24, r25
    4222:	2a 96       	adiw	r28, 0x0a	; 10
    4224:	8f af       	std	Y+63, r24	; 0x3f
    4226:	2a 97       	sbiw	r28, 0x0a	; 10
    4228:	2b 96       	adiw	r28, 0x0b	; 11
    422a:	8f ad       	ldd	r24, Y+63	; 0x3f
    422c:	2b 97       	sbiw	r28, 0x0b	; 11
    422e:	8f ab       	std	Y+55, r24	; 0x37
    4230:	98 a5       	ldd	r25, Y+40	; 0x28
    4232:	88 a9       	ldd	r24, Y+48	; 0x30
    4234:	98 0f       	add	r25, r24
    4236:	98 af       	std	Y+56, r25	; 0x38
    4238:	2a 96       	adiw	r28, 0x0a	; 10
    423a:	8f ad       	ldd	r24, Y+63	; 0x3f
    423c:	2a 97       	sbiw	r28, 0x0a	; 10
    423e:	98 ad       	ldd	r25, Y+56	; 0x38
    4240:	89 0f       	add	r24, r25
    4242:	88 af       	std	Y+56, r24	; 0x38
    4244:	89 a9       	ldd	r24, Y+49	; 0x31
    4246:	89 8f       	std	Y+25, r24	; 0x19
    4248:	9a a9       	ldd	r25, Y+50	; 0x32
    424a:	9a 8f       	std	Y+26, r25	; 0x1a
    424c:	8b a9       	ldd	r24, Y+51	; 0x33
    424e:	8b 8f       	std	Y+27, r24	; 0x1b
    4250:	9c a9       	ldd	r25, Y+52	; 0x34
    4252:	9c 8f       	std	Y+28, r25	; 0x1c
    4254:	8d a9       	ldd	r24, Y+53	; 0x35
    4256:	8d 8f       	std	Y+29, r24	; 0x1d
    4258:	9e a9       	ldd	r25, Y+54	; 0x36
    425a:	9e 8f       	std	Y+30, r25	; 0x1e
    425c:	8f a9       	ldd	r24, Y+55	; 0x37
    425e:	8f 8f       	std	Y+31, r24	; 0x1f
    4260:	98 ad       	ldd	r25, Y+56	; 0x38
    4262:	98 a3       	std	Y+32, r25	; 0x20
    4264:	a9 84       	ldd	r10, Y+9	; 0x09
    4266:	ba 84       	ldd	r11, Y+10	; 0x0a
    4268:	cb 84       	ldd	r12, Y+11	; 0x0b
    426a:	dc 84       	ldd	r13, Y+12	; 0x0c
    426c:	ed 84       	ldd	r14, Y+13	; 0x0d
    426e:	fe 84       	ldd	r15, Y+14	; 0x0e
    4270:	0f 85       	ldd	r16, Y+15	; 0x0f
    4272:	18 89       	ldd	r17, Y+16	; 0x10
    4274:	2a 2d       	mov	r18, r10
    4276:	3b 2d       	mov	r19, r11
    4278:	4c 2d       	mov	r20, r12
    427a:	5d 2d       	mov	r21, r13
    427c:	6e 2d       	mov	r22, r14
    427e:	7f 2d       	mov	r23, r15
    4280:	80 2f       	mov	r24, r16
    4282:	91 2f       	mov	r25, r17
    4284:	0f 2e       	mov	r0, r31
    4286:	fa e0       	ldi	r31, 0x0A	; 10
    4288:	af 2e       	mov	r10, r31
    428a:	f0 2d       	mov	r31, r0
    428c:	bb 24       	eor	r11, r11
    428e:	cc 24       	eor	r12, r12
    4290:	dd 24       	eor	r13, r13
    4292:	ee 24       	eor	r14, r14
    4294:	ff 24       	eor	r15, r15
    4296:	00 e0       	ldi	r16, 0x00	; 0
    4298:	10 e0       	ldi	r17, 0x00	; 0
    429a:	0e 94 3d 08 	call	0x107a	; 0x107a <__umoddi3>
    429e:	a2 2e       	mov	r10, r18
    42a0:	b3 2e       	mov	r11, r19
    42a2:	c4 2e       	mov	r12, r20
    42a4:	d5 2e       	mov	r13, r21
    42a6:	e6 2e       	mov	r14, r22
    42a8:	f7 2e       	mov	r15, r23
    42aa:	08 2f       	mov	r16, r24
    42ac:	19 2f       	mov	r17, r25
    42ae:	a9 8a       	std	Y+17, r10	; 0x11
    42b0:	ba 8a       	std	Y+18, r11	; 0x12
    42b2:	cb 8a       	std	Y+19, r12	; 0x13
    42b4:	dc 8a       	std	Y+20, r13	; 0x14
    42b6:	ed 8a       	std	Y+21, r14	; 0x15
    42b8:	fe 8a       	std	Y+22, r15	; 0x16
    42ba:	0f 8b       	std	Y+23, r16	; 0x17
    42bc:	18 8f       	std	Y+24, r17	; 0x18
    42be:	89 8d       	ldd	r24, Y+25	; 0x19
    42c0:	99 89       	ldd	r25, Y+17	; 0x11
    42c2:	89 0f       	add	r24, r25
    42c4:	2d 96       	adiw	r28, 0x0d	; 13
    42c6:	8f af       	std	Y+63, r24	; 0x3f
    42c8:	2d 97       	sbiw	r28, 0x0d	; 13
    42ca:	81 e0       	ldi	r24, 0x01	; 1
    42cc:	65 96       	adiw	r28, 0x15	; 21
    42ce:	8f af       	std	Y+63, r24	; 0x3f
    42d0:	65 97       	sbiw	r28, 0x15	; 21
    42d2:	2d 96       	adiw	r28, 0x0d	; 13
    42d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    42d6:	2d 97       	sbiw	r28, 0x0d	; 13
    42d8:	89 8d       	ldd	r24, Y+25	; 0x19
    42da:	98 17       	cp	r25, r24
    42dc:	18 f0       	brcs	.+6      	; 0x42e4 <LCD_PrintNumber+0x37c>
    42de:	65 96       	adiw	r28, 0x15	; 21
    42e0:	1f ae       	std	Y+63, r1	; 0x3f
    42e2:	65 97       	sbiw	r28, 0x15	; 21
    42e4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    42e6:	8a 89       	ldd	r24, Y+18	; 0x12
    42e8:	98 0f       	add	r25, r24
    42ea:	2e 96       	adiw	r28, 0x0e	; 14
    42ec:	9f af       	std	Y+63, r25	; 0x3f
    42ee:	2e 97       	sbiw	r28, 0x0e	; 14
    42f0:	91 e0       	ldi	r25, 0x01	; 1
    42f2:	66 96       	adiw	r28, 0x16	; 22
    42f4:	9f af       	std	Y+63, r25	; 0x3f
    42f6:	66 97       	sbiw	r28, 0x16	; 22
    42f8:	2e 96       	adiw	r28, 0x0e	; 14
    42fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    42fc:	2e 97       	sbiw	r28, 0x0e	; 14
    42fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4300:	89 17       	cp	r24, r25
    4302:	18 f0       	brcs	.+6      	; 0x430a <LCD_PrintNumber+0x3a2>
    4304:	66 96       	adiw	r28, 0x16	; 22
    4306:	1f ae       	std	Y+63, r1	; 0x3f
    4308:	66 97       	sbiw	r28, 0x16	; 22
    430a:	65 96       	adiw	r28, 0x15	; 21
    430c:	8f ad       	ldd	r24, Y+63	; 0x3f
    430e:	65 97       	sbiw	r28, 0x15	; 21
    4310:	2e 96       	adiw	r28, 0x0e	; 14
    4312:	9f ad       	ldd	r25, Y+63	; 0x3f
    4314:	2e 97       	sbiw	r28, 0x0e	; 14
    4316:	89 0f       	add	r24, r25
    4318:	67 96       	adiw	r28, 0x17	; 23
    431a:	8f af       	std	Y+63, r24	; 0x3f
    431c:	67 97       	sbiw	r28, 0x17	; 23
    431e:	81 e0       	ldi	r24, 0x01	; 1
    4320:	68 96       	adiw	r28, 0x18	; 24
    4322:	8f af       	std	Y+63, r24	; 0x3f
    4324:	68 97       	sbiw	r28, 0x18	; 24
    4326:	67 96       	adiw	r28, 0x17	; 23
    4328:	9f ad       	ldd	r25, Y+63	; 0x3f
    432a:	67 97       	sbiw	r28, 0x17	; 23
    432c:	2e 96       	adiw	r28, 0x0e	; 14
    432e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4330:	2e 97       	sbiw	r28, 0x0e	; 14
    4332:	98 17       	cp	r25, r24
    4334:	18 f0       	brcs	.+6      	; 0x433c <LCD_PrintNumber+0x3d4>
    4336:	68 96       	adiw	r28, 0x18	; 24
    4338:	1f ae       	std	Y+63, r1	; 0x3f
    433a:	68 97       	sbiw	r28, 0x18	; 24
    433c:	66 96       	adiw	r28, 0x16	; 22
    433e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4340:	66 97       	sbiw	r28, 0x16	; 22
    4342:	68 96       	adiw	r28, 0x18	; 24
    4344:	8f ad       	ldd	r24, Y+63	; 0x3f
    4346:	68 97       	sbiw	r28, 0x18	; 24
    4348:	98 2b       	or	r25, r24
    434a:	66 96       	adiw	r28, 0x16	; 22
    434c:	9f af       	std	Y+63, r25	; 0x3f
    434e:	66 97       	sbiw	r28, 0x16	; 22
    4350:	67 96       	adiw	r28, 0x17	; 23
    4352:	9f ad       	ldd	r25, Y+63	; 0x3f
    4354:	67 97       	sbiw	r28, 0x17	; 23
    4356:	2e 96       	adiw	r28, 0x0e	; 14
    4358:	9f af       	std	Y+63, r25	; 0x3f
    435a:	2e 97       	sbiw	r28, 0x0e	; 14
    435c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    435e:	9b 89       	ldd	r25, Y+19	; 0x13
    4360:	89 0f       	add	r24, r25
    4362:	2f 96       	adiw	r28, 0x0f	; 15
    4364:	8f af       	std	Y+63, r24	; 0x3f
    4366:	2f 97       	sbiw	r28, 0x0f	; 15
    4368:	81 e0       	ldi	r24, 0x01	; 1
    436a:	69 96       	adiw	r28, 0x19	; 25
    436c:	8f af       	std	Y+63, r24	; 0x3f
    436e:	69 97       	sbiw	r28, 0x19	; 25
    4370:	2f 96       	adiw	r28, 0x0f	; 15
    4372:	9f ad       	ldd	r25, Y+63	; 0x3f
    4374:	2f 97       	sbiw	r28, 0x0f	; 15
    4376:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4378:	98 17       	cp	r25, r24
    437a:	18 f0       	brcs	.+6      	; 0x4382 <LCD_PrintNumber+0x41a>
    437c:	69 96       	adiw	r28, 0x19	; 25
    437e:	1f ae       	std	Y+63, r1	; 0x3f
    4380:	69 97       	sbiw	r28, 0x19	; 25
    4382:	66 96       	adiw	r28, 0x16	; 22
    4384:	9f ad       	ldd	r25, Y+63	; 0x3f
    4386:	66 97       	sbiw	r28, 0x16	; 22
    4388:	2f 96       	adiw	r28, 0x0f	; 15
    438a:	8f ad       	ldd	r24, Y+63	; 0x3f
    438c:	2f 97       	sbiw	r28, 0x0f	; 15
    438e:	98 0f       	add	r25, r24
    4390:	6a 96       	adiw	r28, 0x1a	; 26
    4392:	9f af       	std	Y+63, r25	; 0x3f
    4394:	6a 97       	sbiw	r28, 0x1a	; 26
    4396:	91 e0       	ldi	r25, 0x01	; 1
    4398:	6b 96       	adiw	r28, 0x1b	; 27
    439a:	9f af       	std	Y+63, r25	; 0x3f
    439c:	6b 97       	sbiw	r28, 0x1b	; 27
    439e:	6a 96       	adiw	r28, 0x1a	; 26
    43a0:	8f ad       	ldd	r24, Y+63	; 0x3f
    43a2:	6a 97       	sbiw	r28, 0x1a	; 26
    43a4:	2f 96       	adiw	r28, 0x0f	; 15
    43a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    43a8:	2f 97       	sbiw	r28, 0x0f	; 15
    43aa:	89 17       	cp	r24, r25
    43ac:	18 f0       	brcs	.+6      	; 0x43b4 <LCD_PrintNumber+0x44c>
    43ae:	6b 96       	adiw	r28, 0x1b	; 27
    43b0:	1f ae       	std	Y+63, r1	; 0x3f
    43b2:	6b 97       	sbiw	r28, 0x1b	; 27
    43b4:	69 96       	adiw	r28, 0x19	; 25
    43b6:	8f ad       	ldd	r24, Y+63	; 0x3f
    43b8:	69 97       	sbiw	r28, 0x19	; 25
    43ba:	6b 96       	adiw	r28, 0x1b	; 27
    43bc:	9f ad       	ldd	r25, Y+63	; 0x3f
    43be:	6b 97       	sbiw	r28, 0x1b	; 27
    43c0:	89 2b       	or	r24, r25
    43c2:	69 96       	adiw	r28, 0x19	; 25
    43c4:	8f af       	std	Y+63, r24	; 0x3f
    43c6:	69 97       	sbiw	r28, 0x19	; 25
    43c8:	6a 96       	adiw	r28, 0x1a	; 26
    43ca:	8f ad       	ldd	r24, Y+63	; 0x3f
    43cc:	6a 97       	sbiw	r28, 0x1a	; 26
    43ce:	2f 96       	adiw	r28, 0x0f	; 15
    43d0:	8f af       	std	Y+63, r24	; 0x3f
    43d2:	2f 97       	sbiw	r28, 0x0f	; 15
    43d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    43d6:	8c 89       	ldd	r24, Y+20	; 0x14
    43d8:	98 0f       	add	r25, r24
    43da:	60 96       	adiw	r28, 0x10	; 16
    43dc:	9f af       	std	Y+63, r25	; 0x3f
    43de:	60 97       	sbiw	r28, 0x10	; 16
    43e0:	91 e0       	ldi	r25, 0x01	; 1
    43e2:	6c 96       	adiw	r28, 0x1c	; 28
    43e4:	9f af       	std	Y+63, r25	; 0x3f
    43e6:	6c 97       	sbiw	r28, 0x1c	; 28
    43e8:	60 96       	adiw	r28, 0x10	; 16
    43ea:	8f ad       	ldd	r24, Y+63	; 0x3f
    43ec:	60 97       	sbiw	r28, 0x10	; 16
    43ee:	9c 8d       	ldd	r25, Y+28	; 0x1c
    43f0:	89 17       	cp	r24, r25
    43f2:	18 f0       	brcs	.+6      	; 0x43fa <LCD_PrintNumber+0x492>
    43f4:	6c 96       	adiw	r28, 0x1c	; 28
    43f6:	1f ae       	std	Y+63, r1	; 0x3f
    43f8:	6c 97       	sbiw	r28, 0x1c	; 28
    43fa:	69 96       	adiw	r28, 0x19	; 25
    43fc:	8f ad       	ldd	r24, Y+63	; 0x3f
    43fe:	69 97       	sbiw	r28, 0x19	; 25
    4400:	60 96       	adiw	r28, 0x10	; 16
    4402:	9f ad       	ldd	r25, Y+63	; 0x3f
    4404:	60 97       	sbiw	r28, 0x10	; 16
    4406:	89 0f       	add	r24, r25
    4408:	6d 96       	adiw	r28, 0x1d	; 29
    440a:	8f af       	std	Y+63, r24	; 0x3f
    440c:	6d 97       	sbiw	r28, 0x1d	; 29
    440e:	81 e0       	ldi	r24, 0x01	; 1
    4410:	6e 96       	adiw	r28, 0x1e	; 30
    4412:	8f af       	std	Y+63, r24	; 0x3f
    4414:	6e 97       	sbiw	r28, 0x1e	; 30
    4416:	6d 96       	adiw	r28, 0x1d	; 29
    4418:	9f ad       	ldd	r25, Y+63	; 0x3f
    441a:	6d 97       	sbiw	r28, 0x1d	; 29
    441c:	60 96       	adiw	r28, 0x10	; 16
    441e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4420:	60 97       	sbiw	r28, 0x10	; 16
    4422:	98 17       	cp	r25, r24
    4424:	18 f0       	brcs	.+6      	; 0x442c <LCD_PrintNumber+0x4c4>
    4426:	6e 96       	adiw	r28, 0x1e	; 30
    4428:	1f ae       	std	Y+63, r1	; 0x3f
    442a:	6e 97       	sbiw	r28, 0x1e	; 30
    442c:	6c 96       	adiw	r28, 0x1c	; 28
    442e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4430:	6c 97       	sbiw	r28, 0x1c	; 28
    4432:	6e 96       	adiw	r28, 0x1e	; 30
    4434:	8f ad       	ldd	r24, Y+63	; 0x3f
    4436:	6e 97       	sbiw	r28, 0x1e	; 30
    4438:	98 2b       	or	r25, r24
    443a:	6c 96       	adiw	r28, 0x1c	; 28
    443c:	9f af       	std	Y+63, r25	; 0x3f
    443e:	6c 97       	sbiw	r28, 0x1c	; 28
    4440:	6d 96       	adiw	r28, 0x1d	; 29
    4442:	9f ad       	ldd	r25, Y+63	; 0x3f
    4444:	6d 97       	sbiw	r28, 0x1d	; 29
    4446:	60 96       	adiw	r28, 0x10	; 16
    4448:	9f af       	std	Y+63, r25	; 0x3f
    444a:	60 97       	sbiw	r28, 0x10	; 16
    444c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    444e:	9d 89       	ldd	r25, Y+21	; 0x15
    4450:	89 0f       	add	r24, r25
    4452:	61 96       	adiw	r28, 0x11	; 17
    4454:	8f af       	std	Y+63, r24	; 0x3f
    4456:	61 97       	sbiw	r28, 0x11	; 17
    4458:	81 e0       	ldi	r24, 0x01	; 1
    445a:	6f 96       	adiw	r28, 0x1f	; 31
    445c:	8f af       	std	Y+63, r24	; 0x3f
    445e:	6f 97       	sbiw	r28, 0x1f	; 31
    4460:	61 96       	adiw	r28, 0x11	; 17
    4462:	9f ad       	ldd	r25, Y+63	; 0x3f
    4464:	61 97       	sbiw	r28, 0x11	; 17
    4466:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4468:	98 17       	cp	r25, r24
    446a:	18 f0       	brcs	.+6      	; 0x4472 <LCD_PrintNumber+0x50a>
    446c:	6f 96       	adiw	r28, 0x1f	; 31
    446e:	1f ae       	std	Y+63, r1	; 0x3f
    4470:	6f 97       	sbiw	r28, 0x1f	; 31
    4472:	6c 96       	adiw	r28, 0x1c	; 28
    4474:	9f ad       	ldd	r25, Y+63	; 0x3f
    4476:	6c 97       	sbiw	r28, 0x1c	; 28
    4478:	61 96       	adiw	r28, 0x11	; 17
    447a:	8f ad       	ldd	r24, Y+63	; 0x3f
    447c:	61 97       	sbiw	r28, 0x11	; 17
    447e:	98 0f       	add	r25, r24
    4480:	a0 96       	adiw	r28, 0x20	; 32
    4482:	9f af       	std	Y+63, r25	; 0x3f
    4484:	a0 97       	sbiw	r28, 0x20	; 32
    4486:	91 e0       	ldi	r25, 0x01	; 1
    4488:	a1 96       	adiw	r28, 0x21	; 33
    448a:	9f af       	std	Y+63, r25	; 0x3f
    448c:	a1 97       	sbiw	r28, 0x21	; 33
    448e:	a0 96       	adiw	r28, 0x20	; 32
    4490:	8f ad       	ldd	r24, Y+63	; 0x3f
    4492:	a0 97       	sbiw	r28, 0x20	; 32
    4494:	61 96       	adiw	r28, 0x11	; 17
    4496:	9f ad       	ldd	r25, Y+63	; 0x3f
    4498:	61 97       	sbiw	r28, 0x11	; 17
    449a:	89 17       	cp	r24, r25
    449c:	18 f0       	brcs	.+6      	; 0x44a4 <LCD_PrintNumber+0x53c>
    449e:	a1 96       	adiw	r28, 0x21	; 33
    44a0:	1f ae       	std	Y+63, r1	; 0x3f
    44a2:	a1 97       	sbiw	r28, 0x21	; 33
    44a4:	6f 96       	adiw	r28, 0x1f	; 31
    44a6:	8f ad       	ldd	r24, Y+63	; 0x3f
    44a8:	6f 97       	sbiw	r28, 0x1f	; 31
    44aa:	a1 96       	adiw	r28, 0x21	; 33
    44ac:	9f ad       	ldd	r25, Y+63	; 0x3f
    44ae:	a1 97       	sbiw	r28, 0x21	; 33
    44b0:	89 2b       	or	r24, r25
    44b2:	6f 96       	adiw	r28, 0x1f	; 31
    44b4:	8f af       	std	Y+63, r24	; 0x3f
    44b6:	6f 97       	sbiw	r28, 0x1f	; 31
    44b8:	a0 96       	adiw	r28, 0x20	; 32
    44ba:	8f ad       	ldd	r24, Y+63	; 0x3f
    44bc:	a0 97       	sbiw	r28, 0x20	; 32
    44be:	61 96       	adiw	r28, 0x11	; 17
    44c0:	8f af       	std	Y+63, r24	; 0x3f
    44c2:	61 97       	sbiw	r28, 0x11	; 17
    44c4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    44c6:	8e 89       	ldd	r24, Y+22	; 0x16
    44c8:	98 0f       	add	r25, r24
    44ca:	62 96       	adiw	r28, 0x12	; 18
    44cc:	9f af       	std	Y+63, r25	; 0x3f
    44ce:	62 97       	sbiw	r28, 0x12	; 18
    44d0:	91 e0       	ldi	r25, 0x01	; 1
    44d2:	a2 96       	adiw	r28, 0x22	; 34
    44d4:	9f af       	std	Y+63, r25	; 0x3f
    44d6:	a2 97       	sbiw	r28, 0x22	; 34
    44d8:	62 96       	adiw	r28, 0x12	; 18
    44da:	8f ad       	ldd	r24, Y+63	; 0x3f
    44dc:	62 97       	sbiw	r28, 0x12	; 18
    44de:	9e 8d       	ldd	r25, Y+30	; 0x1e
    44e0:	89 17       	cp	r24, r25
    44e2:	18 f0       	brcs	.+6      	; 0x44ea <LCD_PrintNumber+0x582>
    44e4:	a2 96       	adiw	r28, 0x22	; 34
    44e6:	1f ae       	std	Y+63, r1	; 0x3f
    44e8:	a2 97       	sbiw	r28, 0x22	; 34
    44ea:	6f 96       	adiw	r28, 0x1f	; 31
    44ec:	8f ad       	ldd	r24, Y+63	; 0x3f
    44ee:	6f 97       	sbiw	r28, 0x1f	; 31
    44f0:	62 96       	adiw	r28, 0x12	; 18
    44f2:	9f ad       	ldd	r25, Y+63	; 0x3f
    44f4:	62 97       	sbiw	r28, 0x12	; 18
    44f6:	89 0f       	add	r24, r25
    44f8:	a3 96       	adiw	r28, 0x23	; 35
    44fa:	8f af       	std	Y+63, r24	; 0x3f
    44fc:	a3 97       	sbiw	r28, 0x23	; 35
    44fe:	81 e0       	ldi	r24, 0x01	; 1
    4500:	a4 96       	adiw	r28, 0x24	; 36
    4502:	8f af       	std	Y+63, r24	; 0x3f
    4504:	a4 97       	sbiw	r28, 0x24	; 36
    4506:	a3 96       	adiw	r28, 0x23	; 35
    4508:	9f ad       	ldd	r25, Y+63	; 0x3f
    450a:	a3 97       	sbiw	r28, 0x23	; 35
    450c:	62 96       	adiw	r28, 0x12	; 18
    450e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4510:	62 97       	sbiw	r28, 0x12	; 18
    4512:	98 17       	cp	r25, r24
    4514:	18 f0       	brcs	.+6      	; 0x451c <LCD_PrintNumber+0x5b4>
    4516:	a4 96       	adiw	r28, 0x24	; 36
    4518:	1f ae       	std	Y+63, r1	; 0x3f
    451a:	a4 97       	sbiw	r28, 0x24	; 36
    451c:	a2 96       	adiw	r28, 0x22	; 34
    451e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4520:	a2 97       	sbiw	r28, 0x22	; 34
    4522:	a4 96       	adiw	r28, 0x24	; 36
    4524:	8f ad       	ldd	r24, Y+63	; 0x3f
    4526:	a4 97       	sbiw	r28, 0x24	; 36
    4528:	98 2b       	or	r25, r24
    452a:	a2 96       	adiw	r28, 0x22	; 34
    452c:	9f af       	std	Y+63, r25	; 0x3f
    452e:	a2 97       	sbiw	r28, 0x22	; 34
    4530:	a3 96       	adiw	r28, 0x23	; 35
    4532:	9f ad       	ldd	r25, Y+63	; 0x3f
    4534:	a3 97       	sbiw	r28, 0x23	; 35
    4536:	62 96       	adiw	r28, 0x12	; 18
    4538:	9f af       	std	Y+63, r25	; 0x3f
    453a:	62 97       	sbiw	r28, 0x12	; 18
    453c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    453e:	9f 89       	ldd	r25, Y+23	; 0x17
    4540:	89 0f       	add	r24, r25
    4542:	63 96       	adiw	r28, 0x13	; 19
    4544:	8f af       	std	Y+63, r24	; 0x3f
    4546:	63 97       	sbiw	r28, 0x13	; 19
    4548:	81 e0       	ldi	r24, 0x01	; 1
    454a:	a5 96       	adiw	r28, 0x25	; 37
    454c:	8f af       	std	Y+63, r24	; 0x3f
    454e:	a5 97       	sbiw	r28, 0x25	; 37
    4550:	63 96       	adiw	r28, 0x13	; 19
    4552:	9f ad       	ldd	r25, Y+63	; 0x3f
    4554:	63 97       	sbiw	r28, 0x13	; 19
    4556:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4558:	98 17       	cp	r25, r24
    455a:	18 f0       	brcs	.+6      	; 0x4562 <LCD_PrintNumber+0x5fa>
    455c:	a5 96       	adiw	r28, 0x25	; 37
    455e:	1f ae       	std	Y+63, r1	; 0x3f
    4560:	a5 97       	sbiw	r28, 0x25	; 37
    4562:	a2 96       	adiw	r28, 0x22	; 34
    4564:	9f ad       	ldd	r25, Y+63	; 0x3f
    4566:	a2 97       	sbiw	r28, 0x22	; 34
    4568:	63 96       	adiw	r28, 0x13	; 19
    456a:	8f ad       	ldd	r24, Y+63	; 0x3f
    456c:	63 97       	sbiw	r28, 0x13	; 19
    456e:	98 0f       	add	r25, r24
    4570:	a6 96       	adiw	r28, 0x26	; 38
    4572:	9f af       	std	Y+63, r25	; 0x3f
    4574:	a6 97       	sbiw	r28, 0x26	; 38
    4576:	91 e0       	ldi	r25, 0x01	; 1
    4578:	a7 96       	adiw	r28, 0x27	; 39
    457a:	9f af       	std	Y+63, r25	; 0x3f
    457c:	a7 97       	sbiw	r28, 0x27	; 39
    457e:	a6 96       	adiw	r28, 0x26	; 38
    4580:	8f ad       	ldd	r24, Y+63	; 0x3f
    4582:	a6 97       	sbiw	r28, 0x26	; 38
    4584:	63 96       	adiw	r28, 0x13	; 19
    4586:	9f ad       	ldd	r25, Y+63	; 0x3f
    4588:	63 97       	sbiw	r28, 0x13	; 19
    458a:	89 17       	cp	r24, r25
    458c:	18 f0       	brcs	.+6      	; 0x4594 <LCD_PrintNumber+0x62c>
    458e:	a7 96       	adiw	r28, 0x27	; 39
    4590:	1f ae       	std	Y+63, r1	; 0x3f
    4592:	a7 97       	sbiw	r28, 0x27	; 39
    4594:	a5 96       	adiw	r28, 0x25	; 37
    4596:	8f ad       	ldd	r24, Y+63	; 0x3f
    4598:	a5 97       	sbiw	r28, 0x25	; 37
    459a:	a7 96       	adiw	r28, 0x27	; 39
    459c:	9f ad       	ldd	r25, Y+63	; 0x3f
    459e:	a7 97       	sbiw	r28, 0x27	; 39
    45a0:	89 2b       	or	r24, r25
    45a2:	a5 96       	adiw	r28, 0x25	; 37
    45a4:	8f af       	std	Y+63, r24	; 0x3f
    45a6:	a5 97       	sbiw	r28, 0x25	; 37
    45a8:	a6 96       	adiw	r28, 0x26	; 38
    45aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    45ac:	a6 97       	sbiw	r28, 0x26	; 38
    45ae:	63 96       	adiw	r28, 0x13	; 19
    45b0:	8f af       	std	Y+63, r24	; 0x3f
    45b2:	63 97       	sbiw	r28, 0x13	; 19
    45b4:	98 a1       	ldd	r25, Y+32	; 0x20
    45b6:	88 8d       	ldd	r24, Y+24	; 0x18
    45b8:	98 0f       	add	r25, r24
    45ba:	64 96       	adiw	r28, 0x14	; 20
    45bc:	9f af       	std	Y+63, r25	; 0x3f
    45be:	64 97       	sbiw	r28, 0x14	; 20
    45c0:	a5 96       	adiw	r28, 0x25	; 37
    45c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    45c4:	a5 97       	sbiw	r28, 0x25	; 37
    45c6:	64 96       	adiw	r28, 0x14	; 20
    45c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    45ca:	64 97       	sbiw	r28, 0x14	; 20
    45cc:	89 0f       	add	r24, r25
    45ce:	64 96       	adiw	r28, 0x14	; 20
    45d0:	8f af       	std	Y+63, r24	; 0x3f
    45d2:	64 97       	sbiw	r28, 0x14	; 20
    45d4:	2d 96       	adiw	r28, 0x0d	; 13
    45d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    45d8:	2d 97       	sbiw	r28, 0x0d	; 13
    45da:	89 83       	std	Y+1, r24	; 0x01
    45dc:	2e 96       	adiw	r28, 0x0e	; 14
    45de:	9f ad       	ldd	r25, Y+63	; 0x3f
    45e0:	2e 97       	sbiw	r28, 0x0e	; 14
    45e2:	9a 83       	std	Y+2, r25	; 0x02
    45e4:	2f 96       	adiw	r28, 0x0f	; 15
    45e6:	8f ad       	ldd	r24, Y+63	; 0x3f
    45e8:	2f 97       	sbiw	r28, 0x0f	; 15
    45ea:	8b 83       	std	Y+3, r24	; 0x03
    45ec:	60 96       	adiw	r28, 0x10	; 16
    45ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    45f0:	60 97       	sbiw	r28, 0x10	; 16
    45f2:	9c 83       	std	Y+4, r25	; 0x04
    45f4:	61 96       	adiw	r28, 0x11	; 17
    45f6:	8f ad       	ldd	r24, Y+63	; 0x3f
    45f8:	61 97       	sbiw	r28, 0x11	; 17
    45fa:	8d 83       	std	Y+5, r24	; 0x05
    45fc:	62 96       	adiw	r28, 0x12	; 18
    45fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    4600:	62 97       	sbiw	r28, 0x12	; 18
    4602:	9e 83       	std	Y+6, r25	; 0x06
    4604:	63 96       	adiw	r28, 0x13	; 19
    4606:	8f ad       	ldd	r24, Y+63	; 0x3f
    4608:	63 97       	sbiw	r28, 0x13	; 19
    460a:	8f 83       	std	Y+7, r24	; 0x07
    460c:	64 96       	adiw	r28, 0x14	; 20
    460e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4610:	64 97       	sbiw	r28, 0x14	; 20
    4612:	98 87       	std	Y+8, r25	; 0x08

	        num = num / 10;
    4614:	a9 84       	ldd	r10, Y+9	; 0x09
    4616:	ba 84       	ldd	r11, Y+10	; 0x0a
    4618:	cb 84       	ldd	r12, Y+11	; 0x0b
    461a:	dc 84       	ldd	r13, Y+12	; 0x0c
    461c:	ed 84       	ldd	r14, Y+13	; 0x0d
    461e:	fe 84       	ldd	r15, Y+14	; 0x0e
    4620:	0f 85       	ldd	r16, Y+15	; 0x0f
    4622:	18 89       	ldd	r17, Y+16	; 0x10
    4624:	2a 2d       	mov	r18, r10
    4626:	3b 2d       	mov	r19, r11
    4628:	4c 2d       	mov	r20, r12
    462a:	5d 2d       	mov	r21, r13
    462c:	6e 2d       	mov	r22, r14
    462e:	7f 2d       	mov	r23, r15
    4630:	80 2f       	mov	r24, r16
    4632:	91 2f       	mov	r25, r17
    4634:	0f 2e       	mov	r0, r31
    4636:	fa e0       	ldi	r31, 0x0A	; 10
    4638:	af 2e       	mov	r10, r31
    463a:	f0 2d       	mov	r31, r0
    463c:	bb 24       	eor	r11, r11
    463e:	cc 24       	eor	r12, r12
    4640:	dd 24       	eor	r13, r13
    4642:	ee 24       	eor	r14, r14
    4644:	ff 24       	eor	r15, r15
    4646:	00 e0       	ldi	r16, 0x00	; 0
    4648:	10 e0       	ldi	r17, 0x00	; 0
    464a:	0e 94 c8 01 	call	0x390	; 0x390 <__udivdi3>
    464e:	a2 2e       	mov	r10, r18
    4650:	b3 2e       	mov	r11, r19
    4652:	c4 2e       	mov	r12, r20
    4654:	d5 2e       	mov	r13, r21
    4656:	e6 2e       	mov	r14, r22
    4658:	f7 2e       	mov	r15, r23
    465a:	08 2f       	mov	r16, r24
    465c:	19 2f       	mov	r17, r25
    465e:	a9 86       	std	Y+9, r10	; 0x09
    4660:	ba 86       	std	Y+10, r11	; 0x0a
    4662:	cb 86       	std	Y+11, r12	; 0x0b
    4664:	dc 86       	std	Y+12, r13	; 0x0c
    4666:	ed 86       	std	Y+13, r14	; 0x0d
    4668:	fe 86       	std	Y+14, r15	; 0x0e
    466a:	0f 87       	std	Y+15, r16	; 0x0f
    466c:	18 8b       	std	Y+16, r17	; 0x10
	 }
	}
void LCD_PrintNumber(uint64 num)
{
	uint64 reverse= 1;
	    while (num > 0) //123
    466e:	89 85       	ldd	r24, Y+9	; 0x09
    4670:	9a 85       	ldd	r25, Y+10	; 0x0a
    4672:	89 2b       	or	r24, r25
    4674:	9b 85       	ldd	r25, Y+11	; 0x0b
    4676:	89 2b       	or	r24, r25
    4678:	9c 85       	ldd	r25, Y+12	; 0x0c
    467a:	89 2b       	or	r24, r25
    467c:	9d 85       	ldd	r25, Y+13	; 0x0d
    467e:	89 2b       	or	r24, r25
    4680:	9e 85       	ldd	r25, Y+14	; 0x0e
    4682:	89 2b       	or	r24, r25
    4684:	9f 85       	ldd	r25, Y+15	; 0x0f
    4686:	89 2b       	or	r24, r25
    4688:	98 89       	ldd	r25, Y+16	; 0x10
    468a:	89 2b       	or	r24, r25
    468c:	88 23       	and	r24, r24
    468e:	09 f0       	breq	.+2      	; 0x4692 <LCD_PrintNumber+0x72a>
    4690:	90 cc       	rjmp	.-1760   	; 0x3fb2 <LCD_PrintNumber+0x4a>
    4692:	5e c0       	rjmp	.+188    	; 0x4750 <LCD_PrintNumber+0x7e8>
	    }

	    while(reverse>1) //321
	    {

	    	LCD_WriteData((reverse%10)+48);
    4694:	a9 80       	ldd	r10, Y+1	; 0x01
    4696:	ba 80       	ldd	r11, Y+2	; 0x02
    4698:	cb 80       	ldd	r12, Y+3	; 0x03
    469a:	dc 80       	ldd	r13, Y+4	; 0x04
    469c:	ed 80       	ldd	r14, Y+5	; 0x05
    469e:	fe 80       	ldd	r15, Y+6	; 0x06
    46a0:	0f 81       	ldd	r16, Y+7	; 0x07
    46a2:	18 85       	ldd	r17, Y+8	; 0x08
    46a4:	2a 2d       	mov	r18, r10
    46a6:	3b 2d       	mov	r19, r11
    46a8:	4c 2d       	mov	r20, r12
    46aa:	5d 2d       	mov	r21, r13
    46ac:	6e 2d       	mov	r22, r14
    46ae:	7f 2d       	mov	r23, r15
    46b0:	80 2f       	mov	r24, r16
    46b2:	91 2f       	mov	r25, r17
    46b4:	0f 2e       	mov	r0, r31
    46b6:	fa e0       	ldi	r31, 0x0A	; 10
    46b8:	af 2e       	mov	r10, r31
    46ba:	f0 2d       	mov	r31, r0
    46bc:	bb 24       	eor	r11, r11
    46be:	cc 24       	eor	r12, r12
    46c0:	dd 24       	eor	r13, r13
    46c2:	ee 24       	eor	r14, r14
    46c4:	ff 24       	eor	r15, r15
    46c6:	00 e0       	ldi	r16, 0x00	; 0
    46c8:	10 e0       	ldi	r17, 0x00	; 0
    46ca:	0e 94 3d 08 	call	0x107a	; 0x107a <__umoddi3>
    46ce:	a2 2e       	mov	r10, r18
    46d0:	b3 2e       	mov	r11, r19
    46d2:	c4 2e       	mov	r12, r20
    46d4:	d5 2e       	mov	r13, r21
    46d6:	e6 2e       	mov	r14, r22
    46d8:	f7 2e       	mov	r15, r23
    46da:	08 2f       	mov	r16, r24
    46dc:	19 2f       	mov	r17, r25
    46de:	2a 2d       	mov	r18, r10
    46e0:	3b 2d       	mov	r19, r11
    46e2:	4c 2d       	mov	r20, r12
    46e4:	5d 2d       	mov	r21, r13
    46e6:	6e 2d       	mov	r22, r14
    46e8:	7f 2d       	mov	r23, r15
    46ea:	80 2f       	mov	r24, r16
    46ec:	91 2f       	mov	r25, r17
    46ee:	82 2f       	mov	r24, r18
    46f0:	80 5d       	subi	r24, 0xD0	; 208
    46f2:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>
	    	reverse=reverse/10;
    46f6:	a9 80       	ldd	r10, Y+1	; 0x01
    46f8:	ba 80       	ldd	r11, Y+2	; 0x02
    46fa:	cb 80       	ldd	r12, Y+3	; 0x03
    46fc:	dc 80       	ldd	r13, Y+4	; 0x04
    46fe:	ed 80       	ldd	r14, Y+5	; 0x05
    4700:	fe 80       	ldd	r15, Y+6	; 0x06
    4702:	0f 81       	ldd	r16, Y+7	; 0x07
    4704:	18 85       	ldd	r17, Y+8	; 0x08
    4706:	2a 2d       	mov	r18, r10
    4708:	3b 2d       	mov	r19, r11
    470a:	4c 2d       	mov	r20, r12
    470c:	5d 2d       	mov	r21, r13
    470e:	6e 2d       	mov	r22, r14
    4710:	7f 2d       	mov	r23, r15
    4712:	80 2f       	mov	r24, r16
    4714:	91 2f       	mov	r25, r17
    4716:	0f 2e       	mov	r0, r31
    4718:	fa e0       	ldi	r31, 0x0A	; 10
    471a:	af 2e       	mov	r10, r31
    471c:	f0 2d       	mov	r31, r0
    471e:	bb 24       	eor	r11, r11
    4720:	cc 24       	eor	r12, r12
    4722:	dd 24       	eor	r13, r13
    4724:	ee 24       	eor	r14, r14
    4726:	ff 24       	eor	r15, r15
    4728:	00 e0       	ldi	r16, 0x00	; 0
    472a:	10 e0       	ldi	r17, 0x00	; 0
    472c:	0e 94 c8 01 	call	0x390	; 0x390 <__udivdi3>
    4730:	a2 2e       	mov	r10, r18
    4732:	b3 2e       	mov	r11, r19
    4734:	c4 2e       	mov	r12, r20
    4736:	d5 2e       	mov	r13, r21
    4738:	e6 2e       	mov	r14, r22
    473a:	f7 2e       	mov	r15, r23
    473c:	08 2f       	mov	r16, r24
    473e:	19 2f       	mov	r17, r25
    4740:	a9 82       	std	Y+1, r10	; 0x01
    4742:	ba 82       	std	Y+2, r11	; 0x02
    4744:	cb 82       	std	Y+3, r12	; 0x03
    4746:	dc 82       	std	Y+4, r13	; 0x04
    4748:	ed 82       	std	Y+5, r14	; 0x05
    474a:	fe 82       	std	Y+6, r15	; 0x06
    474c:	0f 83       	std	Y+7, r16	; 0x07
    474e:	18 87       	std	Y+8, r17	; 0x08
	        reverse= (reverse * 10) + num % 10;

	        num = num / 10;
	    }

	    while(reverse>1) //321
    4750:	88 85       	ldd	r24, Y+8	; 0x08
    4752:	88 23       	and	r24, r24
    4754:	09 f0       	breq	.+2      	; 0x4758 <LCD_PrintNumber+0x7f0>
    4756:	9e cf       	rjmp	.-196    	; 0x4694 <LCD_PrintNumber+0x72c>
    4758:	88 85       	ldd	r24, Y+8	; 0x08
    475a:	88 23       	and	r24, r24
    475c:	71 f5       	brne	.+92     	; 0x47ba <LCD_PrintNumber+0x852>
    475e:	8f 81       	ldd	r24, Y+7	; 0x07
    4760:	88 23       	and	r24, r24
    4762:	09 f0       	breq	.+2      	; 0x4766 <LCD_PrintNumber+0x7fe>
    4764:	97 cf       	rjmp	.-210    	; 0x4694 <LCD_PrintNumber+0x72c>
    4766:	8f 81       	ldd	r24, Y+7	; 0x07
    4768:	88 23       	and	r24, r24
    476a:	39 f5       	brne	.+78     	; 0x47ba <LCD_PrintNumber+0x852>
    476c:	8e 81       	ldd	r24, Y+6	; 0x06
    476e:	88 23       	and	r24, r24
    4770:	09 f0       	breq	.+2      	; 0x4774 <LCD_PrintNumber+0x80c>
    4772:	90 cf       	rjmp	.-224    	; 0x4694 <LCD_PrintNumber+0x72c>
    4774:	8e 81       	ldd	r24, Y+6	; 0x06
    4776:	88 23       	and	r24, r24
    4778:	01 f5       	brne	.+64     	; 0x47ba <LCD_PrintNumber+0x852>
    477a:	8d 81       	ldd	r24, Y+5	; 0x05
    477c:	88 23       	and	r24, r24
    477e:	09 f0       	breq	.+2      	; 0x4782 <LCD_PrintNumber+0x81a>
    4780:	89 cf       	rjmp	.-238    	; 0x4694 <LCD_PrintNumber+0x72c>
    4782:	8d 81       	ldd	r24, Y+5	; 0x05
    4784:	88 23       	and	r24, r24
    4786:	c9 f4       	brne	.+50     	; 0x47ba <LCD_PrintNumber+0x852>
    4788:	8c 81       	ldd	r24, Y+4	; 0x04
    478a:	88 23       	and	r24, r24
    478c:	09 f0       	breq	.+2      	; 0x4790 <LCD_PrintNumber+0x828>
    478e:	82 cf       	rjmp	.-252    	; 0x4694 <LCD_PrintNumber+0x72c>
    4790:	8c 81       	ldd	r24, Y+4	; 0x04
    4792:	88 23       	and	r24, r24
    4794:	91 f4       	brne	.+36     	; 0x47ba <LCD_PrintNumber+0x852>
    4796:	8b 81       	ldd	r24, Y+3	; 0x03
    4798:	88 23       	and	r24, r24
    479a:	09 f0       	breq	.+2      	; 0x479e <LCD_PrintNumber+0x836>
    479c:	7b cf       	rjmp	.-266    	; 0x4694 <LCD_PrintNumber+0x72c>
    479e:	8b 81       	ldd	r24, Y+3	; 0x03
    47a0:	88 23       	and	r24, r24
    47a2:	59 f4       	brne	.+22     	; 0x47ba <LCD_PrintNumber+0x852>
    47a4:	8a 81       	ldd	r24, Y+2	; 0x02
    47a6:	88 23       	and	r24, r24
    47a8:	09 f0       	breq	.+2      	; 0x47ac <LCD_PrintNumber+0x844>
    47aa:	74 cf       	rjmp	.-280    	; 0x4694 <LCD_PrintNumber+0x72c>
    47ac:	8a 81       	ldd	r24, Y+2	; 0x02
    47ae:	88 23       	and	r24, r24
    47b0:	21 f4       	brne	.+8      	; 0x47ba <LCD_PrintNumber+0x852>
    47b2:	89 81       	ldd	r24, Y+1	; 0x01
    47b4:	82 30       	cpi	r24, 0x02	; 2
    47b6:	08 f0       	brcs	.+2      	; 0x47ba <LCD_PrintNumber+0x852>
    47b8:	6d cf       	rjmp	.-294    	; 0x4694 <LCD_PrintNumber+0x72c>
	    {

	    	LCD_WriteData((reverse%10)+48);
	    	reverse=reverse/10;
	    }
}
    47ba:	ca 59       	subi	r28, 0x9A	; 154
    47bc:	df 4f       	sbci	r29, 0xFF	; 255
    47be:	0f b6       	in	r0, 0x3f	; 63
    47c0:	f8 94       	cli
    47c2:	de bf       	out	0x3e, r29	; 62
    47c4:	0f be       	out	0x3f, r0	; 63
    47c6:	cd bf       	out	0x3d, r28	; 61
    47c8:	cf 91       	pop	r28
    47ca:	df 91       	pop	r29
    47cc:	1f 91       	pop	r17
    47ce:	0f 91       	pop	r16
    47d0:	ff 90       	pop	r15
    47d2:	ef 90       	pop	r14
    47d4:	df 90       	pop	r13
    47d6:	cf 90       	pop	r12
    47d8:	bf 90       	pop	r11
    47da:	af 90       	pop	r10
    47dc:	08 95       	ret

000047de <LCD_PrintBinary>:

void LCD_PrintBinary(uint8 num)
{
    47de:	df 93       	push	r29
    47e0:	cf 93       	push	r28
    47e2:	00 d0       	rcall	.+0      	; 0x47e4 <LCD_PrintBinary+0x6>
    47e4:	0f 92       	push	r0
    47e6:	cd b7       	in	r28, 0x3d	; 61
    47e8:	de b7       	in	r29, 0x3e	; 62
    47ea:	8a 83       	std	Y+2, r24	; 0x02
	for (sint8 i=7; i>=0; i--)
    47ec:	87 e0       	ldi	r24, 0x07	; 7
    47ee:	89 83       	std	Y+1, r24	; 0x01
    47f0:	1d c0       	rjmp	.+58     	; 0x482c <LCD_PrintBinary+0x4e>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
    47f2:	8a 81       	ldd	r24, Y+2	; 0x02
    47f4:	28 2f       	mov	r18, r24
    47f6:	30 e0       	ldi	r19, 0x00	; 0
    47f8:	89 81       	ldd	r24, Y+1	; 0x01
    47fa:	99 27       	eor	r25, r25
    47fc:	87 fd       	sbrc	r24, 7
    47fe:	90 95       	com	r25
    4800:	a9 01       	movw	r20, r18
    4802:	02 c0       	rjmp	.+4      	; 0x4808 <LCD_PrintBinary+0x2a>
    4804:	55 95       	asr	r21
    4806:	47 95       	ror	r20
    4808:	8a 95       	dec	r24
    480a:	e2 f7       	brpl	.-8      	; 0x4804 <LCD_PrintBinary+0x26>
    480c:	ca 01       	movw	r24, r20
    480e:	81 70       	andi	r24, 0x01	; 1
    4810:	90 70       	andi	r25, 0x00	; 0
    4812:	88 23       	and	r24, r24
    4814:	19 f0       	breq	.+6      	; 0x481c <LCD_PrintBinary+0x3e>
    4816:	51 e3       	ldi	r21, 0x31	; 49
    4818:	5b 83       	std	Y+3, r21	; 0x03
    481a:	02 c0       	rjmp	.+4      	; 0x4820 <LCD_PrintBinary+0x42>
    481c:	80 e3       	ldi	r24, 0x30	; 48
    481e:	8b 83       	std	Y+3, r24	; 0x03
    4820:	8b 81       	ldd	r24, Y+3	; 0x03
    4822:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>
	    }
}

void LCD_PrintBinary(uint8 num)
{
	for (sint8 i=7; i>=0; i--)
    4826:	89 81       	ldd	r24, Y+1	; 0x01
    4828:	81 50       	subi	r24, 0x01	; 1
    482a:	89 83       	std	Y+1, r24	; 0x01
    482c:	89 81       	ldd	r24, Y+1	; 0x01
    482e:	88 23       	and	r24, r24
    4830:	04 f7       	brge	.-64     	; 0x47f2 <LCD_PrintBinary+0x14>
	{
		LCD_WriteData(GET_BIT(num,i)?'1':'0');
	}

}
    4832:	0f 90       	pop	r0
    4834:	0f 90       	pop	r0
    4836:	0f 90       	pop	r0
    4838:	cf 91       	pop	r28
    483a:	df 91       	pop	r29
    483c:	08 95       	ret

0000483e <LCD_PrintHex>:

void LCD_PrintHex(uint8 num)
{
    483e:	df 93       	push	r29
    4840:	cf 93       	push	r28
    4842:	00 d0       	rcall	.+0      	; 0x4844 <LCD_PrintHex+0x6>
    4844:	0f 92       	push	r0
    4846:	cd b7       	in	r28, 0x3d	; 61
    4848:	de b7       	in	r29, 0x3e	; 62
    484a:	8b 83       	std	Y+3, r24	; 0x03
	uint8 Upper = 0, Lower = 0;
    484c:	1a 82       	std	Y+2, r1	; 0x02
    484e:	19 82       	std	Y+1, r1	; 0x01
	LCD_WriteString("0X");
    4850:	80 e6       	ldi	r24, 0x60	; 96
    4852:	90 e0       	ldi	r25, 0x00	; 0
    4854:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>

	Upper = num >> 4;     //0b000 0010
    4858:	8b 81       	ldd	r24, Y+3	; 0x03
    485a:	82 95       	swap	r24
    485c:	8f 70       	andi	r24, 0x0F	; 15
    485e:	8a 83       	std	Y+2, r24	; 0x02
	Lower = num & 0X0f;   //0b000 0000
    4860:	8b 81       	ldd	r24, Y+3	; 0x03
    4862:	8f 70       	andi	r24, 0x0F	; 15
    4864:	89 83       	std	Y+1, r24	; 0x01

	if (Upper < 10){
    4866:	8a 81       	ldd	r24, Y+2	; 0x02
    4868:	8a 30       	cpi	r24, 0x0A	; 10
    486a:	28 f4       	brcc	.+10     	; 0x4876 <LCD_PrintHex+0x38>
		LCD_WriteData(Upper+'0');
    486c:	8a 81       	ldd	r24, Y+2	; 0x02
    486e:	80 5d       	subi	r24, 0xD0	; 208
    4870:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>
    4874:	04 c0       	rjmp	.+8      	; 0x487e <LCD_PrintHex+0x40>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    4876:	8a 81       	ldd	r24, Y+2	; 0x02
    4878:	89 5c       	subi	r24, 0xC9	; 201
    487a:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>
	}

	if (Lower < 10){
    487e:	89 81       	ldd	r24, Y+1	; 0x01
    4880:	8a 30       	cpi	r24, 0x0A	; 10
    4882:	28 f4       	brcc	.+10     	; 0x488e <LCD_PrintHex+0x50>

		LCD_WriteData(Lower+'0');
    4884:	89 81       	ldd	r24, Y+1	; 0x01
    4886:	80 5d       	subi	r24, 0xD0	; 208
    4888:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>
    488c:	04 c0       	rjmp	.+8      	; 0x4896 <LCD_PrintHex+0x58>
	}
	else {

		LCD_WriteData(Upper+'A'-10);
    488e:	8a 81       	ldd	r24, Y+2	; 0x02
    4890:	89 5c       	subi	r24, 0xC9	; 201
    4892:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>

	}
}
    4896:	0f 90       	pop	r0
    4898:	0f 90       	pop	r0
    489a:	0f 90       	pop	r0
    489c:	cf 91       	pop	r28
    489e:	df 91       	pop	r29
    48a0:	08 95       	ret

000048a2 <LCD_DrawCharInAdd>:
				0x07,
				0x00,
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
    48a2:	df 93       	push	r29
    48a4:	cf 93       	push	r28
    48a6:	00 d0       	rcall	.+0      	; 0x48a8 <LCD_DrawCharInAdd+0x6>
    48a8:	cd b7       	in	r28, 0x3d	; 61
    48aa:	de b7       	in	r29, 0x3e	; 62
    48ac:	8a 83       	std	Y+2, r24	; 0x02
	LCD_WriteInst(0x40);
    48ae:	80 e4       	ldi	r24, 0x40	; 64
    48b0:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
	for(uint8 i=0; i<8;i++){
    48b4:	19 82       	std	Y+1, r1	; 0x01
    48b6:	0c c0       	rjmp	.+24     	; 0x48d0 <LCD_DrawCharInAdd+0x2e>
		LCD_WriteData(arr[i]);
    48b8:	89 81       	ldd	r24, Y+1	; 0x01
    48ba:	88 2f       	mov	r24, r24
    48bc:	90 e0       	ldi	r25, 0x00	; 0
    48be:	fc 01       	movw	r30, r24
    48c0:	e3 56       	subi	r30, 0x63	; 99
    48c2:	fd 4f       	sbci	r31, 0xFD	; 253
    48c4:	80 81       	ld	r24, Z
    48c6:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>
				0x00};

void LCD_DrawCharInAdd(uint8 Data)
{
	LCD_WriteInst(0x40);
	for(uint8 i=0; i<8;i++){
    48ca:	89 81       	ldd	r24, Y+1	; 0x01
    48cc:	8f 5f       	subi	r24, 0xFF	; 255
    48ce:	89 83       	std	Y+1, r24	; 0x01
    48d0:	89 81       	ldd	r24, Y+1	; 0x01
    48d2:	88 30       	cpi	r24, 0x08	; 8
    48d4:	88 f3       	brcs	.-30     	; 0x48b8 <LCD_DrawCharInAdd+0x16>
		LCD_WriteData(arr[i]);
	}

	LCD_WriteInst(0x80);
    48d6:	80 e8       	ldi	r24, 0x80	; 128
    48d8:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
	LCD_WriteData(Data);
    48dc:	8a 81       	ldd	r24, Y+2	; 0x02
    48de:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>

}
    48e2:	0f 90       	pop	r0
    48e4:	0f 90       	pop	r0
    48e6:	cf 91       	pop	r28
    48e8:	df 91       	pop	r29
    48ea:	08 95       	ret

000048ec <LCD_Draw_Char>:

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    48ec:	df 93       	push	r29
    48ee:	cf 93       	push	r28
    48f0:	00 d0       	rcall	.+0      	; 0x48f2 <LCD_Draw_Char+0x6>
    48f2:	00 d0       	rcall	.+0      	; 0x48f4 <LCD_Draw_Char+0x8>
    48f4:	cd b7       	in	r28, 0x3d	; 61
    48f6:	de b7       	in	r29, 0x3e	; 62
    48f8:	8a 83       	std	Y+2, r24	; 0x02
    48fa:	7c 83       	std	Y+4, r23	; 0x04
    48fc:	6b 83       	std	Y+3, r22	; 0x03
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    48fe:	8a 81       	ldd	r24, Y+2	; 0x02
    4900:	88 2f       	mov	r24, r24
    4902:	90 e0       	ldi	r25, 0x00	; 0
    4904:	88 0f       	add	r24, r24
    4906:	99 1f       	adc	r25, r25
    4908:	88 0f       	add	r24, r24
    490a:	99 1f       	adc	r25, r25
    490c:	88 0f       	add	r24, r24
    490e:	99 1f       	adc	r25, r25
    4910:	80 64       	ori	r24, 0x40	; 64
    4912:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
    for (uint8 j = 0; j < 8; j++) {
    4916:	19 82       	std	Y+1, r1	; 0x01
    4918:	0e c0       	rjmp	.+28     	; 0x4936 <LCD_Draw_Char+0x4a>
        LCD_WriteData(charArray[j]);
    491a:	89 81       	ldd	r24, Y+1	; 0x01
    491c:	28 2f       	mov	r18, r24
    491e:	30 e0       	ldi	r19, 0x00	; 0
    4920:	8b 81       	ldd	r24, Y+3	; 0x03
    4922:	9c 81       	ldd	r25, Y+4	; 0x04
    4924:	fc 01       	movw	r30, r24
    4926:	e2 0f       	add	r30, r18
    4928:	f3 1f       	adc	r31, r19
    492a:	80 81       	ld	r24, Z
    492c:	0e 94 4e 1e 	call	0x3c9c	; 0x3c9c <LCD_WriteData>

}

void LCD_Draw_Char(uint8 Address_Data, uint8* charArray) {
    LCD_WriteInst(0x40 | (Address_Data * 8)); // Set CGRAM address
    for (uint8 j = 0; j < 8; j++) {
    4930:	89 81       	ldd	r24, Y+1	; 0x01
    4932:	8f 5f       	subi	r24, 0xFF	; 255
    4934:	89 83       	std	Y+1, r24	; 0x01
    4936:	89 81       	ldd	r24, Y+1	; 0x01
    4938:	88 30       	cpi	r24, 0x08	; 8
    493a:	78 f3       	brcs	.-34     	; 0x491a <LCD_Draw_Char+0x2e>
        LCD_WriteData(charArray[j]);
    }
    LCD_WriteInst(0x80); // Set DDRAM address to return to the display area
    493c:	80 e8       	ldi	r24, 0x80	; 128
    493e:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
}
    4942:	0f 90       	pop	r0
    4944:	0f 90       	pop	r0
    4946:	0f 90       	pop	r0
    4948:	0f 90       	pop	r0
    494a:	cf 91       	pop	r28
    494c:	df 91       	pop	r29
    494e:	08 95       	ret

00004950 <LCD_Clear>:

void LCD_Clear(void)
{
    4950:	df 93       	push	r29
    4952:	cf 93       	push	r28
    4954:	cd b7       	in	r28, 0x3d	; 61
    4956:	de b7       	in	r29, 0x3e	; 62
	LCD_WriteInst(0x01);
    4958:	81 e0       	ldi	r24, 0x01	; 1
    495a:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <LCD_WriteInst>
}
    495e:	cf 91       	pop	r28
    4960:	df 91       	pop	r29
    4962:	08 95       	ret

00004964 <LCD_ReverseNumber>:
	return Input+0x30;
}
*/


sint32 LCD_ReverseNumber(sint32 NUM){
    4964:	ef 92       	push	r14
    4966:	ff 92       	push	r15
    4968:	0f 93       	push	r16
    496a:	1f 93       	push	r17
    496c:	df 93       	push	r29
    496e:	cf 93       	push	r28
    4970:	cd b7       	in	r28, 0x3d	; 61
    4972:	de b7       	in	r29, 0x3e	; 62
    4974:	28 97       	sbiw	r28, 0x08	; 8
    4976:	0f b6       	in	r0, 0x3f	; 63
    4978:	f8 94       	cli
    497a:	de bf       	out	0x3e, r29	; 62
    497c:	0f be       	out	0x3f, r0	; 63
    497e:	cd bf       	out	0x3d, r28	; 61
    4980:	6d 83       	std	Y+5, r22	; 0x05
    4982:	7e 83       	std	Y+6, r23	; 0x06
    4984:	8f 83       	std	Y+7, r24	; 0x07
    4986:	98 87       	std	Y+8, r25	; 0x08
	uint32 reverse =1;
    4988:	81 e0       	ldi	r24, 0x01	; 1
    498a:	90 e0       	ldi	r25, 0x00	; 0
    498c:	a0 e0       	ldi	r26, 0x00	; 0
    498e:	b0 e0       	ldi	r27, 0x00	; 0
    4990:	89 83       	std	Y+1, r24	; 0x01
    4992:	9a 83       	std	Y+2, r25	; 0x02
    4994:	ab 83       	std	Y+3, r26	; 0x03
    4996:	bc 83       	std	Y+4, r27	; 0x04
    4998:	36 c0       	rjmp	.+108    	; 0x4a06 <LCD_ReverseNumber+0xa2>
	while (NUM != 0){
		reverse = (reverse*10)+(NUM%10);
    499a:	89 81       	ldd	r24, Y+1	; 0x01
    499c:	9a 81       	ldd	r25, Y+2	; 0x02
    499e:	ab 81       	ldd	r26, Y+3	; 0x03
    49a0:	bc 81       	ldd	r27, Y+4	; 0x04
    49a2:	2a e0       	ldi	r18, 0x0A	; 10
    49a4:	30 e0       	ldi	r19, 0x00	; 0
    49a6:	40 e0       	ldi	r20, 0x00	; 0
    49a8:	50 e0       	ldi	r21, 0x00	; 0
    49aa:	bc 01       	movw	r22, r24
    49ac:	cd 01       	movw	r24, r26
    49ae:	0e 94 b2 28 	call	0x5164	; 0x5164 <__mulsi3>
    49b2:	7b 01       	movw	r14, r22
    49b4:	8c 01       	movw	r16, r24
    49b6:	8d 81       	ldd	r24, Y+5	; 0x05
    49b8:	9e 81       	ldd	r25, Y+6	; 0x06
    49ba:	af 81       	ldd	r26, Y+7	; 0x07
    49bc:	b8 85       	ldd	r27, Y+8	; 0x08
    49be:	2a e0       	ldi	r18, 0x0A	; 10
    49c0:	30 e0       	ldi	r19, 0x00	; 0
    49c2:	40 e0       	ldi	r20, 0x00	; 0
    49c4:	50 e0       	ldi	r21, 0x00	; 0
    49c6:	bc 01       	movw	r22, r24
    49c8:	cd 01       	movw	r24, r26
    49ca:	0e 94 d1 28 	call	0x51a2	; 0x51a2 <__divmodsi4>
    49ce:	dc 01       	movw	r26, r24
    49d0:	cb 01       	movw	r24, r22
    49d2:	8e 0d       	add	r24, r14
    49d4:	9f 1d       	adc	r25, r15
    49d6:	a0 1f       	adc	r26, r16
    49d8:	b1 1f       	adc	r27, r17
    49da:	89 83       	std	Y+1, r24	; 0x01
    49dc:	9a 83       	std	Y+2, r25	; 0x02
    49de:	ab 83       	std	Y+3, r26	; 0x03
    49e0:	bc 83       	std	Y+4, r27	; 0x04
		NUM = NUM / 10;
    49e2:	8d 81       	ldd	r24, Y+5	; 0x05
    49e4:	9e 81       	ldd	r25, Y+6	; 0x06
    49e6:	af 81       	ldd	r26, Y+7	; 0x07
    49e8:	b8 85       	ldd	r27, Y+8	; 0x08
    49ea:	2a e0       	ldi	r18, 0x0A	; 10
    49ec:	30 e0       	ldi	r19, 0x00	; 0
    49ee:	40 e0       	ldi	r20, 0x00	; 0
    49f0:	50 e0       	ldi	r21, 0x00	; 0
    49f2:	bc 01       	movw	r22, r24
    49f4:	cd 01       	movw	r24, r26
    49f6:	0e 94 d1 28 	call	0x51a2	; 0x51a2 <__divmodsi4>
    49fa:	da 01       	movw	r26, r20
    49fc:	c9 01       	movw	r24, r18
    49fe:	8d 83       	std	Y+5, r24	; 0x05
    4a00:	9e 83       	std	Y+6, r25	; 0x06
    4a02:	af 83       	std	Y+7, r26	; 0x07
    4a04:	b8 87       	std	Y+8, r27	; 0x08
*/


sint32 LCD_ReverseNumber(sint32 NUM){
	uint32 reverse =1;
	while (NUM != 0){
    4a06:	8d 81       	ldd	r24, Y+5	; 0x05
    4a08:	9e 81       	ldd	r25, Y+6	; 0x06
    4a0a:	af 81       	ldd	r26, Y+7	; 0x07
    4a0c:	b8 85       	ldd	r27, Y+8	; 0x08
    4a0e:	00 97       	sbiw	r24, 0x00	; 0
    4a10:	a1 05       	cpc	r26, r1
    4a12:	b1 05       	cpc	r27, r1
    4a14:	11 f6       	brne	.-124    	; 0x499a <LCD_ReverseNumber+0x36>
		reverse = (reverse*10)+(NUM%10);
		NUM = NUM / 10;
	}
	return reverse;
    4a16:	89 81       	ldd	r24, Y+1	; 0x01
    4a18:	9a 81       	ldd	r25, Y+2	; 0x02
    4a1a:	ab 81       	ldd	r26, Y+3	; 0x03
    4a1c:	bc 81       	ldd	r27, Y+4	; 0x04
}
    4a1e:	bc 01       	movw	r22, r24
    4a20:	cd 01       	movw	r24, r26
    4a22:	28 96       	adiw	r28, 0x08	; 8
    4a24:	0f b6       	in	r0, 0x3f	; 63
    4a26:	f8 94       	cli
    4a28:	de bf       	out	0x3e, r29	; 62
    4a2a:	0f be       	out	0x3f, r0	; 63
    4a2c:	cd bf       	out	0x3d, r28	; 61
    4a2e:	cf 91       	pop	r28
    4a30:	df 91       	pop	r29
    4a32:	1f 91       	pop	r17
    4a34:	0f 91       	pop	r16
    4a36:	ff 90       	pop	r15
    4a38:	ef 90       	pop	r14
    4a3a:	08 95       	ret

00004a3c <main>:
#include "../HAL/KEYPAD/KEYPAD_interface.h"
#include "../HAL/MOTOR/DC_Motor_Interface.h"
#include "../HAL/LED/LED_interface.h"


int main(void){
    4a3c:	df 93       	push	r29
    4a3e:	cf 93       	push	r28
    4a40:	cd b7       	in	r28, 0x3d	; 61
    4a42:	de b7       	in	r29, 0x3e	; 62
    4a44:	e5 97       	sbiw	r28, 0x35	; 53
    4a46:	0f b6       	in	r0, 0x3f	; 63
    4a48:	f8 94       	cli
    4a4a:	de bf       	out	0x3e, r29	; 62
    4a4c:	0f be       	out	0x3f, r0	; 63
    4a4e:	cd bf       	out	0x3d, r28	; 61
	uint8 Key, Flag=1, Condition=1;
    4a50:	81 e0       	ldi	r24, 0x01	; 1
    4a52:	8c a7       	std	Y+44, r24	; 0x2c
    4a54:	81 e0       	ldi	r24, 0x01	; 1
    4a56:	8b a7       	std	Y+43, r24	; 0x2b

    // Initialize peripherals
	LCD_Init();
    4a58:	0e 94 32 1c 	call	0x3864	; 0x3864 <LCD_Init>
	Keypad_init();
    4a5c:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <Keypad_init>
	LED_voidInit(DIO_u8PORTD,DIO_u8PIN2); // Initialize an LED on Port D, Pin 2
    4a60:	84 e0       	ldi	r24, 0x04	; 4
    4a62:	62 e0       	ldi	r22, 0x02	; 2
    4a64:	0e 94 23 1b 	call	0x3646	; 0x3646 <LED_voidInit>

    // Configuration for DC Motor
	DC_Motor config;
	config.port = DC_Port; 		// Specify the port for the DC Motor
    4a68:	84 e0       	ldi	r24, 0x04	; 4
    4a6a:	88 ab       	std	Y+48, r24	; 0x30
	config.pin_1= DIO_u8PIN0;	// Specify the first pin of the motor
    4a6c:	1e a6       	std	Y+46, r1	; 0x2e
	config.pin_2= DIO_u8PIN1;	// Specify the second pin of the motor
    4a6e:	81 e0       	ldi	r24, 0x01	; 1
    4a70:	8f a7       	std	Y+47, r24	; 0x2f
	DC_Init(config);			// Initialize the DC Motor
    4a72:	6e a5       	ldd	r22, Y+46	; 0x2e
    4a74:	7f a5       	ldd	r23, Y+47	; 0x2f
    4a76:	88 a9       	ldd	r24, Y+48	; 0x30
    4a78:	0e 94 85 19 	call	0x330a	; 0x330a <DC_Init>

    // Display welcome message
	LCD_Goto(1,5);
    4a7c:	81 e0       	ldi	r24, 0x01	; 1
    4a7e:	65 e0       	ldi	r22, 0x05	; 5
    4a80:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
	LCD_WriteString("WELCOME To");
    4a84:	83 e6       	ldi	r24, 0x63	; 99
    4a86:	90 e0       	ldi	r25, 0x00	; 0
    4a88:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
	LCD_Goto(2,1);
    4a8c:	82 e0       	ldi	r24, 0x02	; 2
    4a8e:	61 e0       	ldi	r22, 0x01	; 1
    4a90:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
	LCD_WriteString("THE MINI PROJECT");
    4a94:	8e e6       	ldi	r24, 0x6E	; 110
    4a96:	90 e0       	ldi	r25, 0x00	; 0
    4a98:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    4a9c:	80 e0       	ldi	r24, 0x00	; 0
    4a9e:	90 e8       	ldi	r25, 0x80	; 128
    4aa0:	ab eb       	ldi	r26, 0xBB	; 187
    4aa2:	b4 e4       	ldi	r27, 0x44	; 68
    4aa4:	8f a3       	std	Y+39, r24	; 0x27
    4aa6:	98 a7       	std	Y+40, r25	; 0x28
    4aa8:	a9 a7       	std	Y+41, r26	; 0x29
    4aaa:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4aac:	6f a1       	ldd	r22, Y+39	; 0x27
    4aae:	78 a5       	ldd	r23, Y+40	; 0x28
    4ab0:	89 a5       	ldd	r24, Y+41	; 0x29
    4ab2:	9a a5       	ldd	r25, Y+42	; 0x2a
    4ab4:	20 e0       	ldi	r18, 0x00	; 0
    4ab6:	30 e0       	ldi	r19, 0x00	; 0
    4ab8:	4a ef       	ldi	r20, 0xFA	; 250
    4aba:	54 e4       	ldi	r21, 0x44	; 68
    4abc:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    4ac0:	dc 01       	movw	r26, r24
    4ac2:	cb 01       	movw	r24, r22
    4ac4:	8b a3       	std	Y+35, r24	; 0x23
    4ac6:	9c a3       	std	Y+36, r25	; 0x24
    4ac8:	ad a3       	std	Y+37, r26	; 0x25
    4aca:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4acc:	6b a1       	ldd	r22, Y+35	; 0x23
    4ace:	7c a1       	ldd	r23, Y+36	; 0x24
    4ad0:	8d a1       	ldd	r24, Y+37	; 0x25
    4ad2:	9e a1       	ldd	r25, Y+38	; 0x26
    4ad4:	20 e0       	ldi	r18, 0x00	; 0
    4ad6:	30 e0       	ldi	r19, 0x00	; 0
    4ad8:	40 e8       	ldi	r20, 0x80	; 128
    4ada:	5f e3       	ldi	r21, 0x3F	; 63
    4adc:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    4ae0:	88 23       	and	r24, r24
    4ae2:	2c f4       	brge	.+10     	; 0x4aee <main+0xb2>
		__ticks = 1;
    4ae4:	81 e0       	ldi	r24, 0x01	; 1
    4ae6:	90 e0       	ldi	r25, 0x00	; 0
    4ae8:	9a a3       	std	Y+34, r25	; 0x22
    4aea:	89 a3       	std	Y+33, r24	; 0x21
    4aec:	3f c0       	rjmp	.+126    	; 0x4b6c <main+0x130>
	else if (__tmp > 65535)
    4aee:	6b a1       	ldd	r22, Y+35	; 0x23
    4af0:	7c a1       	ldd	r23, Y+36	; 0x24
    4af2:	8d a1       	ldd	r24, Y+37	; 0x25
    4af4:	9e a1       	ldd	r25, Y+38	; 0x26
    4af6:	20 e0       	ldi	r18, 0x00	; 0
    4af8:	3f ef       	ldi	r19, 0xFF	; 255
    4afa:	4f e7       	ldi	r20, 0x7F	; 127
    4afc:	57 e4       	ldi	r21, 0x47	; 71
    4afe:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    4b02:	18 16       	cp	r1, r24
    4b04:	4c f5       	brge	.+82     	; 0x4b58 <main+0x11c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b06:	6f a1       	ldd	r22, Y+39	; 0x27
    4b08:	78 a5       	ldd	r23, Y+40	; 0x28
    4b0a:	89 a5       	ldd	r24, Y+41	; 0x29
    4b0c:	9a a5       	ldd	r25, Y+42	; 0x2a
    4b0e:	20 e0       	ldi	r18, 0x00	; 0
    4b10:	30 e0       	ldi	r19, 0x00	; 0
    4b12:	40 e2       	ldi	r20, 0x20	; 32
    4b14:	51 e4       	ldi	r21, 0x41	; 65
    4b16:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    4b1a:	dc 01       	movw	r26, r24
    4b1c:	cb 01       	movw	r24, r22
    4b1e:	bc 01       	movw	r22, r24
    4b20:	cd 01       	movw	r24, r26
    4b22:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4b26:	dc 01       	movw	r26, r24
    4b28:	cb 01       	movw	r24, r22
    4b2a:	9a a3       	std	Y+34, r25	; 0x22
    4b2c:	89 a3       	std	Y+33, r24	; 0x21
    4b2e:	0f c0       	rjmp	.+30     	; 0x4b4e <main+0x112>
    4b30:	88 ec       	ldi	r24, 0xC8	; 200
    4b32:	90 e0       	ldi	r25, 0x00	; 0
    4b34:	98 a3       	std	Y+32, r25	; 0x20
    4b36:	8f 8f       	std	Y+31, r24	; 0x1f
    4b38:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4b3a:	98 a1       	ldd	r25, Y+32	; 0x20
    4b3c:	01 97       	sbiw	r24, 0x01	; 1
    4b3e:	f1 f7       	brne	.-4      	; 0x4b3c <main+0x100>
    4b40:	98 a3       	std	Y+32, r25	; 0x20
    4b42:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b44:	89 a1       	ldd	r24, Y+33	; 0x21
    4b46:	9a a1       	ldd	r25, Y+34	; 0x22
    4b48:	01 97       	sbiw	r24, 0x01	; 1
    4b4a:	9a a3       	std	Y+34, r25	; 0x22
    4b4c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b4e:	89 a1       	ldd	r24, Y+33	; 0x21
    4b50:	9a a1       	ldd	r25, Y+34	; 0x22
    4b52:	00 97       	sbiw	r24, 0x00	; 0
    4b54:	69 f7       	brne	.-38     	; 0x4b30 <main+0xf4>
    4b56:	14 c0       	rjmp	.+40     	; 0x4b80 <main+0x144>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b58:	6b a1       	ldd	r22, Y+35	; 0x23
    4b5a:	7c a1       	ldd	r23, Y+36	; 0x24
    4b5c:	8d a1       	ldd	r24, Y+37	; 0x25
    4b5e:	9e a1       	ldd	r25, Y+38	; 0x26
    4b60:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4b64:	dc 01       	movw	r26, r24
    4b66:	cb 01       	movw	r24, r22
    4b68:	9a a3       	std	Y+34, r25	; 0x22
    4b6a:	89 a3       	std	Y+33, r24	; 0x21
    4b6c:	89 a1       	ldd	r24, Y+33	; 0x21
    4b6e:	9a a1       	ldd	r25, Y+34	; 0x22
    4b70:	9e 8f       	std	Y+30, r25	; 0x1e
    4b72:	8d 8f       	std	Y+29, r24	; 0x1d
    4b74:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4b76:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4b78:	01 97       	sbiw	r24, 0x01	; 1
    4b7a:	f1 f7       	brne	.-4      	; 0x4b78 <main+0x13c>
    4b7c:	9e 8f       	std	Y+30, r25	; 0x1e
    4b7e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1500);
	LCD_Clear();
    4b80:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
	LCD_Goto(1,1);
    4b84:	81 e0       	ldi	r24, 0x01	; 1
    4b86:	61 e0       	ldi	r22, 0x01	; 1
    4b88:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
	LCD_WriteString("===HOME PAGE!===");
    4b8c:	8f e7       	ldi	r24, 0x7F	; 127
    4b8e:	90 e0       	ldi	r25, 0x00	; 0
    4b90:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
	LCD_Goto(2,1);
    4b94:	82 e0       	ldi	r24, 0x02	; 2
    4b96:	61 e0       	ldi	r22, 0x01	; 1
    4b98:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
	LCD_WriteString("================");
    4b9c:	80 e9       	ldi	r24, 0x90	; 144
    4b9e:	90 e0       	ldi	r25, 0x00	; 0
    4ba0:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    4ba4:	80 e0       	ldi	r24, 0x00	; 0
    4ba6:	90 e8       	ldi	r25, 0x80	; 128
    4ba8:	ab eb       	ldi	r26, 0xBB	; 187
    4baa:	b4 e4       	ldi	r27, 0x44	; 68
    4bac:	89 8f       	std	Y+25, r24	; 0x19
    4bae:	9a 8f       	std	Y+26, r25	; 0x1a
    4bb0:	ab 8f       	std	Y+27, r26	; 0x1b
    4bb2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4bb4:	69 8d       	ldd	r22, Y+25	; 0x19
    4bb6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4bb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4bba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4bbc:	20 e0       	ldi	r18, 0x00	; 0
    4bbe:	30 e0       	ldi	r19, 0x00	; 0
    4bc0:	4a ef       	ldi	r20, 0xFA	; 250
    4bc2:	54 e4       	ldi	r21, 0x44	; 68
    4bc4:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    4bc8:	dc 01       	movw	r26, r24
    4bca:	cb 01       	movw	r24, r22
    4bcc:	8d 8b       	std	Y+21, r24	; 0x15
    4bce:	9e 8b       	std	Y+22, r25	; 0x16
    4bd0:	af 8b       	std	Y+23, r26	; 0x17
    4bd2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4bd4:	6d 89       	ldd	r22, Y+21	; 0x15
    4bd6:	7e 89       	ldd	r23, Y+22	; 0x16
    4bd8:	8f 89       	ldd	r24, Y+23	; 0x17
    4bda:	98 8d       	ldd	r25, Y+24	; 0x18
    4bdc:	20 e0       	ldi	r18, 0x00	; 0
    4bde:	30 e0       	ldi	r19, 0x00	; 0
    4be0:	40 e8       	ldi	r20, 0x80	; 128
    4be2:	5f e3       	ldi	r21, 0x3F	; 63
    4be4:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    4be8:	88 23       	and	r24, r24
    4bea:	2c f4       	brge	.+10     	; 0x4bf6 <main+0x1ba>
		__ticks = 1;
    4bec:	81 e0       	ldi	r24, 0x01	; 1
    4bee:	90 e0       	ldi	r25, 0x00	; 0
    4bf0:	9c 8b       	std	Y+20, r25	; 0x14
    4bf2:	8b 8b       	std	Y+19, r24	; 0x13
    4bf4:	3f c0       	rjmp	.+126    	; 0x4c74 <main+0x238>
	else if (__tmp > 65535)
    4bf6:	6d 89       	ldd	r22, Y+21	; 0x15
    4bf8:	7e 89       	ldd	r23, Y+22	; 0x16
    4bfa:	8f 89       	ldd	r24, Y+23	; 0x17
    4bfc:	98 8d       	ldd	r25, Y+24	; 0x18
    4bfe:	20 e0       	ldi	r18, 0x00	; 0
    4c00:	3f ef       	ldi	r19, 0xFF	; 255
    4c02:	4f e7       	ldi	r20, 0x7F	; 127
    4c04:	57 e4       	ldi	r21, 0x47	; 71
    4c06:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    4c0a:	18 16       	cp	r1, r24
    4c0c:	4c f5       	brge	.+82     	; 0x4c60 <main+0x224>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c0e:	69 8d       	ldd	r22, Y+25	; 0x19
    4c10:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4c12:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4c14:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4c16:	20 e0       	ldi	r18, 0x00	; 0
    4c18:	30 e0       	ldi	r19, 0x00	; 0
    4c1a:	40 e2       	ldi	r20, 0x20	; 32
    4c1c:	51 e4       	ldi	r21, 0x41	; 65
    4c1e:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    4c22:	dc 01       	movw	r26, r24
    4c24:	cb 01       	movw	r24, r22
    4c26:	bc 01       	movw	r22, r24
    4c28:	cd 01       	movw	r24, r26
    4c2a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4c2e:	dc 01       	movw	r26, r24
    4c30:	cb 01       	movw	r24, r22
    4c32:	9c 8b       	std	Y+20, r25	; 0x14
    4c34:	8b 8b       	std	Y+19, r24	; 0x13
    4c36:	0f c0       	rjmp	.+30     	; 0x4c56 <main+0x21a>
    4c38:	88 ec       	ldi	r24, 0xC8	; 200
    4c3a:	90 e0       	ldi	r25, 0x00	; 0
    4c3c:	9a 8b       	std	Y+18, r25	; 0x12
    4c3e:	89 8b       	std	Y+17, r24	; 0x11
    4c40:	89 89       	ldd	r24, Y+17	; 0x11
    4c42:	9a 89       	ldd	r25, Y+18	; 0x12
    4c44:	01 97       	sbiw	r24, 0x01	; 1
    4c46:	f1 f7       	brne	.-4      	; 0x4c44 <main+0x208>
    4c48:	9a 8b       	std	Y+18, r25	; 0x12
    4c4a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c4c:	8b 89       	ldd	r24, Y+19	; 0x13
    4c4e:	9c 89       	ldd	r25, Y+20	; 0x14
    4c50:	01 97       	sbiw	r24, 0x01	; 1
    4c52:	9c 8b       	std	Y+20, r25	; 0x14
    4c54:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c56:	8b 89       	ldd	r24, Y+19	; 0x13
    4c58:	9c 89       	ldd	r25, Y+20	; 0x14
    4c5a:	00 97       	sbiw	r24, 0x00	; 0
    4c5c:	69 f7       	brne	.-38     	; 0x4c38 <main+0x1fc>
    4c5e:	14 c0       	rjmp	.+40     	; 0x4c88 <main+0x24c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c60:	6d 89       	ldd	r22, Y+21	; 0x15
    4c62:	7e 89       	ldd	r23, Y+22	; 0x16
    4c64:	8f 89       	ldd	r24, Y+23	; 0x17
    4c66:	98 8d       	ldd	r25, Y+24	; 0x18
    4c68:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4c6c:	dc 01       	movw	r26, r24
    4c6e:	cb 01       	movw	r24, r22
    4c70:	9c 8b       	std	Y+20, r25	; 0x14
    4c72:	8b 8b       	std	Y+19, r24	; 0x13
    4c74:	8b 89       	ldd	r24, Y+19	; 0x13
    4c76:	9c 89       	ldd	r25, Y+20	; 0x14
    4c78:	98 8b       	std	Y+16, r25	; 0x10
    4c7a:	8f 87       	std	Y+15, r24	; 0x0f
    4c7c:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c7e:	98 89       	ldd	r25, Y+16	; 0x10
    4c80:	01 97       	sbiw	r24, 0x01	; 1
    4c82:	f1 f7       	brne	.-4      	; 0x4c80 <main+0x244>
    4c84:	98 8b       	std	Y+16, r25	; 0x10
    4c86:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1500);
	LCD_Clear();
    4c88:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
	LCD_Goto(1,1);
    4c8c:	81 e0       	ldi	r24, 0x01	; 1
    4c8e:	61 e0       	ldi	r22, 0x01	; 1
    4c90:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
	LCD_WriteString("1-CONTROL");
    4c94:	81 ea       	ldi	r24, 0xA1	; 161
    4c96:	90 e0       	ldi	r25, 0x00	; 0
    4c98:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
	LCD_Goto(2,1);
    4c9c:	82 e0       	ldi	r24, 0x02	; 2
    4c9e:	61 e0       	ldi	r22, 0x01	; 1
    4ca0:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
	LCD_WriteString("2-STATUS");
    4ca4:	8b ea       	ldi	r24, 0xAB	; 171
    4ca6:	90 e0       	ldi	r25, 0x00	; 0
    4ca8:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>

	while(1){
        // Get the pressed key
		Key = KeyBad_uint8GetKey();
    4cac:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <KeyBad_uint8GetKey>
    4cb0:	8d a7       	std	Y+45, r24	; 0x2d

		if (Key != 'z')
    4cb2:	8d a5       	ldd	r24, Y+45	; 0x2d
    4cb4:	8a 37       	cpi	r24, 0x7A	; 122
    4cb6:	d1 f3       	breq	.-12     	; 0x4cac <main+0x270>
		{
			if (Condition == 1){   // Always true -> Main Menu
    4cb8:	8b a5       	ldd	r24, Y+43	; 0x2b
    4cba:	81 30       	cpi	r24, 0x01	; 1
    4cbc:	09 f0       	breq	.+2      	; 0x4cc0 <main+0x284>
    4cbe:	af c0       	rjmp	.+350    	; 0x4e1e <main+0x3e2>
				if (Key == '1'){
    4cc0:	8d a5       	ldd	r24, Y+45	; 0x2d
    4cc2:	81 33       	cpi	r24, 0x31	; 49
    4cc4:	29 f4       	brne	.+10     	; 0x4cd0 <main+0x294>
					Condition = 2; //Go To Control Menu
    4cc6:	82 e0       	ldi	r24, 0x02	; 2
    4cc8:	8b a7       	std	Y+43, r24	; 0x2b
					Flag = 2 ;
    4cca:	82 e0       	ldi	r24, 0x02	; 2
    4ccc:	8c a7       	std	Y+44, r24	; 0x2c
    4cce:	c4 c0       	rjmp	.+392    	; 0x4e58 <main+0x41c>
				}
				else if (Key == '2'){
    4cd0:	8d a5       	ldd	r24, Y+45	; 0x2d
    4cd2:	82 33       	cpi	r24, 0x32	; 50
    4cd4:	29 f4       	brne	.+10     	; 0x4ce0 <main+0x2a4>
					Condition  = 3; //Go To Status Menu
    4cd6:	83 e0       	ldi	r24, 0x03	; 3
    4cd8:	8b a7       	std	Y+43, r24	; 0x2b
					Flag = 3;
    4cda:	83 e0       	ldi	r24, 0x03	; 3
    4cdc:	8c a7       	std	Y+44, r24	; 0x2c
    4cde:	bc c0       	rjmp	.+376    	; 0x4e58 <main+0x41c>
				}
				else if (Key == 'c'){
    4ce0:	8d a5       	ldd	r24, Y+45	; 0x2d
    4ce2:	83 36       	cpi	r24, 0x63	; 99
    4ce4:	09 f0       	breq	.+2      	; 0x4ce8 <main+0x2ac>
    4ce6:	b8 c0       	rjmp	.+368    	; 0x4e58 <main+0x41c>
								LCD_Clear();
    4ce8:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
								LCD_Goto(1,1);
    4cec:	81 e0       	ldi	r24, 0x01	; 1
    4cee:	61 e0       	ldi	r22, 0x01	; 1
    4cf0:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
								//LCD_WriteString("1234567890123456");
								LCD_WriteString("PROJCET->CLOSING");
    4cf4:	84 eb       	ldi	r24, 0xB4	; 180
    4cf6:	90 e0       	ldi	r25, 0x00	; 0
    4cf8:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
								LCD_Goto(2,1);
    4cfc:	82 e0       	ldi	r24, 0x02	; 2
    4cfe:	61 e0       	ldi	r22, 0x01	; 1
    4d00:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
								LCD_WriteString("## THANK YOU! ##");
    4d04:	85 ec       	ldi	r24, 0xC5	; 197
    4d06:	90 e0       	ldi	r25, 0x00	; 0
    4d08:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    4d0c:	80 e0       	ldi	r24, 0x00	; 0
    4d0e:	90 e0       	ldi	r25, 0x00	; 0
    4d10:	aa ef       	ldi	r26, 0xFA	; 250
    4d12:	b4 e4       	ldi	r27, 0x44	; 68
    4d14:	8b 87       	std	Y+11, r24	; 0x0b
    4d16:	9c 87       	std	Y+12, r25	; 0x0c
    4d18:	ad 87       	std	Y+13, r26	; 0x0d
    4d1a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d1c:	6b 85       	ldd	r22, Y+11	; 0x0b
    4d1e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4d20:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d22:	9e 85       	ldd	r25, Y+14	; 0x0e
    4d24:	20 e0       	ldi	r18, 0x00	; 0
    4d26:	30 e0       	ldi	r19, 0x00	; 0
    4d28:	4a ef       	ldi	r20, 0xFA	; 250
    4d2a:	54 e4       	ldi	r21, 0x44	; 68
    4d2c:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    4d30:	dc 01       	movw	r26, r24
    4d32:	cb 01       	movw	r24, r22
    4d34:	8f 83       	std	Y+7, r24	; 0x07
    4d36:	98 87       	std	Y+8, r25	; 0x08
    4d38:	a9 87       	std	Y+9, r26	; 0x09
    4d3a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4d3c:	6f 81       	ldd	r22, Y+7	; 0x07
    4d3e:	78 85       	ldd	r23, Y+8	; 0x08
    4d40:	89 85       	ldd	r24, Y+9	; 0x09
    4d42:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d44:	20 e0       	ldi	r18, 0x00	; 0
    4d46:	30 e0       	ldi	r19, 0x00	; 0
    4d48:	40 e8       	ldi	r20, 0x80	; 128
    4d4a:	5f e3       	ldi	r21, 0x3F	; 63
    4d4c:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ltsf2>
    4d50:	88 23       	and	r24, r24
    4d52:	2c f4       	brge	.+10     	; 0x4d5e <main+0x322>
		__ticks = 1;
    4d54:	81 e0       	ldi	r24, 0x01	; 1
    4d56:	90 e0       	ldi	r25, 0x00	; 0
    4d58:	9e 83       	std	Y+6, r25	; 0x06
    4d5a:	8d 83       	std	Y+5, r24	; 0x05
    4d5c:	3f c0       	rjmp	.+126    	; 0x4ddc <main+0x3a0>
	else if (__tmp > 65535)
    4d5e:	6f 81       	ldd	r22, Y+7	; 0x07
    4d60:	78 85       	ldd	r23, Y+8	; 0x08
    4d62:	89 85       	ldd	r24, Y+9	; 0x09
    4d64:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d66:	20 e0       	ldi	r18, 0x00	; 0
    4d68:	3f ef       	ldi	r19, 0xFF	; 255
    4d6a:	4f e7       	ldi	r20, 0x7F	; 127
    4d6c:	57 e4       	ldi	r21, 0x47	; 71
    4d6e:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gtsf2>
    4d72:	18 16       	cp	r1, r24
    4d74:	4c f5       	brge	.+82     	; 0x4dc8 <main+0x38c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d76:	6b 85       	ldd	r22, Y+11	; 0x0b
    4d78:	7c 85       	ldd	r23, Y+12	; 0x0c
    4d7a:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d7c:	9e 85       	ldd	r25, Y+14	; 0x0e
    4d7e:	20 e0       	ldi	r18, 0x00	; 0
    4d80:	30 e0       	ldi	r19, 0x00	; 0
    4d82:	40 e2       	ldi	r20, 0x20	; 32
    4d84:	51 e4       	ldi	r21, 0x41	; 65
    4d86:	0e 94 57 10 	call	0x20ae	; 0x20ae <__mulsf3>
    4d8a:	dc 01       	movw	r26, r24
    4d8c:	cb 01       	movw	r24, r22
    4d8e:	bc 01       	movw	r22, r24
    4d90:	cd 01       	movw	r24, r26
    4d92:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4d96:	dc 01       	movw	r26, r24
    4d98:	cb 01       	movw	r24, r22
    4d9a:	9e 83       	std	Y+6, r25	; 0x06
    4d9c:	8d 83       	std	Y+5, r24	; 0x05
    4d9e:	0f c0       	rjmp	.+30     	; 0x4dbe <main+0x382>
    4da0:	88 ec       	ldi	r24, 0xC8	; 200
    4da2:	90 e0       	ldi	r25, 0x00	; 0
    4da4:	9c 83       	std	Y+4, r25	; 0x04
    4da6:	8b 83       	std	Y+3, r24	; 0x03
    4da8:	8b 81       	ldd	r24, Y+3	; 0x03
    4daa:	9c 81       	ldd	r25, Y+4	; 0x04
    4dac:	01 97       	sbiw	r24, 0x01	; 1
    4dae:	f1 f7       	brne	.-4      	; 0x4dac <main+0x370>
    4db0:	9c 83       	std	Y+4, r25	; 0x04
    4db2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4db4:	8d 81       	ldd	r24, Y+5	; 0x05
    4db6:	9e 81       	ldd	r25, Y+6	; 0x06
    4db8:	01 97       	sbiw	r24, 0x01	; 1
    4dba:	9e 83       	std	Y+6, r25	; 0x06
    4dbc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4dbe:	8d 81       	ldd	r24, Y+5	; 0x05
    4dc0:	9e 81       	ldd	r25, Y+6	; 0x06
    4dc2:	00 97       	sbiw	r24, 0x00	; 0
    4dc4:	69 f7       	brne	.-38     	; 0x4da0 <main+0x364>
    4dc6:	14 c0       	rjmp	.+40     	; 0x4df0 <main+0x3b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4dc8:	6f 81       	ldd	r22, Y+7	; 0x07
    4dca:	78 85       	ldd	r23, Y+8	; 0x08
    4dcc:	89 85       	ldd	r24, Y+9	; 0x09
    4dce:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dd0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4dd4:	dc 01       	movw	r26, r24
    4dd6:	cb 01       	movw	r24, r22
    4dd8:	9e 83       	std	Y+6, r25	; 0x06
    4dda:	8d 83       	std	Y+5, r24	; 0x05
    4ddc:	8d 81       	ldd	r24, Y+5	; 0x05
    4dde:	9e 81       	ldd	r25, Y+6	; 0x06
    4de0:	9a 83       	std	Y+2, r25	; 0x02
    4de2:	89 83       	std	Y+1, r24	; 0x01
    4de4:	89 81       	ldd	r24, Y+1	; 0x01
    4de6:	9a 81       	ldd	r25, Y+2	; 0x02
    4de8:	01 97       	sbiw	r24, 0x01	; 1
    4dea:	f1 f7       	brne	.-4      	; 0x4de8 <main+0x3ac>
    4dec:	9a 83       	std	Y+2, r25	; 0x02
    4dee:	89 83       	std	Y+1, r24	; 0x01
								_delay_ms(2000);
								LCD_Clear();
    4df0:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
								DC_Off(config);
    4df4:	6e a5       	ldd	r22, Y+46	; 0x2e
    4df6:	7f a5       	ldd	r23, Y+47	; 0x2f
    4df8:	88 a9       	ldd	r24, Y+48	; 0x30
    4dfa:	0e 94 d6 19 	call	0x33ac	; 0x33ac <DC_Off>
								LED_voidLedMode(DIO_u8PORTD,DIO_u8PIN2,LED_OFF);
    4dfe:	84 e0       	ldi	r24, 0x04	; 4
    4e00:	62 e0       	ldi	r22, 0x02	; 2
    4e02:	40 e0       	ldi	r20, 0x00	; 0
    4e04:	0e 94 39 1b 	call	0x3672	; 0x3672 <LED_voidLedMode>
    4e08:	80 e0       	ldi	r24, 0x00	; 0
    4e0a:	90 e0       	ldi	r25, 0x00	; 0
				}
				break;
			}
		}
	}
}
    4e0c:	e5 96       	adiw	r28, 0x35	; 53
    4e0e:	0f b6       	in	r0, 0x3f	; 63
    4e10:	f8 94       	cli
    4e12:	de bf       	out	0x3e, r29	; 62
    4e14:	0f be       	out	0x3f, r0	; 63
    4e16:	cd bf       	out	0x3d, r28	; 61
    4e18:	cf 91       	pop	r28
    4e1a:	df 91       	pop	r29
    4e1c:	08 95       	ret
								DC_Off(config);
								LED_voidLedMode(DIO_u8PORTD,DIO_u8PIN2,LED_OFF);
								break;
							}
			}
			else if (Condition == 2){
    4e1e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e20:	82 30       	cpi	r24, 0x02	; 2
    4e22:	61 f4       	brne	.+24     	; 0x4e3c <main+0x400>
				if (Key == '1'){
    4e24:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e26:	81 33       	cpi	r24, 0x31	; 49
    4e28:	19 f4       	brne	.+6      	; 0x4e30 <main+0x3f4>
					Condition = 21; // Go To LED_ MENU
    4e2a:	85 e1       	ldi	r24, 0x15	; 21
    4e2c:	8b a7       	std	Y+43, r24	; 0x2b
    4e2e:	14 c0       	rjmp	.+40     	; 0x4e58 <main+0x41c>
				}
				else if (Key == '2'){
    4e30:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e32:	82 33       	cpi	r24, 0x32	; 50
    4e34:	89 f4       	brne	.+34     	; 0x4e58 <main+0x41c>
					Condition = 22; // GO TO MOTOR MENU
    4e36:	86 e1       	ldi	r24, 0x16	; 22
    4e38:	8b a7       	std	Y+43, r24	; 0x2b
    4e3a:	0e c0       	rjmp	.+28     	; 0x4e58 <main+0x41c>
				}
			}
			else if (Condition == 3){
    4e3c:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e3e:	83 30       	cpi	r24, 0x03	; 3
    4e40:	59 f4       	brne	.+22     	; 0x4e58 <main+0x41c>
				if (Key == '1'){
    4e42:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e44:	81 33       	cpi	r24, 0x31	; 49
    4e46:	19 f4       	brne	.+6      	; 0x4e4e <main+0x412>
					Condition = 31; // LED Status
    4e48:	8f e1       	ldi	r24, 0x1F	; 31
    4e4a:	8b a7       	std	Y+43, r24	; 0x2b
    4e4c:	05 c0       	rjmp	.+10     	; 0x4e58 <main+0x41c>
				}
				else if (Key == '2'){
    4e4e:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e50:	82 33       	cpi	r24, 0x32	; 50
    4e52:	11 f4       	brne	.+4      	; 0x4e58 <main+0x41c>
					Condition = 32; // MOTOR Status
    4e54:	80 e2       	ldi	r24, 0x20	; 32
    4e56:	8b a7       	std	Y+43, r24	; 0x2b
				}
			}

			if (Key == 'c'){
    4e58:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e5a:	83 36       	cpi	r24, 0x63	; 99
    4e5c:	21 f5       	brne	.+72     	; 0x4ea6 <main+0x46a>
				if (Condition == 21 || Condition == 22){
    4e5e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e60:	85 31       	cpi	r24, 0x15	; 21
    4e62:	19 f0       	breq	.+6      	; 0x4e6a <main+0x42e>
    4e64:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e66:	86 31       	cpi	r24, 0x16	; 22
    4e68:	29 f4       	brne	.+10     	; 0x4e74 <main+0x438>
				Condition = 2; 		// Go To Control Menu
    4e6a:	82 e0       	ldi	r24, 0x02	; 2
    4e6c:	8b a7       	std	Y+43, r24	; 0x2b
				Flag = 2;
    4e6e:	82 e0       	ldi	r24, 0x02	; 2
    4e70:	8c a7       	std	Y+44, r24	; 0x2c
    4e72:	07 c0       	rjmp	.+14     	; 0x4e82 <main+0x446>
				}
				else if (Condition == 2){
    4e74:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e76:	82 30       	cpi	r24, 0x02	; 2
    4e78:	21 f4       	brne	.+8      	; 0x4e82 <main+0x446>
					Condition = 1 ;	// Go To Main Menu
    4e7a:	81 e0       	ldi	r24, 0x01	; 1
    4e7c:	8b a7       	std	Y+43, r24	; 0x2b
					Flag = 1;
    4e7e:	81 e0       	ldi	r24, 0x01	; 1
    4e80:	8c a7       	std	Y+44, r24	; 0x2c
				}
				if (Condition == 31 || Condition ==32){
    4e82:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e84:	8f 31       	cpi	r24, 0x1F	; 31
    4e86:	19 f0       	breq	.+6      	; 0x4e8e <main+0x452>
    4e88:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e8a:	80 32       	cpi	r24, 0x20	; 32
    4e8c:	29 f4       	brne	.+10     	; 0x4e98 <main+0x45c>
					Condition =3;	// Go To Status Menu
    4e8e:	83 e0       	ldi	r24, 0x03	; 3
    4e90:	8b a7       	std	Y+43, r24	; 0x2b
					Flag = 3;
    4e92:	83 e0       	ldi	r24, 0x03	; 3
    4e94:	8c a7       	std	Y+44, r24	; 0x2c
    4e96:	07 c0       	rjmp	.+14     	; 0x4ea6 <main+0x46a>
				}
				else if (Condition == 3){
    4e98:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e9a:	83 30       	cpi	r24, 0x03	; 3
    4e9c:	21 f4       	brne	.+8      	; 0x4ea6 <main+0x46a>
					Condition = 1;	// Go To Main Menu
    4e9e:	81 e0       	ldi	r24, 0x01	; 1
    4ea0:	8b a7       	std	Y+43, r24	; 0x2b
					Flag = 1;
    4ea2:	81 e0       	ldi	r24, 0x01	; 1
    4ea4:	8c a7       	std	Y+44, r24	; 0x2c
				}
			}

			switch (Condition){
    4ea6:	8b a5       	ldd	r24, Y+43	; 0x2b
    4ea8:	28 2f       	mov	r18, r24
    4eaa:	30 e0       	ldi	r19, 0x00	; 0
    4eac:	3d ab       	std	Y+53, r19	; 0x35
    4eae:	2c ab       	std	Y+52, r18	; 0x34
    4eb0:	8c a9       	ldd	r24, Y+52	; 0x34
    4eb2:	9d a9       	ldd	r25, Y+53	; 0x35
    4eb4:	85 31       	cpi	r24, 0x15	; 21
    4eb6:	91 05       	cpc	r25, r1
    4eb8:	09 f4       	brne	.+2      	; 0x4ebc <main+0x480>
    4eba:	6e c0       	rjmp	.+220    	; 0x4f98 <main+0x55c>
    4ebc:	2c a9       	ldd	r18, Y+52	; 0x34
    4ebe:	3d a9       	ldd	r19, Y+53	; 0x35
    4ec0:	26 31       	cpi	r18, 0x16	; 22
    4ec2:	31 05       	cpc	r19, r1
    4ec4:	8c f4       	brge	.+34     	; 0x4ee8 <main+0x4ac>
    4ec6:	8c a9       	ldd	r24, Y+52	; 0x34
    4ec8:	9d a9       	ldd	r25, Y+53	; 0x35
    4eca:	82 30       	cpi	r24, 0x02	; 2
    4ecc:	91 05       	cpc	r25, r1
    4ece:	91 f1       	breq	.+100    	; 0x4f34 <main+0x4f8>
    4ed0:	2c a9       	ldd	r18, Y+52	; 0x34
    4ed2:	3d a9       	ldd	r19, Y+53	; 0x35
    4ed4:	23 30       	cpi	r18, 0x03	; 3
    4ed6:	31 05       	cpc	r19, r1
    4ed8:	09 f4       	brne	.+2      	; 0x4edc <main+0x4a0>
    4eda:	45 c0       	rjmp	.+138    	; 0x4f66 <main+0x52a>
    4edc:	8c a9       	ldd	r24, Y+52	; 0x34
    4ede:	9d a9       	ldd	r25, Y+53	; 0x35
    4ee0:	81 30       	cpi	r24, 0x01	; 1
    4ee2:	91 05       	cpc	r25, r1
    4ee4:	a1 f0       	breq	.+40     	; 0x4f0e <main+0x4d2>
    4ee6:	e2 ce       	rjmp	.-572    	; 0x4cac <main+0x270>
    4ee8:	2c a9       	ldd	r18, Y+52	; 0x34
    4eea:	3d a9       	ldd	r19, Y+53	; 0x35
    4eec:	2f 31       	cpi	r18, 0x1F	; 31
    4eee:	31 05       	cpc	r19, r1
    4ef0:	09 f4       	brne	.+2      	; 0x4ef4 <main+0x4b8>
    4ef2:	cd c0       	rjmp	.+410    	; 0x508e <main+0x652>
    4ef4:	8c a9       	ldd	r24, Y+52	; 0x34
    4ef6:	9d a9       	ldd	r25, Y+53	; 0x35
    4ef8:	80 32       	cpi	r24, 0x20	; 32
    4efa:	91 05       	cpc	r25, r1
    4efc:	09 f4       	brne	.+2      	; 0x4f00 <main+0x4c4>
    4efe:	ed c0       	rjmp	.+474    	; 0x50da <main+0x69e>
    4f00:	2c a9       	ldd	r18, Y+52	; 0x34
    4f02:	3d a9       	ldd	r19, Y+53	; 0x35
    4f04:	26 31       	cpi	r18, 0x16	; 22
    4f06:	31 05       	cpc	r19, r1
    4f08:	09 f4       	brne	.+2      	; 0x4f0c <main+0x4d0>
    4f0a:	7b c0       	rjmp	.+246    	; 0x5002 <main+0x5c6>
    4f0c:	cf ce       	rjmp	.-610    	; 0x4cac <main+0x270>

				/***************************/
				/*****     MAIN MENU   *****/
			 	/***************************/
			case 1:
				LCD_Clear();
    4f0e:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
				LCD_Goto(1,1);
    4f12:	81 e0       	ldi	r24, 0x01	; 1
    4f14:	61 e0       	ldi	r22, 0x01	; 1
    4f16:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
				LCD_WriteString("1-CONTROL");
    4f1a:	81 ea       	ldi	r24, 0xA1	; 161
    4f1c:	90 e0       	ldi	r25, 0x00	; 0
    4f1e:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
				LCD_Goto(2,1);
    4f22:	82 e0       	ldi	r24, 0x02	; 2
    4f24:	61 e0       	ldi	r22, 0x01	; 1
    4f26:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
				LCD_WriteString("2-STATUS");
    4f2a:	8b ea       	ldi	r24, 0xAB	; 171
    4f2c:	90 e0       	ldi	r25, 0x00	; 0
    4f2e:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    4f32:	bc ce       	rjmp	.-648    	; 0x4cac <main+0x270>

				/***************************/
				/*****   CONTROL MENU  *****/
				/***************************/
			case 2:
				if (Flag ==2){
    4f34:	8c a5       	ldd	r24, Y+44	; 0x2c
    4f36:	82 30       	cpi	r24, 0x02	; 2
    4f38:	09 f0       	breq	.+2      	; 0x4f3c <main+0x500>
    4f3a:	b8 ce       	rjmp	.-656    	; 0x4cac <main+0x270>
					LCD_Clear();
    4f3c:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
					LCD_Goto(1,1);
    4f40:	81 e0       	ldi	r24, 0x01	; 1
    4f42:	61 e0       	ldi	r22, 0x01	; 1
    4f44:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("1- CONTROL LED");
    4f48:	86 ed       	ldi	r24, 0xD6	; 214
    4f4a:	90 e0       	ldi	r25, 0x00	; 0
    4f4c:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					LCD_Goto(2,1);
    4f50:	82 e0       	ldi	r24, 0x02	; 2
    4f52:	61 e0       	ldi	r22, 0x01	; 1
    4f54:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("2- CONTROL MOTOR");
    4f58:	85 ee       	ldi	r24, 0xE5	; 229
    4f5a:	90 e0       	ldi	r25, 0x00	; 0
    4f5c:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					Flag = 3;
    4f60:	83 e0       	ldi	r24, 0x03	; 3
    4f62:	8c a7       	std	Y+44, r24	; 0x2c
    4f64:	a3 ce       	rjmp	.-698    	; 0x4cac <main+0x270>

				/***************************/
				/*****   STATUS MENU   *****/
				/***************************/
			case 3:
				if (Flag == 3){
    4f66:	8c a5       	ldd	r24, Y+44	; 0x2c
    4f68:	83 30       	cpi	r24, 0x03	; 3
    4f6a:	09 f0       	breq	.+2      	; 0x4f6e <main+0x532>
    4f6c:	9f ce       	rjmp	.-706    	; 0x4cac <main+0x270>

					LCD_Clear();
    4f6e:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
					LCD_Goto(1,1);
    4f72:	81 e0       	ldi	r24, 0x01	; 1
    4f74:	61 e0       	ldi	r22, 0x01	; 1
    4f76:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("1- LED STATUS");
    4f7a:	86 ef       	ldi	r24, 0xF6	; 246
    4f7c:	90 e0       	ldi	r25, 0x00	; 0
    4f7e:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					LCD_Goto(2,1);
    4f82:	82 e0       	ldi	r24, 0x02	; 2
    4f84:	61 e0       	ldi	r22, 0x01	; 1
    4f86:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("2- MOTOR STATUS");
    4f8a:	84 e0       	ldi	r24, 0x04	; 4
    4f8c:	91 e0       	ldi	r25, 0x01	; 1
    4f8e:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					Flag = 3;
    4f92:	83 e0       	ldi	r24, 0x03	; 3
    4f94:	8c a7       	std	Y+44, r24	; 0x2c
    4f96:	8a ce       	rjmp	.-748    	; 0x4cac <main+0x270>

				/***************************/
				/*****     LED MENU    *****/
				/***************************/
			case 21:
				if (Flag == 3 ){
    4f98:	8c a5       	ldd	r24, Y+44	; 0x2c
    4f9a:	83 30       	cpi	r24, 0x03	; 3
    4f9c:	09 f0       	breq	.+2      	; 0x4fa0 <main+0x564>
    4f9e:	86 ce       	rjmp	.-756    	; 0x4cac <main+0x270>

					LCD_Clear();
    4fa0:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
					LCD_Goto(1,1);
    4fa4:	81 e0       	ldi	r24, 0x01	; 1
    4fa6:	61 e0       	ldi	r22, 0x01	; 1
    4fa8:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("1- LED ON");
    4fac:	84 e1       	ldi	r24, 0x14	; 20
    4fae:	91 e0       	ldi	r25, 0x01	; 1
    4fb0:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					LCD_Goto(2,1);
    4fb4:	82 e0       	ldi	r24, 0x02	; 2
    4fb6:	61 e0       	ldi	r22, 0x01	; 1
    4fb8:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("2- LED OFF");
    4fbc:	8e e1       	ldi	r24, 0x1E	; 30
    4fbe:	91 e0       	ldi	r25, 0x01	; 1
    4fc0:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					Flag = 4;
    4fc4:	84 e0       	ldi	r24, 0x04	; 4
    4fc6:	8c a7       	std	Y+44, r24	; 0x2c

					while (1){
						Key= KeyBad_uint8GetKey();
    4fc8:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <KeyBad_uint8GetKey>
    4fcc:	8d a7       	std	Y+45, r24	; 0x2d
						if (Key != 'z'){
    4fce:	8d a5       	ldd	r24, Y+45	; 0x2d
    4fd0:	8a 37       	cpi	r24, 0x7A	; 122
    4fd2:	d1 f3       	breq	.-12     	; 0x4fc8 <main+0x58c>
							if (Key == '1'){
    4fd4:	8d a5       	ldd	r24, Y+45	; 0x2d
    4fd6:	81 33       	cpi	r24, 0x31	; 49
    4fd8:	31 f4       	brne	.+12     	; 0x4fe6 <main+0x5aa>
								LED_voidLedMode(DIO_u8PORTD,DIO_u8PIN2,LED_ON); 	// LED ON
    4fda:	84 e0       	ldi	r24, 0x04	; 4
    4fdc:	62 e0       	ldi	r22, 0x02	; 2
    4fde:	41 e0       	ldi	r20, 0x01	; 1
    4fe0:	0e 94 39 1b 	call	0x3672	; 0x3672 <LED_voidLedMode>
    4fe4:	f1 cf       	rjmp	.-30     	; 0x4fc8 <main+0x58c>
							}
							else if (Key == '2'){
    4fe6:	8d a5       	ldd	r24, Y+45	; 0x2d
    4fe8:	82 33       	cpi	r24, 0x32	; 50
    4fea:	31 f4       	brne	.+12     	; 0x4ff8 <main+0x5bc>
								LED_voidLedMode(DIO_u8PORTD,DIO_u8PIN2,LED_OFF);	// LED OFF
    4fec:	84 e0       	ldi	r24, 0x04	; 4
    4fee:	62 e0       	ldi	r22, 0x02	; 2
    4ff0:	40 e0       	ldi	r20, 0x00	; 0
    4ff2:	0e 94 39 1b 	call	0x3672	; 0x3672 <LED_voidLedMode>
    4ff6:	e8 cf       	rjmp	.-48     	; 0x4fc8 <main+0x58c>
							}
							else if (Key == 'c'){				// TO Stop taking input from user and go our of this loop
    4ff8:	8d a5       	ldd	r24, Y+45	; 0x2d
    4ffa:	83 36       	cpi	r24, 0x63	; 99
    4ffc:	09 f4       	brne	.+2      	; 0x5000 <main+0x5c4>
    4ffe:	56 ce       	rjmp	.-852    	; 0x4cac <main+0x270>
    5000:	e3 cf       	rjmp	.-58     	; 0x4fc8 <main+0x58c>

				/***************************/
				/*****  DC MOTOR MENU  *****/
				/***************************/
			case 22:
				if (Flag == 3 ){
    5002:	8c a5       	ldd	r24, Y+44	; 0x2c
    5004:	83 30       	cpi	r24, 0x03	; 3
    5006:	09 f0       	breq	.+2      	; 0x500a <main+0x5ce>
    5008:	51 ce       	rjmp	.-862    	; 0x4cac <main+0x270>
					LCD_Clear();
    500a:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
					LCD_Goto(1,1);
    500e:	81 e0       	ldi	r24, 0x01	; 1
    5010:	61 e0       	ldi	r22, 0x01	; 1
    5012:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("1- CW");
    5016:	89 e2       	ldi	r24, 0x29	; 41
    5018:	91 e0       	ldi	r25, 0x01	; 1
    501a:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					LCD_Goto(2,1);
    501e:	82 e0       	ldi	r24, 0x02	; 2
    5020:	61 e0       	ldi	r22, 0x01	; 1
    5022:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("2- CCW");
    5026:	8f e2       	ldi	r24, 0x2F	; 47
    5028:	91 e0       	ldi	r25, 0x01	; 1
    502a:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					LCD_Goto(1,10);
    502e:	81 e0       	ldi	r24, 0x01	; 1
    5030:	6a e0       	ldi	r22, 0x0A	; 10
    5032:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
					LCD_WriteString("3- OFF");
    5036:	86 e3       	ldi	r24, 0x36	; 54
    5038:	91 e0       	ldi	r25, 0x01	; 1
    503a:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					Flag = 4 ;
    503e:	84 e0       	ldi	r24, 0x04	; 4
    5040:	8c a7       	std	Y+44, r24	; 0x2c

					while (1){
						Key = KeyBad_uint8GetKey();
    5042:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <KeyBad_uint8GetKey>
    5046:	8d a7       	std	Y+45, r24	; 0x2d
						if (Key != 'z'){
    5048:	8d a5       	ldd	r24, Y+45	; 0x2d
    504a:	8a 37       	cpi	r24, 0x7A	; 122
    504c:	d1 f3       	breq	.-12     	; 0x5042 <main+0x606>
							if (Key == '1'){
    504e:	8d a5       	ldd	r24, Y+45	; 0x2d
    5050:	81 33       	cpi	r24, 0x31	; 49
    5052:	31 f4       	brne	.+12     	; 0x5060 <main+0x624>
								DC_Cw(config);				// DC MOTOR Rotate Clock wise
    5054:	6e a5       	ldd	r22, Y+46	; 0x2e
    5056:	7f a5       	ldd	r23, Y+47	; 0x2f
    5058:	88 a9       	ldd	r24, Y+48	; 0x30
    505a:	0e 94 a0 19 	call	0x3340	; 0x3340 <DC_Cw>
    505e:	f1 cf       	rjmp	.-30     	; 0x5042 <main+0x606>

							}
							else if (Key == '2'){
    5060:	8d a5       	ldd	r24, Y+45	; 0x2d
    5062:	82 33       	cpi	r24, 0x32	; 50
    5064:	31 f4       	brne	.+12     	; 0x5072 <main+0x636>
							DC_Ccw(config);  				// DC MOTOR Rotates Counter Clock wise
    5066:	6e a5       	ldd	r22, Y+46	; 0x2e
    5068:	7f a5       	ldd	r23, Y+47	; 0x2f
    506a:	88 a9       	ldd	r24, Y+48	; 0x30
    506c:	0e 94 bb 19 	call	0x3376	; 0x3376 <DC_Ccw>
    5070:	e8 cf       	rjmp	.-48     	; 0x5042 <main+0x606>

							}
							else if (Key == '3'){
    5072:	8d a5       	ldd	r24, Y+45	; 0x2d
    5074:	83 33       	cpi	r24, 0x33	; 51
    5076:	31 f4       	brne	.+12     	; 0x5084 <main+0x648>
								DC_Off(config);				// DC MOTOR STOP Rotating
    5078:	6e a5       	ldd	r22, Y+46	; 0x2e
    507a:	7f a5       	ldd	r23, Y+47	; 0x2f
    507c:	88 a9       	ldd	r24, Y+48	; 0x30
    507e:	0e 94 d6 19 	call	0x33ac	; 0x33ac <DC_Off>
    5082:	df cf       	rjmp	.-66     	; 0x5042 <main+0x606>
							}
							else if (Key == 'c'){			// TO Stop taking input from user and go our of this loop
    5084:	8d a5       	ldd	r24, Y+45	; 0x2d
    5086:	83 36       	cpi	r24, 0x63	; 99
    5088:	09 f4       	brne	.+2      	; 0x508c <main+0x650>
    508a:	10 ce       	rjmp	.-992    	; 0x4cac <main+0x270>
    508c:	da cf       	rjmp	.-76     	; 0x5042 <main+0x606>

				/***************************/
				/*****   LED STATUS	   *****/
				/***************************/
			case 31:
				if (Flag == 3){
    508e:	8c a5       	ldd	r24, Y+44	; 0x2c
    5090:	83 30       	cpi	r24, 0x03	; 3
    5092:	09 f0       	breq	.+2      	; 0x5096 <main+0x65a>
    5094:	0b ce       	rjmp	.-1002   	; 0x4cac <main+0x270>
					LCD_Clear();
    5096:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
					uint8 x;
					DIO_u8GetPinValue_Store(DIO_u8PORTD,DIO_u8PIN2, &x);   	// Store the value of pin in integer x
    509a:	9e 01       	movw	r18, r28
    509c:	2f 5c       	subi	r18, 0xCF	; 207
    509e:	3f 4f       	sbci	r19, 0xFF	; 255
    50a0:	84 e0       	ldi	r24, 0x04	; 4
    50a2:	62 e0       	ldi	r22, 0x02	; 2
    50a4:	a9 01       	movw	r20, r18
    50a6:	0e 94 ff 18 	call	0x31fe	; 0x31fe <DIO_u8GetPinValue_Store>
					if (x == 0){
    50aa:	89 a9       	ldd	r24, Y+49	; 0x31
    50ac:	88 23       	and	r24, r24
    50ae:	41 f4       	brne	.+16     	; 0x50c0 <main+0x684>
						LCD_Goto(1,1);
    50b0:	81 e0       	ldi	r24, 0x01	; 1
    50b2:	61 e0       	ldi	r22, 0x01	; 1
    50b4:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
						LCD_WriteString("LED IS OFF ");
    50b8:	8d e3       	ldi	r24, 0x3D	; 61
    50ba:	91 e0       	ldi	r25, 0x01	; 1
    50bc:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
					}
					if (x == 1){
    50c0:	89 a9       	ldd	r24, Y+49	; 0x31
    50c2:	81 30       	cpi	r24, 0x01	; 1
    50c4:	09 f0       	breq	.+2      	; 0x50c8 <main+0x68c>
    50c6:	f2 cd       	rjmp	.-1052   	; 0x4cac <main+0x270>
						LCD_Goto(1,1);
    50c8:	81 e0       	ldi	r24, 0x01	; 1
    50ca:	61 e0       	ldi	r22, 0x01	; 1
    50cc:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
						LCD_WriteString("LED IS ON");
    50d0:	89 e4       	ldi	r24, 0x49	; 73
    50d2:	91 e0       	ldi	r25, 0x01	; 1
    50d4:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    50d8:	e9 cd       	rjmp	.-1070   	; 0x4cac <main+0x270>
				 /***************************/
				 /***** DC MOTOR STATUS *****/
				 /***************************/
			case 32:

				if (Flag == 3){
    50da:	8c a5       	ldd	r24, Y+44	; 0x2c
    50dc:	83 30       	cpi	r24, 0x03	; 3
    50de:	09 f0       	breq	.+2      	; 0x50e2 <main+0x6a6>
    50e0:	e5 cd       	rjmp	.-1078   	; 0x4cac <main+0x270>
					LCD_Clear();
    50e2:	0e 94 a8 24 	call	0x4950	; 0x4950 <LCD_Clear>
					uint8 y,z;
					DIO_u8GetPinValue_Store(DC_Port,DIO_u8PIN0,&y);				// To Store the Value of The pin 0
    50e6:	9e 01       	movw	r18, r28
    50e8:	2e 5c       	subi	r18, 0xCE	; 206
    50ea:	3f 4f       	sbci	r19, 0xFF	; 255
    50ec:	84 e0       	ldi	r24, 0x04	; 4
    50ee:	60 e0       	ldi	r22, 0x00	; 0
    50f0:	a9 01       	movw	r20, r18
    50f2:	0e 94 ff 18 	call	0x31fe	; 0x31fe <DIO_u8GetPinValue_Store>
					DIO_u8GetPinValue_Store(DC_Port,DIO_u8PIN1,&z);				// To Store the Value of The pin 1
    50f6:	9e 01       	movw	r18, r28
    50f8:	2d 5c       	subi	r18, 0xCD	; 205
    50fa:	3f 4f       	sbci	r19, 0xFF	; 255
    50fc:	84 e0       	ldi	r24, 0x04	; 4
    50fe:	61 e0       	ldi	r22, 0x01	; 1
    5100:	a9 01       	movw	r20, r18
    5102:	0e 94 ff 18 	call	0x31fe	; 0x31fe <DIO_u8GetPinValue_Store>
					if (y == 0 && z == 1 ){
    5106:	8a a9       	ldd	r24, Y+50	; 0x32
    5108:	88 23       	and	r24, r24
    510a:	61 f4       	brne	.+24     	; 0x5124 <main+0x6e8>
    510c:	8b a9       	ldd	r24, Y+51	; 0x33
    510e:	81 30       	cpi	r24, 0x01	; 1
    5110:	49 f4       	brne	.+18     	; 0x5124 <main+0x6e8>
						LCD_Goto(1,1);
    5112:	81 e0       	ldi	r24, 0x01	; 1
    5114:	61 e0       	ldi	r22, 0x01	; 1
    5116:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
						LCD_WriteString("THE MOTOR IS CW");
    511a:	83 e5       	ldi	r24, 0x53	; 83
    511c:	91 e0       	ldi	r25, 0x01	; 1
    511e:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    5122:	c4 cd       	rjmp	.-1144   	; 0x4cac <main+0x270>
					}
					else if (y == 1 && z == 0){
    5124:	8a a9       	ldd	r24, Y+50	; 0x32
    5126:	81 30       	cpi	r24, 0x01	; 1
    5128:	61 f4       	brne	.+24     	; 0x5142 <main+0x706>
    512a:	8b a9       	ldd	r24, Y+51	; 0x33
    512c:	88 23       	and	r24, r24
    512e:	49 f4       	brne	.+18     	; 0x5142 <main+0x706>
						LCD_Goto(1,1);
    5130:	81 e0       	ldi	r24, 0x01	; 1
    5132:	61 e0       	ldi	r22, 0x01	; 1
    5134:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
						LCD_WriteString("THE MOTOR IS CCW");
    5138:	83 e6       	ldi	r24, 0x63	; 99
    513a:	91 e0       	ldi	r25, 0x01	; 1
    513c:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    5140:	b5 cd       	rjmp	.-1174   	; 0x4cac <main+0x270>
					}
					else if (y == 0 && z == 0){
    5142:	8a a9       	ldd	r24, Y+50	; 0x32
    5144:	88 23       	and	r24, r24
    5146:	09 f0       	breq	.+2      	; 0x514a <main+0x70e>
    5148:	b1 cd       	rjmp	.-1182   	; 0x4cac <main+0x270>
    514a:	8b a9       	ldd	r24, Y+51	; 0x33
    514c:	88 23       	and	r24, r24
    514e:	09 f0       	breq	.+2      	; 0x5152 <main+0x716>
    5150:	ad cd       	rjmp	.-1190   	; 0x4cac <main+0x270>
						LCD_Goto(1,1);
    5152:	81 e0       	ldi	r24, 0x01	; 1
    5154:	61 e0       	ldi	r22, 0x01	; 1
    5156:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <LCD_Goto>
						LCD_WriteString("THE MOTOR IS OFF");
    515a:	84 e7       	ldi	r24, 0x74	; 116
    515c:	91 e0       	ldi	r25, 0x01	; 1
    515e:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <LCD_WriteString>
    5162:	a4 cd       	rjmp	.-1208   	; 0x4cac <main+0x270>

00005164 <__mulsi3>:
    5164:	62 9f       	mul	r22, r18
    5166:	d0 01       	movw	r26, r0
    5168:	73 9f       	mul	r23, r19
    516a:	f0 01       	movw	r30, r0
    516c:	82 9f       	mul	r24, r18
    516e:	e0 0d       	add	r30, r0
    5170:	f1 1d       	adc	r31, r1
    5172:	64 9f       	mul	r22, r20
    5174:	e0 0d       	add	r30, r0
    5176:	f1 1d       	adc	r31, r1
    5178:	92 9f       	mul	r25, r18
    517a:	f0 0d       	add	r31, r0
    517c:	83 9f       	mul	r24, r19
    517e:	f0 0d       	add	r31, r0
    5180:	74 9f       	mul	r23, r20
    5182:	f0 0d       	add	r31, r0
    5184:	65 9f       	mul	r22, r21
    5186:	f0 0d       	add	r31, r0
    5188:	99 27       	eor	r25, r25
    518a:	72 9f       	mul	r23, r18
    518c:	b0 0d       	add	r27, r0
    518e:	e1 1d       	adc	r30, r1
    5190:	f9 1f       	adc	r31, r25
    5192:	63 9f       	mul	r22, r19
    5194:	b0 0d       	add	r27, r0
    5196:	e1 1d       	adc	r30, r1
    5198:	f9 1f       	adc	r31, r25
    519a:	bd 01       	movw	r22, r26
    519c:	cf 01       	movw	r24, r30
    519e:	11 24       	eor	r1, r1
    51a0:	08 95       	ret

000051a2 <__divmodsi4>:
    51a2:	97 fb       	bst	r25, 7
    51a4:	09 2e       	mov	r0, r25
    51a6:	05 26       	eor	r0, r21
    51a8:	0e d0       	rcall	.+28     	; 0x51c6 <__divmodsi4_neg1>
    51aa:	57 fd       	sbrc	r21, 7
    51ac:	04 d0       	rcall	.+8      	; 0x51b6 <__divmodsi4_neg2>
    51ae:	14 d0       	rcall	.+40     	; 0x51d8 <__udivmodsi4>
    51b0:	0a d0       	rcall	.+20     	; 0x51c6 <__divmodsi4_neg1>
    51b2:	00 1c       	adc	r0, r0
    51b4:	38 f4       	brcc	.+14     	; 0x51c4 <__divmodsi4_exit>

000051b6 <__divmodsi4_neg2>:
    51b6:	50 95       	com	r21
    51b8:	40 95       	com	r20
    51ba:	30 95       	com	r19
    51bc:	21 95       	neg	r18
    51be:	3f 4f       	sbci	r19, 0xFF	; 255
    51c0:	4f 4f       	sbci	r20, 0xFF	; 255
    51c2:	5f 4f       	sbci	r21, 0xFF	; 255

000051c4 <__divmodsi4_exit>:
    51c4:	08 95       	ret

000051c6 <__divmodsi4_neg1>:
    51c6:	f6 f7       	brtc	.-4      	; 0x51c4 <__divmodsi4_exit>
    51c8:	90 95       	com	r25
    51ca:	80 95       	com	r24
    51cc:	70 95       	com	r23
    51ce:	61 95       	neg	r22
    51d0:	7f 4f       	sbci	r23, 0xFF	; 255
    51d2:	8f 4f       	sbci	r24, 0xFF	; 255
    51d4:	9f 4f       	sbci	r25, 0xFF	; 255
    51d6:	08 95       	ret

000051d8 <__udivmodsi4>:
    51d8:	a1 e2       	ldi	r26, 0x21	; 33
    51da:	1a 2e       	mov	r1, r26
    51dc:	aa 1b       	sub	r26, r26
    51de:	bb 1b       	sub	r27, r27
    51e0:	fd 01       	movw	r30, r26
    51e2:	0d c0       	rjmp	.+26     	; 0x51fe <__udivmodsi4_ep>

000051e4 <__udivmodsi4_loop>:
    51e4:	aa 1f       	adc	r26, r26
    51e6:	bb 1f       	adc	r27, r27
    51e8:	ee 1f       	adc	r30, r30
    51ea:	ff 1f       	adc	r31, r31
    51ec:	a2 17       	cp	r26, r18
    51ee:	b3 07       	cpc	r27, r19
    51f0:	e4 07       	cpc	r30, r20
    51f2:	f5 07       	cpc	r31, r21
    51f4:	20 f0       	brcs	.+8      	; 0x51fe <__udivmodsi4_ep>
    51f6:	a2 1b       	sub	r26, r18
    51f8:	b3 0b       	sbc	r27, r19
    51fa:	e4 0b       	sbc	r30, r20
    51fc:	f5 0b       	sbc	r31, r21

000051fe <__udivmodsi4_ep>:
    51fe:	66 1f       	adc	r22, r22
    5200:	77 1f       	adc	r23, r23
    5202:	88 1f       	adc	r24, r24
    5204:	99 1f       	adc	r25, r25
    5206:	1a 94       	dec	r1
    5208:	69 f7       	brne	.-38     	; 0x51e4 <__udivmodsi4_loop>
    520a:	60 95       	com	r22
    520c:	70 95       	com	r23
    520e:	80 95       	com	r24
    5210:	90 95       	com	r25
    5212:	9b 01       	movw	r18, r22
    5214:	ac 01       	movw	r20, r24
    5216:	bd 01       	movw	r22, r26
    5218:	cf 01       	movw	r24, r30
    521a:	08 95       	ret

0000521c <__prologue_saves__>:
    521c:	2f 92       	push	r2
    521e:	3f 92       	push	r3
    5220:	4f 92       	push	r4
    5222:	5f 92       	push	r5
    5224:	6f 92       	push	r6
    5226:	7f 92       	push	r7
    5228:	8f 92       	push	r8
    522a:	9f 92       	push	r9
    522c:	af 92       	push	r10
    522e:	bf 92       	push	r11
    5230:	cf 92       	push	r12
    5232:	df 92       	push	r13
    5234:	ef 92       	push	r14
    5236:	ff 92       	push	r15
    5238:	0f 93       	push	r16
    523a:	1f 93       	push	r17
    523c:	cf 93       	push	r28
    523e:	df 93       	push	r29
    5240:	cd b7       	in	r28, 0x3d	; 61
    5242:	de b7       	in	r29, 0x3e	; 62
    5244:	ca 1b       	sub	r28, r26
    5246:	db 0b       	sbc	r29, r27
    5248:	0f b6       	in	r0, 0x3f	; 63
    524a:	f8 94       	cli
    524c:	de bf       	out	0x3e, r29	; 62
    524e:	0f be       	out	0x3f, r0	; 63
    5250:	cd bf       	out	0x3d, r28	; 61
    5252:	09 94       	ijmp

00005254 <__epilogue_restores__>:
    5254:	2a 88       	ldd	r2, Y+18	; 0x12
    5256:	39 88       	ldd	r3, Y+17	; 0x11
    5258:	48 88       	ldd	r4, Y+16	; 0x10
    525a:	5f 84       	ldd	r5, Y+15	; 0x0f
    525c:	6e 84       	ldd	r6, Y+14	; 0x0e
    525e:	7d 84       	ldd	r7, Y+13	; 0x0d
    5260:	8c 84       	ldd	r8, Y+12	; 0x0c
    5262:	9b 84       	ldd	r9, Y+11	; 0x0b
    5264:	aa 84       	ldd	r10, Y+10	; 0x0a
    5266:	b9 84       	ldd	r11, Y+9	; 0x09
    5268:	c8 84       	ldd	r12, Y+8	; 0x08
    526a:	df 80       	ldd	r13, Y+7	; 0x07
    526c:	ee 80       	ldd	r14, Y+6	; 0x06
    526e:	fd 80       	ldd	r15, Y+5	; 0x05
    5270:	0c 81       	ldd	r16, Y+4	; 0x04
    5272:	1b 81       	ldd	r17, Y+3	; 0x03
    5274:	aa 81       	ldd	r26, Y+2	; 0x02
    5276:	b9 81       	ldd	r27, Y+1	; 0x01
    5278:	ce 0f       	add	r28, r30
    527a:	d1 1d       	adc	r29, r1
    527c:	0f b6       	in	r0, 0x3f	; 63
    527e:	f8 94       	cli
    5280:	de bf       	out	0x3e, r29	; 62
    5282:	0f be       	out	0x3f, r0	; 63
    5284:	cd bf       	out	0x3d, r28	; 61
    5286:	ed 01       	movw	r28, r26
    5288:	08 95       	ret

0000528a <strlen>:
    528a:	fc 01       	movw	r30, r24
    528c:	01 90       	ld	r0, Z+
    528e:	00 20       	and	r0, r0
    5290:	e9 f7       	brne	.-6      	; 0x528c <strlen+0x2>
    5292:	80 95       	com	r24
    5294:	90 95       	com	r25
    5296:	8e 0f       	add	r24, r30
    5298:	9f 1f       	adc	r25, r31
    529a:	08 95       	ret

0000529c <_exit>:
    529c:	f8 94       	cli

0000529e <__stop_program>:
    529e:	ff cf       	rjmp	.-2      	; 0x529e <__stop_program>
